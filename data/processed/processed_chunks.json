[
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/",
    "title": "https://docs.lytics.com/",
    "chunk_text": "Quick Start Developer Quickstart Account Management What is Vault Accessing Accounts Monitoring Metrics and Alerts View More Key Concepts Identity Resolution Consent Privacy Client Server Side Cookies View More Pipeline Profiles Data Pipeline Schema Management Identity Warehouse Access What is Cloud Connect Connecting Warehouses Data Models Queries View More Audiences Activation User Profiles Audiences Reports View More Tutorials Leveraging User Profiles Data Collection Onboarding Data Management View More SDKs Tools Web Mobile Chrome Extension Integrations Lytics Integration Options Acoustic Adobe View More Partners Partner Types Lytics Communication Legacy Insights Importing External Experiences IDP initiated SSO legacy View More",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-quickstart",
    "title": "Introduction",
    "chunk_text": "Introduction Welcome to the Lytics developer tier This guide will walk you through the steps to get started with Lytics and leverage its powerful personalization capabilities for your website Before You Begin Before diving into the setup process make sure you have the following Site Access Management Permission To install Lytics you need permission to install JavaScript either via a tag manager or directly onto your website Alternatively you can install Lytics via a Drupal module Active Lytics Account Verify that you can access an active Lytics account If you don t have one yet you can claim your free developer account Lytics Dev Tools Chrome Extension Install our developer tools Chrome extension to streamline the development and installation process Getting Started Checklist Getting started with Lytics is quick and easy In just a few minutes you ll be able to set up Lytics and start personalizing your website We ve focused this guide on the 3 essential steps to ensure a positive experience for you and your customers 1 Install the Lytics tag on your site 2 Ensuring site content and Lytics are syncing 3 Create your first personalized message Digging Deeper After completing the initial checklist outlined above it s time to explore further avenues for enhancing and utilizing your profiles to their fullest potential We ve broken additional guides into two core focuses Building Profiles Here we ll gain a comprehensive understanding of all available out of the box attributes Discover how to tag your site and integrate other sources to create robust and comprehensive profiles This section is divided into Default Attributes Segments Profile Attributes Audience Segments Content Collections Site Activity Conversion Tagging Capturing Website Activity coming soon Capture Website Conversion Activity coming soon Using Profiles Here we ll explore leveraging out of the box personalization SDKs and APIs to deliver optimal user experiences Discover how to harness Lytics tools and integrations to create tailored experiences that resonate with your audience This section covers Guides Inspiration Surface a lead capture form only to unknown visitors Surface content recommendations based on interests Surface a promotional message to high momentum visitors coming soon Sync profiles audiences to GA4 or meta coming soon Personalize your site based on behaviors and stored attributes coming soon SDK Documentation Web JavaScript SDK Personalization SDK Mobile iOS SDK Android SDK React Native SDK Updated 6 months ago 1 Account Setup",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-quickstart#content",
    "title": "Introduction",
    "chunk_text": "Introduction Welcome to the Lytics developer tier This guide will walk you through the steps to get started with Lytics and leverage its powerful personalization capabilities for your website Before You Begin Before diving into the setup process make sure you have the following Site Access Management Permission To install Lytics you need permission to install JavaScript either via a tag manager or directly onto your website Alternatively you can install Lytics via a Drupal module Active Lytics Account Verify that you can access an active Lytics account If you don t have one yet you can claim your free developer account Lytics Dev Tools Chrome Extension Install our developer tools Chrome extension to streamline the development and installation process Getting Started Checklist Getting started with Lytics is quick and easy In just a few minutes you ll be able to set up Lytics and start personalizing your website We ve focused this guide on the 3 essential steps to ensure a positive experience for you and your customers 1 Install the Lytics tag on your site 2 Ensuring site content and Lytics are syncing 3 Create your first personalized message Digging Deeper After completing the initial checklist outlined above it s time to explore further avenues for enhancing and utilizing your profiles to their fullest potential We ve broken additional guides into two core focuses Building Profiles Here we ll gain a comprehensive understanding of all available out of the box attributes Discover how to tag your site and integrate other sources to create robust and comprehensive profiles This section is divided into Default Attributes Segments Profile Attributes Audience Segments Content Collections Site Activity Conversion Tagging Capturing Website Activity coming soon Capture Website Conversion Activity coming soon Using Profiles Here we ll explore leveraging out of the box personalization SDKs and APIs to deliver optimal user experiences Discover how to harness Lytics tools and integrations to create tailored experiences that resonate with your audience This section covers Guides Inspiration Surface a lead capture form only to unknown visitors Surface content recommendations based on interests Surface a promotional message to high momentum visitors coming soon Sync profiles audiences to GA4 or meta coming soon Personalize your site based on behaviors and stored attributes coming soon SDK Documentation Web JavaScript SDK Personalization SDK Mobile iOS SDK Android SDK React Native SDK Updated 6 months ago 1 Account Setup",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-quickstart-3-install-lytics",
    "title": "Installing the Tag",
    "chunk_text": "Installing the Tag In the Web SDK Lytics provides a tag that can be placed on your site to collect behavioral data and surface the materialized profile back to your browser in real time Manual installation instructions are available from within the app at Data Pipeline SDK Web SDK If your site is a Drupal or Wordpress site or you use Google Tag Manager we recommend using one of these turnkey methods to install the Lytics Tag Drupal For Drupal users getting up and running is as simple as installing the official Lytics Drupal module Once you have the module added to your site using composer or another preferred method you will want to complete the following configuration steps Visit the Configuration page either from the module details in the Extend section of Drupal or directly from the Configuration section en admin config system lytics Add a valid API Token for your Lytics account Be sure to give that token admin privileges as that will unlock account verification and direct access to all Lytics systems responsible for surfacing and managing profiles and personalization This token should also have no expiration as it will need continued access to your Lytics account For more information visit our Access Token documentation With your token entered Ensure the Enable Tab setting is selected This will automatically place the Lytics JavaScript SDK onto all public pages of your site Upon saving configuration your account details will be surfaced Be sure to verify that your token is for the Lytics account you are currently configuring That s it WordPress A formal WordPress plugin is currently under development and coming soon Google Tag Manager From the left hand navigation to select Data Pipeline SDK Web SDK Setup and install Google Tag Manager Create a new Custom HTML tag and place the Lytics JavaScript snippet into the text box Ensure the tag is triggered on the pages you desire We recommend using the All Pages default trigger to start Submit and publish your Google Tag Manager version Testing the Lytics Tag Installation Once the tag has been installed validate a successful installation via one of the three following methods Lytics Dev Tools Chrome Extension Recommended The Lytics Dev Tools Chrome Extension makes validation and exploration simple Once you ve installed the extension as outlined above Open the extension and ensure it has been activated The interface will display a message to confirm the correct installation of the Lytics tag and relevant configuration details In app Verification Assistant We ve built a simple tool to validate that data flows into your Lytics account Please note that the collected events may take a few minutes to reflect in the UI Select Vault using the product switcher at the top left Use the left hand navigation to select Setup JavaScript Tag At the bottom of the page Setup click the refresh button to validate installation if it does not already state Successfully installed Manually If you prefer to verify the installation manually you can do so by opening the Chrome developer console and ensuring jstag is accessible In addition by viewing the network tab you can monitor data collection requests being sent to lytics io c and personalization requests being loaded from lytics io api personalize Testing the Current Visitor s Profile via JavaScript SDK The final step to verify installation is ensuring you can access your visitor profile This profile is built and delivered in real time as you engage with content Lytics Dev Tools Chrome Extension Recommended The Lytics Dev Tools Chrome Extension makes validation and exploration simple Once you ve installed the extension as outlined above Open the extension and ensure it has been activated Access Profile from the bottom menu in the Chrome extension This section of the extension profiles two views into your profile The first is the Summary showcasing available attributes and affinities The second is the Details which profiles a raw JSON dump of all available attributes and insights accessible via the Personalization Engine web SDK Manually If you prefer to verify the installation manually you can do so by opening the Chrome developer console and ensuring jstag is accessible In addition by viewing the network tab you can monitor data collection requests being sent to lytics io c and personalization requests being loaded from lytics io api personalize Updated 5 months ago 2 Content Setup",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-quickstart-3-install-lytics#content",
    "title": "Installing the Tag",
    "chunk_text": "Installing the Tag In the Web SDK Lytics provides a tag that can be placed on your site to collect behavioral data and surface the materialized profile back to your browser in real time Manual installation instructions are available from within the app at Data Pipeline SDK Web SDK If your site is a Drupal or Wordpress site or you use Google Tag Manager we recommend using one of these turnkey methods to install the Lytics Tag Drupal For Drupal users getting up and running is as simple as installing the official Lytics Drupal module Once you have the module added to your site using composer or another preferred method you will want to complete the following configuration steps Visit the Configuration page either from the module details in the Extend section of Drupal or directly from the Configuration section en admin config system lytics Add a valid API Token for your Lytics account Be sure to give that token admin privileges as that will unlock account verification and direct access to all Lytics systems responsible for surfacing and managing profiles and personalization This token should also have no expiration as it will need continued access to your Lytics account For more information visit our Access Token documentation With your token entered Ensure the Enable Tab setting is selected This will automatically place the Lytics JavaScript SDK onto all public pages of your site Upon saving configuration your account details will be surfaced Be sure to verify that your token is for the Lytics account you are currently configuring That s it WordPress A formal WordPress plugin is currently under development and coming soon Google Tag Manager From the left hand navigation to select Data Pipeline SDK Web SDK Setup and install Google Tag Manager Create a new Custom HTML tag and place the Lytics JavaScript snippet into the text box Ensure the tag is triggered on the pages you desire We recommend using the All Pages default trigger to start Submit and publish your Google Tag Manager version Testing the Lytics Tag Installation Once the tag has been installed validate a successful installation via one of the three following methods Lytics Dev Tools Chrome Extension Recommended The Lytics Dev Tools Chrome Extension makes validation and exploration simple Once you ve installed the extension as outlined above Open the extension and ensure it has been activated The interface will display a message to confirm the correct installation of the Lytics tag and relevant configuration details In app Verification Assistant We ve built a simple tool to validate that data flows into your Lytics account Please note that the collected events may take a few minutes to reflect in the UI Select Vault using the product switcher at the top left Use the left hand navigation to select Setup JavaScript Tag At the bottom of the page Setup click the refresh button to validate installation if it does not already state Successfully installed Manually If you prefer to verify the installation manually you can do so by opening the Chrome developer console and ensuring jstag is accessible In addition by viewing the network tab you can monitor data collection requests being sent to lytics io c and personalization requests being loaded from lytics io api personalize Testing the Current Visitor s Profile via JavaScript SDK The final step to verify installation is ensuring you can access your visitor profile This profile is built and delivered in real time as you engage with content Lytics Dev Tools Chrome Extension Recommended The Lytics Dev Tools Chrome Extension makes validation and exploration simple Once you ve installed the extension as outlined above Open the extension and ensure it has been activated Access Profile from the bottom menu in the Chrome extension This section of the extension profiles two views into your profile The first is the Summary showcasing available attributes and affinities The second is the Details which profiles a raw JSON dump of all available attributes and insights accessible via the Personalization Engine web SDK Manually If you prefer to verify the installation manually you can do so by opening the Chrome developer console and ensuring jstag is accessible In addition by viewing the network tab you can monitor data collection requests being sent to lytics io c and personalization requests being loaded from lytics io api personalize Updated 5 months ago 2 Content Setup",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-quickstart-2-content-setup",
    "title": "https://docs.lytics.com/docs/developer-quickstart-2-content-setup",
    "chunk_text": "Lytics Interest Engines effectively analyze your content with minimal effort required However to guarantee that the classification results align with your expectations conducting a quick test is advisable as poor metadata can sometimes lead to less than optimal outcomes The most reliable method to ensure comprehensive and satisfactory content classification is to classify a selection of your URLs manually Use the left hand navigation to select Content Classification Click on the section labeled Classify then paste a URL from your website and press Classify After a moment or two a set of preliminary classification details will come back Most notably ensure the Title Primary Image and Topics come back with content If they do not please refer to our full documentation for configuring content and meta tags Updated 5 months ago 3 Surface Personalized Message",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-quickstart-2-content-setup#content",
    "title": "https://docs.lytics.com/docs/developer-quickstart-2-content-setup#content",
    "chunk_text": "Lytics Interest Engines effectively analyze your content with minimal effort required However to guarantee that the classification results align with your expectations conducting a quick test is advisable as poor metadata can sometimes lead to less than optimal outcomes The most reliable method to ensure comprehensive and satisfactory content classification is to classify a selection of your URLs manually Use the left hand navigation to select Content Classification Click on the section labeled Classify then paste a URL from your website and press Classify After a moment or two a set of preliminary classification details will come back Most notably ensure the Title Primary Image and Topics come back with content If they do not please refer to our full documentation for configuring content and meta tags Updated 5 months ago 3 Surface Personalized Message",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-quickstart-4-personalized-message",
    "title": "Surface a Simple Message",
    "chunk_text": "The Lytics Personalization Engine profiles real time access to a comprehensive visitor profile Before we jump into the weeds of how you can fully build and leverage this profile let s create our first experience Surface a Simple Message Lytics comes with our Personalization SDK called Pathfora Pathfora allows you to easily surface simple lead capture and messaging modals or content directly inline Full documentation for Pathfora is available but initially let s surface a welcome message to our anonymous visitor audience javascript jstag profiles a helper function to ensure that the Pathfora library has been loaded before triggering the experience jstag on pathfora publish done function topic event here we initialize a new Pathfora Message experience var module new pathfora Message id sample message campaign this value will be collected along side all interactions and used in reporting layout slideout for layout we ll use a small slide out position bottom left the model will enter and sit at the bottom left theme dark css can be customized to brand but we ll use the default dark theme headline Hello world this will be the headline of our message msg Congratulations on setting up your first targetted campaign using the Lytics Personalization Engine the body of the message var modules target segment anonymous_profiles target only visitors with the anonymous_profile attribute widgets module pathfora initializeWidgets modules initialize the campaign Alter the Pathfora configuration to your liking Install the Pathfora configuration onto your site via your preferred tag management method Refresh the page and be greeted with your new welcome message targeted at anonymous visitors Lytics and Pathfora provide a great deal of flexibility If you are ready to dive deeper please explore some of our other popular use cases Surface a Promotional Message to High Momentum Visitors coming soon Surface a Lead Capture form Only to Unknown Visitors Surface Content Recommendations Based on Interests coming soon Sync Profiles Audiences to GA4 or Meta coming soon Personalize Your Site Based on Behaviors and Stored Attributes coming soon Updated 6 months ago Building Profiles",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-quickstart-4-personalized-message#content",
    "title": "Surface a Simple Message",
    "chunk_text": "The Lytics Personalization Engine profiles real time access to a comprehensive visitor profile Before we jump into the weeds of how you can fully build and leverage this profile let s create our first experience Surface a Simple Message Lytics comes with our Personalization SDK called Pathfora Pathfora allows you to easily surface simple lead capture and messaging modals or content directly inline Full documentation for Pathfora is available but initially let s surface a welcome message to our anonymous visitor audience javascript jstag profiles a helper function to ensure that the Pathfora library has been loaded before triggering the experience jstag on pathfora publish done function topic event here we initialize a new Pathfora Message experience var module new pathfora Message id sample message campaign this value will be collected along side all interactions and used in reporting layout slideout for layout we ll use a small slide out position bottom left the model will enter and sit at the bottom left theme dark css can be customized to brand but we ll use the default dark theme headline Hello world this will be the headline of our message msg Congratulations on setting up your first targetted campaign using the Lytics Personalization Engine the body of the message var modules target segment anonymous_profiles target only visitors with the anonymous_profile attribute widgets module pathfora initializeWidgets modules initialize the campaign Alter the Pathfora configuration to your liking Install the Pathfora configuration onto your site via your preferred tag management method Refresh the page and be greeted with your new welcome message targeted at anonymous visitors Lytics and Pathfora provide a great deal of flexibility If you are ready to dive deeper please explore some of our other popular use cases Surface a Promotional Message to High Momentum Visitors coming soon Surface a Lead Capture form Only to Unknown Visitors Surface Content Recommendations Based on Interests coming soon Sync Profiles Audiences to GA4 or Meta coming soon Personalize Your Site Based on Behaviors and Stored Attributes coming soon Updated 6 months ago Building Profiles",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data",
    "title": "https://docs.lytics.com/docs/data",
    "chunk_text": "Welcome to the world of building profiles with Lytics Here you can unlock the full potential of understanding your audience through three key aspects available right out of the box Default Profile Attributes Lytics offers a robust set of pre packaged user attributes including automatically generated and customizable ones Empowered by predictive modeling and machine learning algorithms these attributes enable you to gain deeper insights into your audience Default Segments Explore predefined user segments that categorize your audience based on behavioral and demographic factors With no lift or custom definition required these segments offer quick insights for tailored marketing strategies Ready to dive in Click on each section to explore the details and enhance your profiling efforts effortlessly Looking for a recommendation We say you should start by understanding all the available attributes Updated 12 months ago Attributes",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data#content",
    "title": "https://docs.lytics.com/docs/data#content",
    "chunk_text": "Welcome to the world of building profiles with Lytics Here you can unlock the full potential of understanding your audience through three key aspects available right out of the box Default Profile Attributes Lytics offers a robust set of pre packaged user attributes including automatically generated and customizable ones Empowered by predictive modeling and machine learning algorithms these attributes enable you to gain deeper insights into your audience Default Segments Explore predefined user segments that categorize your audience based on behavioral and demographic factors With no lift or custom definition required these segments offer quick insights for tailored marketing strategies Ready to dive in Click on each section to explore the details and enhance your profiling efforts effortlessly Looking for a recommendation We say you should start by understanding all the available attributes Updated 12 months ago Attributes",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-attributes",
    "title": "Available Attributes",
    "chunk_text": "Lytics offers a wide range of pre packaged user attributes including automatically generated and customizable ones Additionally Lytics employs predictive modeling and machine learning algorithms to provide insights and scores allowing users to gain a deeper understanding of their audience The guide below provides an overview of all available attributes and examples to enhance your profiling efforts If you haven t already reviewed our documentation on collecting events via our JavaScript SDK we highly recommend doing so first This will give you a better understanding of how data collection works at a high level before delving into the specifics of what can be collected Available Attributes The following attributes are all available out of the box with no customization necessary in all Lytics pricing tiers Do note that any attributes flagged as Computed can not be edited directly but are computed based on various factors including other non computed attributes For a more comprehensive example of how any of the following attributes can be collected and used for your visitors click the name of the identifier to access the code examples below Identifiers Default attributes that are used to stitch profiles together For instance if you pass an email along with the _uid all events that have only been associated with either identifier will be merged into a single comprehensive profile Name Slug Description Computed Example Lytics ID _id A unique ID that represents the materialized profile in Lytics Yes 4fafb5b3 b199 58f2 a68b 4b266b363dd1 Current Lytics Cookie _uid The current cookie id for the user No 50b772f5 a0be 42f2 8828 84b8db5d5a23 All Lytics Cookies _uids All cookies that are associated with the user No 50b772f5 a0be 42f2 8828 84b8db5d5a23 Email email The email address of the user No email protected Unique User ID uuid A UUID for the user No 4fafb5b3 b199 58f2 a68b 4b266b363dd1 Details Details encompass all default attributes related to user demographics and general information including name phone number status etc It serves as a catch all for attributes not specifically tied to interactions or behaviors Name Slug Description Computed Example Name name The full name of the user No John Doe First Name first_name The first name of the user No John Last Name last_name The last name of the user No Doe Title title The title of the user No President Phone phone The phone number of the user No 555 555 5555 Cell cell The cell phone number of the user No 555 555 5555 Origin origin The origin of the user No loyalty_2022 Language language The language of the user No en us Age age The age of the user No 25 Companies companies The companies the user is associated with No Lytics Pantheon Gender gender The gender of the user No M Status status The status of the user No active User Attributes user_attributes A map of custom attributes associated with the user No role member bonus active Timezone timezone The timezone of the user No 7 City city The city of the user No Denver Country country The country of the user No US State state The state of the user No CO Meta Meta encompasses all system level information that provides insights into the health and breadth of the profile This includes data such as creation date last update timestamp source information and other metadata associated with the profile s management and maintenance Metadata offers a behind the scenes view of the profile s overall status and administration Name Slug Description Computed Example Created _created The date the user was created Yes 2023 12 12T21 09 11 625960142Z Last Scored _last_scored The date the user was last scored Yes 2024 02 28T02 45 51 377423153Z Modified _modified The date the user was last modified Yes 2024 02 28T02 45 51 377423473Z Number of Aliases _num_aliases The number of aliases for the user Yes 1 Number of Days _num_days The number of days the profile has existed Yes 38 Number of Events _num_events The number of events the user has been associated with Yes 2425 Number of Streams _num_streams The number of streams the user has been associated with Yes 2 Stream Names _streamnames The names of the streams the user has been associated with Yes default ios User is Bot is_bot Whether the user has been flagged as a bot or not Yes f Behavior Behavioral attributes typically cannot be directly managed but represent a set of insights derived from a user s behavior over time These insights are invaluable when personalizing experiences based on changes in behavior or behaviors indicative of high likelihood For instance you might want to present a premium offer to users exhibiting higher momentum than usual Behavioral attributes enable targeted and timely interventions tailored to user actions and patterns Name Slug Description Computed Example Consistency score_consistency Score representing how consistent their activity patterns are Yes 99 Frequency score_frequency A score representing how frequently the user is active Yes 63 Intensity score_intensity A score representing how intense the user s activity is Yes 94 Maturity score_maturity A score representing how mature the user s activity is Yes 34 Momentum score_momentum A score representing how much momentum the user currently has Yes 54 Propensity score_propensity A score representing how likely the user is to engage again Yes 1 Quantity score_quantity A score representing how much activity the user has Yes 99 Recency score_recency A score representing how recent the user s activity is Yes 99 Volatility score_volatility A score representing the degree of variability in behavior Yes 99 Interests Interests entail understanding the topics a user is interested in based on their interactions cross referenced by deep programmatic analysis of their online activities This allows for tailored content recommendations and targeted messaging aligned with the user s preferences and engagement history Name Slug Description Computed Example Lytics Content lytics_content A map of topic level interests for the user Yes Baking 0 26418695138978837 Intelligence Attributes classified as intelligence encompass diverse highly valuable information to facilitate relevant and high value personalized experiences Within this category you ll discover real time segment membership values crucial for split testing and experimentation and direct correlation to our real time machine learning modeling These attributes empower dynamic and data driven decision making enhancing the efficacy of personalized marketing strategies Name Slug Description Computed Example Segment Membership _segments The segments the user is associated with Yes all anonymous_profiles smt_power Split _split A random value that is evenly distributed across users Yes 74 Split 2 _split2 A random secondary value that is evenly distributed across users Yes 58 Needs Message needs_message Stream specific score that represents the relative distance between now and the next predicted event Yes default 0 05758899316182292 Next Event next_event Stream specific prediction for the next expected event Yes default 2024 03 01T03 00 00Z Lookalike Model Predictions segment_prediction Scores from Lytics Lookalike and SegmentML models Yes likely_to_churn 0 26418695138978837 Lookalike Model Percentiles segment_prediction_percentile Percentiles from Lytics Lookalike and SegmentML models Yes likely_to_churn 0 26418695138978837 Activity Activity encompasses the user s engagement across different channels and campaigns including clicks and conversions It provides valuable insights into recent interactions aiding campaign optimization and channel effectiveness assessment General Name Slug Description Computed Example First Seen event_first_seen The first time the user was seen for a specific event No click 2023 12 12T21 09 11 625Z Last Seen event_last_seen The last time the user was seen for a specific event No click 2024 02 28T02 45 49 776Z Channels channels The channels the user has been active on No web email Devices devices The devices the user has been active on No desktop 123 Hourly hourly The number of events per hour for the user Yes 0 17 1 69 2 262 3 97 Hour of Week hourofweek The number of events per hour of the week for the user Yes 3 2 4 2 5 1 11 3 Last Active last_active_ts The last time the user was active No 2024 02 28T02 45 50 784Z Last Channel Activities last_channel_activities The last time the user was active on a specific channel No web 2024 02 28T02 45 50 784Z Web Name Slug Description Computed Example Domains domains The domains the user has been active on No umami lytics com First Visit Timestamp firstvisit_ts The first time the user visited the site No 2023 12 12T21 09 11 625Z Last Visit Timestamp lastvisit_ts The last time the user visited the site No 2024 02 28T02 45 50 784Z Pageview Count pageviewct The number of pageviews the user has had Yes 234 Referring Domain refdomain The referring domain for the user No umami lytics com User Agent user_agent The user agent for the user Yes Chrome Visit Count visitct The number of visits the user has had Yes 145 Visit City visit_city The city the user visited from Yes Denver Visit Country visit_country The country the user visited from Yes US Visit Region visit_region The region the user visited from Yes CO Form Data form_data The form data the user has submitted No first_name John Forms Submitted forms_submitted The forms the user has submitted No newsletter contact UTM Campaign Last utm_campaign_last The last UTM campaign referred from No holiday UTM Campaigns utm_campaigns The UTM campaigns the user has interacted with No holiday summer UTM Content Last utm_content_last The last UTM content referred from No recipe 1 UTM Contents utm_contents The UTM contents the user has interacted with No recipe 1 recipe 2 UTM Medium Last utm_medium_last The last UTM medium referred from No article UTM Mediums utm_mediums The UTM mediums the user has interacted with No article recipe UTM Source Last utm_source_last The last UTM source referred from No google_ads UTM Sources utm_sources The UTM sources the user has interacted with No google_ads meta_ads UTM Term Last utm_term_last The last UTM term referred from No example UTM Terms utm_terms The UTM terms the user has interacted with No example Campaign Name Slug Description Computed Example Hover ly_hover The number of times the user hovered over a specific campaign No content rec modal 5 Impressions ly_impressions The number of times the user saw a specific campaign No content rec modal 1 Closes ly_closes The number of times the user closed a specific campaign No content rec modal 10 Conversions ly_conversions The number of times the user converted on a specific campaign No content rec modal 2 Milestones ly_milestones The number of times the user reached a milestone on a campaign No engaged donation page 1 Goals ly_goals The number of times the user reached a goal on a campaign No made donation 1 Examples Identifiers Lytics ID _id This is an automatically generated canonical ID managed by Lytics It refers to the materialized profile and cannot be customized or overridden Current Lytics Cookie _uid and All Lytics Cookies _uids _uid represents the Lytics anonymous 1st party cookie This value is automatically captured with every jstag send call from the JavaScript tag The only way to customize this value is to explicitly set the value of _uid which we do not recommend JavaScript jstag setid somecustomvalue jstag send Email email JavaScript jstag send email email protected Unique User ID uuid JavaScript jstag send uuid someuniqueuserid Details First Name first_name JavaScript jstag send first_name John Last Name last_name JavaScript jstag send last_name Doe Title title JavaScript jstag send title President Phone phone JavaScript jstag send phone 555 555 5555 Cell cell JavaScript jstag send cell 555 555 5555 Origin origin JavaScript jstag send origin loyalty_2022 Language language By default the Lytics JavaScript SDK will collect language information based on the browser but this can be overridden JavaScript jstag send _ul en us Age age JavaScript jstag send age 25 Companies companies JavaScript jstag send companies Lytics Pantheon Gender gender JavaScript jstag send gender N A Meta Created _created Lytics automatically generate this and represents the oldest event associated with the user Modified _modified This is automatically generated by Lytics and represents the last time the user was modified Last Scored _last_scored This is automatically generated by Lytics and represents the last time the users scores were updated Number of Aliases _num_aliases This is automatically generated by Lytics and represents the number of aliases associated with the user Number of Days _num_days This is automatically generated by Lytics and represents the number of days the user has existed Number of Events _num_events This is automatically generated by Lytics and represents the number of events associated with the user Number of Streams _num_streams This is automatically generated by Lytics and represents the number of streams associated with the user Stream Names _streamnames This is automatically generated by Lytics and represents the names of the streams associated with the user User is Bot is_bot This is automatically generated by Lytics and represents whether the user has been flagged as a bot or not Behavior The following attributes are all computed in real time as the profile evolves Each of the behavioral attributes are surfaced as a score between 0 and 100 These scores represent an aggregate summary of the user s behavior across various dimensions Consistency Frequency Intensity Maturity Momentum Propensity Quantity Recency and Volatility Interests Lytics Content lytics_content The interest attributes are computed in real time and represent the user s interest in various topics These topics are generated as a result of the analysis done by the Lytics Interest Engine and then associated with the user based upon their interaction with content on your site Intelligence Segment Membership _segments This attribute displays an array of all segments the user is currently a member of It updates in real time based on various audience definitions Lytics offers a range of useful segments out of the box requiring no additional setup For detailed information on these audiences refer to our Developer Tier Audiences documentation Split Split2 _split _split2 These attributes are automatically generated by Lytics and represent a random value evenly distributed across users They are useful for split testing and experimentation Needs Message needs_message This attribute is computed in real time and represents the relative distance between now and the next predicted event It is stream specific and is useful for understanding when a user is likely to engage again Next Event next_event This attribute is computed in real time and represents the next expected event It is stream specific and is useful for understanding when a user is likely to engage again Lookalike Model Predictions Lookalike Model Percentiles segment_prediction segment_prediction_percentile This attribute is computed in real time and represents the scores resulting from Lytics Lookalike and SegmentML models Out of the box Lytics offers a range of useful models requiring no additional setup For detailed information on these models refer to our Developer Tier Models documentation Activity General First Seen Last Seen event_first_seen event_last_seen Both of these attributes are automatically populated based upon the _e value in the jstag send payload By default Lytics will collect a pv event for each page view and this will automatically populate the first_seen and last_seen attributes Below is an example of collecting a custom event that would populate these attributes as well JavaScript jstag send _e custom_event Channels channels needs update JavaScript jstag send _channel web Devices devices JavaScript jstag send _device desktop Hourly hourly This attribute is automatically populated with a count of events per hour for the user Hour of Week hourofweek This attribute is automatically populated with a count of events per hour of the week for the user Last Active Timestamp last_active_ts This attribute is automatically populated with the last time an event was received in any stream for the user Last Channel Activities last_channel_activities needs update JavaScript jstag send _channel web Web Domains domains This attribute is automatically populated with the domains the user has been active on First Visit Timestamp firstvisit_ts This attribute is automatically populated with the first time the user visited the site and sends data to the default stream Last Visit Timestamp lastvisit_ts This attribute is automatically populated with the last time the user visited the site and sends data to the default stream Pageview Count pageviewct This attribute is automatically populated with the number of _pv events recieved for the user JavaScript jstag send _e pv Referring Domain refdomain This attribute is automatically populated with the referring domain for the user JavaScript jstag send _ref umami lytics com User Agent user_agent This attribute is automatically populated based on the user agent of the browser This attribute must be turned on in your Lytics account to be collected Visit Count visitct This attribute is automatically populated with the number of visits the user has had based on presence of the _sesstart key in an event JavaScript jstag send _sesstart 1 Visit City visit_city This attribute is automatically populated with the city the user visited from based upon GeoIP Visit Country visit_country This attribute is automatically populated with the country the user visited from based upon GeoIP Visit Region visit_region This attribute is automatically populated with the region the user visited from based upon GeoIP Form Data form_data Form data is a wildcard attribute that allows you to pass a number of key value pairs that all get stored under the form_data attribute This is useful for capturing form submissions JavaScript jstag send formdata_fn John formdata_ln Doe formdata_someotherkey somevalue Forms Submitted forms_submitted JavaScript jstag send form_name newsletter UTM Campaign Last utm_campaign_last JavaScript jstag send utm_campaign holiday UTM Campaigns utm_campaigns JavaScript jstag send utm_campaign holiday UTM Content Last utm_content_last JavaScript jstag send utm_content recipe 1 UTM Contents utm_contents JavaScript jstag send utm_content recipe 1 UTM Medium Last utm_medium_last JavaScript jstag send utm_medium article UTM Mediums utm_mediums JavaScript jstag send utm_medium article UTM Source Last utm_source_last JavaScript jstag send utm_source google_ads UTM Sources utm_sources JavaScript jstag send utm_source google_ads UTM Term Last utm_term_last JavaScript jstag send utm_term example UTM Terms utm_terms JavaScript jstag send utm_term example Campaign Hover ly_hover needs update JavaScript jstag send pf_widget_id content rec modal pf widget event hover Impressions ly_impressions needs update JavaScript jstag send pf_widget_id content rec modal pf widget event show Closes ly_closes needs update JavaScript jstag send pf_widget_id content rec modal pf widget event close Conversions ly_conversions needs update JavaScript jstag send pf_widget_id content rec modal pf widget event conversion Milestones ly_milestones needs update JavaScript jstag send pf_widget_id engaged donation page pf widget event milestone Goals ly_goals needs update JavaScript jstag send pf_widget_id made donation pf widget event goal Updated 12 months ago Default Segments",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-attributes#content",
    "title": "Available Attributes",
    "chunk_text": "Lytics offers a wide range of pre packaged user attributes including automatically generated and customizable ones Additionally Lytics employs predictive modeling and machine learning algorithms to provide insights and scores allowing users to gain a deeper understanding of their audience The guide below provides an overview of all available attributes and examples to enhance your profiling efforts If you haven t already reviewed our documentation on collecting events via our JavaScript SDK we highly recommend doing so first This will give you a better understanding of how data collection works at a high level before delving into the specifics of what can be collected Available Attributes The following attributes are all available out of the box with no customization necessary in all Lytics pricing tiers Do note that any attributes flagged as Computed can not be edited directly but are computed based on various factors including other non computed attributes For a more comprehensive example of how any of the following attributes can be collected and used for your visitors click the name of the identifier to access the code examples below Identifiers Default attributes that are used to stitch profiles together For instance if you pass an email along with the _uid all events that have only been associated with either identifier will be merged into a single comprehensive profile Name Slug Description Computed Example Lytics ID _id A unique ID that represents the materialized profile in Lytics Yes 4fafb5b3 b199 58f2 a68b 4b266b363dd1 Current Lytics Cookie _uid The current cookie id for the user No 50b772f5 a0be 42f2 8828 84b8db5d5a23 All Lytics Cookies _uids All cookies that are associated with the user No 50b772f5 a0be 42f2 8828 84b8db5d5a23 Email email The email address of the user No email protected Unique User ID uuid A UUID for the user No 4fafb5b3 b199 58f2 a68b 4b266b363dd1 Details Details encompass all default attributes related to user demographics and general information including name phone number status etc It serves as a catch all for attributes not specifically tied to interactions or behaviors Name Slug Description Computed Example Name name The full name of the user No John Doe First Name first_name The first name of the user No John Last Name last_name The last name of the user No Doe Title title The title of the user No President Phone phone The phone number of the user No 555 555 5555 Cell cell The cell phone number of the user No 555 555 5555 Origin origin The origin of the user No loyalty_2022 Language language The language of the user No en us Age age The age of the user No 25 Companies companies The companies the user is associated with No Lytics Pantheon Gender gender The gender of the user No M Status status The status of the user No active User Attributes user_attributes A map of custom attributes associated with the user No role member bonus active Timezone timezone The timezone of the user No 7 City city The city of the user No Denver Country country The country of the user No US State state The state of the user No CO Meta Meta encompasses all system level information that provides insights into the health and breadth of the profile This includes data such as creation date last update timestamp source information and other metadata associated with the profile s management and maintenance Metadata offers a behind the scenes view of the profile s overall status and administration Name Slug Description Computed Example Created _created The date the user was created Yes 2023 12 12T21 09 11 625960142Z Last Scored _last_scored The date the user was last scored Yes 2024 02 28T02 45 51 377423153Z Modified _modified The date the user was last modified Yes 2024 02 28T02 45 51 377423473Z Number of Aliases _num_aliases The number of aliases for the user Yes 1 Number of Days _num_days The number of days the profile has existed Yes 38 Number of Events _num_events The number of events the user has been associated with Yes 2425 Number of Streams _num_streams The number of streams the user has been associated with Yes 2 Stream Names _streamnames The names of the streams the user has been associated with Yes default ios User is Bot is_bot Whether the user has been flagged as a bot or not Yes f Behavior Behavioral attributes typically cannot be directly managed but represent a set of insights derived from a user s behavior over time These insights are invaluable when personalizing experiences based on changes in behavior or behaviors indicative of high likelihood For instance you might want to present a premium offer to users exhibiting higher momentum than usual Behavioral attributes enable targeted and timely interventions tailored to user actions and patterns Name Slug Description Computed Example Consistency score_consistency Score representing how consistent their activity patterns are Yes 99 Frequency score_frequency A score representing how frequently the user is active Yes 63 Intensity score_intensity A score representing how intense the user s activity is Yes 94 Maturity score_maturity A score representing how mature the user s activity is Yes 34 Momentum score_momentum A score representing how much momentum the user currently has Yes 54 Propensity score_propensity A score representing how likely the user is to engage again Yes 1 Quantity score_quantity A score representing how much activity the user has Yes 99 Recency score_recency A score representing how recent the user s activity is Yes 99 Volatility score_volatility A score representing the degree of variability in behavior Yes 99 Interests Interests entail understanding the topics a user is interested in based on their interactions cross referenced by deep programmatic analysis of their online activities This allows for tailored content recommendations and targeted messaging aligned with the user s preferences and engagement history Name Slug Description Computed Example Lytics Content lytics_content A map of topic level interests for the user Yes Baking 0 26418695138978837 Intelligence Attributes classified as intelligence encompass diverse highly valuable information to facilitate relevant and high value personalized experiences Within this category you ll discover real time segment membership values crucial for split testing and experimentation and direct correlation to our real time machine learning modeling These attributes empower dynamic and data driven decision making enhancing the efficacy of personalized marketing strategies Name Slug Description Computed Example Segment Membership _segments The segments the user is associated with Yes all anonymous_profiles smt_power Split _split A random value that is evenly distributed across users Yes 74 Split 2 _split2 A random secondary value that is evenly distributed across users Yes 58 Needs Message needs_message Stream specific score that represents the relative distance between now and the next predicted event Yes default 0 05758899316182292 Next Event next_event Stream specific prediction for the next expected event Yes default 2024 03 01T03 00 00Z Lookalike Model Predictions segment_prediction Scores from Lytics Lookalike and SegmentML models Yes likely_to_churn 0 26418695138978837 Lookalike Model Percentiles segment_prediction_percentile Percentiles from Lytics Lookalike and SegmentML models Yes likely_to_churn 0 26418695138978837 Activity Activity encompasses the user s engagement across different channels and campaigns including clicks and conversions It provides valuable insights into recent interactions aiding campaign optimization and channel effectiveness assessment General Name Slug Description Computed Example First Seen event_first_seen The first time the user was seen for a specific event No click 2023 12 12T21 09 11 625Z Last Seen event_last_seen The last time the user was seen for a specific event No click 2024 02 28T02 45 49 776Z Channels channels The channels the user has been active on No web email Devices devices The devices the user has been active on No desktop 123 Hourly hourly The number of events per hour for the user Yes 0 17 1 69 2 262 3 97 Hour of Week hourofweek The number of events per hour of the week for the user Yes 3 2 4 2 5 1 11 3 Last Active last_active_ts The last time the user was active No 2024 02 28T02 45 50 784Z Last Channel Activities last_channel_activities The last time the user was active on a specific channel No web 2024 02 28T02 45 50 784Z Web Name Slug Description Computed Example Domains domains The domains the user has been active on No umami lytics com First Visit Timestamp firstvisit_ts The first time the user visited the site No 2023 12 12T21 09 11 625Z Last Visit Timestamp lastvisit_ts The last time the user visited the site No 2024 02 28T02 45 50 784Z Pageview Count pageviewct The number of pageviews the user has had Yes 234 Referring Domain refdomain The referring domain for the user No umami lytics com User Agent user_agent The user agent for the user Yes Chrome Visit Count visitct The number of visits the user has had Yes 145 Visit City visit_city The city the user visited from Yes Denver Visit Country visit_country The country the user visited from Yes US Visit Region visit_region The region the user visited from Yes CO Form Data form_data The form data the user has submitted No first_name John Forms Submitted forms_submitted The forms the user has submitted No newsletter contact UTM Campaign Last utm_campaign_last The last UTM campaign referred from No holiday UTM Campaigns utm_campaigns The UTM campaigns the user has interacted with No holiday summer UTM Content Last utm_content_last The last UTM content referred from No recipe 1 UTM Contents utm_contents The UTM contents the user has interacted with No recipe 1 recipe 2 UTM Medium Last utm_medium_last The last UTM medium referred from No article UTM Mediums utm_mediums The UTM mediums the user has interacted with No article recipe UTM Source Last utm_source_last The last UTM source referred from No google_ads UTM Sources utm_sources The UTM sources the user has interacted with No google_ads meta_ads UTM Term Last utm_term_last The last UTM term referred from No example UTM Terms utm_terms The UTM terms the user has interacted with No example Campaign Name Slug Description Computed Example Hover ly_hover The number of times the user hovered over a specific campaign No content rec modal 5 Impressions ly_impressions The number of times the user saw a specific campaign No content rec modal 1 Closes ly_closes The number of times the user closed a specific campaign No content rec modal 10 Conversions ly_conversions The number of times the user converted on a specific campaign No content rec modal 2 Milestones ly_milestones The number of times the user reached a milestone on a campaign No engaged donation page 1 Goals ly_goals The number of times the user reached a goal on a campaign No made donation 1 Examples Identifiers Lytics ID _id This is an automatically generated canonical ID managed by Lytics It refers to the materialized profile and cannot be customized or overridden Current Lytics Cookie _uid and All Lytics Cookies _uids _uid represents the Lytics anonymous 1st party cookie This value is automatically captured with every jstag send call from the JavaScript tag The only way to customize this value is to explicitly set the value of _uid which we do not recommend JavaScript jstag setid somecustomvalue jstag send Email email JavaScript jstag send email email protected Unique User ID uuid JavaScript jstag send uuid someuniqueuserid Details First Name first_name JavaScript jstag send first_name John Last Name last_name JavaScript jstag send last_name Doe Title title JavaScript jstag send title President Phone phone JavaScript jstag send phone 555 555 5555 Cell cell JavaScript jstag send cell 555 555 5555 Origin origin JavaScript jstag send origin loyalty_2022 Language language By default the Lytics JavaScript SDK will collect language information based on the browser but this can be overridden JavaScript jstag send _ul en us Age age JavaScript jstag send age 25 Companies companies JavaScript jstag send companies Lytics Pantheon Gender gender JavaScript jstag send gender N A Meta Created _created Lytics automatically generate this and represents the oldest event associated with the user Modified _modified This is automatically generated by Lytics and represents the last time the user was modified Last Scored _last_scored This is automatically generated by Lytics and represents the last time the users scores were updated Number of Aliases _num_aliases This is automatically generated by Lytics and represents the number of aliases associated with the user Number of Days _num_days This is automatically generated by Lytics and represents the number of days the user has existed Number of Events _num_events This is automatically generated by Lytics and represents the number of events associated with the user Number of Streams _num_streams This is automatically generated by Lytics and represents the number of streams associated with the user Stream Names _streamnames This is automatically generated by Lytics and represents the names of the streams associated with the user User is Bot is_bot This is automatically generated by Lytics and represents whether the user has been flagged as a bot or not Behavior The following attributes are all computed in real time as the profile evolves Each of the behavioral attributes are surfaced as a score between 0 and 100 These scores represent an aggregate summary of the user s behavior across various dimensions Consistency Frequency Intensity Maturity Momentum Propensity Quantity Recency and Volatility Interests Lytics Content lytics_content The interest attributes are computed in real time and represent the user s interest in various topics These topics are generated as a result of the analysis done by the Lytics Interest Engine and then associated with the user based upon their interaction with content on your site Intelligence Segment Membership _segments This attribute displays an array of all segments the user is currently a member of It updates in real time based on various audience definitions Lytics offers a range of useful segments out of the box requiring no additional setup For detailed information on these audiences refer to our Developer Tier Audiences documentation Split Split2 _split _split2 These attributes are automatically generated by Lytics and represent a random value evenly distributed across users They are useful for split testing and experimentation Needs Message needs_message This attribute is computed in real time and represents the relative distance between now and the next predicted event It is stream specific and is useful for understanding when a user is likely to engage again Next Event next_event This attribute is computed in real time and represents the next expected event It is stream specific and is useful for understanding when a user is likely to engage again Lookalike Model Predictions Lookalike Model Percentiles segment_prediction segment_prediction_percentile This attribute is computed in real time and represents the scores resulting from Lytics Lookalike and SegmentML models Out of the box Lytics offers a range of useful models requiring no additional setup For detailed information on these models refer to our Developer Tier Models documentation Activity General First Seen Last Seen event_first_seen event_last_seen Both of these attributes are automatically populated based upon the _e value in the jstag send payload By default Lytics will collect a pv event for each page view and this will automatically populate the first_seen and last_seen attributes Below is an example of collecting a custom event that would populate these attributes as well JavaScript jstag send _e custom_event Channels channels needs update JavaScript jstag send _channel web Devices devices JavaScript jstag send _device desktop Hourly hourly This attribute is automatically populated with a count of events per hour for the user Hour of Week hourofweek This attribute is automatically populated with a count of events per hour of the week for the user Last Active Timestamp last_active_ts This attribute is automatically populated with the last time an event was received in any stream for the user Last Channel Activities last_channel_activities needs update JavaScript jstag send _channel web Web Domains domains This attribute is automatically populated with the domains the user has been active on First Visit Timestamp firstvisit_ts This attribute is automatically populated with the first time the user visited the site and sends data to the default stream Last Visit Timestamp lastvisit_ts This attribute is automatically populated with the last time the user visited the site and sends data to the default stream Pageview Count pageviewct This attribute is automatically populated with the number of _pv events recieved for the user JavaScript jstag send _e pv Referring Domain refdomain This attribute is automatically populated with the referring domain for the user JavaScript jstag send _ref umami lytics com User Agent user_agent This attribute is automatically populated based on the user agent of the browser This attribute must be turned on in your Lytics account to be collected Visit Count visitct This attribute is automatically populated with the number of visits the user has had based on presence of the _sesstart key in an event JavaScript jstag send _sesstart 1 Visit City visit_city This attribute is automatically populated with the city the user visited from based upon GeoIP Visit Country visit_country This attribute is automatically populated with the country the user visited from based upon GeoIP Visit Region visit_region This attribute is automatically populated with the region the user visited from based upon GeoIP Form Data form_data Form data is a wildcard attribute that allows you to pass a number of key value pairs that all get stored under the form_data attribute This is useful for capturing form submissions JavaScript jstag send formdata_fn John formdata_ln Doe formdata_someotherkey somevalue Forms Submitted forms_submitted JavaScript jstag send form_name newsletter UTM Campaign Last utm_campaign_last JavaScript jstag send utm_campaign holiday UTM Campaigns utm_campaigns JavaScript jstag send utm_campaign holiday UTM Content Last utm_content_last JavaScript jstag send utm_content recipe 1 UTM Contents utm_contents JavaScript jstag send utm_content recipe 1 UTM Medium Last utm_medium_last JavaScript jstag send utm_medium article UTM Mediums utm_mediums JavaScript jstag send utm_medium article UTM Source Last utm_source_last JavaScript jstag send utm_source google_ads UTM Sources utm_sources JavaScript jstag send utm_source google_ads UTM Term Last utm_term_last JavaScript jstag send utm_term example UTM Terms utm_terms JavaScript jstag send utm_term example Campaign Hover ly_hover needs update JavaScript jstag send pf_widget_id content rec modal pf widget event hover Impressions ly_impressions needs update JavaScript jstag send pf_widget_id content rec modal pf widget event show Closes ly_closes needs update JavaScript jstag send pf_widget_id content rec modal pf widget event close Conversions ly_conversions needs update JavaScript jstag send pf_widget_id content rec modal pf widget event conversion Milestones ly_milestones needs update JavaScript jstag send pf_widget_id engaged donation page pf widget event milestone Goals ly_goals needs update JavaScript jstag send pf_widget_id made donation pf widget event goal Updated 12 months ago Default Segments",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-segments",
    "title": "Available Segments (Audiences)",
    "chunk_text": "Categorizing users based on their behaviors and characteristics is pivotal for effective audience targeting and personalization strategies Lytics audience segmentation offers a powerful tool for organizing users into meaningful groups based on shared attributes or behaviors This section provides a comprehensive overview of all audience segments that are provided out of the box Available Segments Audiences Lytics audience segments apply predefined rules to each user profile as they update Membership in these segments is maintained in real time and can trigger subsequent actions when users enter or exit the segment The following audience segments are all available out of the box with no customization necessary in all Lytics pricing tiers Name Slug Description Definition All all Your entire user base both anonymous and known FILTER Anonymous Profiles 30 days anonymous_profiles_30_days Anonymous profiles older than 30 days FILTER AND _modified now 30d _num_aliases 1 EXISTS _uids FROM user ALIAS anonymous_profiles_30_days Anonymous Profiles 60 days anonymous_profiles_60_days Anonymous profiles older than 60 days FILTER AND _modified now 60d _num_aliases 1 EXISTS _uids FROM user ALIAS anonymous_profiles_60_days Anonymous Profiles 90 days anonymous_profiles_90_days Anonymous profiles older than 90 days FILTER AND _modified now 90d _num_aliases 1 EXISTS _uids FROM user ALIAS anonymous_profiles_90_days Anonymous Profiles anonymous_profiles Anonymous Profiles FILTER AND _num_aliases 1 EXISTS _uids FROM user ALIAS default_anon_seg Connected Customers connected_customer_segment Connected Customer Segment Users who are active on 2 or more channels FILTER _forceinvalidsegmentfield 1 FROM user ALIAS connected_customer_segment Unhealthy Profiles default_unhealthy_profiles Any user profile that is in an unhealthy state Commonly caused by merge conflicts such as rules which conflict FILTER _profile_processing_failure true FROM user ALIAS default_unhealthy_profiles Behavior At Risk Users ly_at_risk People who s interaction behavior is changing for the worse FILTER AND score_momentum 10 score_momentum 30 Behavior Binge Users ly_binge_user People who show a lot of activity when they do interact with your brand FILTER AND score_frequency 20 score_intensity 50 Engagement Casual Visitors ly_casual_visitor People who show little activity when they do interact with your brand FILTER score_intensity 25 Engagement Deeply Engaged Users ly_deeply_engaged_users People who show a lot of activity when they do interact with your brand FILTER score_intensity 75 Engagement First time Visitors ly_first_time_visitor People who are visited from the first time FILTER visitct 1 Behavior Frequent Users ly_frequent_user People consistently interacting with your brand FILTER score_frequency 65 Campaign Referral Interactions Email ly_from_email People referred from email FILTER utm_mediums INTERSECTS email Campaign Referral Interactions Paid ly_from_paid People referred from paid media FILTER utm_mediums INTERSECTS cpc ppc Campaign Referral Interactions Social ly_from_social People referred from social media FILTER utm_mediums INTERSECTS social twitter facebook pinterest instagram Web Activity Has Visited Mobile Web ly_has_visited_mobile_web People who have visited on mobile web FILTER EXISTS is_mobile Web Activity Has Visited Web ly_has_visited_web People who have visited on web FILTER channels INTERSECTS web Behavior Infrequent Users ly_infrequent_user People not interacting with your brand FILTER score_frequency 35 Location International Visitors ly_international_visitor People who have visited outside the US FILTER AND EXISTS visit_country visit_country NOT IN US Email Capture Status Known Email ly_known_email People who have a known email address FILTER EXISTS email Engagement Moderately Engaged Visitors ly_moderately_engaged_visitor People who show average activity when they do interact with your brand FILTER AND score_intensity 24 score_intensity 76 Behavior Moderately Frequent Users ly_moderately_frequent_user People occasionally interacting with your brand FILTER AND score_frequency 34 score_frequency 76 Web Activity Multi Session Visitor ly_multi_session_visitor People who have visited multiple times FILTER visitct 1 Behavior Perusers ly_peruser People who visit often but rarely interact deeply with your brand FILTER AND score_frequency 70 score_intensity 20 Engagement Repeat Visitors ly_repeat_visitor People who have visited multiple times FILTER visitct 1 Casual Visitors ly_reporting_casual_visitors People who show little activity when they do interact with your brand FILTER score_intensity 25 Deeply Engaged Users ly_reporting_deeply_engaged_users People who show a lot of activity when they do interact with your brand FILTER score_intensity 75 Frequent Users ly_reporting_frequent_users People who interact with your brand a lot FILTER score_frequency 65 Email ly_reporting_from_email People referred from email FILTER utm_mediums intersects email Facebook ly_reporting_from_facebook People referred from Facebook FILTER utm_sources intersects Facebook facebook Google ly_reporting_from_google People referred from Google search FILTER utm_sources intersects Google Google Search Google Ads gads google google search Paid ly_reporting_from_paid People referred from paid media FILTER utm_mediums intersects cpc ppc Social ly_reporting_from_social People referred from social media FILTER utm_mediums intersects social twitter facebook pinterest instagram Has Visited Mobile Web ly_reporting_has_visited_mobile_web People who have visited on mobile web FILTER EXISTS is_mobile Has Visited Web ly_reporting_has_visited_web People who have visited on web FILTER channels INTERSECTS web Infrequent Users ly_reporting_infrequent_users People who interact with your brand occasionally FILTER score_frequency 35 Last Visit Within 3 Months ly_reporting_last_visit_within_3_months People who have visited within the last 3 months FILTER lastvisit_ts now 3M Last Visit Within A Day ly_reporting_last_visit_within_day People who have visited within the last day FILTER lastvisit_ts now 1d Last Visit Within A Month ly_reporting_last_visit_within_month People who have visited within the last month FILTER lastvisit_ts now 1M Last Visit Within A Week ly_reporting_last_visit_within_week People who have visited within the last week FILTER lastvisit_ts now 1w Multi Session Visitor ly_reporting_multi_session_visitor People who have visited multiple times FILTER visitct 1 Single Page Visitor ly_reporting_single_page_visitor People who have only visited one time FILTER pageviewct 1 Web Activity Single Page Visitor ly_single_page_visitor People who have only visited one time FILTER pageviewct 1 Email Capture Status Unknown Email ly_unknown_email People who do not have a known email address FILTER NOT EXISTS email Location US Visitors ly_us_visitor People who have visited from the US FILTER visit_country IN US Browser OS Android ly_uses_android People who have used Android FILTER devices INTERSECTS Android Browser OS Desktop ly_uses_desktop People who used a desktop FILTER devices INTERSECTS desktop Browser OS iOS ly_uses_ios People who have used iOS FILTER devices INTERSECTS IOS Browser OS Mobile ly_uses_mobile People who have used a mobile device FILTER devices INTERSECTS Android Blackberry IOS WinMobile Browser OS Other ly_uses_other People who have used other devices FILTER devices INTERSECTS Blackberry WinMobile other Lytics Currently Engaged smt_active Users who are currently engaging with your brand FILTER AND score_momentum 10 EXISTS score_momentum _created now 1w NOT AND score_frequency 5 score_intensity 0 score_momentum 0 score_quantity 3 NOT AND score_quantity 50 score_frequency 50 score_intensity 25 score_momentum 40 FROM user Lytics Disengaged smt_dormant Users who show minimal or no activity for a prolonged period of time FILTER AND AND score_frequency 5 score_intensity 0 score_momentum 0 score_quantity 3 EXISTS score_momentum _created now 1w FROM user Lytics Previously Engaged smt_inactive Users who are currently disengaged with your brand but had been previously FILTER AND score_momentum 10 EXISTS score_momentum _created now 1w NOT AND score_frequency 5 score_intensity 0 score_momentum 0 score_quantity 3 FROM user Lytics New smt_new Users who are new to your audience within the last week FILTER _created now 1w FROM user Lytics Highly Engaged smt_power Users who engage most frequently and consistently of your users FILTER AND AND score_quantity 50 score_frequency 50 score_intensity 25 score_momentum 40 EXISTS score_momentum _created now 1w NOT AND score_frequency 5 score_intensity 0 score_momentum 0 score_quantity 3 score_momentum 10 FROM user Lytics Unscored smt_unscored Users who have not registered enough activity to be scored by our behavioral algorithms FILTER AND NOT EXISTS score_momentum _created now 1w Updated 7 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/developer-segments#content",
    "title": "Available Segments (Audiences)",
    "chunk_text": "Categorizing users based on their behaviors and characteristics is pivotal for effective audience targeting and personalization strategies Lytics audience segmentation offers a powerful tool for organizing users into meaningful groups based on shared attributes or behaviors This section provides a comprehensive overview of all audience segments that are provided out of the box Available Segments Audiences Lytics audience segments apply predefined rules to each user profile as they update Membership in these segments is maintained in real time and can trigger subsequent actions when users enter or exit the segment The following audience segments are all available out of the box with no customization necessary in all Lytics pricing tiers Name Slug Description Definition All all Your entire user base both anonymous and known FILTER Anonymous Profiles 30 days anonymous_profiles_30_days Anonymous profiles older than 30 days FILTER AND _modified now 30d _num_aliases 1 EXISTS _uids FROM user ALIAS anonymous_profiles_30_days Anonymous Profiles 60 days anonymous_profiles_60_days Anonymous profiles older than 60 days FILTER AND _modified now 60d _num_aliases 1 EXISTS _uids FROM user ALIAS anonymous_profiles_60_days Anonymous Profiles 90 days anonymous_profiles_90_days Anonymous profiles older than 90 days FILTER AND _modified now 90d _num_aliases 1 EXISTS _uids FROM user ALIAS anonymous_profiles_90_days Anonymous Profiles anonymous_profiles Anonymous Profiles FILTER AND _num_aliases 1 EXISTS _uids FROM user ALIAS default_anon_seg Connected Customers connected_customer_segment Connected Customer Segment Users who are active on 2 or more channels FILTER _forceinvalidsegmentfield 1 FROM user ALIAS connected_customer_segment Unhealthy Profiles default_unhealthy_profiles Any user profile that is in an unhealthy state Commonly caused by merge conflicts such as rules which conflict FILTER _profile_processing_failure true FROM user ALIAS default_unhealthy_profiles Behavior At Risk Users ly_at_risk People who s interaction behavior is changing for the worse FILTER AND score_momentum 10 score_momentum 30 Behavior Binge Users ly_binge_user People who show a lot of activity when they do interact with your brand FILTER AND score_frequency 20 score_intensity 50 Engagement Casual Visitors ly_casual_visitor People who show little activity when they do interact with your brand FILTER score_intensity 25 Engagement Deeply Engaged Users ly_deeply_engaged_users People who show a lot of activity when they do interact with your brand FILTER score_intensity 75 Engagement First time Visitors ly_first_time_visitor People who are visited from the first time FILTER visitct 1 Behavior Frequent Users ly_frequent_user People consistently interacting with your brand FILTER score_frequency 65 Campaign Referral Interactions Email ly_from_email People referred from email FILTER utm_mediums INTERSECTS email Campaign Referral Interactions Paid ly_from_paid People referred from paid media FILTER utm_mediums INTERSECTS cpc ppc Campaign Referral Interactions Social ly_from_social People referred from social media FILTER utm_mediums INTERSECTS social twitter facebook pinterest instagram Web Activity Has Visited Mobile Web ly_has_visited_mobile_web People who have visited on mobile web FILTER EXISTS is_mobile Web Activity Has Visited Web ly_has_visited_web People who have visited on web FILTER channels INTERSECTS web Behavior Infrequent Users ly_infrequent_user People not interacting with your brand FILTER score_frequency 35 Location International Visitors ly_international_visitor People who have visited outside the US FILTER AND EXISTS visit_country visit_country NOT IN US Email Capture Status Known Email ly_known_email People who have a known email address FILTER EXISTS email Engagement Moderately Engaged Visitors ly_moderately_engaged_visitor People who show average activity when they do interact with your brand FILTER AND score_intensity 24 score_intensity 76 Behavior Moderately Frequent Users ly_moderately_frequent_user People occasionally interacting with your brand FILTER AND score_frequency 34 score_frequency 76 Web Activity Multi Session Visitor ly_multi_session_visitor People who have visited multiple times FILTER visitct 1 Behavior Perusers ly_peruser People who visit often but rarely interact deeply with your brand FILTER AND score_frequency 70 score_intensity 20 Engagement Repeat Visitors ly_repeat_visitor People who have visited multiple times FILTER visitct 1 Casual Visitors ly_reporting_casual_visitors People who show little activity when they do interact with your brand FILTER score_intensity 25 Deeply Engaged Users ly_reporting_deeply_engaged_users People who show a lot of activity when they do interact with your brand FILTER score_intensity 75 Frequent Users ly_reporting_frequent_users People who interact with your brand a lot FILTER score_frequency 65 Email ly_reporting_from_email People referred from email FILTER utm_mediums intersects email Facebook ly_reporting_from_facebook People referred from Facebook FILTER utm_sources intersects Facebook facebook Google ly_reporting_from_google People referred from Google search FILTER utm_sources intersects Google Google Search Google Ads gads google google search Paid ly_reporting_from_paid People referred from paid media FILTER utm_mediums intersects cpc ppc Social ly_reporting_from_social People referred from social media FILTER utm_mediums intersects social twitter facebook pinterest instagram Has Visited Mobile Web ly_reporting_has_visited_mobile_web People who have visited on mobile web FILTER EXISTS is_mobile Has Visited Web ly_reporting_has_visited_web People who have visited on web FILTER channels INTERSECTS web Infrequent Users ly_reporting_infrequent_users People who interact with your brand occasionally FILTER score_frequency 35 Last Visit Within 3 Months ly_reporting_last_visit_within_3_months People who have visited within the last 3 months FILTER lastvisit_ts now 3M Last Visit Within A Day ly_reporting_last_visit_within_day People who have visited within the last day FILTER lastvisit_ts now 1d Last Visit Within A Month ly_reporting_last_visit_within_month People who have visited within the last month FILTER lastvisit_ts now 1M Last Visit Within A Week ly_reporting_last_visit_within_week People who have visited within the last week FILTER lastvisit_ts now 1w Multi Session Visitor ly_reporting_multi_session_visitor People who have visited multiple times FILTER visitct 1 Single Page Visitor ly_reporting_single_page_visitor People who have only visited one time FILTER pageviewct 1 Web Activity Single Page Visitor ly_single_page_visitor People who have only visited one time FILTER pageviewct 1 Email Capture Status Unknown Email ly_unknown_email People who do not have a known email address FILTER NOT EXISTS email Location US Visitors ly_us_visitor People who have visited from the US FILTER visit_country IN US Browser OS Android ly_uses_android People who have used Android FILTER devices INTERSECTS Android Browser OS Desktop ly_uses_desktop People who used a desktop FILTER devices INTERSECTS desktop Browser OS iOS ly_uses_ios People who have used iOS FILTER devices INTERSECTS IOS Browser OS Mobile ly_uses_mobile People who have used a mobile device FILTER devices INTERSECTS Android Blackberry IOS WinMobile Browser OS Other ly_uses_other People who have used other devices FILTER devices INTERSECTS Blackberry WinMobile other Lytics Currently Engaged smt_active Users who are currently engaging with your brand FILTER AND score_momentum 10 EXISTS score_momentum _created now 1w NOT AND score_frequency 5 score_intensity 0 score_momentum 0 score_quantity 3 NOT AND score_quantity 50 score_frequency 50 score_intensity 25 score_momentum 40 FROM user Lytics Disengaged smt_dormant Users who show minimal or no activity for a prolonged period of time FILTER AND AND score_frequency 5 score_intensity 0 score_momentum 0 score_quantity 3 EXISTS score_momentum _created now 1w FROM user Lytics Previously Engaged smt_inactive Users who are currently disengaged with your brand but had been previously FILTER AND score_momentum 10 EXISTS score_momentum _created now 1w NOT AND score_frequency 5 score_intensity 0 score_momentum 0 score_quantity 3 FROM user Lytics New smt_new Users who are new to your audience within the last week FILTER _created now 1w FROM user Lytics Highly Engaged smt_power Users who engage most frequently and consistently of your users FILTER AND AND score_quantity 50 score_frequency 50 score_intensity 25 score_momentum 40 EXISTS score_momentum _created now 1w NOT AND score_frequency 5 score_intensity 0 score_momentum 0 score_quantity 3 score_momentum 10 FROM user Lytics Unscored smt_unscored Users who have not registered enough activity to be scored by our behavioral algorithms FILTER AND NOT EXISTS score_momentum _created now 1w Updated 7 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lead-capture",
    "title": "TL;DR",
    "chunk_text": "TL DR This document outlines how to leverage Lytics real time personalization engine to identify visitors who lack the strong identifiers necessary to link web based behavioral insights with other activation channels such as email Background What is lead capture Traditionally lead capture involves gathering information from individuals interested in your products or services such as names email addresses and phone numbers This occurs when people visit your website subscribe to your newsletter download resources or interact with your content However in recent years the role of lead capture within your global consumer engagement strategy has undergone significant transformation Why is it important Accurate measurement of attribution and conversions is paramount to assessing the effectiveness of your marketing efforts With the challenges posed by the deprecation of third party cookies particularly impacting top of funnel ad campaigns lead capture becomes a crucial data collection and targeting strategy In an era of short attention spans every interaction must be hyper relevant and efficient making lead capture instrumental in delivering personalized content As marketing budgets face constraints each dollar spent must yield maximum potential and lead capture aids in optimizing resource allocation Building comprehensive consumer profiles representing behavioral patterns over time is essential to get the most out of the latest advancements in AI See it in action Lytics real time personalization engine lets you first identify the current web visitor programmatically review their profile and ultimately decide if a campaign should be delivered to their browser to close gaps in that profile Instructions Below you ll find a detailed guide on how to execute this use case At the end you ll find additional reading which will help you learn how to extend and customize this use case further Requirements Have access to an active Lytics account Ability to add JavaScript to your website via tag manager or CMS Entry level knowledge of JavaScript Don t worry it is mostly copy and paste here Install Lytics Core SDK Before executing this use case your website must be properly configured with the core Lytics SDK JavaScript tag Please refer to our installation documentation to confirm the tag is present before continuing Activate Required Attributes As an admin user of Lytics you can enable or disable any attributes from being surfaced to the web via our JavaScript SDK Depending on how your account has been configured you may need to allow some of the required attributes for this particular use case Required Attributes Attribute anonymous_profiles This computed attribute available by default in all accounts represents visitors who do not yet have a strong identifier such as an email address known_profiles This computed attribute available by default in all accounts represents visitors with strong identifiers such as email addresses Configure Web Experience To execute this use case we will launch a simple lead capture form at the bottom left of your site The lead capture will focus on collecting email addresses for the user and use a generic dark theme along with some boilerplate messaging For best results we recommend leveraging an offer of some sort that will resonate with your customers to entice them to sign up and identify themselves In return you ll gain much knowledge about this visitor strengthen your consumer record and unlock the ability to connect in channels outside of just the web JavaScript script type text javascript jstag on pathfora publish done function topic event var module new pathfora Form id lead capture form layout slideout theme dark headline Sign up msg Submit this form to get updates formElements type email required true label Email name email var modules target segment anonymous_profiles widgets module pathfora initializeWidgets modules script Bonus Idea You can extend this use case to progressively improve your visitor profiles by surfacing data capture forms specific to gaps in their profile data For instance when they are unknown only ask for email As soon as you have an email perhaps you want to know more about their preferences or learn how to improve a particular portion of your product offering Configure Reporting The Lytics platform has a pre defined schema to facilitate this use case As such we recommend building a custom report from within our UI to showcase your progress in converting unknown or anonymous visitors to known visitors with a strong identifier There are many ways to configure this type of reporting but here we ll guide you through a basic example to measure impact Create New Report Add Anonymous vs Known Size Component Step 1 Once you have created your new report add a component using the Add New Component button at the top of the report Step 2 Select Size as your component type Step 3 Name your component We recommend something simple like Anonymous vs Known Step 4 Add an optional description to explain the goal of this report to ease the consumption for others later Step 5 Select the audiences you d like to highlight In this use case we ll select Anonymous Profiles and Known Profiles which are both available by default Step 6 Save your component Please note it may take some time for the report to populate once you have configured it but as long as you see the empty Not enough data state you are good to go Add Impression Composition Component Step 1 Following steps similar to the previous component we ll add another component but this time we use the Composition component type Step 2 Name your component Campaign Impressions as this component will focus on showcasing impression information to validate that the campaign is being shown Step 3 Select the All audience to ensure all visitors regardless if they are known or unknown are included in the report Step 4 Select the field ly_impressions This field represents an array of all campaigns each visitor has interacted with and is available by default The values returned for custom campaigns will match the ID you set above in the campaign configuration Step 5 Finally replace my_campaign_id in the example below with the ID of your campaign above to highlight only interactions for that campaign Add Conversion Composition Component Following the same steps as above configure another Composition component but this time use the field ly_conversions as it will be an array of all campaigns your users have converted on instead of the impressions used previously Thats it Your report has been configured As you begin to gain impressions and conversions this report will populate Generally every hour or two to highlight the impact Bonus Get additional guidance on how to pass interaction information related to your campaign to the following common sources for additional reporting and insight discovery Google Analytics coming soon Custom BI via Data Warehouse coming soon Execute Your Experience Once you have configured and tested your Experience activation is as simple as publishing the JavaScript code to your site This may be done via a tag manager like Google Tag Manager or using another mechanism such as Drupal blocks or WordPress Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lead-capture#content",
    "title": "TL;DR",
    "chunk_text": "TL DR This document outlines how to leverage Lytics real time personalization engine to identify visitors who lack the strong identifiers necessary to link web based behavioral insights with other activation channels such as email Background What is lead capture Traditionally lead capture involves gathering information from individuals interested in your products or services such as names email addresses and phone numbers This occurs when people visit your website subscribe to your newsletter download resources or interact with your content However in recent years the role of lead capture within your global consumer engagement strategy has undergone significant transformation Why is it important Accurate measurement of attribution and conversions is paramount to assessing the effectiveness of your marketing efforts With the challenges posed by the deprecation of third party cookies particularly impacting top of funnel ad campaigns lead capture becomes a crucial data collection and targeting strategy In an era of short attention spans every interaction must be hyper relevant and efficient making lead capture instrumental in delivering personalized content As marketing budgets face constraints each dollar spent must yield maximum potential and lead capture aids in optimizing resource allocation Building comprehensive consumer profiles representing behavioral patterns over time is essential to get the most out of the latest advancements in AI See it in action Lytics real time personalization engine lets you first identify the current web visitor programmatically review their profile and ultimately decide if a campaign should be delivered to their browser to close gaps in that profile Instructions Below you ll find a detailed guide on how to execute this use case At the end you ll find additional reading which will help you learn how to extend and customize this use case further Requirements Have access to an active Lytics account Ability to add JavaScript to your website via tag manager or CMS Entry level knowledge of JavaScript Don t worry it is mostly copy and paste here Install Lytics Core SDK Before executing this use case your website must be properly configured with the core Lytics SDK JavaScript tag Please refer to our installation documentation to confirm the tag is present before continuing Activate Required Attributes As an admin user of Lytics you can enable or disable any attributes from being surfaced to the web via our JavaScript SDK Depending on how your account has been configured you may need to allow some of the required attributes for this particular use case Required Attributes Attribute anonymous_profiles This computed attribute available by default in all accounts represents visitors who do not yet have a strong identifier such as an email address known_profiles This computed attribute available by default in all accounts represents visitors with strong identifiers such as email addresses Configure Web Experience To execute this use case we will launch a simple lead capture form at the bottom left of your site The lead capture will focus on collecting email addresses for the user and use a generic dark theme along with some boilerplate messaging For best results we recommend leveraging an offer of some sort that will resonate with your customers to entice them to sign up and identify themselves In return you ll gain much knowledge about this visitor strengthen your consumer record and unlock the ability to connect in channels outside of just the web JavaScript script type text javascript jstag on pathfora publish done function topic event var module new pathfora Form id lead capture form layout slideout theme dark headline Sign up msg Submit this form to get updates formElements type email required true label Email name email var modules target segment anonymous_profiles widgets module pathfora initializeWidgets modules script Bonus Idea You can extend this use case to progressively improve your visitor profiles by surfacing data capture forms specific to gaps in their profile data For instance when they are unknown only ask for email As soon as you have an email perhaps you want to know more about their preferences or learn how to improve a particular portion of your product offering Configure Reporting The Lytics platform has a pre defined schema to facilitate this use case As such we recommend building a custom report from within our UI to showcase your progress in converting unknown or anonymous visitors to known visitors with a strong identifier There are many ways to configure this type of reporting but here we ll guide you through a basic example to measure impact Create New Report Add Anonymous vs Known Size Component Step 1 Once you have created your new report add a component using the Add New Component button at the top of the report Step 2 Select Size as your component type Step 3 Name your component We recommend something simple like Anonymous vs Known Step 4 Add an optional description to explain the goal of this report to ease the consumption for others later Step 5 Select the audiences you d like to highlight In this use case we ll select Anonymous Profiles and Known Profiles which are both available by default Step 6 Save your component Please note it may take some time for the report to populate once you have configured it but as long as you see the empty Not enough data state you are good to go Add Impression Composition Component Step 1 Following steps similar to the previous component we ll add another component but this time we use the Composition component type Step 2 Name your component Campaign Impressions as this component will focus on showcasing impression information to validate that the campaign is being shown Step 3 Select the All audience to ensure all visitors regardless if they are known or unknown are included in the report Step 4 Select the field ly_impressions This field represents an array of all campaigns each visitor has interacted with and is available by default The values returned for custom campaigns will match the ID you set above in the campaign configuration Step 5 Finally replace my_campaign_id in the example below with the ID of your campaign above to highlight only interactions for that campaign Add Conversion Composition Component Following the same steps as above configure another Composition component but this time use the field ly_conversions as it will be an array of all campaigns your users have converted on instead of the impressions used previously Thats it Your report has been configured As you begin to gain impressions and conversions this report will populate Generally every hour or two to highlight the impact Bonus Get additional guidance on how to pass interaction information related to your campaign to the following common sources for additional reporting and insight discovery Google Analytics coming soon Custom BI via Data Warehouse coming soon Execute Your Experience Once you have configured and tested your Experience activation is as simple as publishing the JavaScript code to your site This may be done via a tag manager like Google Tag Manager or using another mechanism such as Drupal blocks or WordPress Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/guide-content-recommendations",
    "title": "TL;DR",
    "chunk_text": "TL DR This document details the process of utilizing Lytics real time personalization engine to showcase content that resonates with a visitor s interests This can be implemented directly inline or through a pop up modal on your website to boost engagement Background How does Lytics make content recommendations Lytics Interest Engines provides a sophisticated approach for businesses to gain and leverage insights into which content is most likely to resonate based on behavioral patterns This is achieved through a detailed enrichment and affinity generation process in real time While full details are available in Lytics comprehensive documentation the core process can be distilled into four key steps Tracking Interactions Monitoring visitor behavior in real time to understand their engagement with the site Content Analysis Topic Extraction Using Google NLP and proprietary algorithms Lytics automatically analyzes all the content on your website translating it into a detailed topic graph Interest Scoring Assigning scores to reflect a visitor s level of interest in different topics updated dynamically as new interactions occur Content Recommendation Suggesting content that aligns with the visitor s demonstrated interests leveraging real time insights for timely and relevant engagement This streamlined framework enables real time personalization enhancing user experience by continuously adapting to evolving visitor interests Why is it important Relevant content for individual users boosts marketing effectiveness and ROI by increasing engagement and conversion rates Personalized content meets users interests leading to better resource utilization and higher customer retention This targeted strategy enhances sales opportunities and brand perception directly improving return on investment See it in action Lytics real time personalization engine lets you first identify the current web visitor programmatically review their profile and deliver one or more pieces of content based on their unique interests to maximize engagement Instructions Below you ll find a detailed guide on how to execute this use case At the end you ll find additional reading which will help you learn how to extend and customize this use case further Requirements Have access to an active Lytics account Lytics account must have had enough time to build the topic graph Typically 24 to 48 hours Ability to add JavaScript to your website via tag manager or CMS Entry level knowledge of JavaScript Don t worry it is mostly copy and paste here Install Lytics Core SDK Before executing this use case your website must be properly configured with the core Lytics SDK JavaScript tag Please refer to our installation documentation to confirm the tag is present before continuing Interest Scores Content Collections Your content must be classified before Lytics can offer content recommendations or insights Typically this classification process takes 24 to 48 hours though it may extend if your catalog is particularly large To ensure the health of your content graph and interest engines there are a few key areas to focus on Verify Interest Scores on Profile Ensure the Lytics Developer Tools Chrome extension is installed and Enabled Visit the domain s that have the Lytics JavaScript SDK installed Open the Chrome extension and navigate to the Profile section at the bottom From the Summary tab you will see a section labeled Interests Here we will list any topics and their associated level for the user If your user gets a message No interests are available proceed to the next step to ensure content has been classified Verify Content has Been Classified If you have not already verified the quality of classification and metadata please refer to our quickstart documentation From the Lytics interface navigate to Decision Engine from the product switcher at the top left Using the left hand menu navigate to Content Collections From the list of collections there is likely only one look for All Content in the list and the rows Size This refers to the number of documents classified it should be greater than one and reflect your total catalog For greater detail you can also visit Content Web Classification At the top of that page will be a summary dashboard of all content that has been successfully classified and cataloged Most notably the All Documents count under the URL Path component Troubleshooting Common Problems I have no lytics_content_enrich stream coming soon My content is not showing up at all coming soon My content is being classified but none of my documents have images coming soon Select a content collection We will use the default collection outlined below for this exercise but you may also create a custom collection with a subset of your content to recommend Collection Description all_content This collection contains all classified documents It comes out of the box in all Lytics accounts Ready to go a step farther and build a custom collection of your content to ensure recommendations are selected from a more currated set of documents Check out our full documentation Activate Required Attributes Segments As an admin user of Lytics you can enable or disable any attributes from being surfaced to the web via our JavaScript SDK Depending on how your account has been configured you may need to allow some of the required attributes for this particular use case Required Attributes Segment Description all We will use the out of the box segment containing all your site s users for demonstration We recommend using something more refined in production such as new or high value visitors Configure Web Experience To execute this use case we will demonstrate two examples The first will be a single content recommendation in a popup style modal while the second will leverage Pathfora to add a set of recommendations inline to your website Example 1 Content Recommendation Modal JavaScript HTML jstag on pathfora publish done function topic event var module new pathfora Message id content rec sample layout slideout theme dark headline Yummy content msg We suspect you are going to want to check this out recommend collection all_content cancelShow false okShow false variant 3 var modules target segment all widgets module pathfora initializeWidgets modules script type text javascript jstag on pathfora publish done function topic event var module new pathfora Message id content rec sample layout slideout theme dark headline Yummy content msg We suspect you are going to want to check this out recommend collection all_content cancelShow false okShow false variant 3 this variant shows the title and image for the recommendations var modules target segment all widgets module pathfora initializeWidgets modules script Example 2 Inline Content Recommendation In this example we ll use a generic Drupal Block with pure HTML and CSS but the same approach can be taken using WordPress or a third party tag manager such as Google Tag Manager HTML style rec container display flex justify content space between width 100 rec item box sizing border box flex 1 padding 10px rec title rec description font size 14px margin bottom 5px word wrap break word rec description font size 12px rec img height auto margin bottom 5px max width 100 style div class rec container div class rec item data pfblock lytics recommend data pfrecommend all_content div class rec title a data pftype URL strong data pftype title Recommendation title loading strong a div p img class rec img alt Recommendation related image p p class rec description data pftype description The recommendation description is loading p div div class rec item data pfblock lytics recommend data pfrecommend all_content div class rec title a data pftype URL strong data pftype title Recommendation title loading strong a div p img class rec img alt Recommendation related image p p class rec description data pftype description The recommendation description is loading p div div class rec item data pfblock lytics recommend data pfrecommend all_content div class rec title a data pftype URL strong data pftype title Recommendation title loading strong a div p img class rec img alt Recommendation related image p p class rec description data pftype description The recommendation description is loading p div div Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/guide-content-recommendations#content",
    "title": "TL;DR",
    "chunk_text": "TL DR This document details the process of utilizing Lytics real time personalization engine to showcase content that resonates with a visitor s interests This can be implemented directly inline or through a pop up modal on your website to boost engagement Background How does Lytics make content recommendations Lytics Interest Engines provides a sophisticated approach for businesses to gain and leverage insights into which content is most likely to resonate based on behavioral patterns This is achieved through a detailed enrichment and affinity generation process in real time While full details are available in Lytics comprehensive documentation the core process can be distilled into four key steps Tracking Interactions Monitoring visitor behavior in real time to understand their engagement with the site Content Analysis Topic Extraction Using Google NLP and proprietary algorithms Lytics automatically analyzes all the content on your website translating it into a detailed topic graph Interest Scoring Assigning scores to reflect a visitor s level of interest in different topics updated dynamically as new interactions occur Content Recommendation Suggesting content that aligns with the visitor s demonstrated interests leveraging real time insights for timely and relevant engagement This streamlined framework enables real time personalization enhancing user experience by continuously adapting to evolving visitor interests Why is it important Relevant content for individual users boosts marketing effectiveness and ROI by increasing engagement and conversion rates Personalized content meets users interests leading to better resource utilization and higher customer retention This targeted strategy enhances sales opportunities and brand perception directly improving return on investment See it in action Lytics real time personalization engine lets you first identify the current web visitor programmatically review their profile and deliver one or more pieces of content based on their unique interests to maximize engagement Instructions Below you ll find a detailed guide on how to execute this use case At the end you ll find additional reading which will help you learn how to extend and customize this use case further Requirements Have access to an active Lytics account Lytics account must have had enough time to build the topic graph Typically 24 to 48 hours Ability to add JavaScript to your website via tag manager or CMS Entry level knowledge of JavaScript Don t worry it is mostly copy and paste here Install Lytics Core SDK Before executing this use case your website must be properly configured with the core Lytics SDK JavaScript tag Please refer to our installation documentation to confirm the tag is present before continuing Interest Scores Content Collections Your content must be classified before Lytics can offer content recommendations or insights Typically this classification process takes 24 to 48 hours though it may extend if your catalog is particularly large To ensure the health of your content graph and interest engines there are a few key areas to focus on Verify Interest Scores on Profile Ensure the Lytics Developer Tools Chrome extension is installed and Enabled Visit the domain s that have the Lytics JavaScript SDK installed Open the Chrome extension and navigate to the Profile section at the bottom From the Summary tab you will see a section labeled Interests Here we will list any topics and their associated level for the user If your user gets a message No interests are available proceed to the next step to ensure content has been classified Verify Content has Been Classified If you have not already verified the quality of classification and metadata please refer to our quickstart documentation From the Lytics interface navigate to Decision Engine from the product switcher at the top left Using the left hand menu navigate to Content Collections From the list of collections there is likely only one look for All Content in the list and the rows Size This refers to the number of documents classified it should be greater than one and reflect your total catalog For greater detail you can also visit Content Web Classification At the top of that page will be a summary dashboard of all content that has been successfully classified and cataloged Most notably the All Documents count under the URL Path component Troubleshooting Common Problems I have no lytics_content_enrich stream coming soon My content is not showing up at all coming soon My content is being classified but none of my documents have images coming soon Select a content collection We will use the default collection outlined below for this exercise but you may also create a custom collection with a subset of your content to recommend Collection Description all_content This collection contains all classified documents It comes out of the box in all Lytics accounts Ready to go a step farther and build a custom collection of your content to ensure recommendations are selected from a more currated set of documents Check out our full documentation Activate Required Attributes Segments As an admin user of Lytics you can enable or disable any attributes from being surfaced to the web via our JavaScript SDK Depending on how your account has been configured you may need to allow some of the required attributes for this particular use case Required Attributes Segment Description all We will use the out of the box segment containing all your site s users for demonstration We recommend using something more refined in production such as new or high value visitors Configure Web Experience To execute this use case we will demonstrate two examples The first will be a single content recommendation in a popup style modal while the second will leverage Pathfora to add a set of recommendations inline to your website Example 1 Content Recommendation Modal JavaScript HTML jstag on pathfora publish done function topic event var module new pathfora Message id content rec sample layout slideout theme dark headline Yummy content msg We suspect you are going to want to check this out recommend collection all_content cancelShow false okShow false variant 3 var modules target segment all widgets module pathfora initializeWidgets modules script type text javascript jstag on pathfora publish done function topic event var module new pathfora Message id content rec sample layout slideout theme dark headline Yummy content msg We suspect you are going to want to check this out recommend collection all_content cancelShow false okShow false variant 3 this variant shows the title and image for the recommendations var modules target segment all widgets module pathfora initializeWidgets modules script Example 2 Inline Content Recommendation In this example we ll use a generic Drupal Block with pure HTML and CSS but the same approach can be taken using WordPress or a third party tag manager such as Google Tag Manager HTML style rec container display flex justify content space between width 100 rec item box sizing border box flex 1 padding 10px rec title rec description font size 14px margin bottom 5px word wrap break word rec description font size 12px rec img height auto margin bottom 5px max width 100 style div class rec container div class rec item data pfblock lytics recommend data pfrecommend all_content div class rec title a data pftype URL strong data pftype title Recommendation title loading strong a div p img class rec img alt Recommendation related image p p class rec description data pftype description The recommendation description is loading p div div class rec item data pfblock lytics recommend data pfrecommend all_content div class rec title a data pftype URL strong data pftype title Recommendation title loading strong a div p img class rec img alt Recommendation related image p p class rec description data pftype description The recommendation description is loading p div div class rec item data pfblock lytics recommend data pfrecommend all_content div class rec title a data pftype URL strong data pftype title Recommendation title loading strong a div p img class rec img alt Recommendation related image p p class rec description data pftype description The recommendation description is loading p div div Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/what-is-vault",
    "title": "Introduction",
    "chunk_text": "Introduction Vault is a centralized hub for managing security and other administrative features in Lytics It provides a single place for Lytics admins to access and change their key security features and user permissions regardless of product This means that the controls set in Vault apply to Conductor Decision Engine Cloud Connect and any other products associated with your Lytics account Take a quick tour of Lytics Vault Navigating Vault Vault is comprised of the following sections Account Usage an overview of your general account quota usage related to event consumption Account Settings view and change necessary administrative settings and details of your account These are sectioned into the following categories Account Details JavaScript Tag Lytics API Content Security Schema Users view a list of users accessing your Lytics account change their details or permissions remove a user or invite a new user to the account Security Access Tokens view and manage a list of Lytics API access tokens New tokens can be provisioned with specific permissions Authorizations create edit view and delete authorizations within Lytics Authorizations are credentials to third parties that enable the necessary scopes and permissions for data import and export jobs to run Account Setup JavaScript Tag learn how to install the Lytics JavaScript tag and validate the installation Who can access Vault Vault is focused primarily on account admins or those that have permission to administer settings user access etc Based upon these permissions your experience in Vault may vary and all sections outlined above may not be available If you are unable to access a section please reach out to your account administrator to request those adjusted permissions In general Admins will be able to access all areas Data Managers Campaign Managers Experience Managers and Goal Managers can access the Authorizations section to manage the credentials for their jobs and experiences Finally all Lytics users regardless of role should have access to view the JavaScript tag installation page under Account Setup and they should be able to view their user profile where they can change details such as their Name Email Address Phone Number for two factor authentication and change their password Your user profile will be accessible under the main Lytics navigation under Manage My Profile Notable Changes For existing customers slight changes will impact your day to day management activities Product Switcher Vault will be available directly from the primary product switcher at the top left of your Lytics interface This will be your primary access point for account management from now on Account Usage Our account usage data and quota meters received a much needed facelift The usage metrics act as the Vault dashboard for admin users Account Settings Account setting sections are now accessible through the main navigation These settings have received a minor facelift update The form controls for multi text fields have been slightly updated for a more standard user experience In addition users are now prompted to save or discard their changes when navigating away from these pages with unsaved settings Users The user list is now sortable and filterable based on name email who invited them and how long they ve been a Lytics user Each user has a page to view their details and roles In Vault in addition to assigning new roles an administrator can edit any user s name and email address The user invite form is now on its page to improve the flow and experience of inviting users Roles are now sorted into two categories Admin or Custom Roles An admin inherently has access to everything while custom roles give a finer grain definition of what the user can access The details on each role are shown in a tooltip when you hover over the role name Access Tokens The access tokens list is now sortable and filterable based on the name description the creator of the token or when if it has expired You can now view additional details about the access tokens you ve already created such as the roles assigned when it was made and when it will expire In addition new access tokens can now be assigned as an admin or with any combination of more granular access roles Authorizations Authorizations are now to be created and updated only in Vault You will still be able to utilize the auths you create in Vault in other products but for example when creating a job in Conductor or Decision Engine if you don t see an authorization you want to use for that job you will be linked into the authorizations wizard within Vault to create the auth JavaScript Tag Installation This page remains unchanged with simple styling changes and updated links to our documentation for troubleshooting Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/what-is-vault#content",
    "title": "Introduction",
    "chunk_text": "Introduction Vault is a centralized hub for managing security and other administrative features in Lytics It provides a single place for Lytics admins to access and change their key security features and user permissions regardless of product This means that the controls set in Vault apply to Conductor Decision Engine Cloud Connect and any other products associated with your Lytics account Take a quick tour of Lytics Vault Navigating Vault Vault is comprised of the following sections Account Usage an overview of your general account quota usage related to event consumption Account Settings view and change necessary administrative settings and details of your account These are sectioned into the following categories Account Details JavaScript Tag Lytics API Content Security Schema Users view a list of users accessing your Lytics account change their details or permissions remove a user or invite a new user to the account Security Access Tokens view and manage a list of Lytics API access tokens New tokens can be provisioned with specific permissions Authorizations create edit view and delete authorizations within Lytics Authorizations are credentials to third parties that enable the necessary scopes and permissions for data import and export jobs to run Account Setup JavaScript Tag learn how to install the Lytics JavaScript tag and validate the installation Who can access Vault Vault is focused primarily on account admins or those that have permission to administer settings user access etc Based upon these permissions your experience in Vault may vary and all sections outlined above may not be available If you are unable to access a section please reach out to your account administrator to request those adjusted permissions In general Admins will be able to access all areas Data Managers Campaign Managers Experience Managers and Goal Managers can access the Authorizations section to manage the credentials for their jobs and experiences Finally all Lytics users regardless of role should have access to view the JavaScript tag installation page under Account Setup and they should be able to view their user profile where they can change details such as their Name Email Address Phone Number for two factor authentication and change their password Your user profile will be accessible under the main Lytics navigation under Manage My Profile Notable Changes For existing customers slight changes will impact your day to day management activities Product Switcher Vault will be available directly from the primary product switcher at the top left of your Lytics interface This will be your primary access point for account management from now on Account Usage Our account usage data and quota meters received a much needed facelift The usage metrics act as the Vault dashboard for admin users Account Settings Account setting sections are now accessible through the main navigation These settings have received a minor facelift update The form controls for multi text fields have been slightly updated for a more standard user experience In addition users are now prompted to save or discard their changes when navigating away from these pages with unsaved settings Users The user list is now sortable and filterable based on name email who invited them and how long they ve been a Lytics user Each user has a page to view their details and roles In Vault in addition to assigning new roles an administrator can edit any user s name and email address The user invite form is now on its page to improve the flow and experience of inviting users Roles are now sorted into two categories Admin or Custom Roles An admin inherently has access to everything while custom roles give a finer grain definition of what the user can access The details on each role are shown in a tooltip when you hover over the role name Access Tokens The access tokens list is now sortable and filterable based on the name description the creator of the token or when if it has expired You can now view additional details about the access tokens you ve already created such as the roles assigned when it was made and when it will expire In addition new access tokens can now be assigned as an admin or with any combination of more granular access roles Authorizations Authorizations are now to be created and updated only in Vault You will still be able to utilize the auths you create in Vault in other products but for example when creating a job in Conductor or Decision Engine if you don t see an authorization you want to use for that job you will be linked into the authorizations wizard within Vault to create the auth JavaScript Tag Installation This page remains unchanged with simple styling changes and updated links to our documentation for troubleshooting Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/account-details",
    "title": "Introduction",
    "chunk_text": "Introduction Under the account menu in the main navigation find the Account Settings option You should see your account information such as the name of your account domain the account owner s email and more You can edit your account name domain and primary contact email from this page anytime Once you change one of these values you will be prompted to save or undo the changes Account ID and account number are never editable They are assigned at account creation and are permanent identifiers Navigating Accounts For users who have access to multiple accounts you can quickly and securely navigate between Accounts using our account switcher at the bottom right of the primary navigation 1 Click Switch Account 2 Select Account A menu will appear outlining the accounts you have access to Simply select an account and a new tab will open with this accounts dashboard Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/account-details#content",
    "title": "Introduction",
    "chunk_text": "Introduction Under the account menu in the main navigation find the Account Settings option You should see your account information such as the name of your account domain the account owner s email and more You can edit your account name domain and primary contact email from this page anytime Once you change one of these values you will be prompted to save or undo the changes Account ID and account number are never editable They are assigned at account creation and are permanent identifiers Navigating Accounts For users who have access to multiple accounts you can quickly and securely navigate between Accounts using our account switcher at the bottom right of the primary navigation 1 Click Switch Account 2 Select Account A menu will appear outlining the accounts you have access to Simply select an account and a new tab will open with this accounts dashboard Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/monitoring-and-alerts",
    "title": "Monitoring",
    "chunk_text": "Monitoring Monitoring and alerting is available on every job and every authorization within Lytics To set up alerting on your jobs or authorizations you can set up a monitoring job from either the Job API or the Lytics UI for alerting to Slack Microsoft Teams or directly to email If a source or destination job has failed Lytics will show the latest error message on the Conductor Diagnostics Dashboard and on the Logs tab of the Source Destination Job Summary interface and allow the job to be restarted if needed The most detailed information for troubleshooting can be accessed from the Job Logs API Additional generic monitoring on the Lytics system is available on our status page at lytics statuspage io Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/monitoring-and-alerts#content",
    "title": "Monitoring",
    "chunk_text": "Monitoring Monitoring and alerting is available on every job and every authorization within Lytics To set up alerting on your jobs or authorizations you can set up a monitoring job from either the Job API or the Lytics UI for alerting to Slack Microsoft Teams or directly to email If a source or destination job has failed Lytics will show the latest error message on the Conductor Diagnostics Dashboard and on the Logs tab of the Source Destination Job Summary interface and allow the job to be restarted if needed The most detailed information for troubleshooting can be accessed from the Job Logs API Additional generic monitoring on the Lytics system is available on our status page at lytics statuspage io Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/job-alerts",
    "title": "https://docs.lytics.com/docs/job-alerts",
    "chunk_text": "As systems are updated permissions change and networks are reconnected sometimes situations will be encountered that cannot be resolved by the automated error handling and resolution built into Lytics Jobs Lytics provides alerting through Slack Microsoft Teams and email on import and export Jobs to allow your teams to respond when needed Job Alerting Channels Slack Microsoft Teams Email Alerting Lytics Monitoring Keep in Mind Alerts can be configured for specific workflows or for all workflows running in the account Consider having one general alert to an Operations Channel or Team for all alerts or alerts for specific workflows managed by particular teams Consider which statuses to include Alerts can be configured for statuses aside from failures Workflows like critical batch import workflows can send a confirmation on successful syncs as well Understanding errors If a source or destination job has failed Lytics will show the latest error message on the Conductor Diagnostics Dashboard and on the Logs tab of the Source Destination Job Summary interface and allow the job to be restarted if needed The most detailed information for troubleshooting can be accessed from the Job Logs API Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/job-alerts#content",
    "title": "https://docs.lytics.com/docs/job-alerts#content",
    "chunk_text": "As systems are updated permissions change and networks are reconnected sometimes situations will be encountered that cannot be resolved by the automated error handling and resolution built into Lytics Jobs Lytics provides alerting through Slack Microsoft Teams and email on import and export Jobs to allow your teams to respond when needed Job Alerting Channels Slack Microsoft Teams Email Alerting Lytics Monitoring Keep in Mind Alerts can be configured for specific workflows or for all workflows running in the account Consider having one general alert to an Operations Channel or Team for all alerts or alerts for specific workflows managed by particular teams Consider which statuses to include Alerts can be configured for statuses aside from failures Workflows like critical batch import workflows can send a confirmation on successful syncs as well Understanding errors If a source or destination job has failed Lytics will show the latest error message on the Conductor Diagnostics Dashboard and on the Logs tab of the Source Destination Job Summary interface and allow the job to be restarted if needed The most detailed information for troubleshooting can be accessed from the Job Logs API Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/monitoring-metrics-copy",
    "title": "Account Activity Monitoring via Audit Logs API",
    "chunk_text": "Account Activity Monitoring via Audit Logs API Audit Logs provide visibility into system changes such as creating segments updating schema deleting items new authorizations added and users added to roles This is a wealth of audit data about changes in your account These events are shown in many places inside Lytics such as the history of work sync events status changes work failures due to expiring authorization or password changes on the source for OAuth tokens See our System Events API documentation for more information Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/monitoring-metrics-copy#content",
    "title": "Account Activity Monitoring via Audit Logs API",
    "chunk_text": "Account Activity Monitoring via Audit Logs API Audit Logs provide visibility into system changes such as creating segments updating schema deleting items new authorizations added and users added to roles This is a wealth of audit data about changes in your account These events are shown in many places inside Lytics such as the history of work sync events status changes work failures due to expiring authorization or password changes on the source for OAuth tokens See our System Events API documentation for more information Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/monitoring-job-status",
    "title": "Lytics System Events: Audit Logs and Alerts",
    "chunk_text": "Lytics System Events Audit Logs and Alerts In Lytics audit logs and system alerts originate from a shared source Lytics System Events A System Event is simply a log of an action taken within the platform whether it s a user creating a job segment or role or an error message indicating a job failure Export vs Alert Log Export This is a job that either streams logs in real time or performs a batch export to an external source such as a webhook or a data warehouse table Log Alert Alerts are triggered based on specified conditions and notify users when certain actions occur within the system In both cases the content of exports or alerts depends on the filters you set up Filtering is typically done using the Subject such as User Segment or Job and the Verb the action taken on the subject like created updated deleted or failed Creating an Audit Log export aka System Alert Job via the UI Creating a job to export your Audit and System Event logs is like creating any other job for more information see Data Pipeline Jobs In the Filters panel simply select Audit Logs to create an export of your Audit logs or System Events Depending on your Provider you can then select to export System Events For example if you selected Google Cloud and you want to export the events to BigQuery Then you d want to select the BigQuery Export System Events Job Type tile After choosing the Job Type it s like configuring any other export job In the case of BigQuery you can do a one time or continuous export Creating an Alert based on System Events Creating a job to alert on an Audit and System Event logs is like creating any other job for more information see Data Pipeline Jobs In the Filters panel simply select Audit Logs to create an export of your Audit logs or System Events Depending on your Provider you can then select to export System Events or Email Alerts For example if you select to get an email when an Alert is triggered then use Lytics as your provider and select Email Alerts Then configure what Subject you wanted to listen too and what Event Types aka Verbs Filtering Audit logs Audit logs can be filtered by Subject Type what the event is about such as work workflow user campaign See the list of subject types below Subject ID identifier of a subject such as work ID workflow ID campaign ID etc Verb action described by the event performed on a subject See the list of available verbs below Verb Description Frequency synccomplete For the completion of one synchronization cycle Emitted when a work cycle finishes successfully This is shown at the end when there are multiple cycles per scheduled sync or when there is a sleep cycle Real time update For when work configuration is modified It may occur multiple times per work Real time batch created For when works are created This only occurs only once per work Real time batch deleted For when a work is deleted Real time batch synced For the completion of one sync unit multiple units may happen per sleep cycle Real time completed For the final successful completion of a work This occurs once per work Batch started For the first time work is started This occurs once per work Real time batch failed For the final failure of a work This occurs once per work unless work is bounced Real time batch syncing For the start of a series of sync cycles for a work Real time Subject Type Description account Represents account related actions or changes auth Refers to authentication events including 3rd party access control activities with service accounts user Actions related to user accounts such as creation update or deactivation campaign Actions or modifications related to marketing campaigns data Covers data management events such as data ingestion and updates entity Refers to actions involving user entities aka Profiles experience Actions associated with experience journey Pertains to events tracking customer journeys and related updates program Events involving the creation or modification of programs within the system provider Refers to data provider configurations or integrations query Covers actions involving Lytics queries report Refers to generation access or modification of Lytics reports rollup Involves aggregation events such as data roll ups for analytics schema Actions associated with data schema configuration and updates schematable Refers to operations involving schema tables or data structure definitions scoring Covers actions involving user scoring mechanisms within the system segment Events related to segment creation modification or deletion segmentcollection Refers to collections of segments and associated actions segmentml Involves machine learning ML processes related to segment analysis stream Actions or updates related to a Lytics stream subscription Events involving subscriptions such as subscription creation or cancellation topic document Refers to topic modeling or document processing events variation Refers to A B testing or variation setup within experiences or campaigns work Covers general work related actions or tasks within the system workflow Actions associated with workflow creation modification or execution Job Status Monitoring via Webhooks Job status events can be observed by creating a webhook subscription that POSTs data or JSON to a specific URL These updates like email alerting and reporting can be consumed downstream for your monitoring use cases Some common examples include listening for audience exports created updated deleted or being notified whenever a batch import or export for a given integration fails Work related filters For events related to the subject type work the following verbs may be emitted synccomplete Emitted when a sync operation is completed updated Emitted when the job configuration is modified created Emitted when a new job is created deleted Emitted when a job is terminated synced Emitted when the job sync operation completes completed Emitted when a job has finished successfully started Emitted when a job begins execution failed Emitted when a job encounters an error syncing Emitted while a job is actively syncing Building custom Alerts Exports using our Webhook Integration Overview Lytics provides a webhook integration that allows you to monitor and react to system events in real time This integration enables you to build automated workflows trigger external actions and maintain synchronization with your other systems based on events occurring within Lytics Configuration Examples Basic Webhook Setup The following example shows how to subscribe to multiple event types and send them to a webhook endpoint JSON config system_event_multiple_types updated created failed webhook_url YOUR_WEBHOOK_ENDPOINT headers custom header header value workflow webhook_system_events Slack Integration You can integrate Lytics system events with Slack using a custom JSON template This example shows how to send failure notifications to a Slack channel JSON config system_event_type failed webhook_url YOUR_SLACK_WEBHOOK_URL json_template local note if std objectHas event data notes then event data notes else A work failed text Alert notification note For more info go to https activate getlytics com data integrations work s aid s event data subject_id event data aid workflow webhook_system_events Advanced Filtering You can filter events by source type and ID using the system_event_sources configuration Filter by Specific IDs JSON config system_event_multiple_types updated created failed system_event_sources work work id 1 work id 2 webhook_url YOUR_WEBHOOK_ENDPOINT headers custom header header value workflow webhook_system_events Monitor All Events of a specific Verb Type To receive events for all works in your account use an empty array JSON config system_event_multiple_types updated created failed system_event_sources work webhook_url YOUR_WEBHOOK_ENDPOINT headers custom header header value workflow webhook_system_events Best Practices Ensure your webhook endpoint can handle the expected volume of events Implement proper error handling and retry logic in your webhook receiver Use HTTPS endpoints for secure data transmission Monitor webhook delivery success rates and implement appropriate alerting Support For additional assistance or questions about webhook integration please contact Lytics support or consult our API documentation Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/monitoring-job-status#content",
    "title": "Lytics System Events: Audit Logs and Alerts",
    "chunk_text": "Lytics System Events Audit Logs and Alerts In Lytics audit logs and system alerts originate from a shared source Lytics System Events A System Event is simply a log of an action taken within the platform whether it s a user creating a job segment or role or an error message indicating a job failure Export vs Alert Log Export This is a job that either streams logs in real time or performs a batch export to an external source such as a webhook or a data warehouse table Log Alert Alerts are triggered based on specified conditions and notify users when certain actions occur within the system In both cases the content of exports or alerts depends on the filters you set up Filtering is typically done using the Subject such as User Segment or Job and the Verb the action taken on the subject like created updated deleted or failed Creating an Audit Log export aka System Alert Job via the UI Creating a job to export your Audit and System Event logs is like creating any other job for more information see Data Pipeline Jobs In the Filters panel simply select Audit Logs to create an export of your Audit logs or System Events Depending on your Provider you can then select to export System Events For example if you selected Google Cloud and you want to export the events to BigQuery Then you d want to select the BigQuery Export System Events Job Type tile After choosing the Job Type it s like configuring any other export job In the case of BigQuery you can do a one time or continuous export Creating an Alert based on System Events Creating a job to alert on an Audit and System Event logs is like creating any other job for more information see Data Pipeline Jobs In the Filters panel simply select Audit Logs to create an export of your Audit logs or System Events Depending on your Provider you can then select to export System Events or Email Alerts For example if you select to get an email when an Alert is triggered then use Lytics as your provider and select Email Alerts Then configure what Subject you wanted to listen too and what Event Types aka Verbs Filtering Audit logs Audit logs can be filtered by Subject Type what the event is about such as work workflow user campaign See the list of subject types below Subject ID identifier of a subject such as work ID workflow ID campaign ID etc Verb action described by the event performed on a subject See the list of available verbs below Verb Description Frequency synccomplete For the completion of one synchronization cycle Emitted when a work cycle finishes successfully This is shown at the end when there are multiple cycles per scheduled sync or when there is a sleep cycle Real time update For when work configuration is modified It may occur multiple times per work Real time batch created For when works are created This only occurs only once per work Real time batch deleted For when a work is deleted Real time batch synced For the completion of one sync unit multiple units may happen per sleep cycle Real time completed For the final successful completion of a work This occurs once per work Batch started For the first time work is started This occurs once per work Real time batch failed For the final failure of a work This occurs once per work unless work is bounced Real time batch syncing For the start of a series of sync cycles for a work Real time Subject Type Description account Represents account related actions or changes auth Refers to authentication events including 3rd party access control activities with service accounts user Actions related to user accounts such as creation update or deactivation campaign Actions or modifications related to marketing campaigns data Covers data management events such as data ingestion and updates entity Refers to actions involving user entities aka Profiles experience Actions associated with experience journey Pertains to events tracking customer journeys and related updates program Events involving the creation or modification of programs within the system provider Refers to data provider configurations or integrations query Covers actions involving Lytics queries report Refers to generation access or modification of Lytics reports rollup Involves aggregation events such as data roll ups for analytics schema Actions associated with data schema configuration and updates schematable Refers to operations involving schema tables or data structure definitions scoring Covers actions involving user scoring mechanisms within the system segment Events related to segment creation modification or deletion segmentcollection Refers to collections of segments and associated actions segmentml Involves machine learning ML processes related to segment analysis stream Actions or updates related to a Lytics stream subscription Events involving subscriptions such as subscription creation or cancellation topic document Refers to topic modeling or document processing events variation Refers to A B testing or variation setup within experiences or campaigns work Covers general work related actions or tasks within the system workflow Actions associated with workflow creation modification or execution Job Status Monitoring via Webhooks Job status events can be observed by creating a webhook subscription that POSTs data or JSON to a specific URL These updates like email alerting and reporting can be consumed downstream for your monitoring use cases Some common examples include listening for audience exports created updated deleted or being notified whenever a batch import or export for a given integration fails Work related filters For events related to the subject type work the following verbs may be emitted synccomplete Emitted when a sync operation is completed updated Emitted when the job configuration is modified created Emitted when a new job is created deleted Emitted when a job is terminated synced Emitted when the job sync operation completes completed Emitted when a job has finished successfully started Emitted when a job begins execution failed Emitted when a job encounters an error syncing Emitted while a job is actively syncing Building custom Alerts Exports using our Webhook Integration Overview Lytics provides a webhook integration that allows you to monitor and react to system events in real time This integration enables you to build automated workflows trigger external actions and maintain synchronization with your other systems based on events occurring within Lytics Configuration Examples Basic Webhook Setup The following example shows how to subscribe to multiple event types and send them to a webhook endpoint JSON config system_event_multiple_types updated created failed webhook_url YOUR_WEBHOOK_ENDPOINT headers custom header header value workflow webhook_system_events Slack Integration You can integrate Lytics system events with Slack using a custom JSON template This example shows how to send failure notifications to a Slack channel JSON config system_event_type failed webhook_url YOUR_SLACK_WEBHOOK_URL json_template local note if std objectHas event data notes then event data notes else A work failed text Alert notification note For more info go to https activate getlytics com data integrations work s aid s event data subject_id event data aid workflow webhook_system_events Advanced Filtering You can filter events by source type and ID using the system_event_sources configuration Filter by Specific IDs JSON config system_event_multiple_types updated created failed system_event_sources work work id 1 work id 2 webhook_url YOUR_WEBHOOK_ENDPOINT headers custom header header value workflow webhook_system_events Monitor All Events of a specific Verb Type To receive events for all works in your account use an empty array JSON config system_event_multiple_types updated created failed system_event_sources work webhook_url YOUR_WEBHOOK_ENDPOINT headers custom header header value workflow webhook_system_events Best Practices Ensure your webhook endpoint can handle the expected volume of events Implement proper error handling and retry logic in your webhook receiver Use HTTPS endpoints for secure data transmission Monitor webhook delivery success rates and implement appropriate alerting Support For additional assistance or questions about webhook integration please contact Lytics support or consult our API documentation Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/monitoring-lytics",
    "title": "Introduction",
    "chunk_text": "Introduction Lytics provides a variety of valuable metrics that downstream monitoring tools such as Google Stackdriver or New Relic can consume Using industry standard inexpensive tools built for alerting and monitoring you can have visibility into Lytics within your existing ecosystem Consuming Metrics Downstream Once you have connected Lytics to your monitoring tool there are various ways you can apply metrics from Lytics to support your operational and IT audit processes Below are a few examples Active monitoring defined by alerting requires additional configuration within your downstream tools to monitor Lytics On call distribution lists control who within your operational teams to inform Quiet hours manage within a tool where you are already doing that for other metrics Correlation of metrics show existing metrics e g website performance in the context of Lytics metrics Operational users watch for signals without creating a Lytics admin user account Anomaly detection use threshold based alerts that most monitoring tools have that go beyond the capabilities Lytics provides natively Platform Monitoring via Metric API The Metric API provides access to a variety of metrics that are recorded in the Lytics platform This API allows you to access segment size metrics events received per hour and many workflow specific metrics Heartbeats metrics with a value of 1 for up healthy and 0 for not healthy or missing Name Description Updated monitoring_heartbeat A simple 1 up for each minute a workflow runs indicates the overall integrations platform Every minute collection_count A metric for the count gauge for the 1 minute window in total events ingressed web collection or import workflows Every minute stream_count Metric per stream for a count of events seen this cycle Every hour Availability of Metrics the Lytics Metric API and all Lytics export workflows run inside Lytics work runtime system in Kubernetes During deploys or scaling events these processes can move between servers potentially resulting in 1 or 2 minute gaps in metrics Therefore alerts on single heartbeat misses are not recommended Instead look for a missing window of 5 Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/monitoring-lytics#content",
    "title": "Introduction",
    "chunk_text": "Introduction Lytics provides a variety of valuable metrics that downstream monitoring tools such as Google Stackdriver or New Relic can consume Using industry standard inexpensive tools built for alerting and monitoring you can have visibility into Lytics within your existing ecosystem Consuming Metrics Downstream Once you have connected Lytics to your monitoring tool there are various ways you can apply metrics from Lytics to support your operational and IT audit processes Below are a few examples Active monitoring defined by alerting requires additional configuration within your downstream tools to monitor Lytics On call distribution lists control who within your operational teams to inform Quiet hours manage within a tool where you are already doing that for other metrics Correlation of metrics show existing metrics e g website performance in the context of Lytics metrics Operational users watch for signals without creating a Lytics admin user account Anomaly detection use threshold based alerts that most monitoring tools have that go beyond the capabilities Lytics provides natively Platform Monitoring via Metric API The Metric API provides access to a variety of metrics that are recorded in the Lytics platform This API allows you to access segment size metrics events received per hour and many workflow specific metrics Heartbeats metrics with a value of 1 for up healthy and 0 for not healthy or missing Name Description Updated monitoring_heartbeat A simple 1 up for each minute a workflow runs indicates the overall integrations platform Every minute collection_count A metric for the count gauge for the 1 minute window in total events ingressed web collection or import workflows Every minute stream_count Metric per stream for a count of events seen this cycle Every hour Availability of Metrics the Lytics Metric API and all Lytics export workflows run inside Lytics work runtime system in Kubernetes During deploys or scaling events these processes can move between servers potentially resulting in 1 or 2 minute gaps in metrics Therefore alerts on single heartbeat misses are not recommended Instead look for a missing window of 5 Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/usage-metrics",
    "title": "Account Usage Metrics",
    "chunk_text": "Account Usage Metrics The Account Usage section shows how many inbound and outbound events Lytics has received for your account If your account has an inbound event quota you will find a meter displaying how much of your inbound event quota you have used for each quota period In the Lytics UI select Vault from the product switcher Or if you are already in Vault select Usage from the main menu This view offers a quick way to gauge the quantity of data Lytics has received from your various Sources Of course if you would like to explore details for incoming data further you can view more granular details of all connected Sources from the Conductor interface Inbound Events An inbound event is a record of activity collected or uploaded to Lytics from a customer data source such as a record of user web activity email opening or an update to a subscriber record The inbound events graph shows your total inbound events which can be displayed daily weekly or monthly The inbound quota meter displays the number of events recorded in the quota period your quota limit and the meter to gauge your usage versus your quota limit quickly For monthly term accounts quota periods begin on the first of each month and end on the last day of the month For annual term accounts quota periods begin at the start of your Lytics subscription Quotas unless otherwise stated in your contract only count for production accounts Monitoring the Inbound Event Quota Automated alerts for Inbound Event Quotas can be configured to sent to Microsoft Teams Slack or directly to an email address Outbound Events An outbound event is any record of data exported from Lytics whether manually or automatically The outbound events graph shows your total outbound events which can be displayed daily weekly or monthly Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/usage-metrics#content",
    "title": "Account Usage Metrics",
    "chunk_text": "Account Usage Metrics The Account Usage section shows how many inbound and outbound events Lytics has received for your account If your account has an inbound event quota you will find a meter displaying how much of your inbound event quota you have used for each quota period In the Lytics UI select Vault from the product switcher Or if you are already in Vault select Usage from the main menu This view offers a quick way to gauge the quantity of data Lytics has received from your various Sources Of course if you would like to explore details for incoming data further you can view more granular details of all connected Sources from the Conductor interface Inbound Events An inbound event is a record of activity collected or uploaded to Lytics from a customer data source such as a record of user web activity email opening or an update to a subscriber record The inbound events graph shows your total inbound events which can be displayed daily weekly or monthly The inbound quota meter displays the number of events recorded in the quota period your quota limit and the meter to gauge your usage versus your quota limit quickly For monthly term accounts quota periods begin on the first of each month and end on the last day of the month For annual term accounts quota periods begin at the start of your Lytics subscription Quotas unless otherwise stated in your contract only count for production accounts Monitoring the Inbound Event Quota Automated alerts for Inbound Event Quotas can be configured to sent to Microsoft Teams Slack or directly to an email address Outbound Events An outbound event is any record of data exported from Lytics whether manually or automatically The outbound events graph shows your total outbound events which can be displayed daily weekly or monthly Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/account-users",
    "title": "Managing Your User Profile",
    "chunk_text": "Managing Your User Profile To access your profile click Manage My User from the account menu at the bottom of the primary navigation You ll have access to personal information and usage statistics from the resulting profile page It doubles as an ID card and a stats card You can edit your name and email address Both fields are required A phone number is only required for 2FA Click the Change Password button to change your password Resetting Passwords The password must be reset by the user whose password is being reset Passwords cannot be reset on behalf of others To reset your password go to Manage My Profile in the account menu and click the Change Password button A modal will open prompting for a new password can be entered Changing a password will immediately invalidate all current sessions across all machines for the user Managing Account Users Click Manage Users in the account menu to manage account users Modifying User Permissions User roles define the amount of access and permissions a Lytics user has when logged in and through the Lytics APIs A user may have any number of these roles and the permissions for multiple roles are additive For example a user with the Campaign Manager and Content Manager roles will have access to all permissions granted by both roles Users with the Admin role can control other users roles within your organization via the Manage Users option from the account dropdown menu Managing Personally Identifiable Information You can indicate any user fields in your account that contain Personally Identifiable Information PII via the private fields account setting These fields will be hidden for anyone who does not have Admin Data Manager or User Search roles You should verify with Lytics Support that the field hiding in the segment scan is also enabled for your account to ensure these fields are hidden there What does a user of each role have access to A user s role determines which parts of the Lytics app they can access Here is a breakdown of what is shown in the navigation for each role Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search Dashboard Dashboard x x x x x x x x x x x Goals Goals x x Experiences Experiences x x x Audiences Audiences x x x x x x x x Discovery x x User Search x x x User Profiles x x x GDPR Profile Delete x x Content Overview x x x x Topics x x x x Collections x x x x Data Jobs Auths x x x x x Data Streams x x User Fields x x Queries x x Schema Audit x x Personalize x x x x Look a like Models x For access to look a like models you will need to be an account admin or have a combination of Discovery Insight a role that gives access to Jobs Auths What tasks can a user of each role perform Roles define a set of permissions the user has which also dictates what actions they can take in the app and through the APIs Here is a breakdown of the permissions for each role by feature Personally Identifiable Information PII To shield PI from users who should not have access you will need to use the private fields account setting to mark the profile fields you want to hide from anyone who does not have Admin Data Manager or User Search roles Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x Audiences without PII Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x x x x x Create x x x x x x Edit x x x x x x Duplicate x x x x x x Delete x x x x x Content Topics Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search Blocklist x x Content Collections Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x x Create x x x Edit x x x Duplicate x x x Delete x x Authorizations for imports exports Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x x x Create x x x x x Edit x x x x x Delete x x x x x Jobs imports exports The former Integrations tab is now comprised of the Jobs and Authorizations sections which allow you to manage your import and exports Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x x x Create x x x x x Pause x x x x x Update x x x x x Delete x x x x x Accounts Users Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search Invite User x Manage User Roles x Create Account x Edit Account x View Account Usage x Personalize Campaigns Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x x Create x x x Edit x x x Duplicate x x x Delete x x Additional API Only Features All roles have API read access to topic rollups segment collections and SegmentML Marked below are the roles with full CRUD access to these features Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search Content Topic Rollups x x x x Content Classification x x x x Queries API x x Segment Collections x x x x x x x x Lookalike Models x x Subscription x x x Inviting Users Click the Create New button from the user list to invite a new user to the account Inviting a new user will prompt for an email address and roles to select the appropriate level of access the user will have within your Lytics account Upon completing this form the new user will get an email with a link that will take them to the Lytics account login screen Removing Users From the user list select the user you wish to delete You can remove this user from Lytics by clicking the Delete User button from their profile page Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/account-users#content",
    "title": "Managing Your User Profile",
    "chunk_text": "Managing Your User Profile To access your profile click Manage My User from the account menu at the bottom of the primary navigation You ll have access to personal information and usage statistics from the resulting profile page It doubles as an ID card and a stats card You can edit your name and email address Both fields are required A phone number is only required for 2FA Click the Change Password button to change your password Resetting Passwords The password must be reset by the user whose password is being reset Passwords cannot be reset on behalf of others To reset your password go to Manage My Profile in the account menu and click the Change Password button A modal will open prompting for a new password can be entered Changing a password will immediately invalidate all current sessions across all machines for the user Managing Account Users Click Manage Users in the account menu to manage account users Modifying User Permissions User roles define the amount of access and permissions a Lytics user has when logged in and through the Lytics APIs A user may have any number of these roles and the permissions for multiple roles are additive For example a user with the Campaign Manager and Content Manager roles will have access to all permissions granted by both roles Users with the Admin role can control other users roles within your organization via the Manage Users option from the account dropdown menu Managing Personally Identifiable Information You can indicate any user fields in your account that contain Personally Identifiable Information PII via the private fields account setting These fields will be hidden for anyone who does not have Admin Data Manager or User Search roles You should verify with Lytics Support that the field hiding in the segment scan is also enabled for your account to ensure these fields are hidden there What does a user of each role have access to A user s role determines which parts of the Lytics app they can access Here is a breakdown of what is shown in the navigation for each role Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search Dashboard Dashboard x x x x x x x x x x x Goals Goals x x Experiences Experiences x x x Audiences Audiences x x x x x x x x Discovery x x User Search x x x User Profiles x x x GDPR Profile Delete x x Content Overview x x x x Topics x x x x Collections x x x x Data Jobs Auths x x x x x Data Streams x x User Fields x x Queries x x Schema Audit x x Personalize x x x x Look a like Models x For access to look a like models you will need to be an account admin or have a combination of Discovery Insight a role that gives access to Jobs Auths What tasks can a user of each role perform Roles define a set of permissions the user has which also dictates what actions they can take in the app and through the APIs Here is a breakdown of the permissions for each role by feature Personally Identifiable Information PII To shield PI from users who should not have access you will need to use the private fields account setting to mark the profile fields you want to hide from anyone who does not have Admin Data Manager or User Search roles Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x Audiences without PII Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x x x x x Create x x x x x x Edit x x x x x x Duplicate x x x x x x Delete x x x x x Content Topics Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search Blocklist x x Content Collections Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x x Create x x x Edit x x x Duplicate x x x Delete x x Authorizations for imports exports Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x x x Create x x x x x Edit x x x x x Delete x x x x x Jobs imports exports The former Integrations tab is now comprised of the Jobs and Authorizations sections which allow you to manage your import and exports Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x x x Create x x x x x Pause x x x x x Update x x x x x Delete x x x x x Accounts Users Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search Invite User x Manage User Roles x Create Account x Edit Account x View Account Usage x Personalize Campaigns Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search View x x x x Create x x x Edit x x x Duplicate x x x Delete x x Additional API Only Features All roles have API read access to topic rollups segment collections and SegmentML Marked below are the roles with full CRUD access to these features Admin Audience Manager Campaign Manager Content Manager Data Manager Discovery Insights Experience Manager Goal Manager Marketer Observer User Search Content Topic Rollups x x x x Content Classification x x x x Queries API x x Segment Collections x x x x x x x x Lookalike Models x x Subscription x x x Inviting Users Click the Create New button from the user list to invite a new user to the account Inviting a new user will prompt for an email address and roles to select the appropriate level of access the user will have within your Lytics account Upon completing this form the new user will get an email with a link that will take them to the Lytics account login screen Removing Users From the user list select the user you wish to delete You can remove this user from Lytics by clicking the Delete User button from their profile page Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/single-sign-on-overview",
    "title": "Overview",
    "chunk_text": "Lytics supports Single Sign On SSO by using Google Cloud Identity Platform as a service provider using SAML protocol Lytics integrates with Identity Providers IdPs in such a way that the Service Provider SP initiates SSO IDP initiated SSO has been deprecated and is no longer supported by Lytics Overview Single Sign On SSO allows employees to safely and securely access a host of Internet tools with a single username and password There are four primary reasons why your business should consider leveraging Single Sign On SSO helps the end user Implementing SSO means employees are required to commit just one password to memory With one password to remember a user can easily create and remember a unique and secure password without writing it down SSO reduces password fatigue and frustration and makes the employee more efficient SSO benefits the company Fewer passwords to remember equals fewer calls to the helpdesk resulting in more time spent on other tasks for both the end user and IT Fewer calls to the helpdesk which is oftentimes outsourced means a reduction in cost to the company as well SSO improves security When employees are required to remember numerous passwords it is easy to fall into lazy habits such as using simple easy to remember passwords which are more susceptible to hacking Or writing passwords down on Post it notes where they can easily be stolen or fall into the wrong hands SSO helps with compliance SSO helps companies increase control over the user s access to certain information as well as easily enforce password change policies This makes it simpler for organizations to comply with HIPAA SOX and other regulatory groups SP Initiated SSO Lytics supports enterprise Single Sign On SSO by using Google Cloud Identity Platform as a service provider using SAML protocol Lytics integrates with Identity Providers IdPs in such a way that the Service Provider SP initiates SSO Once implemented users will log in to Lytics via a special SSO form that only requires an email address Lytics will recognize the email address and open a pop up to the user s IdP to complete the login Once the IdP verifies credentials the pop up will close redirecting the user to a logged in instance of their Lytics dashboard Behind the scenes a customer s IdP will communicate with the Lytics APIs which use Google Cloud Identity Platform to validate the login This document describes the process for integrating with a new IdP that uses SAML Service Provider Configuration To configure SAML for the Lytics service provider some information is required about your IdP If you have a metadata file that contains SAML provider information this may be appropriate but please ensure that the following information is provided to Lytics Support Entity ID Sign In URL X509 Signing Certificate Further configuration details such as mappings may need to be provided but the Lytics implementation only requires the email address field to be mapped Once this information has been received Lytics can configure the SAML connection in the Google Cloud Identity Platform IdP Configuration After Lytics configures the SAML connection on the service provider Lytics Support will provide the following key fields of information to the customer to complete the configuration in their IdP Assertion Consumer Service ACS URL aka postback or callback URL Entity ID of the Service Provider Sign in URL With this information your IdP connection can be configured to complete the SSO integration At this time Lytics does not support providing this information in an XML metadata file Additional information about the Service Provider may be provided on request Testing SSO Once all the information has been configured in both the IdP and the Lytics service provider you can test and verify that the SSO implementation works as expected If you are using SSO as your only sign in method please disable any password restriction or expiration settings that may have been enabled in the UI During the testing process Lytics can be configured to allow both SSO login and regular username and password or Google OAuth login through the app This allows users to test SSO without disrupting the day to day usage of the app If requested once the SSO implementation has been tested and verified Lytics can disable the use of other login types for an account Troubleshooting SSO If it s known that SSO will be added to an account the user email addresses added to the account should match the email address present within the IdP If the email address doesn t match the login will fail as Lytics will not be able to verify that there is a user with that email address For instance if the email listed in the IdP is abc 123 and within Lytics it is def 456 then there will be potentially multiple error points for a user trying to log in via the SSO form on Lytics If the user enters abc 123 into the IdP pop up it will immediately fail as we use the Lytics account user to determine which IdP to redirect to You would see an error message like the following However should the user enter def 456 their Lytics account email they will be redirected to their IdP but the verification of the login will fail once information is sent back to Lytics To remedy this situation you would need to create a new user within Lytics with the email address abc 123 for the SSO login to be successful You can check add and remove users for an account using the Managing Users guide as a reference Lytics Support can assist in the troubleshooting process When testing for the first time Lytics can enable logging to help troubleshoot any issues you encounter With this the team can help debug if you provide information on the login attempt such as the login time user and account If you re encountering a verification error but you ve checked that your emails from the IdP and Lytics match this may be an issue with the SAML configuration either on the IdP or SP side Contact Lytics Support with details of the issue and our team can coordinate a fix Account Structure with SSO It should also be noted that primary accounts master accounts are decided as the first account that a user was added to Due to this users from a single group organization will often have different primary accounts This is important for SSO as it will also be the account the user is logged into at the start of their session If SSO is enabled as the only means of login on one account and a user attempts to log in using Google OAuth or their username and password the login session will fail The following options are possible solutions Add that user to your IdP Add other logging methods Google OAuth username password Remove that user from all accounts and then add them back with the first account being the one you want to be their primary account Assigning Roles using SSO Configuring Role Assertions for SSO in Lytics The Lytics team can configure Single Sign On SSO to assign roles via SSO This configuration must be applied to the primary master accounts and any additional accounts to which users need access For more information refer to the account structure with SSO Important Note Users cannot be assigned to additional accounts via SSO alone they must be manually invited to each Lytics account to which they need access To set up role assignments via SSO customers must configure their Identity Provider IDP to include a group assertion for each account the user can access The role of each user must be specified in the format lytics_ AID _ Role Example of a SAML assertion for a user whose default account is 123 and also has access to account 234 XML samlp Response xmlns ds http www w3 org 2000 09 xmldsig xmlns saml urn oasis names tc SAML 2 0 assertion xmlns samlp urn oasis names tc SAML 2 0 protocol xmlns xs http www w3 org 2001 XMLSchema xmlns xsi http www w3 org 2001 XMLSchema instance Destination https api lytics io api user verifyauth Version 2 0 saml Assertion xmlns saml urn oasis names tc SAML 2 0 assertion ID id1 IssueInstant 2024 08 29T16 02 42Z Issuer https your idp example com Version 2 0 ds Signature xmlns ds http www w3 org 2000 09 xmldsig 123456 ds Signature saml AttributeStatement saml Attribute Name Email saml AttributeValue xsi type xs string email protected saml AttributeValue saml Attribute saml Attribute Name groups saml AttributeValue xmlns xsi http www w3 org 2001 XMLSchema instance xsi type xs string lytics_123_content_manager saml AttributeValue saml AttributeValue xmlns xsi http www w3 org 2001 XMLSchema instance xsi type xs string lytics_123_admin saml AttributeValue saml AttributeValue xmlns xsi http www w3 org 2001 XMLSchema instance xsi type xs string lytics_234_admin saml AttributeValue saml Attribute saml AttributeStatement saml Assertion samlp Response Note This example is simplified to focus only on the group s assertion a real world example would be more detailed Assignable roles The following roles can be assigned Assignable Role Name Description admin Account Admin Grants read write access to all features and management functions content_manager Content Manager Grants read write access to content classification collections and topics segment_manager Audience Manager Grants read write access to audiences marketer Marketer Grants read write access to audiences and campaigns but cannot publish campaigns or export audiences user_search User Search It grants the ability to search for users view their profiles report_viewer Discovery Insights Grants access to explore Discovery insights report_manager Report Manager Can view create and delete audience insight reports observer Observer Grants read access to audiences and campaigns data_manager Data Manager Grants read write access to schemas queries users content and integrations including PII user field access campaign_manager Campaign Manager Grants read write access to campaigns and audiences without PII including exporting audiences without PII and publishing campaigns orchestrate Goal Manager Grants read write access to Goals and Experiences features experience_manager Experience Manager Grants read write access to Experiences Implementing SSO with Okta This document will walk you through how to implement Single Sign On to the Lytics application with Okta as an identity provider Lytics has applied to become an official Okta partner application Still while the partnership is being established you can follow these instructions to set up the custom application in Okta which covers the IDP configuration portion of the implementation From your Okta Administration panel navigate to Applications and then Add Application and Create New App Under Platform select Web and for Sign on Method choose SAML 2 0 Under General Settings you can enter the following values App name Lytics App Logo You can save and upload the following image of the Lytics Logo Under SAML Settings enter the following values Single Sign on URL https api lytics io api user sso Make sure Use this for Recipient URL and Destination URL is not selected Also select Allow this app to request other SSO URLs to enable more URLs to be added Requestable SSO URLs Add the following two URLs https api lytics io api user verifyauth index 0 https api lytics io api user sso index 1 Recipient URL https api lytics io api user verifyauth Destination URL https api lytics io api user verifyauth Audience URI SP Entity ID app lytics com Name ID format EmailAddress NOTE The https api lytics io api user sso URL should only be used for Okta Other SSO providers use the default URL https api lytics io api user verifyauth Click through the next step and select Finish You can add users to view this application in their portal using the Assignments tab Navigate to the Sign On tab And under settings click on View Setup Instructions You will need to gather the information on this page and send it to Lytics for configuration of the Service Provider Identity Provider Single Sign On URL Identity Provider Issuer X 509 Certificate Once Lytics has completed the service provider implementation you may begin to test the SSO implementation through your Okta portal Implementing SSO with OneLogin This document will walk you through how to implement Single Sign On to the Lytics application with OneLogin as an identity provider You can follow these instructions to set up the custom application in OneLogin which covers the IDP configuration portion of the implementation From the Administration menu select Applications and then click Add App Search for SAML Test Connector Advanced and select that app type Under Configuration Portal enter the following Display Name Lytics Make sure Visible in Portal is selected For the rectangular icon you can save and upload the following image For the square icon you can save and upload the following image Click Save to continue to the configuration process Then click on the Configuration tab to set up the SAML details Enter the following into the Application details Audience EntityID app lytics com Recipient https api lytics io api user verifyauth ACS Consumer URL Validator https api lytics io api user verifyauth ACS Consumer URL https api lytics io api user verifyauth Login URL https app lytics com login sso SAML initiator Service Provider SAML nameID format Email Click on the Save to save your configuration changes You may configure any additional access details such as users accessing this app in their portal for testing the integration under the User tab Click on the SSO tab and you will need to gather the information on this page and send it to Lytics for configuration of the Service Provider X 509 Certificate click View Details to see the full cert Issuer URL SLO Endpoint HTTP Once Lytics has completed the service provider implementation you may begin to test the SSO implementation through your OneLogin portal Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/single-sign-on-overview#content",
    "title": "Overview",
    "chunk_text": "Lytics supports Single Sign On SSO by using Google Cloud Identity Platform as a service provider using SAML protocol Lytics integrates with Identity Providers IdPs in such a way that the Service Provider SP initiates SSO IDP initiated SSO has been deprecated and is no longer supported by Lytics Overview Single Sign On SSO allows employees to safely and securely access a host of Internet tools with a single username and password There are four primary reasons why your business should consider leveraging Single Sign On SSO helps the end user Implementing SSO means employees are required to commit just one password to memory With one password to remember a user can easily create and remember a unique and secure password without writing it down SSO reduces password fatigue and frustration and makes the employee more efficient SSO benefits the company Fewer passwords to remember equals fewer calls to the helpdesk resulting in more time spent on other tasks for both the end user and IT Fewer calls to the helpdesk which is oftentimes outsourced means a reduction in cost to the company as well SSO improves security When employees are required to remember numerous passwords it is easy to fall into lazy habits such as using simple easy to remember passwords which are more susceptible to hacking Or writing passwords down on Post it notes where they can easily be stolen or fall into the wrong hands SSO helps with compliance SSO helps companies increase control over the user s access to certain information as well as easily enforce password change policies This makes it simpler for organizations to comply with HIPAA SOX and other regulatory groups SP Initiated SSO Lytics supports enterprise Single Sign On SSO by using Google Cloud Identity Platform as a service provider using SAML protocol Lytics integrates with Identity Providers IdPs in such a way that the Service Provider SP initiates SSO Once implemented users will log in to Lytics via a special SSO form that only requires an email address Lytics will recognize the email address and open a pop up to the user s IdP to complete the login Once the IdP verifies credentials the pop up will close redirecting the user to a logged in instance of their Lytics dashboard Behind the scenes a customer s IdP will communicate with the Lytics APIs which use Google Cloud Identity Platform to validate the login This document describes the process for integrating with a new IdP that uses SAML Service Provider Configuration To configure SAML for the Lytics service provider some information is required about your IdP If you have a metadata file that contains SAML provider information this may be appropriate but please ensure that the following information is provided to Lytics Support Entity ID Sign In URL X509 Signing Certificate Further configuration details such as mappings may need to be provided but the Lytics implementation only requires the email address field to be mapped Once this information has been received Lytics can configure the SAML connection in the Google Cloud Identity Platform IdP Configuration After Lytics configures the SAML connection on the service provider Lytics Support will provide the following key fields of information to the customer to complete the configuration in their IdP Assertion Consumer Service ACS URL aka postback or callback URL Entity ID of the Service Provider Sign in URL With this information your IdP connection can be configured to complete the SSO integration At this time Lytics does not support providing this information in an XML metadata file Additional information about the Service Provider may be provided on request Testing SSO Once all the information has been configured in both the IdP and the Lytics service provider you can test and verify that the SSO implementation works as expected If you are using SSO as your only sign in method please disable any password restriction or expiration settings that may have been enabled in the UI During the testing process Lytics can be configured to allow both SSO login and regular username and password or Google OAuth login through the app This allows users to test SSO without disrupting the day to day usage of the app If requested once the SSO implementation has been tested and verified Lytics can disable the use of other login types for an account Troubleshooting SSO If it s known that SSO will be added to an account the user email addresses added to the account should match the email address present within the IdP If the email address doesn t match the login will fail as Lytics will not be able to verify that there is a user with that email address For instance if the email listed in the IdP is abc 123 and within Lytics it is def 456 then there will be potentially multiple error points for a user trying to log in via the SSO form on Lytics If the user enters abc 123 into the IdP pop up it will immediately fail as we use the Lytics account user to determine which IdP to redirect to You would see an error message like the following However should the user enter def 456 their Lytics account email they will be redirected to their IdP but the verification of the login will fail once information is sent back to Lytics To remedy this situation you would need to create a new user within Lytics with the email address abc 123 for the SSO login to be successful You can check add and remove users for an account using the Managing Users guide as a reference Lytics Support can assist in the troubleshooting process When testing for the first time Lytics can enable logging to help troubleshoot any issues you encounter With this the team can help debug if you provide information on the login attempt such as the login time user and account If you re encountering a verification error but you ve checked that your emails from the IdP and Lytics match this may be an issue with the SAML configuration either on the IdP or SP side Contact Lytics Support with details of the issue and our team can coordinate a fix Account Structure with SSO It should also be noted that primary accounts master accounts are decided as the first account that a user was added to Due to this users from a single group organization will often have different primary accounts This is important for SSO as it will also be the account the user is logged into at the start of their session If SSO is enabled as the only means of login on one account and a user attempts to log in using Google OAuth or their username and password the login session will fail The following options are possible solutions Add that user to your IdP Add other logging methods Google OAuth username password Remove that user from all accounts and then add them back with the first account being the one you want to be their primary account Assigning Roles using SSO Configuring Role Assertions for SSO in Lytics The Lytics team can configure Single Sign On SSO to assign roles via SSO This configuration must be applied to the primary master accounts and any additional accounts to which users need access For more information refer to the account structure with SSO Important Note Users cannot be assigned to additional accounts via SSO alone they must be manually invited to each Lytics account to which they need access To set up role assignments via SSO customers must configure their Identity Provider IDP to include a group assertion for each account the user can access The role of each user must be specified in the format lytics_ AID _ Role Example of a SAML assertion for a user whose default account is 123 and also has access to account 234 XML samlp Response xmlns ds http www w3 org 2000 09 xmldsig xmlns saml urn oasis names tc SAML 2 0 assertion xmlns samlp urn oasis names tc SAML 2 0 protocol xmlns xs http www w3 org 2001 XMLSchema xmlns xsi http www w3 org 2001 XMLSchema instance Destination https api lytics io api user verifyauth Version 2 0 saml Assertion xmlns saml urn oasis names tc SAML 2 0 assertion ID id1 IssueInstant 2024 08 29T16 02 42Z Issuer https your idp example com Version 2 0 ds Signature xmlns ds http www w3 org 2000 09 xmldsig 123456 ds Signature saml AttributeStatement saml Attribute Name Email saml AttributeValue xsi type xs string email protected saml AttributeValue saml Attribute saml Attribute Name groups saml AttributeValue xmlns xsi http www w3 org 2001 XMLSchema instance xsi type xs string lytics_123_content_manager saml AttributeValue saml AttributeValue xmlns xsi http www w3 org 2001 XMLSchema instance xsi type xs string lytics_123_admin saml AttributeValue saml AttributeValue xmlns xsi http www w3 org 2001 XMLSchema instance xsi type xs string lytics_234_admin saml AttributeValue saml Attribute saml AttributeStatement saml Assertion samlp Response Note This example is simplified to focus only on the group s assertion a real world example would be more detailed Assignable roles The following roles can be assigned Assignable Role Name Description admin Account Admin Grants read write access to all features and management functions content_manager Content Manager Grants read write access to content classification collections and topics segment_manager Audience Manager Grants read write access to audiences marketer Marketer Grants read write access to audiences and campaigns but cannot publish campaigns or export audiences user_search User Search It grants the ability to search for users view their profiles report_viewer Discovery Insights Grants access to explore Discovery insights report_manager Report Manager Can view create and delete audience insight reports observer Observer Grants read access to audiences and campaigns data_manager Data Manager Grants read write access to schemas queries users content and integrations including PII user field access campaign_manager Campaign Manager Grants read write access to campaigns and audiences without PII including exporting audiences without PII and publishing campaigns orchestrate Goal Manager Grants read write access to Goals and Experiences features experience_manager Experience Manager Grants read write access to Experiences Implementing SSO with Okta This document will walk you through how to implement Single Sign On to the Lytics application with Okta as an identity provider Lytics has applied to become an official Okta partner application Still while the partnership is being established you can follow these instructions to set up the custom application in Okta which covers the IDP configuration portion of the implementation From your Okta Administration panel navigate to Applications and then Add Application and Create New App Under Platform select Web and for Sign on Method choose SAML 2 0 Under General Settings you can enter the following values App name Lytics App Logo You can save and upload the following image of the Lytics Logo Under SAML Settings enter the following values Single Sign on URL https api lytics io api user sso Make sure Use this for Recipient URL and Destination URL is not selected Also select Allow this app to request other SSO URLs to enable more URLs to be added Requestable SSO URLs Add the following two URLs https api lytics io api user verifyauth index 0 https api lytics io api user sso index 1 Recipient URL https api lytics io api user verifyauth Destination URL https api lytics io api user verifyauth Audience URI SP Entity ID app lytics com Name ID format EmailAddress NOTE The https api lytics io api user sso URL should only be used for Okta Other SSO providers use the default URL https api lytics io api user verifyauth Click through the next step and select Finish You can add users to view this application in their portal using the Assignments tab Navigate to the Sign On tab And under settings click on View Setup Instructions You will need to gather the information on this page and send it to Lytics for configuration of the Service Provider Identity Provider Single Sign On URL Identity Provider Issuer X 509 Certificate Once Lytics has completed the service provider implementation you may begin to test the SSO implementation through your Okta portal Implementing SSO with OneLogin This document will walk you through how to implement Single Sign On to the Lytics application with OneLogin as an identity provider You can follow these instructions to set up the custom application in OneLogin which covers the IDP configuration portion of the implementation From the Administration menu select Applications and then click Add App Search for SAML Test Connector Advanced and select that app type Under Configuration Portal enter the following Display Name Lytics Make sure Visible in Portal is selected For the rectangular icon you can save and upload the following image For the square icon you can save and upload the following image Click Save to continue to the configuration process Then click on the Configuration tab to set up the SAML details Enter the following into the Application details Audience EntityID app lytics com Recipient https api lytics io api user verifyauth ACS Consumer URL Validator https api lytics io api user verifyauth ACS Consumer URL https api lytics io api user verifyauth Login URL https app lytics com login sso SAML initiator Service Provider SAML nameID format Email Click on the Save to save your configuration changes You may configure any additional access details such as users accessing this app in their portal for testing the integration under the User tab Click on the SSO tab and you will need to gather the information on this page and send it to Lytics for configuration of the Service Provider X 509 Certificate click View Details to see the full cert Issuer URL SLO Endpoint HTTP Once Lytics has completed the service provider implementation you may begin to test the SSO implementation through your OneLogin portal Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/account-settings",
    "title": "Configuration Options",
    "chunk_text": "Several account settings can be managed within the Vault interface To access account settings select Vault from the product switcher at the top left of the Lytics interface or Account Settings from the secondary account menu at the bottom left Configuration Options Account Details Configuration options related to your primary account Here you can adjust your account name and primary contact and access your account ID or AID JavaScript Tag Configuration options related to the core Lytics SDK such as client side integration configuration Pathfora Personalization SDK settings and caching preferences Lytics API Configuration options related to the Lytics Personalization API Here you ll be able to manage detailed access settings what data is surfaced and more Content Configuration options related to Lytics content classification services Here you ll be able to configure settings related to what domains are classified topics that should be blocked and more Security Configuration options related to account security such as password complexity session duration and two factor authentication AI Modeling Controls Configuration options related to Lytics suite of AI and modeling capabilities such as private fields Schema Controls Configuration options related to your core profile schema Accessing Vault Product Switcher Account Menu Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/account-settings#content",
    "title": "Configuration Options",
    "chunk_text": "Several account settings can be managed within the Vault interface To access account settings select Vault from the product switcher at the top left of the Lytics interface or Account Settings from the secondary account menu at the bottom left Configuration Options Account Details Configuration options related to your primary account Here you can adjust your account name and primary contact and access your account ID or AID JavaScript Tag Configuration options related to the core Lytics SDK such as client side integration configuration Pathfora Personalization SDK settings and caching preferences Lytics API Configuration options related to the Lytics Personalization API Here you ll be able to manage detailed access settings what data is surfaced and more Content Configuration options related to Lytics content classification services Here you ll be able to configure settings related to what domains are classified topics that should be blocked and more Security Configuration options related to account security such as password complexity session duration and two factor authentication AI Modeling Controls Configuration options related to Lytics suite of AI and modeling capabilities such as private fields Schema Controls Configuration options related to your core profile schema Accessing Vault Product Switcher Account Menu Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/account-details-1",
    "title": "Account Name",
    "chunk_text": "The following configuration options are available within the account settings Account Details section Account Name Label for your account which shows up in the account switcher should you have access to more than one Lytics account Domain Primary domain associated with your account Contact Email address of the primary account contact Allow Access via API To share profile data such as audience membership with integrations such as Google Analytics profiles must be accessible via our personalization API Account ID Non configurable Your unique Lytics account identifier Your primary identifier used in all API calls Account Number Non configurable Your unique Lytics account number Used primarily for quick reference to which account you are currently within Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/account-details-1#content",
    "title": "Account Name",
    "chunk_text": "The following configuration options are available within the account settings Account Details section Account Name Label for your account which shows up in the account switcher should you have access to more than one Lytics account Domain Primary domain associated with your account Contact Email address of the primary account contact Allow Access via API To share profile data such as audience membership with integrations such as Google Analytics profiles must be accessible via our personalization API Account ID Non configurable Your unique Lytics account identifier Your primary identifier used in all API calls Account Number Non configurable Your unique Lytics account number Used primarily for quick reference to which account you are currently within Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/javascript-tag-config",
    "title": "Client Side Integrations",
    "chunk_text": "The following configuration options are available within the account settings JavaScript Tag section Client Side Integrations A set of client side integrations is facilitated by the core Lytics SDK Each of those integrations is either deployed or disabled based on a series of checkboxes under the Client Side Integrations section Each of those options follows the pattern outlined below Checking the box enables the integration and will result in either audience membership or attributes being passed to a partner if that particular integration s associated tags and configurations are also in place on the page Client side integrations supported out of the box Amazon DSP Allow Lytics to pass the current visitor s _uid to Amazon DSP for improved identity resolution Amazon DSP Confirmation Events If false confirmation events will not be sent to the amazon_dsp stream upon successful sync completion Criteo Allow Lytics to pass the current visitor s _uid to Criteo and receive a Criteo GUM ID for improved identity resolution Google Ads Partner API Allow Lytics to use the Google Partner API to make Google Ads calls Google Analytics 4 GA4 Allow Lytics to pass the current visitor s _uid and audience membership to GA4 Google DV360 Allow Lytics to pass the current visitor s _uid to Google DV360 and receive a unique DV360 ID for improved identity resolution Krux Allow Lytics to pass the current visitor s _uid to Krux for improved identity resolution Lotame Allow Lytics to pass the current visitor s _uid to Lotame for improved identity resolution Taboola Allow Lytics to pass the current visitor s _uid to Taboola and receive a unique Taboola ID for improved identity resolution The Trade Desk Allow Lytics to pass the current visitor s _uid to The Trade Desk and receive a unique Trade Desk ID for improved identity resolution Yahoo Ads Allow Lytics to pass the current visitor s _uid to Yahoo and receive a unique Yahoo ID for improved identity resolution In addition to those outlined above many automatic client side integrations are included within the Lytics core SDK These integrations automatically sync enabled profile data with other tools if those tools have been configured on your site too For instance Lytics will sync audience membership for the current visitor with Meta if the Meta pixel is also present on the page To prevent these syncs each integration can be blocked by adding the proper key to the Integrations Blocklist as outlined below In this example we have added the google_analytics_dimensions slug to the blocklist to prevent sending profile data to custom dimensions in Google Universal Analytics Available client side integrations and their associated slugs Name Slug Description Adroll adroll Adds a record named adroll_segments to the user which houses audience membership AddThis add_this Adds the current audience membership to the __attag cookie Amazon DSP amazon Adds the Amazon DSP pixel to the site Facebook Ads facebook_ads Pushes Lytics audience membership as an array to the custom Lytics Audiences value for the user Google Analytics google_analytics_dimensions Pushes audience membership as a comma separated string to a predefined custom dimension It also emits a noninteraction event each time the sync occurs for a user Google DFP google_dfp Sets audience membership to a targeting param with the name LyticsSegments Google Tag Manager gtm Collects the dataLayer object when the Lytics tag loads It also passes audience membership to GTM as a push event Krux krux Adds the Krux pixel to the site Lotame lotame Adds the Lotame pixel to the site Optimizely optimizely Pushes a custom tag with the audience membership Pathfora pathfora Allows for the installation of Pathfora Lytics Personalization SDK Qubit qubit Collects the universal_variable object when the Lytics tag loads Lytics Audience Cookie segments_cookie Stores current audience membership for the user as a cookie Taboola taboola Adds the Taboola pixel to the site Tealium tealium Collects the utag_data object when the Lytics tag loads JavaScript Tag TTL 3 0 The amount of time to cache the core JavaScript SDK in seconds This should be used only during testing to ensure settings configured are reflected more often but it may result in degraded performance for high traffic production use Enable pageview event on first send 3 0 Enables the automatic pageview event _e pv in the first send event of every page load in JStag v3 Allow Pathfora Check this box to allow the Lytics JavaScript tag to automatically add the Pathfora personalization library to your site default Uncheck to disable any Pathfora powered web based personalization Allow Event Block Check this box to allow the Lytics JavaScript tag to automatically add the Pathfora personalization library to your site default Uncheck to disable any Pathfora powered web based personalization 0 Turns event block off 1 Turns event block on if there are one or more active Lytics Experiences 2 Turns event block on permanently at all times Global Stylesheet URL CSS This custom stylesheet will be loaded in support of Lytics managed Experiences URL Allowlist for Orchestration Experiences List of strings that if matched will result in Experiences being evaluated in place of legacy campaign variations Personalization Pathfora SDK Generalized Config The hashed JSON configuration is to be loaded globally for all Lytics managed experiences Custom Cookie Keys A list of cookie names that should be automatically collected by the core Lytics SDK Custom Data Layer A list of JavaScript variables that should be automatically collected by the core Lytics SDK Disable Automatic Initial Pageview 2 0 Deprecated Disable the automatic pageview event in the JStag v2 if pageview events are being sent manually Jstag2 Segment Cookie Duration 2 0 Deprecated The number of minutes the ly_segs cookie that contains an individual s current audience memberships should persist Defaults to 30 days if left blank Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/javascript-tag-config#content",
    "title": "Client Side Integrations",
    "chunk_text": "The following configuration options are available within the account settings JavaScript Tag section Client Side Integrations A set of client side integrations is facilitated by the core Lytics SDK Each of those integrations is either deployed or disabled based on a series of checkboxes under the Client Side Integrations section Each of those options follows the pattern outlined below Checking the box enables the integration and will result in either audience membership or attributes being passed to a partner if that particular integration s associated tags and configurations are also in place on the page Client side integrations supported out of the box Amazon DSP Allow Lytics to pass the current visitor s _uid to Amazon DSP for improved identity resolution Amazon DSP Confirmation Events If false confirmation events will not be sent to the amazon_dsp stream upon successful sync completion Criteo Allow Lytics to pass the current visitor s _uid to Criteo and receive a Criteo GUM ID for improved identity resolution Google Ads Partner API Allow Lytics to use the Google Partner API to make Google Ads calls Google Analytics 4 GA4 Allow Lytics to pass the current visitor s _uid and audience membership to GA4 Google DV360 Allow Lytics to pass the current visitor s _uid to Google DV360 and receive a unique DV360 ID for improved identity resolution Krux Allow Lytics to pass the current visitor s _uid to Krux for improved identity resolution Lotame Allow Lytics to pass the current visitor s _uid to Lotame for improved identity resolution Taboola Allow Lytics to pass the current visitor s _uid to Taboola and receive a unique Taboola ID for improved identity resolution The Trade Desk Allow Lytics to pass the current visitor s _uid to The Trade Desk and receive a unique Trade Desk ID for improved identity resolution Yahoo Ads Allow Lytics to pass the current visitor s _uid to Yahoo and receive a unique Yahoo ID for improved identity resolution In addition to those outlined above many automatic client side integrations are included within the Lytics core SDK These integrations automatically sync enabled profile data with other tools if those tools have been configured on your site too For instance Lytics will sync audience membership for the current visitor with Meta if the Meta pixel is also present on the page To prevent these syncs each integration can be blocked by adding the proper key to the Integrations Blocklist as outlined below In this example we have added the google_analytics_dimensions slug to the blocklist to prevent sending profile data to custom dimensions in Google Universal Analytics Available client side integrations and their associated slugs Name Slug Description Adroll adroll Adds a record named adroll_segments to the user which houses audience membership AddThis add_this Adds the current audience membership to the __attag cookie Amazon DSP amazon Adds the Amazon DSP pixel to the site Facebook Ads facebook_ads Pushes Lytics audience membership as an array to the custom Lytics Audiences value for the user Google Analytics google_analytics_dimensions Pushes audience membership as a comma separated string to a predefined custom dimension It also emits a noninteraction event each time the sync occurs for a user Google DFP google_dfp Sets audience membership to a targeting param with the name LyticsSegments Google Tag Manager gtm Collects the dataLayer object when the Lytics tag loads It also passes audience membership to GTM as a push event Krux krux Adds the Krux pixel to the site Lotame lotame Adds the Lotame pixel to the site Optimizely optimizely Pushes a custom tag with the audience membership Pathfora pathfora Allows for the installation of Pathfora Lytics Personalization SDK Qubit qubit Collects the universal_variable object when the Lytics tag loads Lytics Audience Cookie segments_cookie Stores current audience membership for the user as a cookie Taboola taboola Adds the Taboola pixel to the site Tealium tealium Collects the utag_data object when the Lytics tag loads JavaScript Tag TTL 3 0 The amount of time to cache the core JavaScript SDK in seconds This should be used only during testing to ensure settings configured are reflected more often but it may result in degraded performance for high traffic production use Enable pageview event on first send 3 0 Enables the automatic pageview event _e pv in the first send event of every page load in JStag v3 Allow Pathfora Check this box to allow the Lytics JavaScript tag to automatically add the Pathfora personalization library to your site default Uncheck to disable any Pathfora powered web based personalization Allow Event Block Check this box to allow the Lytics JavaScript tag to automatically add the Pathfora personalization library to your site default Uncheck to disable any Pathfora powered web based personalization 0 Turns event block off 1 Turns event block on if there are one or more active Lytics Experiences 2 Turns event block on permanently at all times Global Stylesheet URL CSS This custom stylesheet will be loaded in support of Lytics managed Experiences URL Allowlist for Orchestration Experiences List of strings that if matched will result in Experiences being evaluated in place of legacy campaign variations Personalization Pathfora SDK Generalized Config The hashed JSON configuration is to be loaded globally for all Lytics managed experiences Custom Cookie Keys A list of cookie names that should be automatically collected by the core Lytics SDK Custom Data Layer A list of JavaScript variables that should be automatically collected by the core Lytics SDK Disable Automatic Initial Pageview 2 0 Deprecated Disable the automatic pageview event in the JStag v2 if pageview events are being sent manually Jstag2 Segment Cookie Duration 2 0 Deprecated The number of minutes the ly_segs cookie that contains an individual s current audience memberships should persist Defaults to 30 days if left blank Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/personalization-api",
    "title": "Allow Public Personalization API?",
    "chunk_text": "The following configuration options are available within the account settings Lytics API section Allow Public Personalization API Check the box to allow the user profile of anonymous users to be exposed to users for personalization It will only include allowed fields Allow Event Collection from Bots Enable event collection for visitors who have been identified as bots Bot identification is based on a set of match attributes evaluated against the user agent header Collect entire user agent string Should the full user agent be collected as part of all web events Allowlist domains public API A list of domains to allow the Personalization API to be called from If blank all domains will be allowed Allowlist fields for public API List of fields to allow for surface via the Personalization API Entity Timeout ms Max time entity public API waits before cutting off and returning what it has Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/personalization-api#content",
    "title": "Allow Public Personalization API?",
    "chunk_text": "The following configuration options are available within the account settings Lytics API section Allow Public Personalization API Check the box to allow the user profile of anonymous users to be exposed to users for personalization It will only include allowed fields Allow Event Collection from Bots Enable event collection for visitors who have been identified as bots Bot identification is based on a set of match attributes evaluated against the user agent header Collect entire user agent string Should the full user agent be collected as part of all web events Allowlist domains public API A list of domains to allow the Personalization API to be called from If blank all domains will be allowed Allowlist fields for public API List of fields to allow for surface via the Personalization API Entity Timeout ms Max time entity public API waits before cutting off and returning what it has Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-services",
    "title": "Extract allowed topics",
    "chunk_text": "The following configuration options are available within the account settings Content section Extract allowed topics Enable extraction of allowed content topics from the body of the document Content topic blocklist A list of topics to be hidden from the overall content taxonomy For example a dinner restaurant may not care about topics related to breakfast and thus block them so as not to clutter affinities as pictured above Content topic allowlist A list of topics that must be included in the topic graph and candidates for content affinity For example building on the previous scenario the same dinner restaurant may want to ensure that topics they care about are absolutely present Content Allowed Query Parameters A list of query parameters that should be retained during URL normalization such as page id or product sku Content domains blocklist Domains that should not be classified even though there may be events collected from them Note to properly filter an exact match against the domain is required such as example com or sub example com Content blocked pages Block any URL with an exact match to an item in this list including the domain not including the protocol i e www example com 404 html not https www example com 404 html Content paths blocklist Prevent classification of any page with a substring match of the path For instance contact would prevent classification for any URL that contains contact anywher in the URL Content boosted attributes Content list of IDs classes to boost during body extraction Content created since date Only include content in the index if the created date is after the specified date Custom content properties delimiter The delimiter to use when parsing custom content topics on HTML meta tags Content custom properties List of meta tags to include as custom topics Observe robots txt in content enrichment Observe robots txt and meta directives robotstxt Observe only robots txt directives meta Observe only directives in meta tags none Do not observe any directives Content since date Only include content in the index if the enriched date is after the specified date Content domains allowlist Perform content filtering based on exact matches of domains in a URL Any entries should include relevant subdomains Content paths allowlist Perform content filtering based on partial matches of any URL component Supported Content Languages List of languages to permit during the content enrichment process If empty then only English content will be processed Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-services#content",
    "title": "Extract allowed topics",
    "chunk_text": "The following configuration options are available within the account settings Content section Extract allowed topics Enable extraction of allowed content topics from the body of the document Content topic blocklist A list of topics to be hidden from the overall content taxonomy For example a dinner restaurant may not care about topics related to breakfast and thus block them so as not to clutter affinities as pictured above Content topic allowlist A list of topics that must be included in the topic graph and candidates for content affinity For example building on the previous scenario the same dinner restaurant may want to ensure that topics they care about are absolutely present Content Allowed Query Parameters A list of query parameters that should be retained during URL normalization such as page id or product sku Content domains blocklist Domains that should not be classified even though there may be events collected from them Note to properly filter an exact match against the domain is required such as example com or sub example com Content blocked pages Block any URL with an exact match to an item in this list including the domain not including the protocol i e www example com 404 html not https www example com 404 html Content paths blocklist Prevent classification of any page with a substring match of the path For instance contact would prevent classification for any URL that contains contact anywher in the URL Content boosted attributes Content list of IDs classes to boost during body extraction Content created since date Only include content in the index if the created date is after the specified date Custom content properties delimiter The delimiter to use when parsing custom content topics on HTML meta tags Content custom properties List of meta tags to include as custom topics Observe robots txt in content enrichment Observe robots txt and meta directives robotstxt Observe only robots txt directives meta Observe only directives in meta tags none Do not observe any directives Content since date Only include content in the index if the enriched date is after the specified date Content domains allowlist Perform content filtering based on exact matches of domains in a URL Any entries should include relevant subdomains Content paths allowlist Perform content filtering based on partial matches of any URL component Supported Content Languages List of languages to permit during the content enrichment process If empty then only English content will be processed Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/security",
    "title": "Logon session days",
    "chunk_text": "The following configuration options are available within the account settings Security section Logon session days The number of days a user session should be valid before forcing a re authentication Logon session timeout minutes The number of minutes between activities that should elapse before forcing a re authentication Enforce password complexity Ensure all users leverage passwords with a high level of complexity Enforce password history Prevent the re use of a previous password for each user Enforce password bad count Lock the user s account if there are too many concurrent failed password login attempts Password max age The maximum age in days that a password can be before it must be changed A value of 0 disables the max age restriction and will allow a password to persist for the life of the account Enforce two factor auth Ensure all account users leverage two factor authentication Two factor authentication is a technique that helps to make your account more secure It does this by adding a second step to your login process Single factor authentication uses your email address and password to authenticate your Lytics session The second factor comes from the Authy app using an Authy SoftToken a secret token that changes every 20 seconds Entering a correct token provides an extra level of verification What is an Authy SoftToken An Authy SoftToken is a secret token that is broadcast to the Authy app every 20 seconds This unique token serves as a second factor by which Lytics can authenticate your session Authy is available to download for free as a desktop and mobile app Download Authy Using Two Factor Authentication The only difference between two factor authentication and single factor authentication is an extra step during login After providing your password you will then be asked for your Authy SoftToken Using Two Factor Authentication also requires every user to provide their phone number Logging in with two factor authentication for the first time will walk a user through this workflow Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/security#content",
    "title": "Logon session days",
    "chunk_text": "The following configuration options are available within the account settings Security section Logon session days The number of days a user session should be valid before forcing a re authentication Logon session timeout minutes The number of minutes between activities that should elapse before forcing a re authentication Enforce password complexity Ensure all users leverage passwords with a high level of complexity Enforce password history Prevent the re use of a previous password for each user Enforce password bad count Lock the user s account if there are too many concurrent failed password login attempts Password max age The maximum age in days that a password can be before it must be changed A value of 0 disables the max age restriction and will allow a password to persist for the life of the account Enforce two factor auth Ensure all account users leverage two factor authentication Two factor authentication is a technique that helps to make your account more secure It does this by adding a second step to your login process Single factor authentication uses your email address and password to authenticate your Lytics session The second factor comes from the Authy app using an Authy SoftToken a secret token that changes every 20 seconds Entering a correct token provides an extra level of verification What is an Authy SoftToken An Authy SoftToken is a secret token that is broadcast to the Authy app every 20 seconds This unique token serves as a second factor by which Lytics can authenticate your session Authy is available to download for free as a desktop and mobile app Download Authy Using Two Factor Authentication The only difference between two factor authentication and single factor authentication is an extra step during login After providing your password you will then be asked for your Authy SoftToken Using Two Factor Authentication also requires every user to provide their phone number Logging in with two factor authentication for the first time will walk a user through this workflow Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-science-modeling",
    "title": "EntQL Fields",
    "chunk_text": "The following configuration options are available within the account settings Data Science section EntQL Fields List of fields to evaluate via EntQL in the merger before indexing the entity Enable Decisioning Triggers When enabled any Experiences configured to leverage decisioning will be automatically triggered Streams to Allow for Scoring Add any custom streams that contain behavioral signals that should contribute to the overall set of scores Enable Decisioning Scores Each profile will be enriched with a score representing their overall need for a message needs_message and the timestamp for the next predicted event in each stream next_event The needs message is a numeric score representing the distance to or past the predicted event A higher score signals that the activity is overdue Turn On Priority Only for Decisioning Automated Experience decisions will only leverage manual priority rather than full AI capabilities when enabled Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-science-modeling#content",
    "title": "EntQL Fields",
    "chunk_text": "The following configuration options are available within the account settings Data Science section EntQL Fields List of fields to evaluate via EntQL in the merger before indexing the entity Enable Decisioning Triggers When enabled any Experiences configured to leverage decisioning will be automatically triggered Streams to Allow for Scoring Add any custom streams that contain behavioral signals that should contribute to the overall set of scores Enable Decisioning Scores Each profile will be enriched with a score representing their overall need for a message needs_message and the timestamp for the next predicted event in each stream next_event The needs message is a numeric score representing the distance to or past the predicted event A higher score signals that the activity is overdue Turn On Priority Only for Decisioning Automated Experience decisions will only leverage manual priority rather than full AI capabilities when enabled Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/profile-schema",
    "title": "Private fields",
    "chunk_text": "The following configuration options are available within the account settings Schema section Private fields All fields containing PII Private data should not be exposed to users unless their assigned role s allow viewing such information Promoted Fields List of fields outside the defaults that should be leveraged in data science modeling and reporting Hide Private Fields Hide PII Private fields from audience exports and scans initiated by users who do not have access to private fields Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/profile-schema#content",
    "title": "Private fields",
    "chunk_text": "The following configuration options are available within the account settings Schema section Private fields All fields containing PII Private data should not be exposed to users unless their assigned role s allow viewing such information Promoted Fields List of fields outside the defaults that should be leveraged in data science modeling and reporting Hide Private Fields Hide PII Private fields from audience exports and scans initiated by users who do not have access to private fields Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-policies",
    "title": "https://docs.lytics.com/docs/data-policies",
    "chunk_text": "Welcome to the Data Policies section where we will explore the important policies and controls that govern data management and analysis within Lytics Within this section we ll cover the following topics Platform Limits Privacy and Data Protection Impact of Browser Tracking Changes Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-policies#content",
    "title": "https://docs.lytics.com/docs/data-policies#content",
    "chunk_text": "Welcome to the Data Policies section where we will explore the important policies and controls that govern data management and analysis within Lytics Within this section we ll cover the following topics Platform Limits Privacy and Data Protection Impact of Browser Tracking Changes Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/platform-limits",
    "title": "Platform Limits",
    "chunk_text": "Platform Limits The following limits exist to ensure the optimum performance of the Lytics platform and your connected sites data sources and applications The tables contain default limits for all accounts unless stated otherwise If you have questions please get in touch with your Lytics Account Manager Events An event is any action or activity a user performs any update to a profile or any export out of the subscription services Resource Limit Description Max input size 4 KB Byte size of a single input record Max size in batch 16 KB Byte size of a single input record within a batch Max size total batch 1 GB Byte size of all records within a batch Max event ingress rate Quota based on pricing Events collected per hour Max output size 1 MB Byte size of a single output record also known as a trigger event Max trigger event egress rate Quota based on pricing Events triggered per hour User Profiles A User Profile is the living record of an individual that interacts with your brand Lytics user profiles provide a view of your customers across your connected channels Known profiles have at least one known identifier such as an email or CRM ID Anonymous profiles have only anonymous identifiers such as a cookie ID Resource Limit Description Max size of a user profile 1 MB Byte size of a single user profile Max size of a profile identifier 256 bytes Unique identifiers are used to merge data fragments together into a single user profile Read more about Profile Stitching Best Practices Max number of user attribute values on a profile 1 000 Values include individual items in complex field types such as maps and sets E g if a user has 100 values for the field URLs_visted only 900 values remain for the total count Max aggregate size of all user profiles Quota based on pricing Total size of all user profiles Max number of custom mapped fields Quota based on pricing Custom mapping of fields through Queries LQL Max stitched Identifiers 50 Stitched identifiers can be used to look up a user such as email or user ID Audiences Resource Limit Description Max number of audiences 500 Total audiences per account Max number of conditions custom rules per audience 1 000 This limit includes parent and nested conditions Max audience re evaluation rate Quota based on pricing Max number of profiles Lytics will reevaluate per hour for all time based audiences Max length of audience name displayed 64 characters This limit is for displaying audience names in the Lytics UI Browsers and Cookies The following limits apply to client side integrations which are implemented in browser facing code through the Lytics JavaScript tag and typically a third party tag as well Resource Limit Description Max number of audiences stored as a cookie 5 MB Browsers limit the max size of the sum of all cookies This limit only applies to Lytics JavaScript Tag version 2 as version 3 uses local storage instead of a cookie Max cookie size per domain 4 096 bytes This limit includes both Lytics generated cookie names and the values of all other domain specific cookies Maximum size of collect payload sent via URL 2 000 bytes Try to keep payload sizes small enough to fit in a URL using GIF transport If the GIF limit is exceeded the payload will be sent via iframe transport which can result in poor performance Integrations The following limits apply to server side integrations which allow Lytics to communicate directly with third party services usually in the form of a workflow Resource Limit Description Max number of active import integrations 100 Import integrations ingest data such as user profiles activity data and subscription status from third party tools into Lytics Max number of active export integrations subscriptions 200 Export integrations send user profile data from Lytics to a third party tool usually at the audience level Raw event data or metrics can also be exported for monitoring Max integrations creations per hour 10 This limit applies to all server side integrations including imports exports and any other workflow such as enrichment integrations Max lifetime of completed jobs 90 days This limit applies to all jobs in a completed status and defines how long Lytics will retain the jobs information after completion Max lifetime of paused failed jobs 90 days This limit applies to all jobs in a paused or failed status and defines how long Lytics will retain jobs in this state before considering them purgeable Content The Lytics Content Affinity Engine uses data science and Natural Language Processing to analyze content extract topics and calculate user level topic affinities Resource Limit Description Max number of URLs enriched 20 000 URLs per month Max number of topics displayed 500 This limit is for how many topics are shown on the user profile Max number of topics per user 50 Lytics retains affinities for up to 50 topics per user representing the content they are most likely to interact with Custom Modeling Lytics enables you to build custom Lookalike Models as a proprietary service that uses your first party data to evaluate audiences and conversion rates Resource Limit Description Lookalike Model count 20 This limit applies to activated Lookalike Models Max model audience size 20M users per audience This limit applies to the source or target segment used in a Lookalike Model model Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/platform-limits#content",
    "title": "Platform Limits",
    "chunk_text": "Platform Limits The following limits exist to ensure the optimum performance of the Lytics platform and your connected sites data sources and applications The tables contain default limits for all accounts unless stated otherwise If you have questions please get in touch with your Lytics Account Manager Events An event is any action or activity a user performs any update to a profile or any export out of the subscription services Resource Limit Description Max input size 4 KB Byte size of a single input record Max size in batch 16 KB Byte size of a single input record within a batch Max size total batch 1 GB Byte size of all records within a batch Max event ingress rate Quota based on pricing Events collected per hour Max output size 1 MB Byte size of a single output record also known as a trigger event Max trigger event egress rate Quota based on pricing Events triggered per hour User Profiles A User Profile is the living record of an individual that interacts with your brand Lytics user profiles provide a view of your customers across your connected channels Known profiles have at least one known identifier such as an email or CRM ID Anonymous profiles have only anonymous identifiers such as a cookie ID Resource Limit Description Max size of a user profile 1 MB Byte size of a single user profile Max size of a profile identifier 256 bytes Unique identifiers are used to merge data fragments together into a single user profile Read more about Profile Stitching Best Practices Max number of user attribute values on a profile 1 000 Values include individual items in complex field types such as maps and sets E g if a user has 100 values for the field URLs_visted only 900 values remain for the total count Max aggregate size of all user profiles Quota based on pricing Total size of all user profiles Max number of custom mapped fields Quota based on pricing Custom mapping of fields through Queries LQL Max stitched Identifiers 50 Stitched identifiers can be used to look up a user such as email or user ID Audiences Resource Limit Description Max number of audiences 500 Total audiences per account Max number of conditions custom rules per audience 1 000 This limit includes parent and nested conditions Max audience re evaluation rate Quota based on pricing Max number of profiles Lytics will reevaluate per hour for all time based audiences Max length of audience name displayed 64 characters This limit is for displaying audience names in the Lytics UI Browsers and Cookies The following limits apply to client side integrations which are implemented in browser facing code through the Lytics JavaScript tag and typically a third party tag as well Resource Limit Description Max number of audiences stored as a cookie 5 MB Browsers limit the max size of the sum of all cookies This limit only applies to Lytics JavaScript Tag version 2 as version 3 uses local storage instead of a cookie Max cookie size per domain 4 096 bytes This limit includes both Lytics generated cookie names and the values of all other domain specific cookies Maximum size of collect payload sent via URL 2 000 bytes Try to keep payload sizes small enough to fit in a URL using GIF transport If the GIF limit is exceeded the payload will be sent via iframe transport which can result in poor performance Integrations The following limits apply to server side integrations which allow Lytics to communicate directly with third party services usually in the form of a workflow Resource Limit Description Max number of active import integrations 100 Import integrations ingest data such as user profiles activity data and subscription status from third party tools into Lytics Max number of active export integrations subscriptions 200 Export integrations send user profile data from Lytics to a third party tool usually at the audience level Raw event data or metrics can also be exported for monitoring Max integrations creations per hour 10 This limit applies to all server side integrations including imports exports and any other workflow such as enrichment integrations Max lifetime of completed jobs 90 days This limit applies to all jobs in a completed status and defines how long Lytics will retain the jobs information after completion Max lifetime of paused failed jobs 90 days This limit applies to all jobs in a paused or failed status and defines how long Lytics will retain jobs in this state before considering them purgeable Content The Lytics Content Affinity Engine uses data science and Natural Language Processing to analyze content extract topics and calculate user level topic affinities Resource Limit Description Max number of URLs enriched 20 000 URLs per month Max number of topics displayed 500 This limit is for how many topics are shown on the user profile Max number of topics per user 50 Lytics retains affinities for up to 50 topics per user representing the content they are most likely to interact with Custom Modeling Lytics enables you to build custom Lookalike Models as a proprietary service that uses your first party data to evaluate audiences and conversion rates Resource Limit Description Lookalike Model count 20 This limit applies to activated Lookalike Models Max model audience size 20M users per audience This limit applies to the source or target segment used in a Lookalike Model model Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/privacy-and-data-protection",
    "title": "Privacy and Data Protection",
    "chunk_text": "Privacy and Data Protection As a service provider and data processor Lytics assists its customers in enhancing security and meeting privacy and data protection obligations including the European Union s General Data Protection Regulation GDPR and California Consumer Privacy Act of 2018 CCPA Listed below are the compliance enabling functionalities Lytics provides As used below personally identifiable information PII has the same meaning in the CCPA and is meant to include personal data as defined in the GDPR Please consult your company s legal counsel or privacy professional about what privacy and data protection requirements your company must comply with Lytics recognizes that its customers are the data controllers of the PII which Lytics processes on their behalf Each Lytics customer maintains control over which PII sources and destinations to use with Lytics and the types and content of PII shared between its sources and destinations Lytics does not sell PII or supplement its customers respective PII with third party data except via customer directed integrations Access Control Restrict access to personal information by role Role Based Access Controls RBAC Account Admins can easily add and remove account users Lytics has various defined user roles with respective permissions Single Sign On SSO Add SSO to your user login process to enhance security Multi factor authentication MFA Add MFA to your user login process to enhance security Restrict access to PII You can indicate any user fields that contain PII via the private fields account setting These fields will be hidden for anyone who does not have Admin Data Manager or User Search roles You should verify with Lytics Support that the field hiding in the segment scan is also enabled for your account to ensure these fields are also hidden there Data Mapping Map personal information processed by Lytics including sources and destinations Audit your data schema Use the Schema Audit feature to see what user fields are being populated the data contained the source s and if that data is being used in audience definitions Determine third party data sources You can see the third party data sources from which you send data to Lytics using the Lytics UI by navigating to Data Data Streams The default stream will contain your web data unless otherwise configured You will see your other integrations in the list of stream names using the drop down menu at the top right Each stream page will show you the last time Lytics received data Determine third party data destinations You can view the activity history for a data destination using the Lytics UI by navigating to Data Integrations Click on the tile for the integration in question If you re already running the integration you will automatically be taken to the overview page that shows a list of running imports and exports and the history of events for those works Notice and Consent Manage user consent and preference data Obtaining Customer Consent Lytics customers are responsible for obtaining consent for collecting and transferring PII to Lytics for processing You can use the Lytics JavaScript Tag to collect PII about customers online behavior One consent mechanism is to implement a custom tag and trigger in your Google Tag Manager account and assign that trigger to the Lytics JS tag See how to manage consent with Google Tag Manager For sites not using Google Tag Manager customer consent on the web can be managed in several ways Consent triggers can be listened to by adding a snippet of custom JavaScript to your site Another alternative is to use a cookie consent solution many of which exist Github has documented a free solution including demos The Lytics JS Tag can be configured to consume triggers from any of these solutions to manage consent for your customers Recording Proof of Consent Schema fields may be established for the purpose of storing customer consent Privacy Policy Notice When you use a Lytics modal to collect user information you should include a link to your organization s privacy policy regarding the treatment of the PII collected A link can be added to any modal created using the Experience Editor Age Gating If you have collected accurate age data you can build audiences that target or exclude certain ages Responding to Consumer Requests Respond to the data subject consumer requests in compliance with regional and state privacy and data protection requirements Personal Data Access Using the find a user feature enter the identifying details provided by the consumer to locate their profile The profile created date refers to the earliest date Lytics collected any data on this user Personal Data Correction If user profile data requires correction you must send the corrected data to Lytics which will be remapped to convert the resulting user profile information Determining Categories of Personal Data Collected You can use the Lytics UI to obtain information about the categories and specific pieces of PII collected on a consumer in the past 12 months Again using the find a user feature you can view the fields of populated data and determine the appropriate consumer PII categories to disclose to a requesting data subject consumer Personal Data Portability We support the export of profile information via the Lytics UI or APIs An individual s profile data from Lytics will be downloaded as a JavaScript Object Notation JSON file JSON is a common machine readable file format Personal Data Deactivation Suppression You can establish audiences to enforce consumer suppression and do not market choices and prioritize those choices when establishing marketing journeys for your consumers These audiences can be exported from Lytics to your downstream tools or data destinations Personal Data Deletion We provide a method for deleting users via the Lytics UI Our API may also be used for this purpose This will send a deletion request to the Lytics platform which will process the request for the customer identifier provided SOC 2 Audits An independent auditor has examined Lytics platform controls and confirmed they are in accordance with the Service Organization Controls SOC 2 Type II Trust Services Principles for Security Availability and Confidentiality You can learn more about our SOC 2 Type II examination in this blog post Lytics will continue to engage independent auditors to conduct SOC 2 Type II audits regularly and make our audit report available to our customers and prospects under an NDA In addition we retain independent security firms to conduct regular penetration tests and vulnerability scans on our systems and code respectively Our underlying cloud services provider Google also submits to regular multiple independent audits including SOC 2 Type II audits Safeguards and Transfers Lytics Data Protection Safeguards Lytics and its data hosting partner Google have implemented numerous safeguards to protect the PII that Lytics processes on its customers behalf External auditors audit these safeguards on an annual basis For more information regarding these safeguards please ask your Lytics account manager Transfers of Personal Data from EU Lytics participates in the EU US and Swiss US Privacy Shield Frameworks regarding collecting using and retaining personal data from European Union member countries and Switzerland We have certified with the U S Department of Commerce that we adhere to the Privacy Shield Principles Please let your account manager know if your organization requires Lytics to enter into the EU Standard Contractual Clauses regarding data transfer from the EU to the U S Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/privacy-and-data-protection#content",
    "title": "Privacy and Data Protection",
    "chunk_text": "Privacy and Data Protection As a service provider and data processor Lytics assists its customers in enhancing security and meeting privacy and data protection obligations including the European Union s General Data Protection Regulation GDPR and California Consumer Privacy Act of 2018 CCPA Listed below are the compliance enabling functionalities Lytics provides As used below personally identifiable information PII has the same meaning in the CCPA and is meant to include personal data as defined in the GDPR Please consult your company s legal counsel or privacy professional about what privacy and data protection requirements your company must comply with Lytics recognizes that its customers are the data controllers of the PII which Lytics processes on their behalf Each Lytics customer maintains control over which PII sources and destinations to use with Lytics and the types and content of PII shared between its sources and destinations Lytics does not sell PII or supplement its customers respective PII with third party data except via customer directed integrations Access Control Restrict access to personal information by role Role Based Access Controls RBAC Account Admins can easily add and remove account users Lytics has various defined user roles with respective permissions Single Sign On SSO Add SSO to your user login process to enhance security Multi factor authentication MFA Add MFA to your user login process to enhance security Restrict access to PII You can indicate any user fields that contain PII via the private fields account setting These fields will be hidden for anyone who does not have Admin Data Manager or User Search roles You should verify with Lytics Support that the field hiding in the segment scan is also enabled for your account to ensure these fields are also hidden there Data Mapping Map personal information processed by Lytics including sources and destinations Audit your data schema Use the Schema Audit feature to see what user fields are being populated the data contained the source s and if that data is being used in audience definitions Determine third party data sources You can see the third party data sources from which you send data to Lytics using the Lytics UI by navigating to Data Data Streams The default stream will contain your web data unless otherwise configured You will see your other integrations in the list of stream names using the drop down menu at the top right Each stream page will show you the last time Lytics received data Determine third party data destinations You can view the activity history for a data destination using the Lytics UI by navigating to Data Integrations Click on the tile for the integration in question If you re already running the integration you will automatically be taken to the overview page that shows a list of running imports and exports and the history of events for those works Notice and Consent Manage user consent and preference data Obtaining Customer Consent Lytics customers are responsible for obtaining consent for collecting and transferring PII to Lytics for processing You can use the Lytics JavaScript Tag to collect PII about customers online behavior One consent mechanism is to implement a custom tag and trigger in your Google Tag Manager account and assign that trigger to the Lytics JS tag See how to manage consent with Google Tag Manager For sites not using Google Tag Manager customer consent on the web can be managed in several ways Consent triggers can be listened to by adding a snippet of custom JavaScript to your site Another alternative is to use a cookie consent solution many of which exist Github has documented a free solution including demos The Lytics JS Tag can be configured to consume triggers from any of these solutions to manage consent for your customers Recording Proof of Consent Schema fields may be established for the purpose of storing customer consent Privacy Policy Notice When you use a Lytics modal to collect user information you should include a link to your organization s privacy policy regarding the treatment of the PII collected A link can be added to any modal created using the Experience Editor Age Gating If you have collected accurate age data you can build audiences that target or exclude certain ages Responding to Consumer Requests Respond to the data subject consumer requests in compliance with regional and state privacy and data protection requirements Personal Data Access Using the find a user feature enter the identifying details provided by the consumer to locate their profile The profile created date refers to the earliest date Lytics collected any data on this user Personal Data Correction If user profile data requires correction you must send the corrected data to Lytics which will be remapped to convert the resulting user profile information Determining Categories of Personal Data Collected You can use the Lytics UI to obtain information about the categories and specific pieces of PII collected on a consumer in the past 12 months Again using the find a user feature you can view the fields of populated data and determine the appropriate consumer PII categories to disclose to a requesting data subject consumer Personal Data Portability We support the export of profile information via the Lytics UI or APIs An individual s profile data from Lytics will be downloaded as a JavaScript Object Notation JSON file JSON is a common machine readable file format Personal Data Deactivation Suppression You can establish audiences to enforce consumer suppression and do not market choices and prioritize those choices when establishing marketing journeys for your consumers These audiences can be exported from Lytics to your downstream tools or data destinations Personal Data Deletion We provide a method for deleting users via the Lytics UI Our API may also be used for this purpose This will send a deletion request to the Lytics platform which will process the request for the customer identifier provided SOC 2 Audits An independent auditor has examined Lytics platform controls and confirmed they are in accordance with the Service Organization Controls SOC 2 Type II Trust Services Principles for Security Availability and Confidentiality You can learn more about our SOC 2 Type II examination in this blog post Lytics will continue to engage independent auditors to conduct SOC 2 Type II audits regularly and make our audit report available to our customers and prospects under an NDA In addition we retain independent security firms to conduct regular penetration tests and vulnerability scans on our systems and code respectively Our underlying cloud services provider Google also submits to regular multiple independent audits including SOC 2 Type II audits Safeguards and Transfers Lytics Data Protection Safeguards Lytics and its data hosting partner Google have implemented numerous safeguards to protect the PII that Lytics processes on its customers behalf External auditors audit these safeguards on an annual basis For more information regarding these safeguards please ask your Lytics account manager Transfers of Personal Data from EU Lytics participates in the EU US and Swiss US Privacy Shield Frameworks regarding collecting using and retaining personal data from European Union member countries and Switzerland We have certified with the U S Department of Commerce that we adhere to the Privacy Shield Principles Please let your account manager know if your organization requires Lytics to enter into the EU Standard Contractual Clauses regarding data transfer from the EU to the U S Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/impact-of-browser-tracking-changes",
    "title": "Impact of Browser Tracking Changes",
    "chunk_text": "Impact of Browser Tracking Changes Announcements about browsers changing their cookie tracking policies have created tremendous concern and confusion within marketing and advertising industries and rightfully so These changes represent dramatic shifts in how users and their activity are tracked across the web Browsers are removing third party cookies and altering the default behavior of first party cookies which makes first party data mission critical for marketers more than ever before The following explains how current and upcoming browser changes will impact your web tracking involving Lytics Overall impact The blocking of third party cookies whether by browser default or user choice will significantly impact the effectiveness if not viability of ad targeting retargeting attribution and measurement efforts dependent on the use of third party cookies In addition Apple s ITP 2 2 impacts certain marketing use cases For Safari users cookies get cleared after seven days if there is no activity So if a user visits a site once and returns eight days later their cookie will be gone However if that user returns every day for eight days their cookie will remain intact This can skew analytics impact personalization efforts for anonymous users and affect conversion attribution But put it in perspective while Safari accounts for over half of mobile web traffic in the US for non mobile and worldwide browser usage Safari s market share is around 20 percent as of January 2020 More importantly these browser changes continue the trend of giving individuals more control over what brands entities they want to engage with and transparency in that regard They point to the need for brands to maximize relevant content or offerings for a site visitor in real time which can lead to registration or other means of establishing a known first party relationship These browser changes reflect the change from a model that exploits third party data outside an established relationship to transparently establishing and cultivating a relationship with the consumer for mutual benefit Impact on Lytics The good news is Lytics was designed to help companies establish first party relationships with their customers and implement intelligent identity resolution strategies Lytics enables you to collect and leverage first party data in various ways such as acquiring new customers serving ads on site with highly targeted audiences and promoting relevant content to users based on their interests Onto the technical details To understand how these browser changes will impact the Lytics JavaScript tag aka Tracking Tag you must first understand the core mechanics of how Lytics builds profiles for your anonymous visitors It all begins with Lytics unique client side identifier which is referred to as the UID or _uid When a user visits your web property for the first time the Lytics tag generates a unique value for this UID and stores it as a browser cookie This UID is then appended to any behavioral data collected from their visit Typically when a user returns after a subsequent visit this UID persists since it has been stored as a cookie The impact of cookie changes on this process will vary by browser In the case of Safari for example it means that if a user does not return within seven days that particular identifier will be deleted As such it will become imperative to double down on your identity resolution strategies and ensure that efforts are being made to associate first party anonymous cookies with other known identifiers that can persist such as user IDs upon login In addition some customers leverage the loadid parameter as part of their tag configuration Historically this has enabled a simple method for resolving identities across web properties This loadid method relies on third party cookies which are impacted heavily by these cookie changes Like the first party implications above cross domain identity resolution strategies become more important To date efforts have been made to rely less on browser cookies given their uncertain nature Version 3 of the Lytics JavaScript tag was built to be more secure and flexible allowing Lytics to respond to these types of changes more efficiently At the end of the day however restricting or removing cookies in general will affect the way that you the marketer use and monitor the web Focusing on safe secure and transparent resolution strategies is at the core of the Lytics platform and we believe will allow any marketer to overcome these changes in the future Q What cookies are issued in connection with the Lytics tag By default Lytics sets a cookie seerid that is used to identify a user This is then surfaced in a users profile as _uid Out of the box this is what our JavaScript tag uses for web based identity resolution Q Are Lytics cookies first party cookies or third party cookies When issued by the client website domain on which they run Lytics cookies are treated by browsers as first party cookies This is the case for all of our clients In some cases clients have established separate top level domains for two or more of their brands In these cases many have leveraged an optional identity resolution aid that allows Lytics to store the same identifier as a third party cookie This allows for a hands off approach to resolve identities across domains but in no way impacts the nature of our first party cookies described above Stale cookie removal feature Lytics has enabled a cookie culling feature that prevents stale old cookies from being used as identifiers to stitch the user profile fragments Given the browser cookie limits mentioned above this ensures only valid identifiers will be used to build your Lytics user profiles which helps keep them clean and consolidated For example if a Safari user visits your site once and doesn t return within two months Lytics can remove this cookie from their first visit as it has become stale There is no reason to keep this cookie as an identifier because it can t be used for personalization Lytics recommends opting for a maximum of 60 days to keep cookies but this setting can be customized according to your needs Don t hesitate to contact your Lytics Account Manager if you are interested in enabling this cookie culling feature Once Lytics removes cookies after your specified time frame not only the stale cookies are removed but any other profile fragments attached to those cookies will be omitted from the stitching process As a result any associated data with the old cookies will not be included on user profiles unless that data can be matched to some other identifier e g an email or user ID However the data lost from turning on cookie culling can be found again if the feature is turned off or if the time range is shortened so that the cookie associated with the missing data is no longer skipped Cookie changes per browser The following information has been updated as of January 31 2020 Cookies are used for persistent login preference storage and tracking across websites Google Apple and other browser providers have deployed functionality that can block the tracking of users across websites This functionality is promoted as privacy enhancing by giving a user greater control to prevent website tracking The technology generally focuses on third party cookies but Apple s technology also focuses on certain first party cookies Apple Apple introduced its Intelligent Tracking Protection ITP functionality in 2017 to block the use of cookies deployed on sites not belonging to the party issuing the cookie You can track Safari ITP changes on Apple s WebKit website Generally Safari has set a 7 day expiration period on first party cookies but a shorter 1 day setting on certain cookies used with link decoration This means for users that don t revisit a site within seven days to extend their expiration the cookie will be deleted and these users will get new identifiers the next time they visit the site Firefox Like Safari Firefox blocks third party cookies by default through Enhanced Tracking Protection Google In 2019 Google announced it was changing its approach to third party cookies by not blocking them by default and recommending cookie developers use SameSite attributes Chrome gives users options to block the cookies they want to block and to delete cookies after a session fingerprinting out as well In mid January of 2020 Google announced its intent to phase out support for third party cookies in Chrome by 2022 Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/impact-of-browser-tracking-changes#content",
    "title": "Impact of Browser Tracking Changes",
    "chunk_text": "Impact of Browser Tracking Changes Announcements about browsers changing their cookie tracking policies have created tremendous concern and confusion within marketing and advertising industries and rightfully so These changes represent dramatic shifts in how users and their activity are tracked across the web Browsers are removing third party cookies and altering the default behavior of first party cookies which makes first party data mission critical for marketers more than ever before The following explains how current and upcoming browser changes will impact your web tracking involving Lytics Overall impact The blocking of third party cookies whether by browser default or user choice will significantly impact the effectiveness if not viability of ad targeting retargeting attribution and measurement efforts dependent on the use of third party cookies In addition Apple s ITP 2 2 impacts certain marketing use cases For Safari users cookies get cleared after seven days if there is no activity So if a user visits a site once and returns eight days later their cookie will be gone However if that user returns every day for eight days their cookie will remain intact This can skew analytics impact personalization efforts for anonymous users and affect conversion attribution But put it in perspective while Safari accounts for over half of mobile web traffic in the US for non mobile and worldwide browser usage Safari s market share is around 20 percent as of January 2020 More importantly these browser changes continue the trend of giving individuals more control over what brands entities they want to engage with and transparency in that regard They point to the need for brands to maximize relevant content or offerings for a site visitor in real time which can lead to registration or other means of establishing a known first party relationship These browser changes reflect the change from a model that exploits third party data outside an established relationship to transparently establishing and cultivating a relationship with the consumer for mutual benefit Impact on Lytics The good news is Lytics was designed to help companies establish first party relationships with their customers and implement intelligent identity resolution strategies Lytics enables you to collect and leverage first party data in various ways such as acquiring new customers serving ads on site with highly targeted audiences and promoting relevant content to users based on their interests Onto the technical details To understand how these browser changes will impact the Lytics JavaScript tag aka Tracking Tag you must first understand the core mechanics of how Lytics builds profiles for your anonymous visitors It all begins with Lytics unique client side identifier which is referred to as the UID or _uid When a user visits your web property for the first time the Lytics tag generates a unique value for this UID and stores it as a browser cookie This UID is then appended to any behavioral data collected from their visit Typically when a user returns after a subsequent visit this UID persists since it has been stored as a cookie The impact of cookie changes on this process will vary by browser In the case of Safari for example it means that if a user does not return within seven days that particular identifier will be deleted As such it will become imperative to double down on your identity resolution strategies and ensure that efforts are being made to associate first party anonymous cookies with other known identifiers that can persist such as user IDs upon login In addition some customers leverage the loadid parameter as part of their tag configuration Historically this has enabled a simple method for resolving identities across web properties This loadid method relies on third party cookies which are impacted heavily by these cookie changes Like the first party implications above cross domain identity resolution strategies become more important To date efforts have been made to rely less on browser cookies given their uncertain nature Version 3 of the Lytics JavaScript tag was built to be more secure and flexible allowing Lytics to respond to these types of changes more efficiently At the end of the day however restricting or removing cookies in general will affect the way that you the marketer use and monitor the web Focusing on safe secure and transparent resolution strategies is at the core of the Lytics platform and we believe will allow any marketer to overcome these changes in the future Q What cookies are issued in connection with the Lytics tag By default Lytics sets a cookie seerid that is used to identify a user This is then surfaced in a users profile as _uid Out of the box this is what our JavaScript tag uses for web based identity resolution Q Are Lytics cookies first party cookies or third party cookies When issued by the client website domain on which they run Lytics cookies are treated by browsers as first party cookies This is the case for all of our clients In some cases clients have established separate top level domains for two or more of their brands In these cases many have leveraged an optional identity resolution aid that allows Lytics to store the same identifier as a third party cookie This allows for a hands off approach to resolve identities across domains but in no way impacts the nature of our first party cookies described above Stale cookie removal feature Lytics has enabled a cookie culling feature that prevents stale old cookies from being used as identifiers to stitch the user profile fragments Given the browser cookie limits mentioned above this ensures only valid identifiers will be used to build your Lytics user profiles which helps keep them clean and consolidated For example if a Safari user visits your site once and doesn t return within two months Lytics can remove this cookie from their first visit as it has become stale There is no reason to keep this cookie as an identifier because it can t be used for personalization Lytics recommends opting for a maximum of 60 days to keep cookies but this setting can be customized according to your needs Don t hesitate to contact your Lytics Account Manager if you are interested in enabling this cookie culling feature Once Lytics removes cookies after your specified time frame not only the stale cookies are removed but any other profile fragments attached to those cookies will be omitted from the stitching process As a result any associated data with the old cookies will not be included on user profiles unless that data can be matched to some other identifier e g an email or user ID However the data lost from turning on cookie culling can be found again if the feature is turned off or if the time range is shortened so that the cookie associated with the missing data is no longer skipped Cookie changes per browser The following information has been updated as of January 31 2020 Cookies are used for persistent login preference storage and tracking across websites Google Apple and other browser providers have deployed functionality that can block the tracking of users across websites This functionality is promoted as privacy enhancing by giving a user greater control to prevent website tracking The technology generally focuses on third party cookies but Apple s technology also focuses on certain first party cookies Apple Apple introduced its Intelligent Tracking Protection ITP functionality in 2017 to block the use of cookies deployed on sites not belonging to the party issuing the cookie You can track Safari ITP changes on Apple s WebKit website Generally Safari has set a 7 day expiration period on first party cookies but a shorter 1 day setting on certain cookies used with link decoration This means for users that don t revisit a site within seven days to extend their expiration the cookie will be deleted and these users will get new identifiers the next time they visit the site Firefox Like Safari Firefox blocks third party cookies by default through Enhanced Tracking Protection Google In 2019 Google announced it was changing its approach to third party cookies by not blocking them by default and recommending cookie developers use SameSite attributes Chrome gives users options to block the cookies they want to block and to delete cookies after a session fingerprinting out as well In mid January of 2020 Google announced its intent to phase out support for third party cookies in Chrome by 2022 Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/compliance",
    "title": "Downloading a Customer Profile",
    "chunk_text": "Downloading a Customer Profile GDPR requires the right of access and data portability You can use the Lytics platform to download a JSON file of a customer s profile You can also use the Lytics API to download a customer profile Log into your Lytics account Click Audience Find a user Select the field you would like to search on from the drop down menu By default Email is selected In the Search box please enter the email address or selected search term of the customer who has requested their profile Select the desired customer from the results list Click Download profile You will receive a success message and profile json will begin to download Deleting a Customer Profile The GDPR and CCPA requirements grant the user in scope to request the removal of their personal data without undue delay This guide provides instructions on how to delete a profile from Lytics via the Lytics UI In addition you can use the Lytics API to delete a customer profile A successful deletion request of a profile using the Lytics API will not update the status of a customer in the Lytics UI until the profile has been removed from Lytics The removal is handled in background batch processes that will be fulfilled within 14 days Log into your Lytics account Click Audience Find a user Select the field you would like to search from the drop down menu By default Email is selected In the Search box enter the customer requesting removal s email address or selected search term Select the desired customer from the results list Click Delete user A confirmation message will pop up click Delete this user to confirm There will be a Request ID in this message to track or audit the success of the GDPR deletion request The customer will be marked for deletion and removed from Lytics within the GDPR required timeframe Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/compliance#content",
    "title": "Downloading a Customer Profile",
    "chunk_text": "Downloading a Customer Profile GDPR requires the right of access and data portability You can use the Lytics platform to download a JSON file of a customer s profile You can also use the Lytics API to download a customer profile Log into your Lytics account Click Audience Find a user Select the field you would like to search on from the drop down menu By default Email is selected In the Search box please enter the email address or selected search term of the customer who has requested their profile Select the desired customer from the results list Click Download profile You will receive a success message and profile json will begin to download Deleting a Customer Profile The GDPR and CCPA requirements grant the user in scope to request the removal of their personal data without undue delay This guide provides instructions on how to delete a profile from Lytics via the Lytics UI In addition you can use the Lytics API to delete a customer profile A successful deletion request of a profile using the Lytics API will not update the status of a customer in the Lytics UI until the profile has been removed from Lytics The removal is handled in background batch processes that will be fulfilled within 14 days Log into your Lytics account Click Audience Find a user Select the field you would like to search from the drop down menu By default Email is selected In the Search box enter the customer requesting removal s email address or selected search term Select the desired customer from the results list Click Delete user A confirmation message will pop up click Delete this user to confirm There will be a Request ID in this message to track or audit the success of the GDPR deletion request The customer will be marked for deletion and removed from Lytics within the GDPR required timeframe Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/keys-authorizations",
    "title": "What are Authorizations?",
    "chunk_text": "What are Authorizations Channel tool authorizations refer to the permissions granted to various integrations that allow our platform to access and use data from third party channels These integrations can include email service providers social media platforms and advertising networks Once permission has been granted Lytics surfaces Authorizations which allow you to manage and maintain the connection to your channel tools over time This document outlines how to create and manage auths to ensure the long term health of your data pipeline Creating Authorizations Authorizations are currently accessed from your account navigation menu by selecting Account Security Authorizations Within the Authorizations section of the interface you will see a list of existing Authorizations and a button to Create New clicking this button will take you to the Authorization wizard where you will Choose the provider Select the desired authorization method Add a name label description and complete the configuration options You will need authorization for most jobs when going through the job creation wizard in Lytics At the Choose Authorization step you can opt to create a new authorization which will direct you to the authorizations wizard in a new tab You will be prompted to choose the method and configure the authorization before configuring your job Authorization Methods Note that some integration providers only have one authorization method but others offer multiple methods such as API keys OAuth etc Specific methods may enable different jobs such as real time vs bulk audience exports If you are unsure which method to use you can find more information in your provider s integration documentation For example if you are looking to import event data from Google Cloud Pub Sub into Lytics there is only one method from the list of Google Cloud authorization methods that supports the Import Data Cloud Pub Sub job in Lytics Managing Authorizations The Authorization Summary provides essential details about each authorization to help ensure an integration is appropriately set up to enable data to flow in and out of Lytics At the top of the summary page you ll see the following information Provider The third party tool that this authorization connects to Method Indicates how the authorization was made such as API keys OAuth personal or business users etc Health Indicates whether the Authorization is valid and active Owner Lytics user who created the authorization Created At The date the authorization was initially created Last Updated The date the authorization was most recently edited What determines authorization health Lytics checks the status of authorizations daily to help you proactively resolve authorization issues Our API will return one of three possible statuses depending on the data available for your provider Healthy The authorization is valid and active Unhealthy The authorization is invalid and inactive Unknown The authorization status is unknown If your authorization is marked Unhealthy Lytics cannot verify that it has the requisite access and permissions Visit the Authorization page for your provider and confirm that the authorization credentials you entered have the necessary permissions in the external tool If adjusting permissions in the external tool does not apply or is not an option you may need to create a new authorization to use with your jobs in Lytics You can optionally delete the unhealthy authorization Edit or Delete Authorizations You can edit or delete authorizations directly in the Lytics UI using the buttons at the top right of each authorization summary page The edit option allows you to rename the authorization and revise the description but the configuration options cannot be changed If you need a different configuration you must create a new Authorization and you can delete the previous one You can only delete an authorization if no active jobs use it If there are associated jobs with a running sleeping or paused status you must delete those associated jobs before deleting the authorization Likewise you will need to delete any imported Experiences that are actively using an authorization before deleting that authorization Activity Metrics Once metrics are available for each authorization this chart will become populated with the number of requests made using the authorization You can adjust the date window and toggle to view the metrics hourly daily weekly or monthly depending on the available data Authorization metrics are currently only available for select providers including Facebook Iterable Salesforce SendGrid and others but metrics support is being added for all providers Associated Jobs This table provides a helpful organization of all active jobs using the current authorization Jobs can be sorted by name type status and creation date Click on a job to view more details on the job summary page Authorizations Dashboard Authorizing the connection between Lytics and other providers allows you to create jobs to import export and enrich your first party data Navigate to Account Security Authorizations to find your Authorizations Dashboard which gives an overview of all authorizations in your account and their usage All authorizations are displayed in a table and are sortable by the following fields Label The name of the authorization as defined by your input for the label field Description Optional text field to differentiate authorizations This is particularly useful when you have multiple Authorizations for a given provider Provider The third party tool that the authorization is connecting to Lytics Status Indicates whether the authorization is valid and active Created By Lytics user who created the authorization Last Modified Date the authorization was last edited Click on a specific authorization to view its summary page which will provide more details and allow you to edit or delete the authorization Updated about 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/keys-authorizations#content",
    "title": "What are Authorizations?",
    "chunk_text": "What are Authorizations Channel tool authorizations refer to the permissions granted to various integrations that allow our platform to access and use data from third party channels These integrations can include email service providers social media platforms and advertising networks Once permission has been granted Lytics surfaces Authorizations which allow you to manage and maintain the connection to your channel tools over time This document outlines how to create and manage auths to ensure the long term health of your data pipeline Creating Authorizations Authorizations are currently accessed from your account navigation menu by selecting Account Security Authorizations Within the Authorizations section of the interface you will see a list of existing Authorizations and a button to Create New clicking this button will take you to the Authorization wizard where you will Choose the provider Select the desired authorization method Add a name label description and complete the configuration options You will need authorization for most jobs when going through the job creation wizard in Lytics At the Choose Authorization step you can opt to create a new authorization which will direct you to the authorizations wizard in a new tab You will be prompted to choose the method and configure the authorization before configuring your job Authorization Methods Note that some integration providers only have one authorization method but others offer multiple methods such as API keys OAuth etc Specific methods may enable different jobs such as real time vs bulk audience exports If you are unsure which method to use you can find more information in your provider s integration documentation For example if you are looking to import event data from Google Cloud Pub Sub into Lytics there is only one method from the list of Google Cloud authorization methods that supports the Import Data Cloud Pub Sub job in Lytics Managing Authorizations The Authorization Summary provides essential details about each authorization to help ensure an integration is appropriately set up to enable data to flow in and out of Lytics At the top of the summary page you ll see the following information Provider The third party tool that this authorization connects to Method Indicates how the authorization was made such as API keys OAuth personal or business users etc Health Indicates whether the Authorization is valid and active Owner Lytics user who created the authorization Created At The date the authorization was initially created Last Updated The date the authorization was most recently edited What determines authorization health Lytics checks the status of authorizations daily to help you proactively resolve authorization issues Our API will return one of three possible statuses depending on the data available for your provider Healthy The authorization is valid and active Unhealthy The authorization is invalid and inactive Unknown The authorization status is unknown If your authorization is marked Unhealthy Lytics cannot verify that it has the requisite access and permissions Visit the Authorization page for your provider and confirm that the authorization credentials you entered have the necessary permissions in the external tool If adjusting permissions in the external tool does not apply or is not an option you may need to create a new authorization to use with your jobs in Lytics You can optionally delete the unhealthy authorization Edit or Delete Authorizations You can edit or delete authorizations directly in the Lytics UI using the buttons at the top right of each authorization summary page The edit option allows you to rename the authorization and revise the description but the configuration options cannot be changed If you need a different configuration you must create a new Authorization and you can delete the previous one You can only delete an authorization if no active jobs use it If there are associated jobs with a running sleeping or paused status you must delete those associated jobs before deleting the authorization Likewise you will need to delete any imported Experiences that are actively using an authorization before deleting that authorization Activity Metrics Once metrics are available for each authorization this chart will become populated with the number of requests made using the authorization You can adjust the date window and toggle to view the metrics hourly daily weekly or monthly depending on the available data Authorization metrics are currently only available for select providers including Facebook Iterable Salesforce SendGrid and others but metrics support is being added for all providers Associated Jobs This table provides a helpful organization of all active jobs using the current authorization Jobs can be sorted by name type status and creation date Click on a job to view more details on the job summary page Authorizations Dashboard Authorizing the connection between Lytics and other providers allows you to create jobs to import export and enrich your first party data Navigate to Account Security Authorizations to find your Authorizations Dashboard which gives an overview of all authorizations in your account and their usage All authorizations are displayed in a table and are sortable by the following fields Label The name of the authorization as defined by your input for the label field Description Optional text field to differentiate authorizations This is particularly useful when you have multiple Authorizations for a given provider Provider The third party tool that the authorization is connecting to Lytics Status Indicates whether the authorization is valid and active Created By Lytics user who created the authorization Last Modified Date the authorization was last edited Click on a specific authorization to view its summary page which will provide more details and allow you to edit or delete the authorization Updated about 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/access-tokens",
    "title": "Access Tokens",
    "chunk_text": "Access Tokens Creating and managing your access tokens gives you fine grained control over how your Lytics account and data is accessed To get started navigate to Security Access Tokens from the menu in Vault Note that just like all other account settings you must have administrator privileges to view and make changes Viewing existing Access tokens If this is your first time creating an access token you will see a message prompting you to create a new token Once you have created at least one access token this page will display your tokens their expiration dates and the user who created each token You can also click on a specific token to see the list of roles the token has been granted the lifetime of the token the created date and an option to delete the token Creating a new API Token To create your first token click the Create New button and fill out the following fields on the modal that appears Field Description Name Token name Description Though optional it s helpful to add a description so each token s purpose is clear Expiration Token expiration length Current options include 90 days 30 days seven days and No expiration which means the token is perpetually valid unless manually deleted Roles Each token can be tailored to have the precise access needed and no more Click Generate token to create your token You will be prompted with a one time dialog window that contains the access token Once you dismiss this dialog it is impossible to see it again so please copy and paste it somewhere secure Deleting an existing API token When an API token is no longer needed or you otherwise wish to remove one or more tokens click on the token from the list then click the Delete Access Token button to proceed with the deletion This operation is not reversible and you will be prompted twice before each token is deleted Anyone or anything depending on that token will break once the token is deleted Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/access-tokens#content",
    "title": "Access Tokens",
    "chunk_text": "Access Tokens Creating and managing your access tokens gives you fine grained control over how your Lytics account and data is accessed To get started navigate to Security Access Tokens from the menu in Vault Note that just like all other account settings you must have administrator privileges to view and make changes Viewing existing Access tokens If this is your first time creating an access token you will see a message prompting you to create a new token Once you have created at least one access token this page will display your tokens their expiration dates and the user who created each token You can also click on a specific token to see the list of roles the token has been granted the lifetime of the token the created date and an option to delete the token Creating a new API Token To create your first token click the Create New button and fill out the following fields on the modal that appears Field Description Name Token name Description Though optional it s helpful to add a description so each token s purpose is clear Expiration Token expiration length Current options include 90 days 30 days seven days and No expiration which means the token is perpetually valid unless manually deleted Roles Each token can be tailored to have the precise access needed and no more Click Generate token to create your token You will be prompted with a one time dialog window that contains the access token Once you dismiss this dialog it is impossible to see it again so please copy and paste it somewhere secure Deleting an existing API token When an API token is no longer needed or you otherwise wish to remove one or more tokens click on the token from the list then click the Delete Access Token button to proceed with the deletion This operation is not reversible and you will be prompted twice before each token is deleted Anyone or anything depending on that token will break once the token is deleted Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/identity-resolution",
    "title": "Introduction",
    "chunk_text": "Introduction Identity Resolution is a crucial component of customer communication Establishing and maintaining a well defined identity resolution strategy is essential but it can be overwhelming to get started Several challenges may arise such as limited and outdated customer data data silos technical difficulties in flexibility consistency compliance and maintenance Lytics offers a solution that powers brands identity resolution strategies by aggregating data from disparate sources defining a standardized customer schema unifying disparate sources surfacing individual consumer profiles enabling better understanding segmentation and activation across channel tools ensuring control visibility flexibility security privacy and compliance and maximizing match rates and accuracy across activation channels The goal is to construct complex consumer profiles and maintain accurate and compliant user profiles as your brand evolves Defining the relationship between consumer identifiers is a necessary first step in surfacing unified user profiles that enable your brand to create the best consumer engagements while meeting evolving compliance requirements To achieve this we ve broken our approach into three components Our Approach Define Relationships Between Identifiers Profile definition is the first step in surfacing unified user profiles that enable your brand to create the best consumer engagements while meeting evolving compliance requirements To build a strong identity resolution strategy three key questions must be answered How important is accuracy How do you define and manage the strength of each identifier to ensure profiles are materialized properly How can the materialized profiles be analyzed and delivered to other tools Construct Complex Profiles Data is messy Lytics Profile Materialization provides a necessary cleansing polishing layer atop the defined resolution strategy This ensures what is surfaced is accurate and accessible and enables your team to accelerate impact Answering the following two key questions guarantee profiles represent the ideal marketable entity What attributes should be surfaced on profiles for segmentation and does the data need to be normalized at all What rules should be used to maintain profile integrity Maintain Accurate Compliant Profiles Over time profiles will bloat attributes will become stale and use cases become more complex If unmanaged a quality identity strategy will begin breaking down the moment it is implemented Lytics prevents your identity strategy from breakdown through a set of powerful tools focused on ensuring the following profile health related questions have concrete answers How can you validate the health of your ID resolution strategy over time What is the process for managing consent How long is a profile relevant if it no longer has a means of being updated What is the life expectancy of expirable IDs such as browser cookies Advanced Concepts The Lytics Identity Graph Behind each Lytics profile is an identity graph This graph represents connections between pieces of data observed across multiple sources or even within a single source To create or update profiles from a data stream the stream must contain one or more identity keys that identify distinct users with which to associate the data When data is observed for a given identity key it stores the relevant profile metadata in an object called an identity fragment When there s evidence on a data stream that two keys or fragments should be connected When evidence on a data stream shows that two keys or fragments identify the same real world entity those fragments become connected in the same identity graph Some identity graphs are significant and represent complex relationships in the data In contrast other identity graphs are small and describe a small interaction like an anonymous cookie from a single visit incognito browser Graph Mechanics As you learned from the identity resolution overview a profile comprises one or more identity fragments Many profiles start as singletons new data is observed on a data stream That event s identifier keys create any necessary identity fragments and store the event s associated data on that fragment However we re not satisfied with several singletons our objective is to stitch data sources together by linking the appropriate underlying fragments Stitching occurs when we observe two identifiers in a single event A common stitching event is a newsletter signup where the email address from the newsletter form is linked to the cookie from their web activity and creates a link between activity from the browser on the device and any activity associated with the email address which could eventually encompass purchases support tickets CRM data etc In graph terms stitching creates an edge between two nodes representing two identity fragments If we wanted to retrieve a profile associated with an email address we would retrieve all of the fragments with edges or connections to other fragments From there we d want to find all of the connections to those other fragments and so on until there are no more connections to follow Following one fragment to another is called traversal The full set of fragments that are found to have connections to the initial fragment are called neighbors In Lytics default graph limits cap the number of traversals allowed for an individual profile at 50 and cap the number of neighbors allowed at 50 Changing these values can create different sets of user profiles over the same data set and should not be adjusted lightly To change these values for your data please contact Lytics support Identity Keys As we traverse identity graphs we ll quickly find that identity fragments and their corresponding identity keys are not all created equal An identifier s strength must contribute proportionally to its influence on identity resolution For example you have email addresses and cookies as identity keys Generally a user identified with an email address can have multiple cookie values from different devices browsers periods etc Imagine hosting a promotional in person event and having multiple tablets collecting participants email addresses Depending on how those email addresses are collected most likely through an online form you ll likely have one cookie associated with many email addresses Field Types Field types for Identity Keys can be either a string or a string set String sets are a common field type for cookies since one profile is expected to have many cookie values over time Email addresses are not so cut and dry Some organizations will constrain profiles to have one email address while others will allow profiles to have multiple personal work etc In our example of email collection via physical tablet if the email address is a single valued string type we won t end up with an over merged hairball Using an identity key that allows for a set of values is usually a good idea to have a sensical capacity cap on the field type A set of cookies for example might have a capacity limit of 50 values On the other hand a set of emails might have a capacity limit of 5 values Identity Key Rankings The ranking of your identity keys should reflect their reliability and their relative importance in the strategy In the event of a conflict in stitching and merging higher ranked identity keys will win Typically most Lytics users configure email identifiers to be ranked higher than cookie identifiers Imagine a scenario where email A is connected to cookies X and Y while email B is connected to cookie Z If new data is observed that connects email B with cookie Y we have a conflict meaning that a resulting stitching between the two fragments would yield a profile with two different email fragments and violates our merge rules The ranks of identity keys would dictate that for the new event the email address it contains is of a higher priority than the cookie value that it contains and would consequently update the profile for Email A and not the profile for Email B Graph Compaction We mentioned that a critical tenet of bulletproof identity resolution is that profile complexity remains stable over time That is we need a way to ensure that a relatively greedy algorithm doesn t result in profiles becoming more fragile and susceptible to conflicts In Lytics that is accomplished via graph compaction a process by which data from multiple fragments is combined into a single fragment Doing so allows well established relationships in the graph to be solidified while making room for new relationships within the profile It functions more as a type of profile housekeeping to keep profile fragments tidy Compaction in identity graphs can take on a few forms Rank based Compaction Let s go back to our example with Email A and Email B The point of identity resolution within a customer data platform is to enable long and rich relationships with customers The longer that Email A and Email B represent profiles in the platform the more cookies with which they ll eventually become connected Each identity key s ranking allows an identity graph to compact by size or time Size compaction Identity key sets can be compacted after they reach a configurable size If size compaction is enabled to compact a set after 30 values then the data from the oldest 30 fragments would be combined into a single fragment and would be further compacted with new data as new values are observed Time compaction These sets would be compacted after a configurable time threshold If time compaction is enabled to compact a set after 14 days then the data from fragments older than 14 days would be compacted into a single fragment Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/identity-resolution#content",
    "title": "Introduction",
    "chunk_text": "Introduction Identity Resolution is a crucial component of customer communication Establishing and maintaining a well defined identity resolution strategy is essential but it can be overwhelming to get started Several challenges may arise such as limited and outdated customer data data silos technical difficulties in flexibility consistency compliance and maintenance Lytics offers a solution that powers brands identity resolution strategies by aggregating data from disparate sources defining a standardized customer schema unifying disparate sources surfacing individual consumer profiles enabling better understanding segmentation and activation across channel tools ensuring control visibility flexibility security privacy and compliance and maximizing match rates and accuracy across activation channels The goal is to construct complex consumer profiles and maintain accurate and compliant user profiles as your brand evolves Defining the relationship between consumer identifiers is a necessary first step in surfacing unified user profiles that enable your brand to create the best consumer engagements while meeting evolving compliance requirements To achieve this we ve broken our approach into three components Our Approach Define Relationships Between Identifiers Profile definition is the first step in surfacing unified user profiles that enable your brand to create the best consumer engagements while meeting evolving compliance requirements To build a strong identity resolution strategy three key questions must be answered How important is accuracy How do you define and manage the strength of each identifier to ensure profiles are materialized properly How can the materialized profiles be analyzed and delivered to other tools Construct Complex Profiles Data is messy Lytics Profile Materialization provides a necessary cleansing polishing layer atop the defined resolution strategy This ensures what is surfaced is accurate and accessible and enables your team to accelerate impact Answering the following two key questions guarantee profiles represent the ideal marketable entity What attributes should be surfaced on profiles for segmentation and does the data need to be normalized at all What rules should be used to maintain profile integrity Maintain Accurate Compliant Profiles Over time profiles will bloat attributes will become stale and use cases become more complex If unmanaged a quality identity strategy will begin breaking down the moment it is implemented Lytics prevents your identity strategy from breakdown through a set of powerful tools focused on ensuring the following profile health related questions have concrete answers How can you validate the health of your ID resolution strategy over time What is the process for managing consent How long is a profile relevant if it no longer has a means of being updated What is the life expectancy of expirable IDs such as browser cookies Advanced Concepts The Lytics Identity Graph Behind each Lytics profile is an identity graph This graph represents connections between pieces of data observed across multiple sources or even within a single source To create or update profiles from a data stream the stream must contain one or more identity keys that identify distinct users with which to associate the data When data is observed for a given identity key it stores the relevant profile metadata in an object called an identity fragment When there s evidence on a data stream that two keys or fragments should be connected When evidence on a data stream shows that two keys or fragments identify the same real world entity those fragments become connected in the same identity graph Some identity graphs are significant and represent complex relationships in the data In contrast other identity graphs are small and describe a small interaction like an anonymous cookie from a single visit incognito browser Graph Mechanics As you learned from the identity resolution overview a profile comprises one or more identity fragments Many profiles start as singletons new data is observed on a data stream That event s identifier keys create any necessary identity fragments and store the event s associated data on that fragment However we re not satisfied with several singletons our objective is to stitch data sources together by linking the appropriate underlying fragments Stitching occurs when we observe two identifiers in a single event A common stitching event is a newsletter signup where the email address from the newsletter form is linked to the cookie from their web activity and creates a link between activity from the browser on the device and any activity associated with the email address which could eventually encompass purchases support tickets CRM data etc In graph terms stitching creates an edge between two nodes representing two identity fragments If we wanted to retrieve a profile associated with an email address we would retrieve all of the fragments with edges or connections to other fragments From there we d want to find all of the connections to those other fragments and so on until there are no more connections to follow Following one fragment to another is called traversal The full set of fragments that are found to have connections to the initial fragment are called neighbors In Lytics default graph limits cap the number of traversals allowed for an individual profile at 50 and cap the number of neighbors allowed at 50 Changing these values can create different sets of user profiles over the same data set and should not be adjusted lightly To change these values for your data please contact Lytics support Identity Keys As we traverse identity graphs we ll quickly find that identity fragments and their corresponding identity keys are not all created equal An identifier s strength must contribute proportionally to its influence on identity resolution For example you have email addresses and cookies as identity keys Generally a user identified with an email address can have multiple cookie values from different devices browsers periods etc Imagine hosting a promotional in person event and having multiple tablets collecting participants email addresses Depending on how those email addresses are collected most likely through an online form you ll likely have one cookie associated with many email addresses Field Types Field types for Identity Keys can be either a string or a string set String sets are a common field type for cookies since one profile is expected to have many cookie values over time Email addresses are not so cut and dry Some organizations will constrain profiles to have one email address while others will allow profiles to have multiple personal work etc In our example of email collection via physical tablet if the email address is a single valued string type we won t end up with an over merged hairball Using an identity key that allows for a set of values is usually a good idea to have a sensical capacity cap on the field type A set of cookies for example might have a capacity limit of 50 values On the other hand a set of emails might have a capacity limit of 5 values Identity Key Rankings The ranking of your identity keys should reflect their reliability and their relative importance in the strategy In the event of a conflict in stitching and merging higher ranked identity keys will win Typically most Lytics users configure email identifiers to be ranked higher than cookie identifiers Imagine a scenario where email A is connected to cookies X and Y while email B is connected to cookie Z If new data is observed that connects email B with cookie Y we have a conflict meaning that a resulting stitching between the two fragments would yield a profile with two different email fragments and violates our merge rules The ranks of identity keys would dictate that for the new event the email address it contains is of a higher priority than the cookie value that it contains and would consequently update the profile for Email A and not the profile for Email B Graph Compaction We mentioned that a critical tenet of bulletproof identity resolution is that profile complexity remains stable over time That is we need a way to ensure that a relatively greedy algorithm doesn t result in profiles becoming more fragile and susceptible to conflicts In Lytics that is accomplished via graph compaction a process by which data from multiple fragments is combined into a single fragment Doing so allows well established relationships in the graph to be solidified while making room for new relationships within the profile It functions more as a type of profile housekeeping to keep profile fragments tidy Compaction in identity graphs can take on a few forms Rank based Compaction Let s go back to our example with Email A and Email B The point of identity resolution within a customer data platform is to enable long and rich relationships with customers The longer that Email A and Email B represent profiles in the platform the more cookies with which they ll eventually become connected Each identity key s ranking allows an identity graph to compact by size or time Size compaction Identity key sets can be compacted after they reach a configurable size If size compaction is enabled to compact a set after 30 values then the data from the oldest 30 fragments would be combined into a single fragment and would be further compacted with new data as new values are observed Time compaction These sets would be compacted after a configurable time threshold If time compaction is enabled to compact a set after 14 days then the data from fragments older than 14 days would be compacted into a single fragment Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/consent",
    "title": "Introduction",
    "chunk_text": "Introduction As businesses continue to collect and utilize customer data to power their marketing efforts obtaining managing and enforcing proper consent is crucial This is important for complying with various privacy laws and regulations and maintaining trust with customers This document will explore the importance of granularity in a consent strategy and how Lytics can assist in the consent management process We will cover best practices to consider and provide guidance on where to get started The following four steps will be outlined Data Collection How to collect consent adequately from disparate sources consistently Profile Materialization How to flexibly surface the state of consent to individual user profiles Segmentation How can the required consent rules be enforced when driving downstream campaigns Maintenance How to ensure that your consent strategy scales and flexes to your ongoing market conditions without fail By following these steps businesses can establish a solid and effective consent management strategy that respects customer privacy and builds trust Data Collection To maintain compliance with data privacy regulations businesses need a clear and flexible path for collecting consent data Lytics offers a range of SDKs and data collection APIs to support this effort When approaching consent data collection it is essential to consider the following The source of the data and any inherent limitations Can it be real time or does it need to be batch The granularity of the consent Is this a simple boolean on or off or is this something more granular like opting into a particular communication method Additional context related to the consent that may be important for your needs Are there specific forms that are being consented to or a unique source To address these considerations Lytics has developed a suggested schema to get you started Of course this can always be customized via Conductor to meet your specific needs Data Structure Effective consent management requires a comprehensive set of properties that can be deployed to ensure compliance and maintain customer trust These properties should cover various aspects of data collection storage and usage and provide businesses with the tools to manage consent related data effectively Schema Property Description Event Name Using a standardized event name for consent collection provides crucial context that can be utilized through if else rules for individual mappings By leveraging different event names such as consent type 1 versus consent type 2 it becomes easier to differentiate between multiple types of consent on a single profile as events stream in and is subsequently mapped This approach enables businesses to maintain a more granular and organized record of consent related data Consented A clear and concise confirmation or lack thereof reduces the possibility of accidentally mapping consent when consent has been denied or not yet collected Location An optional parameter to build context around a user s location that may become important Are they consenting to something location specific Date An optional parameter to build context around when consent was most recently given Date may be important if consent is valid for a specified length of time and may help support efforts to gather consent in the event that the consent timeframe has lapsed Documents The documents array within the default schema represents additional context that can be used to specify the source of consent For instance this field can indicate whether the consent was given via a global site wide agreement or a specific call to action during a purchase While the data manager determines the values and format of this field including this information helps ensure that critical context is not lost during execution Examples We are here to help Consent is not a one size fits all scenario Each customers data and business goals are unique Before deploying any of the following examples it is always recommended to consult with your Technical Account Manager or a Solutions Architect Lytics deploys a flexible data model and though the following is not representative of every method of collection we ve highlighted two working examples leveraging our available SDKs as a baseline Collecting Consent via the Web Lytics JavaScriptTag JavaScript jstag send event form submit consent purpose global location Portland OR documents generic submit form consented true Collecting Consent via Mobile Lytics iOS SDK Lytics shared consent name consent 1 identifiers AnyCodable userid my fake userid 1234 attributes AnyCodable firstName Kevin lastName McCalister consent AnyCodable documents terms_jan_2023 sharing_policy_jan_2023 location Chicago IL consented true When using Lytics SDKs you do not have to include date within the data passed in the consent event The timestamp of the consent event can be used to create the field and mapping for the date of consent Profile Materialization Building from the collection strategy outlined in Collecting Consent Data we must determine how to materialize the consent related data we ve just collected to user profiles for segmentation This can be achieved in a variety of ways Regardless of the approach however it is essential to consider the level of granularity of the consent Granularity When collecting consent from users obtaining granular consent for each specific use of a customer s personal data is an important consideration Granular consent means that customers are provided with a clear understanding of the exact purposes for which their personal data will be used and can choose to consent or withhold consent for each specific use case For example a business may seek granular consent from a customer to collect their email address and use it to send them promotional emails but not to share the email address with third party partners for advertising purposes This approach allows customers to make more informed decisions about how their personal data is used and provides greater control over their privacy Obtaining granular consent not only requires careful planning and clear communication with customers about the specific use cases for their personal data but also a rock solid means for enforcing an individual s consent wishes across all future touchpoints Schema Enforcement begins by ensuring consent wishes are accurately materialized on each user s profile This is done by first defining consent related attributes to be used in segmentation Field Definition When defining profile fields there are two primary considerations What type of field should be used such as a string or a map and how do you want to handle data merging when profiles are stitched Field Type Type Benefits Drawbacks Map Recommended A map is the most straightforward approach allowing you to add additional context with minimum overhead You create one field and map multiple data points to that field During segmentation maps may be slightly more challenging to navigate Because the keys that are nested under the map are not part of the top level schema you ll need to drill into the field to build segments vs searching at the top level String When building segments because all consent fields would be at the top level of the schema it may be easier to find and select the contextual data When using a string you can only store a single value This represents a heavier lift during the initial setup as you ll need to create many fields to facilitate a single consent use case Merge Operator Type String Because consent is something that may change for a consumer over time the values must represent the most recent data As such the latest merge operator is always recommended This means that as additional data is stitched to a user profile the most recent events that are mapped to a field will win Example String Type Map For a more complex or granular consent strategy the map field type can be very helpful in accurately managing consent As such the merge merge operator is always recommended when trying to keep the key value pairs up to date to the most recent consent state This means that as additional data is stitched to a user profile the most recent events that are mapped to a key value pair will win Example Map Mapping Definition Mappings are then leveraged to determine how data from any number of streams map to the defined field In the example below we take a simple approach to map the boolean value of true or false to the consent field if the consent is related to marketing consent Though this is one elementary example the same practice can be replicated to ensure a consent attribute has the status timestamp and context of any important policies or sources for segmentation Example Segmentation Businesses can better understand their customers and create more effective campaigns by breaking down audiences into smaller more targeted segments Here we will discuss best practices for constructing building block audiences related to consent that can then be leveraged in campaign audiences This progressive approach ensures consent rules are enforced while minimizing ongoing maintenance overhead Building Blocks Building Block Audience s provide the perfect means to maintain consent related rules and extend the ruleset to all campaign audiences The number and these audiences will depend on the granularity of your consent strategy Still as a basic example we recommend creating both a has consented and has not consented counterpart for each level of consent This can be done simply through the GUI for our powerful segmentation engine as shown below Campaign Segments Once you have the necessary building blocks constructed you can quickly integrate that rule set into your campaign audiences again through the GUI for our segmentation engine The example below outlines a use case where you want to target high value users who have opted in Global Job Segment Filter Consent Configure a segment to prevent profiles from being sent to downstream destinations based on consent status or another relevant filter This ensures that individuals who should be excluded will not be activated downstream API documentation can be found here Updated 7 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/consent#content",
    "title": "Introduction",
    "chunk_text": "Introduction As businesses continue to collect and utilize customer data to power their marketing efforts obtaining managing and enforcing proper consent is crucial This is important for complying with various privacy laws and regulations and maintaining trust with customers This document will explore the importance of granularity in a consent strategy and how Lytics can assist in the consent management process We will cover best practices to consider and provide guidance on where to get started The following four steps will be outlined Data Collection How to collect consent adequately from disparate sources consistently Profile Materialization How to flexibly surface the state of consent to individual user profiles Segmentation How can the required consent rules be enforced when driving downstream campaigns Maintenance How to ensure that your consent strategy scales and flexes to your ongoing market conditions without fail By following these steps businesses can establish a solid and effective consent management strategy that respects customer privacy and builds trust Data Collection To maintain compliance with data privacy regulations businesses need a clear and flexible path for collecting consent data Lytics offers a range of SDKs and data collection APIs to support this effort When approaching consent data collection it is essential to consider the following The source of the data and any inherent limitations Can it be real time or does it need to be batch The granularity of the consent Is this a simple boolean on or off or is this something more granular like opting into a particular communication method Additional context related to the consent that may be important for your needs Are there specific forms that are being consented to or a unique source To address these considerations Lytics has developed a suggested schema to get you started Of course this can always be customized via Conductor to meet your specific needs Data Structure Effective consent management requires a comprehensive set of properties that can be deployed to ensure compliance and maintain customer trust These properties should cover various aspects of data collection storage and usage and provide businesses with the tools to manage consent related data effectively Schema Property Description Event Name Using a standardized event name for consent collection provides crucial context that can be utilized through if else rules for individual mappings By leveraging different event names such as consent type 1 versus consent type 2 it becomes easier to differentiate between multiple types of consent on a single profile as events stream in and is subsequently mapped This approach enables businesses to maintain a more granular and organized record of consent related data Consented A clear and concise confirmation or lack thereof reduces the possibility of accidentally mapping consent when consent has been denied or not yet collected Location An optional parameter to build context around a user s location that may become important Are they consenting to something location specific Date An optional parameter to build context around when consent was most recently given Date may be important if consent is valid for a specified length of time and may help support efforts to gather consent in the event that the consent timeframe has lapsed Documents The documents array within the default schema represents additional context that can be used to specify the source of consent For instance this field can indicate whether the consent was given via a global site wide agreement or a specific call to action during a purchase While the data manager determines the values and format of this field including this information helps ensure that critical context is not lost during execution Examples We are here to help Consent is not a one size fits all scenario Each customers data and business goals are unique Before deploying any of the following examples it is always recommended to consult with your Technical Account Manager or a Solutions Architect Lytics deploys a flexible data model and though the following is not representative of every method of collection we ve highlighted two working examples leveraging our available SDKs as a baseline Collecting Consent via the Web Lytics JavaScriptTag JavaScript jstag send event form submit consent purpose global location Portland OR documents generic submit form consented true Collecting Consent via Mobile Lytics iOS SDK Lytics shared consent name consent 1 identifiers AnyCodable userid my fake userid 1234 attributes AnyCodable firstName Kevin lastName McCalister consent AnyCodable documents terms_jan_2023 sharing_policy_jan_2023 location Chicago IL consented true When using Lytics SDKs you do not have to include date within the data passed in the consent event The timestamp of the consent event can be used to create the field and mapping for the date of consent Profile Materialization Building from the collection strategy outlined in Collecting Consent Data we must determine how to materialize the consent related data we ve just collected to user profiles for segmentation This can be achieved in a variety of ways Regardless of the approach however it is essential to consider the level of granularity of the consent Granularity When collecting consent from users obtaining granular consent for each specific use of a customer s personal data is an important consideration Granular consent means that customers are provided with a clear understanding of the exact purposes for which their personal data will be used and can choose to consent or withhold consent for each specific use case For example a business may seek granular consent from a customer to collect their email address and use it to send them promotional emails but not to share the email address with third party partners for advertising purposes This approach allows customers to make more informed decisions about how their personal data is used and provides greater control over their privacy Obtaining granular consent not only requires careful planning and clear communication with customers about the specific use cases for their personal data but also a rock solid means for enforcing an individual s consent wishes across all future touchpoints Schema Enforcement begins by ensuring consent wishes are accurately materialized on each user s profile This is done by first defining consent related attributes to be used in segmentation Field Definition When defining profile fields there are two primary considerations What type of field should be used such as a string or a map and how do you want to handle data merging when profiles are stitched Field Type Type Benefits Drawbacks Map Recommended A map is the most straightforward approach allowing you to add additional context with minimum overhead You create one field and map multiple data points to that field During segmentation maps may be slightly more challenging to navigate Because the keys that are nested under the map are not part of the top level schema you ll need to drill into the field to build segments vs searching at the top level String When building segments because all consent fields would be at the top level of the schema it may be easier to find and select the contextual data When using a string you can only store a single value This represents a heavier lift during the initial setup as you ll need to create many fields to facilitate a single consent use case Merge Operator Type String Because consent is something that may change for a consumer over time the values must represent the most recent data As such the latest merge operator is always recommended This means that as additional data is stitched to a user profile the most recent events that are mapped to a field will win Example String Type Map For a more complex or granular consent strategy the map field type can be very helpful in accurately managing consent As such the merge merge operator is always recommended when trying to keep the key value pairs up to date to the most recent consent state This means that as additional data is stitched to a user profile the most recent events that are mapped to a key value pair will win Example Map Mapping Definition Mappings are then leveraged to determine how data from any number of streams map to the defined field In the example below we take a simple approach to map the boolean value of true or false to the consent field if the consent is related to marketing consent Though this is one elementary example the same practice can be replicated to ensure a consent attribute has the status timestamp and context of any important policies or sources for segmentation Example Segmentation Businesses can better understand their customers and create more effective campaigns by breaking down audiences into smaller more targeted segments Here we will discuss best practices for constructing building block audiences related to consent that can then be leveraged in campaign audiences This progressive approach ensures consent rules are enforced while minimizing ongoing maintenance overhead Building Blocks Building Block Audience s provide the perfect means to maintain consent related rules and extend the ruleset to all campaign audiences The number and these audiences will depend on the granularity of your consent strategy Still as a basic example we recommend creating both a has consented and has not consented counterpart for each level of consent This can be done simply through the GUI for our powerful segmentation engine as shown below Campaign Segments Once you have the necessary building blocks constructed you can quickly integrate that rule set into your campaign audiences again through the GUI for our segmentation engine The example below outlines a use case where you want to target high value users who have opted in Global Job Segment Filter Consent Configure a segment to prevent profiles from being sent to downstream destinations based on consent status or another relevant filter This ensures that individuals who should be excluded will not be activated downstream API documentation can be found here Updated 7 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/complying-with-the-digital-markets-act-dma",
    "title": "https://docs.lytics.com/docs/complying-with-the-digital-markets-act-dma",
    "chunk_text": "Starting in early 2024 Lytics has updated connections with certain providers to help you comply with the Digital Markets Act s EU user consent policies Google Ads Customer Match When setting up an export to Google Ads Customer Match there are two dropdowns where you can set the given consent for the audience being exported Ad User Data Consent and Personalization Data Consent For Ad User Data Consent there are three separate options Setting to Granted notifies Google Ads that everyone in the audience has provided consent to send user data to Google for advertising purposes For Personalization Consent there are the same three options Setting to Granted notifies Google Ads that everyone in the audience has provided consent for personalized advertising For more about these two fields and how they are interrpruted by Google Ads visit their FAQs Find the complete docs on the setting up a Google Ads Customer Match export here Google DV360 When setting up an audience export to Google DV360 you must check the User Consent Confirmed checkbox to confirm that you have collected all required consent for the exported audience If you have an ongoing audience export to Google DV360 those that haven t confirmed that user consent was granted will go into a failed state For these jobs if in fact you have confirmed consent then you can edit the job check the User Consent Confirmed checkbox and hit Complete Once saved you can select to retry the job and the export will update DV360 list with the consent confirmation fulfilling the user consent requirements Learn more about Google s User Consent policy here Find the complete docs on setting up a Google DV360 audience export here Amazon DSP Amazon DSP takes a different approach than Google in helping you comply with DMA requirements When setting up export of cookies or emails to Amazon DSP you will be asked to select all the countries where the user info was collected in the Country Codes input Amazon DSP uses the source countries of your audience to prevent DMA requirements from being applied to out of scope countries such as UK IN US JP etc Amazon will treat any audience without a country code as in scope for DMA Please note that if no country codes are selected your export is likely to report a 0 match rate If you have an ongoing audience export to Amazon DSP you can edit the job in Lytics select the country codes that apply and hit Complete Lytics will then update the audience definition in Amazon DSP Find the complete docs on setting up an Amazon DSP audience export here LinkedIn LinkedIn made changes for members in the EEA and Switzerland to comply with the new requirements imposed by the DMA This may affect targetable audience sizes in LinkedIn however in Lytics there are no changes to the workflow of exporting users to LinkedIn Learn more about how the DMA affects LinkedIn Marketing Services here To learn more about sending audiences to LinkedIn visit our docs here Updated 11 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/complying-with-the-digital-markets-act-dma#content",
    "title": "https://docs.lytics.com/docs/complying-with-the-digital-markets-act-dma#content",
    "chunk_text": "Starting in early 2024 Lytics has updated connections with certain providers to help you comply with the Digital Markets Act s EU user consent policies Google Ads Customer Match When setting up an export to Google Ads Customer Match there are two dropdowns where you can set the given consent for the audience being exported Ad User Data Consent and Personalization Data Consent For Ad User Data Consent there are three separate options Setting to Granted notifies Google Ads that everyone in the audience has provided consent to send user data to Google for advertising purposes For Personalization Consent there are the same three options Setting to Granted notifies Google Ads that everyone in the audience has provided consent for personalized advertising For more about these two fields and how they are interrpruted by Google Ads visit their FAQs Find the complete docs on the setting up a Google Ads Customer Match export here Google DV360 When setting up an audience export to Google DV360 you must check the User Consent Confirmed checkbox to confirm that you have collected all required consent for the exported audience If you have an ongoing audience export to Google DV360 those that haven t confirmed that user consent was granted will go into a failed state For these jobs if in fact you have confirmed consent then you can edit the job check the User Consent Confirmed checkbox and hit Complete Once saved you can select to retry the job and the export will update DV360 list with the consent confirmation fulfilling the user consent requirements Learn more about Google s User Consent policy here Find the complete docs on setting up a Google DV360 audience export here Amazon DSP Amazon DSP takes a different approach than Google in helping you comply with DMA requirements When setting up export of cookies or emails to Amazon DSP you will be asked to select all the countries where the user info was collected in the Country Codes input Amazon DSP uses the source countries of your audience to prevent DMA requirements from being applied to out of scope countries such as UK IN US JP etc Amazon will treat any audience without a country code as in scope for DMA Please note that if no country codes are selected your export is likely to report a 0 match rate If you have an ongoing audience export to Amazon DSP you can edit the job in Lytics select the country codes that apply and hit Complete Lytics will then update the audience definition in Amazon DSP Find the complete docs on setting up an Amazon DSP audience export here LinkedIn LinkedIn made changes for members in the EEA and Switzerland to comply with the new requirements imposed by the DMA This may affect targetable audience sizes in LinkedIn however in Lytics there are no changes to the workflow of exporting users to LinkedIn Learn more about how the DMA affects LinkedIn Marketing Services here To learn more about sending audiences to LinkedIn visit our docs here Updated 11 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/client-server-side-cookie-deep-dive",
    "title": "What is a Cookie",
    "chunk_text": "What is a Cookie An HTTP cookie web cookie browser cookie is a small piece of data that a server sends to a user s web browser The browser may store the cookie and send it back to the same server with later requests Typically an HTTP cookie is used to tell if two requests come from the same browser keeping a user logged in for example It remembers stateful information for the stateless HTTP protocol Cookie Flavors First party First party cookies are created by the host domain the domain the user is visiting These cookies are generally considered good they help provide a better user experience and keep the session open This means the browser can remember key information such as items you add to shopping carts username and language preferences Third party Third party cookies are those created by domains other than the one the user is visiting at the time and are mainly used for tracking and online advertising purposes They also allow website owners to provide certain services such as live chats Common Cookie Use Cases Session management Logins shopping carts game scores or anything else the server should remember Personalization User preferences themes and other settings Tracking Recording and analyzing user behavior How does Lytics use cookies Cookies are one of the preferred methods for maintaining a user identifier in the browser both known and anonymous This gets associated with all inbound events captured by our Javascript tag as they interact with customer websites Specifically our Javascript tag stores a string of digits and characters that are used as a unique ID commonly referred to as our _uid or in some cases seerid as a first party cookie Creating Managing Cookies Where do cookies come from Client Side In web development the client side refers to everything in a web application displayed on the client end user device This includes what the user sees such as text images and the rest of the UI along with any actions an application performs within the user s browser When someone refers to a client side cookie they are generally referring to a cookie that is created and or managed via a common client side programming language such as Javascript Server Side Like with client side server side means everything that happens on the server instead of on the client In the past nearly all business logic ran on the server side including rendering dynamic webpages interacting with databases identity authentication and push notifications When someone refers to a server side cookie they are generally referring to a cookie that is created and managed using one of the many common server side programming languages such as NodeJS PHP Python etc Cookie Ingredients Name Defines the cookie name Generally the cookie name is the primary way of retrieving a cookie and its associated value and attributes Value The stored value for the cookie This can include any US ASCII character excluding a control character whitespace double quotes comma semicolon and backslash Expires Indicates the maximum lifetime of the cookie as an HTTP date timestamp See Date for the required formatting Max Age Indicates the number of seconds until the cookie expires A zero or negative number will expire the cookie immediately Domain Defines the host to which the cookie will be sent Path Indicates the path that must exist in the requested URL for the browser to send the Cookie header Secure This indicates that the cookie is sent to the server only when a request is made with the HTTPS scheme except on localhost and therefore is more resistant to man in the middle attacks HttpOnly Forbids JavaScript from accessing the cookie for example through the Document cookie property Note that a cookie created with HttpOnly will still be sent with JavaScript initiated requests for example when calling XMLHttpRequest send or fetch This mitigates attacks against cross site scripting XSS SameSite Controls whether or not a cookie is sent with cross origin requests providing some protection against cross site request forgery attacks CSRF Who s taking away my cookies In June 2017 Apple introduced a new privacy feature called Intelligent Tracking Prevention ITP This same feature was officially released in September 2017 with Safari 12 and iOS 11 Since then the ITP has evolved and introduced several subsequent versions leading us to the current state as of July 2022 which has many impacts on marketing but most notably ITP blocks all third party cookies by default ITP 1 0 1 1 ITP can grant exceptions to third party cookies with Storage API ITP 2 0 ITP caps all first party cookies set with JavaScript to 7 days or 24 hours ITP 2 1 2 2 ITP caps first party cookies set by the server using CNAME cloaking to 7 days ITP 2 3 As a result of the privacy and security efforts in general other browsers such as Mozilla s Firefox ETP and Google Chrome have followed suit in announcing and or implementing their security and tracking protocols which continue to impact tools such as third and first party cookies that have long been a staple in providing the data necessary for marketers to personalize their communications effectively What can I do to replace my cookies With each iteration on more stringent privacy related changes comes a wave of workarounds or alternate approaches to maintaining access to behavioral data essential to marketing 1 Deploy a strong first party identification strategy There is no replacement then a strong identification strategy Creating a relationship in which a user will openly share their identity through a login or some other authenticated means will always result in the highest level of certainty on identity which leads to the best level of personalization However many use cases focus on anonymous users or users who have not built up the relationship necessary to unlock this level of authentication 2 First party client side cookies have changed but are still a viable solution Though third party cookies are effectively dead first party cookies are still viable for many use cases Not only do they offer a very simple off the shelf type of implementation for leveraging they also have a long shelf life assuming that an anonymous user interacts frequently enough to overcome the 7 day expiration window 3 First party server side cookies offer an extended expiration window Over the past 12 months there has been a surge of interest in server side cookies This method for setting cookies currently is not affected by the ITP changes that impact client side cookies most notably the automatic expiration at seven days Rather server side cookies can live for long periods leading to a higher quality identification for anonymous users The downside however is they are far more difficult to leverage than the client side They require a much more technical integration with whatever server side technology is used to power the web asset and may not be accessible in the same manner as client side cookies Getting Technical with Server Side Cookies In general regardless of the specific attribute settings used when leveraging server side cookies they currently are not impacted by the 7 day expiration window that client side cookies fall victim to However Apple has made it clear that they have additional plans to extend some of the client side cookie limitations to the server side and the most important attribute in that discussion is the HttpOnly attribute https webkit org blog 9521 intelligent tracking prevention 2 3 As a CDP and technology leader we always aim to help our customers future proof their implementations As such even though a non HttpOnly server side cookie offers an easier means to bypass current client side restrictions it is our recommendation to consider investing to leverage HttpOnly cookies set by the server side to prevent any potential impacts of the next few iterations of ITP Below we ll explore the two options and demonstrate the key differences Server Side Cookie without HttpOnly The following example in Node js demonstrates a sample snippet for setting the cookie server side Most server side languages have existing methods to make this very easy In the case of creating a cookie for Lytics to leverage you will also need to generate a unique ID which can be done in a variety of ways In the case of Node you may consider using the randomUUID method of the Crypto interface A simple Google search can lead you or your developer down the road of generating a unique ID that best fits your use case Once you have that unique ID you simply set the cookie using the pre defined Lytics name our Javascript tag is looking for Alternatively the tag can be configured to use any custom name THE FOLLOWING REPRESENTS A UNTESTED AND NON PRODUCTION LEVEL EXAMPLE OF HOW TO SET A COOKIE SERVER SIDE WITH NODE JS AND ACCESS THE DOCUMENT COOKIES FROM THE CLIENT SIDE var express require express var app express var cookieParser require cookie parser var crypto require crypto var dayjs require dayjs cookieParser middleware app use cookieParser route for setting the cookies app get setcookie function req res setting a server side cookie without httponly res cookie seerid crypto randomUUID httpOnly false expires dayjs add 30 days toDate res send html body p A server side cookie has been set p body html Route for getting all the cookies app get getcookie function req res res send html head script alert document cookie script head body p This is an example of how to get the cookies client side p body html app listen 3000 err if err throw err console log server running on port 3000 Since non HttpOnly cookies are accessible out of the box client side there is no additional lift necessary Our tag will pick up the cookie and use that ID as the identifier It is important to note that any UID changes must also be managed server side as setting the cookie client side will engage the 7 day expiration max In this example we simply raise an alert with the cookie string and do not show the actual implementation of the Lytics tag Server Side Cookie with HttpOnly Setting HttpOnly to true comes with an additional level of complexity but benefits from following the stringent and recommended guidelines of Apple ITP which in theory will go farther in the way of future proofing Much like the above example we ll set a cookie in this case using Node in the same way The only difference here is setting httpOnly to true This means that the cookie is secure but will no longer be accessible out of the box by Javascript Rather you ll have to implement an alternative method for surfacing that ID to Javascript so that it can be passed to the Lytics Javascript tag and used during collection resolution THE FOLLOWING REPRESENTS A UNTESTED AND NON PRODUCTION LEVEL EXAMPLE OF HOW TO SET A COOKIE SERVER SIDE WITH NODE JS AND ACCESS THE DOCUMENT COOKIES FROM THE CLIENT SIDE WHEN USING HTTPONLY var express require express var app express var cookieParser require cookie parser var crypto require crypto var dayjs require dayjs cookieParser middleware app use cookieParser route for setting the cookies app get setcookie function req res setting a server side cookie with httponly res cookie uuid crypto randomUUID httpOnly true expires dayjs add 30 days toDate res send html body p A server side cookie has been set using httpOnly p body html Route for getting all the cookies app get getcookie function req res res send html head script var uuid req cookies uuid alert uuid script head body p This is an example of how to get the cookies client side when cookie is httpOnly p body html app listen 3000 err if err throw err console log server running on port 3000 All code examples in this document are purely for demonstration Any customer facing implementation should follow the guidance of our customer facing technical teams and the technical experts on our customer s end These examples in production represent HIGH risk as documented Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/client-server-side-cookie-deep-dive#content",
    "title": "What is a Cookie",
    "chunk_text": "What is a Cookie An HTTP cookie web cookie browser cookie is a small piece of data that a server sends to a user s web browser The browser may store the cookie and send it back to the same server with later requests Typically an HTTP cookie is used to tell if two requests come from the same browser keeping a user logged in for example It remembers stateful information for the stateless HTTP protocol Cookie Flavors First party First party cookies are created by the host domain the domain the user is visiting These cookies are generally considered good they help provide a better user experience and keep the session open This means the browser can remember key information such as items you add to shopping carts username and language preferences Third party Third party cookies are those created by domains other than the one the user is visiting at the time and are mainly used for tracking and online advertising purposes They also allow website owners to provide certain services such as live chats Common Cookie Use Cases Session management Logins shopping carts game scores or anything else the server should remember Personalization User preferences themes and other settings Tracking Recording and analyzing user behavior How does Lytics use cookies Cookies are one of the preferred methods for maintaining a user identifier in the browser both known and anonymous This gets associated with all inbound events captured by our Javascript tag as they interact with customer websites Specifically our Javascript tag stores a string of digits and characters that are used as a unique ID commonly referred to as our _uid or in some cases seerid as a first party cookie Creating Managing Cookies Where do cookies come from Client Side In web development the client side refers to everything in a web application displayed on the client end user device This includes what the user sees such as text images and the rest of the UI along with any actions an application performs within the user s browser When someone refers to a client side cookie they are generally referring to a cookie that is created and or managed via a common client side programming language such as Javascript Server Side Like with client side server side means everything that happens on the server instead of on the client In the past nearly all business logic ran on the server side including rendering dynamic webpages interacting with databases identity authentication and push notifications When someone refers to a server side cookie they are generally referring to a cookie that is created and managed using one of the many common server side programming languages such as NodeJS PHP Python etc Cookie Ingredients Name Defines the cookie name Generally the cookie name is the primary way of retrieving a cookie and its associated value and attributes Value The stored value for the cookie This can include any US ASCII character excluding a control character whitespace double quotes comma semicolon and backslash Expires Indicates the maximum lifetime of the cookie as an HTTP date timestamp See Date for the required formatting Max Age Indicates the number of seconds until the cookie expires A zero or negative number will expire the cookie immediately Domain Defines the host to which the cookie will be sent Path Indicates the path that must exist in the requested URL for the browser to send the Cookie header Secure This indicates that the cookie is sent to the server only when a request is made with the HTTPS scheme except on localhost and therefore is more resistant to man in the middle attacks HttpOnly Forbids JavaScript from accessing the cookie for example through the Document cookie property Note that a cookie created with HttpOnly will still be sent with JavaScript initiated requests for example when calling XMLHttpRequest send or fetch This mitigates attacks against cross site scripting XSS SameSite Controls whether or not a cookie is sent with cross origin requests providing some protection against cross site request forgery attacks CSRF Who s taking away my cookies In June 2017 Apple introduced a new privacy feature called Intelligent Tracking Prevention ITP This same feature was officially released in September 2017 with Safari 12 and iOS 11 Since then the ITP has evolved and introduced several subsequent versions leading us to the current state as of July 2022 which has many impacts on marketing but most notably ITP blocks all third party cookies by default ITP 1 0 1 1 ITP can grant exceptions to third party cookies with Storage API ITP 2 0 ITP caps all first party cookies set with JavaScript to 7 days or 24 hours ITP 2 1 2 2 ITP caps first party cookies set by the server using CNAME cloaking to 7 days ITP 2 3 As a result of the privacy and security efforts in general other browsers such as Mozilla s Firefox ETP and Google Chrome have followed suit in announcing and or implementing their security and tracking protocols which continue to impact tools such as third and first party cookies that have long been a staple in providing the data necessary for marketers to personalize their communications effectively What can I do to replace my cookies With each iteration on more stringent privacy related changes comes a wave of workarounds or alternate approaches to maintaining access to behavioral data essential to marketing 1 Deploy a strong first party identification strategy There is no replacement then a strong identification strategy Creating a relationship in which a user will openly share their identity through a login or some other authenticated means will always result in the highest level of certainty on identity which leads to the best level of personalization However many use cases focus on anonymous users or users who have not built up the relationship necessary to unlock this level of authentication 2 First party client side cookies have changed but are still a viable solution Though third party cookies are effectively dead first party cookies are still viable for many use cases Not only do they offer a very simple off the shelf type of implementation for leveraging they also have a long shelf life assuming that an anonymous user interacts frequently enough to overcome the 7 day expiration window 3 First party server side cookies offer an extended expiration window Over the past 12 months there has been a surge of interest in server side cookies This method for setting cookies currently is not affected by the ITP changes that impact client side cookies most notably the automatic expiration at seven days Rather server side cookies can live for long periods leading to a higher quality identification for anonymous users The downside however is they are far more difficult to leverage than the client side They require a much more technical integration with whatever server side technology is used to power the web asset and may not be accessible in the same manner as client side cookies Getting Technical with Server Side Cookies In general regardless of the specific attribute settings used when leveraging server side cookies they currently are not impacted by the 7 day expiration window that client side cookies fall victim to However Apple has made it clear that they have additional plans to extend some of the client side cookie limitations to the server side and the most important attribute in that discussion is the HttpOnly attribute https webkit org blog 9521 intelligent tracking prevention 2 3 As a CDP and technology leader we always aim to help our customers future proof their implementations As such even though a non HttpOnly server side cookie offers an easier means to bypass current client side restrictions it is our recommendation to consider investing to leverage HttpOnly cookies set by the server side to prevent any potential impacts of the next few iterations of ITP Below we ll explore the two options and demonstrate the key differences Server Side Cookie without HttpOnly The following example in Node js demonstrates a sample snippet for setting the cookie server side Most server side languages have existing methods to make this very easy In the case of creating a cookie for Lytics to leverage you will also need to generate a unique ID which can be done in a variety of ways In the case of Node you may consider using the randomUUID method of the Crypto interface A simple Google search can lead you or your developer down the road of generating a unique ID that best fits your use case Once you have that unique ID you simply set the cookie using the pre defined Lytics name our Javascript tag is looking for Alternatively the tag can be configured to use any custom name THE FOLLOWING REPRESENTS A UNTESTED AND NON PRODUCTION LEVEL EXAMPLE OF HOW TO SET A COOKIE SERVER SIDE WITH NODE JS AND ACCESS THE DOCUMENT COOKIES FROM THE CLIENT SIDE var express require express var app express var cookieParser require cookie parser var crypto require crypto var dayjs require dayjs cookieParser middleware app use cookieParser route for setting the cookies app get setcookie function req res setting a server side cookie without httponly res cookie seerid crypto randomUUID httpOnly false expires dayjs add 30 days toDate res send html body p A server side cookie has been set p body html Route for getting all the cookies app get getcookie function req res res send html head script alert document cookie script head body p This is an example of how to get the cookies client side p body html app listen 3000 err if err throw err console log server running on port 3000 Since non HttpOnly cookies are accessible out of the box client side there is no additional lift necessary Our tag will pick up the cookie and use that ID as the identifier It is important to note that any UID changes must also be managed server side as setting the cookie client side will engage the 7 day expiration max In this example we simply raise an alert with the cookie string and do not show the actual implementation of the Lytics tag Server Side Cookie with HttpOnly Setting HttpOnly to true comes with an additional level of complexity but benefits from following the stringent and recommended guidelines of Apple ITP which in theory will go farther in the way of future proofing Much like the above example we ll set a cookie in this case using Node in the same way The only difference here is setting httpOnly to true This means that the cookie is secure but will no longer be accessible out of the box by Javascript Rather you ll have to implement an alternative method for surfacing that ID to Javascript so that it can be passed to the Lytics Javascript tag and used during collection resolution THE FOLLOWING REPRESENTS A UNTESTED AND NON PRODUCTION LEVEL EXAMPLE OF HOW TO SET A COOKIE SERVER SIDE WITH NODE JS AND ACCESS THE DOCUMENT COOKIES FROM THE CLIENT SIDE WHEN USING HTTPONLY var express require express var app express var cookieParser require cookie parser var crypto require crypto var dayjs require dayjs cookieParser middleware app use cookieParser route for setting the cookies app get setcookie function req res setting a server side cookie with httponly res cookie uuid crypto randomUUID httpOnly true expires dayjs add 30 days toDate res send html body p A server side cookie has been set using httpOnly p body html Route for getting all the cookies app get getcookie function req res res send html head script var uuid req cookies uuid alert uuid script head body p This is an example of how to get the cookies client side when cookie is httpOnly p body html app listen 3000 err if err throw err console log server running on port 3000 All code examples in this document are purely for demonstration Any customer facing implementation should follow the guidance of our customer facing technical teams and the technical experts on our customer s end These examples in production represent HIGH risk as documented Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-affinity",
    "title": "https://docs.lytics.com/docs/content-affinity",
    "chunk_text": "Welcome to the Content Affinity section where we will explore Lytics Content Affinity Engine and its machine learning capabilities We will cover configuring and using the engine to analyze your website s content extract topics and calculate user level affinities This section will provide you with the essential knowledge needed to leverage the power of the Lytics Content Affinity Engine and create a more personalized and engaging web experience for your users Content Curation Topic Taxonomy Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-affinity#content",
    "title": "https://docs.lytics.com/docs/content-affinity#content",
    "chunk_text": "Welcome to the Content Affinity section where we will explore Lytics Content Affinity Engine and its machine learning capabilities We will cover configuring and using the engine to analyze your website s content extract topics and calculate user level affinities This section will provide you with the essential knowledge needed to leverage the power of the Lytics Content Affinity Engine and create a more personalized and engaging web experience for your users Content Curation Topic Taxonomy Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-curation",
    "title": "Content Curation",
    "chunk_text": "Content Curation Content curation on Lytics involves scanning your website and other content to ingest topics and build content affinities Properly setting up the curation process is key to enabling use cases such as promoting relevant ads and delivering targeted web content This document gives an overview of important concepts and considerations to make while curating your content during the early stages of implementation It will also help determine if any custom content curation should be planned for Ensure that any content customization is performed to support your campaign execution and audience building not for the sake of customization itself Overview Once the Lytics JavaScript tag is installed Lytics automatically begins crawling the content on your website using Natural Language Processing NLP engines Put simply this means that Lytics will index your content producing a list of all your content By default content includes your web pages and images Lytics will crawl the content via NLP providers such as Google NLP or Diffbot and extract topics associated with that content Over time as users interact with your content Lytics identifies user content affinity levels for various topics While this functionality begins working right away without you having to do anything there are various things to consider to ensure Lytics is bringing in the content you ll need to execute use cases What domains should Lytics scan By default Lytics will scan all content on your domains You can specify which domains Lytics will scan by adding domains to the Domain Allowlist which can be modified by navigating to Account Settings Content If there are only certain sections of your website Lytics should be scanning you can customize by allowing or blocking specific paths as well For example if you have a blog section and other pages won t be relevant to gauge what users are interested in you can add the path blog to the list of allowed paths You can see which domains have been improved in the domain and path settings on the Content Classification page Visit the content account settings documentation for detailed instructions on how to add more domains or paths Are there any paths that should be avoided A website may have sections that should not be scanned for topics such as password reset pages or any pages hidden behind a log in e g password reset or admin These paths can be blocked in your Account Settings under Content Which NLP service should I be using Lytics uses Google NLP which pulls from their knowledge graph taxonomy If you determine you re not getting enough topics from your content Lytics can use Diffbot in addition to Google NLP which has more loose associations between topics and content You ll bring in more topics but may be slightly surprised by what you see If your brand is international you may need to consider which languages are supported by each NLP service Please consult the provider documentation for a list of languages supported by Google NLP and Diffbot Another option is to turn NLP completely off and use only custom topics For more details on each service Lytics uses see NLP services Backlog If you aren t seeing the content you expected to note it may take some time for Lytics to crawl all of your content By default monthly limits exist for scanning new content see Content Enrichment limits below If Lytics scans all new content without having reached the limit Lytics will move on to older content until it is all scanned Please allow time for this Also consider how far back should Lytics be scanning For example it is likely unnecessary to scan content from 2 years ago If people are no longer interacting with that content use Account Settings to set a date to start the scan from Content Enrichment limits Lytics will scan and enrich up to 20 000 URLs per month by default This limit is designed to act as a guard rail to ensure good filter hygiene is in place Most accounts do not publish close to 20 000 pieces of distinct content per month If you believe your account is hitting this limit please check with your Lytics Implementation team Once confirmed you can consider the following options Are there any domains or content paths that you can block This will likely be part of the solution See Are there any paths that should be avoided above for more information Do you need Lytics to increase the limit Robot directives Your domain likely has a robot directive e g domain com robots txt that provides instructions to crawlers on how to crawl or index your content Lytics will follow these directives While typically not an issue it s worth turning to your directives when troubleshooting any missing content or information Metadata You may want to build a collection of content based on publish date or author Consider the following if this is the case If you have metadata on your website is it using OpenGraph Open Graph tags will populate the following default values in Lytics title image published_time description and lytics topics You can check the lytics_content query in your account to check if all the Open Graph tags you need are being picked up If you are not using Open Graph Lytics may not be picking up any meta tags automatically The quickest way to check that Lytics is bringing is to use our find a document tool to view the data Lytics has for a specific piece of content Navigate to Content Find a Document and search for the URL of the piece of content you would like to view If you make changes to your content s metadata and would like to preview those changes you can use our manual classification tool located at the bottom of the Content Classification dashboard Enter the URL with the updated metadata and click Get Details Lytics will scan the document and display a preview of the updated metadata If you are satisfied with the changes click Complete Classification If not you can make additional edits and preview again Alternatively you can check by navigating to Content Collections Try to build content collections by author or publish date as these are the most commonly used filters If the content doesn t come up as expected you may need to curate your tags Custom topics For many users outside of publishing who may not have rich content NLP derived topics aren t enough To accommodate this Lytics can add custom topics via the metadata The easiest way to do this is by adding the lytics topics meta tag Read more on providing custom topics If you already have topics in your metadata using a different meta tag than the above it s possible Lytics may be able to bring those in as well by making a change to your account settings Speak with your implementation team about this Once this setting is changed and content is rescanned you will be able to build content collections with this topic and users affinities will be generated for these new topics Total number of topics In the Lytics UI you will see a max of 500 topics Lytics keeps all of your topics but only the top 500 are surfaced in the UI As you block topics Lytics will backfill to show 500 You can allow specific topics to ensure that they make the top 500 If you choose to allow topics make sure that the topics actually exist either as custom topics or are being generated by NLP Case sensitivity is important when adding topics to the allow list For example allowing ABBA is different than allowing Abba Other content If you have other content on your site outside of web pages or images e g PDFs that you d like to derive topics from and have them generate affinities Lytics will need to develop a plan to bring those in using our APIs Document properties All topics NLP derived or custom topics will allow for two things Building a content collection with the topics Assign affinities to users for those topics There are instances where you may want to build collections based on a topic but not have them generate affinities For example a collection of featured sale items SKUs genres etc You can set these as document properties in your metadata to allow for this Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-curation#content",
    "title": "Content Curation",
    "chunk_text": "Content Curation Content curation on Lytics involves scanning your website and other content to ingest topics and build content affinities Properly setting up the curation process is key to enabling use cases such as promoting relevant ads and delivering targeted web content This document gives an overview of important concepts and considerations to make while curating your content during the early stages of implementation It will also help determine if any custom content curation should be planned for Ensure that any content customization is performed to support your campaign execution and audience building not for the sake of customization itself Overview Once the Lytics JavaScript tag is installed Lytics automatically begins crawling the content on your website using Natural Language Processing NLP engines Put simply this means that Lytics will index your content producing a list of all your content By default content includes your web pages and images Lytics will crawl the content via NLP providers such as Google NLP or Diffbot and extract topics associated with that content Over time as users interact with your content Lytics identifies user content affinity levels for various topics While this functionality begins working right away without you having to do anything there are various things to consider to ensure Lytics is bringing in the content you ll need to execute use cases What domains should Lytics scan By default Lytics will scan all content on your domains You can specify which domains Lytics will scan by adding domains to the Domain Allowlist which can be modified by navigating to Account Settings Content If there are only certain sections of your website Lytics should be scanning you can customize by allowing or blocking specific paths as well For example if you have a blog section and other pages won t be relevant to gauge what users are interested in you can add the path blog to the list of allowed paths You can see which domains have been improved in the domain and path settings on the Content Classification page Visit the content account settings documentation for detailed instructions on how to add more domains or paths Are there any paths that should be avoided A website may have sections that should not be scanned for topics such as password reset pages or any pages hidden behind a log in e g password reset or admin These paths can be blocked in your Account Settings under Content Which NLP service should I be using Lytics uses Google NLP which pulls from their knowledge graph taxonomy If you determine you re not getting enough topics from your content Lytics can use Diffbot in addition to Google NLP which has more loose associations between topics and content You ll bring in more topics but may be slightly surprised by what you see If your brand is international you may need to consider which languages are supported by each NLP service Please consult the provider documentation for a list of languages supported by Google NLP and Diffbot Another option is to turn NLP completely off and use only custom topics For more details on each service Lytics uses see NLP services Backlog If you aren t seeing the content you expected to note it may take some time for Lytics to crawl all of your content By default monthly limits exist for scanning new content see Content Enrichment limits below If Lytics scans all new content without having reached the limit Lytics will move on to older content until it is all scanned Please allow time for this Also consider how far back should Lytics be scanning For example it is likely unnecessary to scan content from 2 years ago If people are no longer interacting with that content use Account Settings to set a date to start the scan from Content Enrichment limits Lytics will scan and enrich up to 20 000 URLs per month by default This limit is designed to act as a guard rail to ensure good filter hygiene is in place Most accounts do not publish close to 20 000 pieces of distinct content per month If you believe your account is hitting this limit please check with your Lytics Implementation team Once confirmed you can consider the following options Are there any domains or content paths that you can block This will likely be part of the solution See Are there any paths that should be avoided above for more information Do you need Lytics to increase the limit Robot directives Your domain likely has a robot directive e g domain com robots txt that provides instructions to crawlers on how to crawl or index your content Lytics will follow these directives While typically not an issue it s worth turning to your directives when troubleshooting any missing content or information Metadata You may want to build a collection of content based on publish date or author Consider the following if this is the case If you have metadata on your website is it using OpenGraph Open Graph tags will populate the following default values in Lytics title image published_time description and lytics topics You can check the lytics_content query in your account to check if all the Open Graph tags you need are being picked up If you are not using Open Graph Lytics may not be picking up any meta tags automatically The quickest way to check that Lytics is bringing is to use our find a document tool to view the data Lytics has for a specific piece of content Navigate to Content Find a Document and search for the URL of the piece of content you would like to view If you make changes to your content s metadata and would like to preview those changes you can use our manual classification tool located at the bottom of the Content Classification dashboard Enter the URL with the updated metadata and click Get Details Lytics will scan the document and display a preview of the updated metadata If you are satisfied with the changes click Complete Classification If not you can make additional edits and preview again Alternatively you can check by navigating to Content Collections Try to build content collections by author or publish date as these are the most commonly used filters If the content doesn t come up as expected you may need to curate your tags Custom topics For many users outside of publishing who may not have rich content NLP derived topics aren t enough To accommodate this Lytics can add custom topics via the metadata The easiest way to do this is by adding the lytics topics meta tag Read more on providing custom topics If you already have topics in your metadata using a different meta tag than the above it s possible Lytics may be able to bring those in as well by making a change to your account settings Speak with your implementation team about this Once this setting is changed and content is rescanned you will be able to build content collections with this topic and users affinities will be generated for these new topics Total number of topics In the Lytics UI you will see a max of 500 topics Lytics keeps all of your topics but only the top 500 are surfaced in the UI As you block topics Lytics will backfill to show 500 You can allow specific topics to ensure that they make the top 500 If you choose to allow topics make sure that the topics actually exist either as custom topics or are being generated by NLP Case sensitivity is important when adding topics to the allow list For example allowing ABBA is different than allowing Abba Other content If you have other content on your site outside of web pages or images e g PDFs that you d like to derive topics from and have them generate affinities Lytics will need to develop a plan to bring those in using our APIs Document properties All topics NLP derived or custom topics will allow for two things Building a content collection with the topics Assign affinities to users for those topics There are instances where you may want to build collections based on a topic but not have them generate affinities For example a collection of featured sale items SKUs genres etc You can set these as document properties in your metadata to allow for this Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/topic-taxonomy",
    "title": "Topic Taxonomy",
    "chunk_text": "Topic Taxonomy Using data science techniques to look at the topic overlap between classified content Lytics will programmatically build a topic taxonomy In addition to programmatically building this taxonomy Lytics dynamically adjusts the taxonomy as new content gets published The topic taxonomy is stored as a weighted and directional graph Although this structure may be daunting to look at and even more daunting to try and utilize by hand Lytics uses it when determining content recommendations Topic Relationships Topics are determined to be related by evaluating how they occur together and how they occur independently When two topics occur together frequently meaning in multiple documents it is safe to assume they are related In addition to the relationship existing Lytics will determine the direction of the relationship Is Cookies a subtopic of Baking or is Baking a subtopic of Cookies The co occurrence of topics determines the relationship The independent occurrence of a topic determines the direction Since the topic Cookies frequently occurs with Baking but Baking frequently occurs without Cookies Cookies must be a subtopic of Cookies To draw this example further Baking may be a subtopic of Recipes Recipes may be a subtopic of Cooking and Cooking may be a subtopic of Hobbies This is important because it allows Lytics to make affinity inferences A user with a high affinity for Cookies may be interested in general Baking content Weighting Relationships The weight between relationships is incredibly important to consider when making affinity inferences For instance Michael Jordan played baseball professionally for one dark year in the 90s This means there are valid relationships between Michael Jordan and Baseball and Michael Jordan and Basketball Most people who know anything about sports or pop culture know Michael Jordan as a basketball icon The way this gets reflected in taxonomy is through relationship weights The weight between Michael Jordan and Basketball is strong while the weight between Michael Jordan and Baseball is weak By having weights affinity inferences can use those weights as thresholds for building further relationships or recommending content A user who has shown interest in Michael Jordan is more likely to be interested in Basketball than they are to be interested in Baseball Unless they are interested in Sports Icons From The 90s they might be more interested in Ken Griffey Jr A rich topic taxonomy will surface this nuanced information The Graph Representation of the Taxonomy A graph is the ideal data structure for topic taxonomies and taxonomies in general Since each topic can have many subtopics and be the subtopic of many things the correct way to structure this data is with a graph Leaders in data modeling use this approach Notable examples are Facebook s Social Graph and Google s Knowledge Graph Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/topic-taxonomy#content",
    "title": "Topic Taxonomy",
    "chunk_text": "Topic Taxonomy Using data science techniques to look at the topic overlap between classified content Lytics will programmatically build a topic taxonomy In addition to programmatically building this taxonomy Lytics dynamically adjusts the taxonomy as new content gets published The topic taxonomy is stored as a weighted and directional graph Although this structure may be daunting to look at and even more daunting to try and utilize by hand Lytics uses it when determining content recommendations Topic Relationships Topics are determined to be related by evaluating how they occur together and how they occur independently When two topics occur together frequently meaning in multiple documents it is safe to assume they are related In addition to the relationship existing Lytics will determine the direction of the relationship Is Cookies a subtopic of Baking or is Baking a subtopic of Cookies The co occurrence of topics determines the relationship The independent occurrence of a topic determines the direction Since the topic Cookies frequently occurs with Baking but Baking frequently occurs without Cookies Cookies must be a subtopic of Cookies To draw this example further Baking may be a subtopic of Recipes Recipes may be a subtopic of Cooking and Cooking may be a subtopic of Hobbies This is important because it allows Lytics to make affinity inferences A user with a high affinity for Cookies may be interested in general Baking content Weighting Relationships The weight between relationships is incredibly important to consider when making affinity inferences For instance Michael Jordan played baseball professionally for one dark year in the 90s This means there are valid relationships between Michael Jordan and Baseball and Michael Jordan and Basketball Most people who know anything about sports or pop culture know Michael Jordan as a basketball icon The way this gets reflected in taxonomy is through relationship weights The weight between Michael Jordan and Basketball is strong while the weight between Michael Jordan and Baseball is weak By having weights affinity inferences can use those weights as thresholds for building further relationships or recommending content A user who has shown interest in Michael Jordan is more likely to be interested in Basketball than they are to be interested in Baseball Unless they are interested in Sports Icons From The 90s they might be more interested in Ken Griffey Jr A rich topic taxonomy will surface this nuanced information The Graph Representation of the Taxonomy A graph is the ideal data structure for topic taxonomies and taxonomies in general Since each topic can have many subtopics and be the subtopic of many things the correct way to structure this data is with a graph Leaders in data modeling use this approach Notable examples are Facebook s Social Graph and Google s Knowledge Graph Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/architecture",
    "title": "https://docs.lytics.com/docs/architecture",
    "chunk_text": "Welcome to the Architecture section where we will explore the technical details of the Lytics platform and examine how it can be integrated with other systems We will discuss the core components of the platform the different integration patterns and best practices for system architecture and integration Whether you are a developer architect or data analyst this section will provide you with the essential knowledge needed to understand the Lytics platform s architecture and integration capabilities Integration Patterns Job Processing Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/architecture#content",
    "title": "https://docs.lytics.com/docs/architecture#content",
    "chunk_text": "Welcome to the Architecture section where we will explore the technical details of the Lytics platform and examine how it can be integrated with other systems We will discuss the core components of the platform the different integration patterns and best practices for system architecture and integration Whether you are a developer architect or data analyst this section will provide you with the essential knowledge needed to understand the Lytics platform s architecture and integration capabilities Integration Patterns Job Processing Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/integrated-marketing-tools",
    "title": "Overview",
    "chunk_text": "Overview Lytics offers pre built integrations for many of today s most popular marketing tools to ease the onboarding and exporting of data These integrations are available in the Data tab of the Lytics platform under Data Jobs Each of these marketing tools has specific instructions for setup found in our integrations documentation Types The implementation type refers to the development methods used to implement the job Usually this depends on the third party provider s capabilities and the resources they provide to outside developers such as APIs or SDKs Integrations may be client side or server side Client side Integrations Client side integrations are implemented in browser facing code These are implemented through the Lytics JavaScript tag and usually require you to have a tag from the third party provider also installed on your web page Given the nature of these integrations being tightly coupled to the browser session these integrations collect and send data in real time There are two types of client side integrations Push Integrations A push integration pushes data from Lytics such as surfaced fields or audience membership of users to the third party Examples of push integrations include personalization tools such as Pathfora SDK which uses Lytics user data to personalize the page with content based on audience membership or data management platforms DMPs such as Krux which transmits Lytics user information to the DMP Pull Integrations A pull integration pulls data from the third party and imports it into Lytics This data will differ based on the provider and the exact fields available in the audience builder will be listed in the respective integration document An example of this type of integration includes the Lytics JavaScript tag communicating with a data layer object on your website to collect data from various third party vendors such as Tealium or even a custom implementation Server to server Integrations Server side integrations allow Lytics and the third party service to communicate directly usually in the form of a job These jobs are available to set up and execute in the Lytics platform under Data Jobs There are two main types of Server side integrations Import Integrations As the name implies import integrations ingest data into Lytics This data will differ based on the provider and job type It can be anything from identifying information demographic data subscription status or activity data for a user Examples of import integrations include the Amplitude Cohorts Import which imports user data from Amplitude Export Integrations Export integrations send user profile data from Lytics to a third party tool usually at the audience level You can select which audience s you want to export and include user data such as user fields audience membership and more such as the SendGrid User Export However some integrations may export raw event data or metrics for monitoring such as the BigQuery Event Export or the New Relic Insights Monitoring job Enrichment Integrations An enrichment integration uses a third party service to enhance and enrich existing user profiles within Lytics These integrations require Lytics to push a list of user identifiers defined by an audience of known users to a third party enrichment tool That tool then returns additional data on that user such as information on the user s company for B2B marketing or additional demographic and social data Examples of enrichment integrations include Full Contact Audience Enrichment and Clearbit User Enrichment jobs Many providers support both import and export job types for a complete two way data sync between Lytics and the third party tool Implementation Techniques Client and server side integrations may be implemented in a number of different ways The implementation technique often determines factors such as Tier Frequency and Resulting Data Client side Implementations JavaScript Tag All default client side integrations somehow utilize the Lytics JavaScript tag The tag implements functions for sending data to a data stream and receiving user profile data which has been surfaced Behind the scenes these functions utilize some of the public Lytics API endpoints Server side Implementations APIs API integrations utilize REST or SOAP APIs the third party vendor provides to send or receive data The specific endpoints used are listed in the documentation for the integration Lytics prefers to integrate with third parties via API as it provides a deeper out of the box integration Audience Triggers Audience triggers are used in conjunction with an API implementation for export or enrichment job types Audience triggers are powered by an internal system called subscriptions Subscriptions listen to specific events such as when a user has entered or exited an audience A subscription can then send a trigger to any job listening to the subscription Once received the job can push the updated user data to the third party tool via APIs This process enables real time exports versus a scheduled batch export File Based Transfer Lytics supports file based import and export jobs Files may be obtained or pushed to a server via Secure File Transfer Protocol SFTP SFTP integrations may be provided for third party vendors who do not have API capabilities or as part of a custom integration Lytics has a managed SFTP server that can be used to transfer files or it may retrieve files from a third party SFTP server Another example of a file based export is via Email Attachment such as the CSV Email Export Webhooks Many third party vendors offer webhooks or API callbacks which send requests containing relevant user activity data to another service after an event has occurred in the system The Lytics API has a collection endpoint that can be used as a destination for third party webhooks Providers that support webhooks will have documentation detailing the preferred setup method for Lytics to receive webhook data In addition Lytics supports webhooks that can be configured to send user level events such as real time audience membership updates Frequency Frequency describes when and how often that data is sent or received It attempts to answer common questions such as When will I see data in my tool and Can I keep my data up to date Lytics integrations are either real time or scheduled Real time A number of different integration types are considered real time or near real time In that user data is sent or received downstream as soon as the data is available in the native system The following types of integrations are considered real time Client Side Integrations All client side integrations are considered real time unless otherwise stated in the documentation Data collected via a pull integration is captured in the browser while the user performs actions and push integrations always contain the most up to date data from the user profile Webhooks As stated above webhooks are API calls that happen after an event has occurred often used to notify downstream tools Jobs Using Triggers As stated above jobs utilizing triggers receive and may push events downstream in real time Depending on rate limits or other such limitations of the third party in question the job may queue a small batch of events over a short amount of time before sending them hence near real time Backfill Jobs that use audience triggers also often have an option to perform a backfill of users Without a backfill only new users who enter the audience after the time of job setup will be processed Enabling a one time backfill as part of the job configuration will immediately process a batch of all existing users in the audience to the third party tool and then rely on real time triggers to update user information once the backfill is finished Some jobs support this feature as a configurable option If so it is listed under the Frequency section of Integration Details in a job s documentation Batch Batch integrations send or receive user data in larger batches Depending on the configuration of the job it may only import export a single batch of users once or it may run continuously checking for new users and updates to existing user data One time run You may want to run a one time job to import export or enrich users at a specific point in time For example if you re running a one time promotional blast email to a unique audience exporting your audience once before sending the email would make sense Continuous Update Many batch jobs support a configuration option for continuous updates which will re run the job on some cadence hourly daily weekly etc This is common for import jobs for providers that don t support webhooks as Lytics will want to keep the user profiles up to date with what is available in the third party Scheduled Some jobs may support specific scheduled run times which can be especially helpful for continuous updates It allows you to specify the time of day the job should run and the timezone Resulting Data The final way Lytics categorizes integrations is by the type of data it handles and how the job output is perceived The resulting export and push integration data will vary based on the structures supported by the provider tool and each integration will document the specific output type Here is a list of common data types in Lytics for import and pull integrations User Profiles When you import users you will likely see new user profiles created for users that previously did not have data associated with them in Lytics However you may also see updates to existing users profiles if Lytics is able to recognize an existing user based on the identity resolution strategy for your account User Fields The new user fields that are created as part of an integration are listed in the Fields section of each doc These fields will be added to new and existing user profiles as described in the section above and they will become available for segmentation in the audience builder Raw Event Data If data is imported to Lytics without being mapped by LQL this data is stored as raw fields in data streams which are un actionable For example if you are importing custom data via CSV you will need queries in place for the raw data to be meaningful In addition some pre built integrations may import additional fields that are not mapped as part of the default queries provided by the out of the box integration You may contact support for assistance with mapping these fields Content In addition to user data some integrations may ingest content that can be analyzed and processed by the Lytics Content Affinity Engine An example of this is the MailChimp Import which in addition to user data brings in content from your MailChimp email campaigns This content can help inform affinity scores for users who have viewed and interacted with the email Metrics This is an uncommon pattern in existing integrations but Lytics can also import specific metrics from third party tools For example in the Goal Canvas Facebook Experience metrics are imported directly from the Facebook Insights API Metrics that are imported to Lytics are accessible via the Metrics API PGP Encryption File imports and exports can be decrypted and encrypted respectively using Pretty Good Privacy PGP To create or ingest PGP encrypted files use an authorization that includes PGP keys PGP Public Key authorizations are used to encrypt exports PGP Private Key authorizations are used to decrypt imports Follow the instructions below when creating a PGP authorization PGP Public Key Use a PGP Public Key authorization to encrypt file exports You will need to generate an armored PGP key pair if you haven t already In the PGP Public Key field enter your public key Be sure to include the header and footer of the armored key This means your entry should begin and end with the following BEGIN PGP PUBLIC KEY BLOCK and END PGP PUBLIC KEY BLOCK If your key does not begin and end with these strings respectively it is possible it has not been ASCII armored PGP Private Key Use a PGP Private Key authorization to decrypt file imports You will need the private key that is paired with the public key used to encrypt the file In the PGP Private Key field enter your private key Be sure to include the header and footer of the armored key This means your entry should begin and end with the following BEGIN PGP PRIVATE KEY BLOCK and END PGP PRIVATE KEY BLOCK If your key does not begin and end with these strings respectively it is possible it has not been ASCII armored If your private key has been protected with a passphrase enter the passphrase in the field labeled PGP Private Key Passphrase If your private key is not passphrase protected leave this field empty Note in order for Lytics to decrypt the file successfully you will need to provide the private key that is paired with the public key that was used to encrypt the file Templating User profile fields can be dynamically inserted into an alert using templating of supported fields including the alert title alert subtitle and alert body fields Lytics uses Golang s template package to provide this functionality The data available to you will vary based on the data available on each individual profile You can download a customer profile to see a list of fields available on your user profiles For example if you want to include a user s name in an alert and the field containing the name is called first_name a template like the following could be used Hey first_name Notice the before the name of the profile field Some profiles may not have a first name field To avoid sending an incoherent alert when you don t have the first name field available a template like the following could be used if first_name Hey first_name else I wish I knew you end Alternatively if you would rather include a default name when the field does not exist on the profile a template like the following could be used Hey last_name default valued customer If you would like to make sure that multiple fields on a profile exist a template like the following could be used if and first_name last_name Hey first_name last_name else I don t know you end To check equality on a particular profile field you can create a template like the following if eq subscriber_status subscribed You are a subscriber else You should subscribe end Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/integrated-marketing-tools#content",
    "title": "Overview",
    "chunk_text": "Overview Lytics offers pre built integrations for many of today s most popular marketing tools to ease the onboarding and exporting of data These integrations are available in the Data tab of the Lytics platform under Data Jobs Each of these marketing tools has specific instructions for setup found in our integrations documentation Types The implementation type refers to the development methods used to implement the job Usually this depends on the third party provider s capabilities and the resources they provide to outside developers such as APIs or SDKs Integrations may be client side or server side Client side Integrations Client side integrations are implemented in browser facing code These are implemented through the Lytics JavaScript tag and usually require you to have a tag from the third party provider also installed on your web page Given the nature of these integrations being tightly coupled to the browser session these integrations collect and send data in real time There are two types of client side integrations Push Integrations A push integration pushes data from Lytics such as surfaced fields or audience membership of users to the third party Examples of push integrations include personalization tools such as Pathfora SDK which uses Lytics user data to personalize the page with content based on audience membership or data management platforms DMPs such as Krux which transmits Lytics user information to the DMP Pull Integrations A pull integration pulls data from the third party and imports it into Lytics This data will differ based on the provider and the exact fields available in the audience builder will be listed in the respective integration document An example of this type of integration includes the Lytics JavaScript tag communicating with a data layer object on your website to collect data from various third party vendors such as Tealium or even a custom implementation Server to server Integrations Server side integrations allow Lytics and the third party service to communicate directly usually in the form of a job These jobs are available to set up and execute in the Lytics platform under Data Jobs There are two main types of Server side integrations Import Integrations As the name implies import integrations ingest data into Lytics This data will differ based on the provider and job type It can be anything from identifying information demographic data subscription status or activity data for a user Examples of import integrations include the Amplitude Cohorts Import which imports user data from Amplitude Export Integrations Export integrations send user profile data from Lytics to a third party tool usually at the audience level You can select which audience s you want to export and include user data such as user fields audience membership and more such as the SendGrid User Export However some integrations may export raw event data or metrics for monitoring such as the BigQuery Event Export or the New Relic Insights Monitoring job Enrichment Integrations An enrichment integration uses a third party service to enhance and enrich existing user profiles within Lytics These integrations require Lytics to push a list of user identifiers defined by an audience of known users to a third party enrichment tool That tool then returns additional data on that user such as information on the user s company for B2B marketing or additional demographic and social data Examples of enrichment integrations include Full Contact Audience Enrichment and Clearbit User Enrichment jobs Many providers support both import and export job types for a complete two way data sync between Lytics and the third party tool Implementation Techniques Client and server side integrations may be implemented in a number of different ways The implementation technique often determines factors such as Tier Frequency and Resulting Data Client side Implementations JavaScript Tag All default client side integrations somehow utilize the Lytics JavaScript tag The tag implements functions for sending data to a data stream and receiving user profile data which has been surfaced Behind the scenes these functions utilize some of the public Lytics API endpoints Server side Implementations APIs API integrations utilize REST or SOAP APIs the third party vendor provides to send or receive data The specific endpoints used are listed in the documentation for the integration Lytics prefers to integrate with third parties via API as it provides a deeper out of the box integration Audience Triggers Audience triggers are used in conjunction with an API implementation for export or enrichment job types Audience triggers are powered by an internal system called subscriptions Subscriptions listen to specific events such as when a user has entered or exited an audience A subscription can then send a trigger to any job listening to the subscription Once received the job can push the updated user data to the third party tool via APIs This process enables real time exports versus a scheduled batch export File Based Transfer Lytics supports file based import and export jobs Files may be obtained or pushed to a server via Secure File Transfer Protocol SFTP SFTP integrations may be provided for third party vendors who do not have API capabilities or as part of a custom integration Lytics has a managed SFTP server that can be used to transfer files or it may retrieve files from a third party SFTP server Another example of a file based export is via Email Attachment such as the CSV Email Export Webhooks Many third party vendors offer webhooks or API callbacks which send requests containing relevant user activity data to another service after an event has occurred in the system The Lytics API has a collection endpoint that can be used as a destination for third party webhooks Providers that support webhooks will have documentation detailing the preferred setup method for Lytics to receive webhook data In addition Lytics supports webhooks that can be configured to send user level events such as real time audience membership updates Frequency Frequency describes when and how often that data is sent or received It attempts to answer common questions such as When will I see data in my tool and Can I keep my data up to date Lytics integrations are either real time or scheduled Real time A number of different integration types are considered real time or near real time In that user data is sent or received downstream as soon as the data is available in the native system The following types of integrations are considered real time Client Side Integrations All client side integrations are considered real time unless otherwise stated in the documentation Data collected via a pull integration is captured in the browser while the user performs actions and push integrations always contain the most up to date data from the user profile Webhooks As stated above webhooks are API calls that happen after an event has occurred often used to notify downstream tools Jobs Using Triggers As stated above jobs utilizing triggers receive and may push events downstream in real time Depending on rate limits or other such limitations of the third party in question the job may queue a small batch of events over a short amount of time before sending them hence near real time Backfill Jobs that use audience triggers also often have an option to perform a backfill of users Without a backfill only new users who enter the audience after the time of job setup will be processed Enabling a one time backfill as part of the job configuration will immediately process a batch of all existing users in the audience to the third party tool and then rely on real time triggers to update user information once the backfill is finished Some jobs support this feature as a configurable option If so it is listed under the Frequency section of Integration Details in a job s documentation Batch Batch integrations send or receive user data in larger batches Depending on the configuration of the job it may only import export a single batch of users once or it may run continuously checking for new users and updates to existing user data One time run You may want to run a one time job to import export or enrich users at a specific point in time For example if you re running a one time promotional blast email to a unique audience exporting your audience once before sending the email would make sense Continuous Update Many batch jobs support a configuration option for continuous updates which will re run the job on some cadence hourly daily weekly etc This is common for import jobs for providers that don t support webhooks as Lytics will want to keep the user profiles up to date with what is available in the third party Scheduled Some jobs may support specific scheduled run times which can be especially helpful for continuous updates It allows you to specify the time of day the job should run and the timezone Resulting Data The final way Lytics categorizes integrations is by the type of data it handles and how the job output is perceived The resulting export and push integration data will vary based on the structures supported by the provider tool and each integration will document the specific output type Here is a list of common data types in Lytics for import and pull integrations User Profiles When you import users you will likely see new user profiles created for users that previously did not have data associated with them in Lytics However you may also see updates to existing users profiles if Lytics is able to recognize an existing user based on the identity resolution strategy for your account User Fields The new user fields that are created as part of an integration are listed in the Fields section of each doc These fields will be added to new and existing user profiles as described in the section above and they will become available for segmentation in the audience builder Raw Event Data If data is imported to Lytics without being mapped by LQL this data is stored as raw fields in data streams which are un actionable For example if you are importing custom data via CSV you will need queries in place for the raw data to be meaningful In addition some pre built integrations may import additional fields that are not mapped as part of the default queries provided by the out of the box integration You may contact support for assistance with mapping these fields Content In addition to user data some integrations may ingest content that can be analyzed and processed by the Lytics Content Affinity Engine An example of this is the MailChimp Import which in addition to user data brings in content from your MailChimp email campaigns This content can help inform affinity scores for users who have viewed and interacted with the email Metrics This is an uncommon pattern in existing integrations but Lytics can also import specific metrics from third party tools For example in the Goal Canvas Facebook Experience metrics are imported directly from the Facebook Insights API Metrics that are imported to Lytics are accessible via the Metrics API PGP Encryption File imports and exports can be decrypted and encrypted respectively using Pretty Good Privacy PGP To create or ingest PGP encrypted files use an authorization that includes PGP keys PGP Public Key authorizations are used to encrypt exports PGP Private Key authorizations are used to decrypt imports Follow the instructions below when creating a PGP authorization PGP Public Key Use a PGP Public Key authorization to encrypt file exports You will need to generate an armored PGP key pair if you haven t already In the PGP Public Key field enter your public key Be sure to include the header and footer of the armored key This means your entry should begin and end with the following BEGIN PGP PUBLIC KEY BLOCK and END PGP PUBLIC KEY BLOCK If your key does not begin and end with these strings respectively it is possible it has not been ASCII armored PGP Private Key Use a PGP Private Key authorization to decrypt file imports You will need the private key that is paired with the public key used to encrypt the file In the PGP Private Key field enter your private key Be sure to include the header and footer of the armored key This means your entry should begin and end with the following BEGIN PGP PRIVATE KEY BLOCK and END PGP PRIVATE KEY BLOCK If your key does not begin and end with these strings respectively it is possible it has not been ASCII armored If your private key has been protected with a passphrase enter the passphrase in the field labeled PGP Private Key Passphrase If your private key is not passphrase protected leave this field empty Note in order for Lytics to decrypt the file successfully you will need to provide the private key that is paired with the public key that was used to encrypt the file Templating User profile fields can be dynamically inserted into an alert using templating of supported fields including the alert title alert subtitle and alert body fields Lytics uses Golang s template package to provide this functionality The data available to you will vary based on the data available on each individual profile You can download a customer profile to see a list of fields available on your user profiles For example if you want to include a user s name in an alert and the field containing the name is called first_name a template like the following could be used Hey first_name Notice the before the name of the profile field Some profiles may not have a first name field To avoid sending an incoherent alert when you don t have the first name field available a template like the following could be used if first_name Hey first_name else I wish I knew you end Alternatively if you would rather include a default name when the field does not exist on the profile a template like the following could be used Hey last_name default valued customer If you would like to make sure that multiple fields on a profile exist a template like the following could be used if and first_name last_name Hey first_name last_name else I don t know you end To check equality on a particular profile field you can create a template like the following if eq subscriber_status subscribed You are a subscriber else You should subscribe end Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/background-processing",
    "title": "Overview",
    "chunk_text": "Overview Lytics Job runtime and APIs control the mechanics of how data flows in and out of Lytics Lytics jobs can be generally broken down into a few important categories Direction Does this job route data to Lytics or from Lytics Subject Does this job target entities commonly known as profiles Or does it target raw events Schedule What starts this workflow Is it based on real time triggers Or does it run on a batching schedule Termination Is this a one time job or is it expected to run again If so on what frequency Knowing which type of job you re dealing with can help guide expectations for behavior and troubleshooting Auths Some jobs like specific Webhook flows don t require explicit credentials to access external systems However most jobs require some form of authorization to retrieve data from or send data to external systems In Lytics these credentials are generically referred to as Authorizations Authorizations can be managed from the Auth API or directly from the Lytics interface All authorizations are either configuration based or OAuth based Configuration The authorization is based on credentials provided to Lytics These usually take the form of API keys secrets and usernames passwords OAuth The authorization is given access delegation from an OAuth flow Commonly authorizations will change some systems require periodic password changes tokens get revoked users who complete OAuth flows leave an organization etc Consequently a job that is running successfully with authorization today may fail tomorrow if the authorization is no longer valid If you know in advance that credentials will update or change it is recommended that you create a new authorization and update the job to use the new one To stay alerted on the health status of a job you can set up alerts as described in the Monitoring section below Configuring and Submitting Jobs Jobs can be managed from the Jobs API or directly from the Lytics interface Each job has custom configuration options that tell the job when to run what type of data to pull which lists to pull data from in external systems how to send the data to downstream sources etc Each job s API endpoint will validate the presence of any required parameters or other conditions that must be satisfied for the job to run correctly In the event of a validation error in the job configuration the API will return a 400 error with a message indicating what is misconfigured If the configuration for the job request is valid the job will be immediately submitted to Lytics internal job running system Job State Machine Jobs running on Lytics internal job running system may be in any of the following states Runnable The job is currently running Completed The job has run successfully and is not scheduled to re run Paused The job has been manually paused and will remain so until it is unpaused or terminated Sleeping The job is in between runs and is scheduled to run again at a later point in time Failed The job has exceeded its retry limit and will not attempt to run again Terminated The job has been manually terminated and will not attempt to run again Jobs will usually first enter into a Runnable state If the job is fed input from real time triggers it will stay running unless it encounters any errors If the job runs on a batched interval it will usually switch between Runnable and Sleeping While most transitions happen automatically in the system Runnable Completed for example some are triggered manually namely From To API Route Sleeping Runnable Paused v2 job job id pause Paused Runnable v2 job job id resume Failed Runnable v2 job job id bounce Any Terminated v2 job job id kill Errors There are a variety of reasons a job will enter a Failed state including Authorization issues This is the most common reason for job failures Some authorizations can become invalid if the external system requires periodic password changes and the authorization isn t updated if tokens get revoked or if users who complete OAuth flows leave an organization and the token no longer has access to the resources it is requesting External failures Sometimes external systems can produce intermittent failures like HTTP 503 errors if the system is temporarily unavailable Because of their intermittency it s less likely that one of these errors will result in a job ending in a Failed state Internal Lytics failures While rare sometimes the availability of internal Lytics resources can cause a job to fail Because of the high availability of Lytics systems 99 9 it s unlikely that a job will be in a Failed state from Lytics internals When an error occurs the job will enter a Sleeping state and retry a minute later If an error occurs on the second attempted run the job will sleep double the amount of time as the previous run If errors still occur after two hours the job will enter a Failed state Any failed work can be manually restarted through the Job API or through the Lytics interface If for example a job is in a failed state because of an authorization issue you can create a new authorization for the job and restart it Contributing Many jobs are maintained by Lytics and even more workflows can be enabled by using our generic tooling for Webhook and SFTP based integration flows Some jobs are open sourced and run on Conductor s Opus framework for running jobs Check out our Conductor Opus Template on GiHub to get started creating your own jobs Updated 11 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/background-processing#content",
    "title": "Overview",
    "chunk_text": "Overview Lytics Job runtime and APIs control the mechanics of how data flows in and out of Lytics Lytics jobs can be generally broken down into a few important categories Direction Does this job route data to Lytics or from Lytics Subject Does this job target entities commonly known as profiles Or does it target raw events Schedule What starts this workflow Is it based on real time triggers Or does it run on a batching schedule Termination Is this a one time job or is it expected to run again If so on what frequency Knowing which type of job you re dealing with can help guide expectations for behavior and troubleshooting Auths Some jobs like specific Webhook flows don t require explicit credentials to access external systems However most jobs require some form of authorization to retrieve data from or send data to external systems In Lytics these credentials are generically referred to as Authorizations Authorizations can be managed from the Auth API or directly from the Lytics interface All authorizations are either configuration based or OAuth based Configuration The authorization is based on credentials provided to Lytics These usually take the form of API keys secrets and usernames passwords OAuth The authorization is given access delegation from an OAuth flow Commonly authorizations will change some systems require periodic password changes tokens get revoked users who complete OAuth flows leave an organization etc Consequently a job that is running successfully with authorization today may fail tomorrow if the authorization is no longer valid If you know in advance that credentials will update or change it is recommended that you create a new authorization and update the job to use the new one To stay alerted on the health status of a job you can set up alerts as described in the Monitoring section below Configuring and Submitting Jobs Jobs can be managed from the Jobs API or directly from the Lytics interface Each job has custom configuration options that tell the job when to run what type of data to pull which lists to pull data from in external systems how to send the data to downstream sources etc Each job s API endpoint will validate the presence of any required parameters or other conditions that must be satisfied for the job to run correctly In the event of a validation error in the job configuration the API will return a 400 error with a message indicating what is misconfigured If the configuration for the job request is valid the job will be immediately submitted to Lytics internal job running system Job State Machine Jobs running on Lytics internal job running system may be in any of the following states Runnable The job is currently running Completed The job has run successfully and is not scheduled to re run Paused The job has been manually paused and will remain so until it is unpaused or terminated Sleeping The job is in between runs and is scheduled to run again at a later point in time Failed The job has exceeded its retry limit and will not attempt to run again Terminated The job has been manually terminated and will not attempt to run again Jobs will usually first enter into a Runnable state If the job is fed input from real time triggers it will stay running unless it encounters any errors If the job runs on a batched interval it will usually switch between Runnable and Sleeping While most transitions happen automatically in the system Runnable Completed for example some are triggered manually namely From To API Route Sleeping Runnable Paused v2 job job id pause Paused Runnable v2 job job id resume Failed Runnable v2 job job id bounce Any Terminated v2 job job id kill Errors There are a variety of reasons a job will enter a Failed state including Authorization issues This is the most common reason for job failures Some authorizations can become invalid if the external system requires periodic password changes and the authorization isn t updated if tokens get revoked or if users who complete OAuth flows leave an organization and the token no longer has access to the resources it is requesting External failures Sometimes external systems can produce intermittent failures like HTTP 503 errors if the system is temporarily unavailable Because of their intermittency it s less likely that one of these errors will result in a job ending in a Failed state Internal Lytics failures While rare sometimes the availability of internal Lytics resources can cause a job to fail Because of the high availability of Lytics systems 99 9 it s unlikely that a job will be in a Failed state from Lytics internals When an error occurs the job will enter a Sleeping state and retry a minute later If an error occurs on the second attempted run the job will sleep double the amount of time as the previous run If errors still occur after two hours the job will enter a Failed state Any failed work can be manually restarted through the Job API or through the Lytics interface If for example a job is in a failed state because of an authorization issue you can create a new authorization for the job and restart it Contributing Many jobs are maintained by Lytics and even more workflows can be enabled by using our generic tooling for Webhook and SFTP based integration flows Some jobs are open sourced and run on Conductor s Opus framework for running jobs Check out our Conductor Opus Template on GiHub to get started creating your own jobs Updated 11 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lytics-platform-data-flow-and-access",
    "title": "Overview",
    "chunk_text": "Overview When data is brought into Lytics it organizes diverse data structures and tables to accommodate the customer s evolving data activation requirements This document will delve into the various data storage methods employed by Lytics and explain the purpose access and behavior of these different storage structures The Lytics Graph The system records each unique identifier ID as separate nodes within the graph structure A collection of nodes linked by edges corresponds to a singular profile The data associated with the most robust ID present in an incoming event is stored While not directly accessible via the API this information is made available through the Identity tab in the conductor The graph undergoes immediate updates upon the arrival of new events Generally the response time from a graph update to the corresponding entity ranges from milliseconds to seconds Graph view of consumer profiles in Conductor Raw Data Store The system efficiently stores every event received from Lytics both in batch and real time modes Each event includes a timestamp indicating when the event took place and when it entered the Lytics system Although this information is not directly accessible through the API or user interface UI it is possible to transmit the events downstream using our out of the box OOTB integrations such as the BigQuery BQ export feature This scenario seamlessly transfers the events from the raw storage to designated downstream tables These operations can be initiated or concluded at any given time The raw storage option also serves as a valuable resource for replaying data in the event of corrupted or malformed data ensuring data integrity throughout the account Entity Profile The system diligently maintains and stores the latest Lytics profiles ensuring their accuracy and relevance These profiles encompass various attributes such as scores and segment memberships Users can conveniently access these profiles through the user interface UI using the Decision Engine functionality Additionally the profiles can be retrieved programmatically via the API utilizing any of the existing profile IDs To facilitate this process you can reference the profile s URL in the UI which contains the necessary ID value for API access URL Example https app lytics com entity user _uids ProfileID aid AID view details The transition from data entry to the updated entity is typically swift with response times ranging from milliseconds to seconds The updated entity is a valuable resource for real time activations including trigger based exports membership in client side experiences or audiences and client side attribute updates These functionalities enable seamless and immediate user interactions based on their up to date profiles Entity view of consumer profiles in Decision Engine Segmentation The system securely stores and maintains up to date Lytics Audiences encompassing profiles and their membership within these audiences The system employs indexes on profile attributes to facilitate efficient retrieval and modifications enabling fast access to the desired data Users can conveniently access and interact with the audiences through the user interface UI using the Decision Engine feature Alternatively audiences can be accessed programmatically via the API providing flexibility for data retrieval in a one to many fashion Audiences can be created through Lytics Segment API using Segment QL offering a powerful tool for audience customization When referencing audiences in the UI the Segment ID can be found within the URL aiding API based operations URL Example https app lytics com audiences SegmentID summary aid AID As the last table to be updated after an event the audience table exhibits a slightly longer update time compared to other components However since this table is not involved in real time processes it does not impact latency or affect the responsiveness of other functionalities Note To allow the system indexes on profile attributes the creation of new fields will need to be added to this index first creating an additional delay before new fields will be visible in the audience builder The Segment feature is vital in several aspects including audience creation populating the field information tab and facilitating batch exports It is a fundamental building block for audience segmentation and targeted campaigns within the Lytics platform Audience view in Decision Engine Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lytics-platform-data-flow-and-access#content",
    "title": "Overview",
    "chunk_text": "Overview When data is brought into Lytics it organizes diverse data structures and tables to accommodate the customer s evolving data activation requirements This document will delve into the various data storage methods employed by Lytics and explain the purpose access and behavior of these different storage structures The Lytics Graph The system records each unique identifier ID as separate nodes within the graph structure A collection of nodes linked by edges corresponds to a singular profile The data associated with the most robust ID present in an incoming event is stored While not directly accessible via the API this information is made available through the Identity tab in the conductor The graph undergoes immediate updates upon the arrival of new events Generally the response time from a graph update to the corresponding entity ranges from milliseconds to seconds Graph view of consumer profiles in Conductor Raw Data Store The system efficiently stores every event received from Lytics both in batch and real time modes Each event includes a timestamp indicating when the event took place and when it entered the Lytics system Although this information is not directly accessible through the API or user interface UI it is possible to transmit the events downstream using our out of the box OOTB integrations such as the BigQuery BQ export feature This scenario seamlessly transfers the events from the raw storage to designated downstream tables These operations can be initiated or concluded at any given time The raw storage option also serves as a valuable resource for replaying data in the event of corrupted or malformed data ensuring data integrity throughout the account Entity Profile The system diligently maintains and stores the latest Lytics profiles ensuring their accuracy and relevance These profiles encompass various attributes such as scores and segment memberships Users can conveniently access these profiles through the user interface UI using the Decision Engine functionality Additionally the profiles can be retrieved programmatically via the API utilizing any of the existing profile IDs To facilitate this process you can reference the profile s URL in the UI which contains the necessary ID value for API access URL Example https app lytics com entity user _uids ProfileID aid AID view details The transition from data entry to the updated entity is typically swift with response times ranging from milliseconds to seconds The updated entity is a valuable resource for real time activations including trigger based exports membership in client side experiences or audiences and client side attribute updates These functionalities enable seamless and immediate user interactions based on their up to date profiles Entity view of consumer profiles in Decision Engine Segmentation The system securely stores and maintains up to date Lytics Audiences encompassing profiles and their membership within these audiences The system employs indexes on profile attributes to facilitate efficient retrieval and modifications enabling fast access to the desired data Users can conveniently access and interact with the audiences through the user interface UI using the Decision Engine feature Alternatively audiences can be accessed programmatically via the API providing flexibility for data retrieval in a one to many fashion Audiences can be created through Lytics Segment API using Segment QL offering a powerful tool for audience customization When referencing audiences in the UI the Segment ID can be found within the URL aiding API based operations URL Example https app lytics com audiences SegmentID summary aid AID As the last table to be updated after an event the audience table exhibits a slightly longer update time compared to other components However since this table is not involved in real time processes it does not impact latency or affect the responsiveness of other functionalities Note To allow the system indexes on profile attributes the creation of new fields will need to be added to this index first creating an additional delay before new fields will be visible in the audience builder The Segment feature is vital in several aspects including audience creation populating the field information tab and facilitating batch exports It is a fundamental building block for audience segmentation and targeted campaigns within the Lytics platform Audience view in Decision Engine Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/strategy-for-implementing-a-cdi-and-a-cdp",
    "title": "https://docs.lytics.com/docs/strategy-for-implementing-a-cdi-and-a-cdp",
    "chunk_text": "Objective This guide streamlines the integration of Customer Data Infrastructure CDI and Customer Data Platform CDP into your marketing technology framework Given the overlapping functionalities of both tools distinguishing their roles in marketing activation is crucial By clearly assigning responsibilities and adhering to best practices for each platform businesses can improve customer profiling segmentation and activation efforts all while eliminating data redundancies and streamlining processes Implementation Overview Roles and Responsibilities Give clear roles and responsibilities to each tool in order to limit duplicative processes CDI Responsibilities Focus on data collection routing and transformation Establish how it will handle website tagging and funnel web based data appropriately CDP Responsibilities Lytics Concentrate on activation segmentation and customer interactions Define the specific data that should be directly ingested into the CDP Best Practices Simultaneous Implementation Understand the end state requirements for your data in the CDP to guide the setup of your CDI avoiding redundant reconfiguration Feature Allocation Assign primary tasks e g identity resolution segmentation to one platform to reduce complexity and maintenance challenges Key Implementation Steps Define Tool Roles Clearly outline why each tool was chosen based on its strengths and intended use in your martech strategy Data Flow and Schema Align data types and formats with primary activation use cases ensuring CDI processes non marketing data and CDP focuses on customer engagement data Identity Resolution Develop a joint strategy for both platforms to unify customer profiles promptly ensuring a seamless customer journey across all touchpoints Activation Channel Allocation Specify which platform will manage client side and server side activations to prevent overlapping functionalities and increased costs Specific Considerations Client Side vs Server Side Clearly distinguish between the two utilizing each for its strengths in anonymous and known activations Unique Integrations Treat similar functionalities like JavaScript tags as distinct integrations based on their roles within each platform Ongoing Maintenance Regularly update your integration strategy within the Martech Center of Excellence to accommodate new tools and data sources ensuring consistent and efficient use of your CDI and CDP platforms This involves Integrating new data sources as per established guidelines Continuously evaluating and adapting to new features to solve existing challenges Monitor the current solution to make sure roles should not be modified By following this focused approach businesses can efficiently leverage the strengths of CDI and CDP platforms ensuring a cohesive and powerful marketing technology ecosystem Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/strategy-for-implementing-a-cdi-and-a-cdp#content",
    "title": "https://docs.lytics.com/docs/strategy-for-implementing-a-cdi-and-a-cdp#content",
    "chunk_text": "Objective This guide streamlines the integration of Customer Data Infrastructure CDI and Customer Data Platform CDP into your marketing technology framework Given the overlapping functionalities of both tools distinguishing their roles in marketing activation is crucial By clearly assigning responsibilities and adhering to best practices for each platform businesses can improve customer profiling segmentation and activation efforts all while eliminating data redundancies and streamlining processes Implementation Overview Roles and Responsibilities Give clear roles and responsibilities to each tool in order to limit duplicative processes CDI Responsibilities Focus on data collection routing and transformation Establish how it will handle website tagging and funnel web based data appropriately CDP Responsibilities Lytics Concentrate on activation segmentation and customer interactions Define the specific data that should be directly ingested into the CDP Best Practices Simultaneous Implementation Understand the end state requirements for your data in the CDP to guide the setup of your CDI avoiding redundant reconfiguration Feature Allocation Assign primary tasks e g identity resolution segmentation to one platform to reduce complexity and maintenance challenges Key Implementation Steps Define Tool Roles Clearly outline why each tool was chosen based on its strengths and intended use in your martech strategy Data Flow and Schema Align data types and formats with primary activation use cases ensuring CDI processes non marketing data and CDP focuses on customer engagement data Identity Resolution Develop a joint strategy for both platforms to unify customer profiles promptly ensuring a seamless customer journey across all touchpoints Activation Channel Allocation Specify which platform will manage client side and server side activations to prevent overlapping functionalities and increased costs Specific Considerations Client Side vs Server Side Clearly distinguish between the two utilizing each for its strengths in anonymous and known activations Unique Integrations Treat similar functionalities like JavaScript tags as distinct integrations based on their roles within each platform Ongoing Maintenance Regularly update your integration strategy within the Martech Center of Excellence to accommodate new tools and data sources ensuring consistent and efficient use of your CDI and CDP platforms This involves Integrating new data sources as per established guidelines Continuously evaluating and adapting to new features to solve existing challenges Monitor the current solution to make sure roles should not be modified By following this focused approach businesses can efficiently leverage the strengths of CDI and CDP platforms ensuring a cohesive and powerful marketing technology ecosystem Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lytics-zero-copy-with-cloud-connect",
    "title": "https://docs.lytics.com/docs/lytics-zero-copy-with-cloud-connect",
    "chunk_text": "Overview As the landscape of data strategies within the Customer Data Platform CDP area progresses cloud warehouses have emerged as a core element of the overarching marketing technology martech strategy Centralizing customer data in a single repository enables enhanced comprehensive customer insights while reducing exposure and failure points throughout the data pipeline Nonetheless this centralization poses the challenge of effectively leveraging this wealth of data across the martech stack for maximum value with minimal risk of additional data exposure and duplication How it Works Lytics has developed the Cloud Connect product to address this which serves as a materialized layer atop the cloud warehouse and facilitates direct segmentation and activation This model allows customers to employ either SQL or AI to craft consumer audiences which can subsequently be activated downstream Importantly this method does not involve long term data storage within Lytics but instead generates a transient profile context that disappears once the Cloud Connect model is deleted Advantages of This Approach This strategy leverages the Zero Copy approach utilizing Lytics identification and data science capabilities Hence it transcends the limitations of data stored in the customer warehouse Cloud Connect audiences can be enriched with Lytics behavioral scores profile affinities content recommendations and predictive models alongside Lytics top tier identity solution Consequently Lytics customers can implement a dynamic maintenance light activation strategy over time Updated 11 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lytics-zero-copy-with-cloud-connect#content",
    "title": "https://docs.lytics.com/docs/lytics-zero-copy-with-cloud-connect#content",
    "chunk_text": "Overview As the landscape of data strategies within the Customer Data Platform CDP area progresses cloud warehouses have emerged as a core element of the overarching marketing technology martech strategy Centralizing customer data in a single repository enables enhanced comprehensive customer insights while reducing exposure and failure points throughout the data pipeline Nonetheless this centralization poses the challenge of effectively leveraging this wealth of data across the martech stack for maximum value with minimal risk of additional data exposure and duplication How it Works Lytics has developed the Cloud Connect product to address this which serves as a materialized layer atop the cloud warehouse and facilitates direct segmentation and activation This model allows customers to employ either SQL or AI to craft consumer audiences which can subsequently be activated downstream Importantly this method does not involve long term data storage within Lytics but instead generates a transient profile context that disappears once the Cloud Connect model is deleted Advantages of This Approach This strategy leverages the Zero Copy approach utilizing Lytics identification and data science capabilities Hence it transcends the limitations of data stored in the customer warehouse Cloud Connect audiences can be enriched with Lytics behavioral scores profile affinities content recommendations and predictive models alongside Lytics top tier identity solution Consequently Lytics customers can implement a dynamic maintenance light activation strategy over time Updated 11 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/pipeline",
    "title": "https://docs.lytics.com/docs/pipeline",
    "chunk_text": "Welcome to the Pipeline Profiles section where we will explore data management and analysis fundamentals This section will delve into the concepts of data streams data sources and queries LQL Data Sources refers to the origin of the data and how you can leverage hundreds of different out of the box integrations or APIs to aggregate your data from disparate channels Data Streams outline how to control and monitor data that is being streamed into the Lytics platform Queries LQL breaks down our core query language and capabilities for transforming and unifying your data Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/pipeline#content",
    "title": "https://docs.lytics.com/docs/pipeline#content",
    "chunk_text": "Welcome to the Pipeline Profiles section where we will explore data management and analysis fundamentals This section will delve into the concepts of data streams data sources and queries LQL Data Sources refers to the origin of the data and how you can leverage hundreds of different out of the box integrations or APIs to aggregate your data from disparate channels Data Streams outline how to control and monitor data that is being streamed into the Lytics platform Queries LQL breaks down our core query language and capabilities for transforming and unifying your data Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-sources",
    "title": "Introduction",
    "chunk_text": "Introduction Consumers engage with your brand across many channels resulting in vast amounts of rich behavioral data siloed away across various channel tools Lytics connects to these channels via Jobs to aggregate and unify that data into a comprehensive view of the customer This enables you to gain deeper insights create personalized experiences and drive revenue The landscape in which your consumers interact is broad To ensure Lytics makes it easy to both collect and deliver essential data insights and audiences we have a variety of integration options The Basics Import Jobs are managed by Lytics and are responsible for automating where applicable the process of Authenticating and managing a connection to an external system Gathering data from an external system and ingesting it in Lytics on sensible data streams Handling errors and retry logic Determining the cadence at which the job should run again Similarly Export Jobs are managed by Lytics and are responsible for automating where applicable the process of Authenticating and managing a connection to an external system Gathering data like user attributes audiences or events from Lytics and exporting it to an external system Handling errors and retry logic Determining the cadence at which the job should run again Adding a new Job New data import Jobs are added from the Conductor interface by first navigating to the Jobs section under the Pipeline section in the main navigation From there you ll click Create New at the top of the list and enter the wizard to guide you through the creation process Configuring a Job Select a Provider Each Job is first categorized by the provider making it easy to narrow down the channel you d like to integrate with To select a provider click the tile representing your desired provider such as Google Select Job Type With the provider selected we ll surface the various ways you can integrate with that particular provider This will vary significantly by the provider Select Authorization Method Each provider and job type may require additional authorization to finalize the connection On the select authorization step you can either select an existing authorization or create a new one When creating a new authorization you will be asked to provide the required credentials such as key and secret to proceed Create New Authorization You can create it during source configuration if you lack valid authorization for your desired provider source combination Click Create new Authorization above the list follow the wizard in Vault and return to where you left off Configure Job The final step lets you provide the specific configuration details for your chosen provider and job type Again the options supported by each provider will vary greatly and provider specific integration details should be leveraged to determine the optimal approach Monitoring a Job Once you have one or more Source jobs running they will be accessible from the Source list view as pictured below This view provides quick access to essential details Name Name of job such as Export of High Value Users to Facebook Authorization Name of the associated authorization Provider Third party tool that you are connecting with Lytics Type Indicates whether the job is an import export or enrichment Status Current state of a job such as running paused completed etc Created Date the job was initially created Job Status Detailed states are provided to understand better what is happening in the background during a job s lifecycle These states will vary by job but include Job Status Description Running The job is actively running Sleeping The job is not actively running but is scheduled to run again after a given period A job is sleeping either because the job runs on a periodic cadence with scheduled sleep in between job runs or the job has encountered an error and is sleeping before retrying the request Failed The job has encountered consecutive errors over 10 hours and is removed from running again Check the logs to see if there are any fixable issues Failed works can be resumed which will schedule it to run again Failed jobs will be automatically purged after 90 days Paused A user has paused the job The work can be scheduled to run again by resuming the job Paused works will be automatically purged after 90 days Completed The job has completed all its scheduled tasks and will not be rerun These will be purged from the job history after 90 days For more information on job states or troubleshooting failed jobs see job processing Job Summary Clicking on any of the items in the Source list will navigate to its dedicated summary view for greater detail This summary provides all the relevant information about each job you ve created in Lytics and an entry point to alter the configuration or status At the top of the Job Summary page you ll find the following quick access information Status Indicates the current state of a job See the table below for descriptions of each status Provider Third party tool that you are connecting with Lytics such as Facebook Google Mailchimp etc Type Indicates whether the job is an import export or enrichment Job Name Name of the job such as Import Users Activity or Export Audiences Authorization Name of the authorization such as Main Salesforce auth Created By Lytics user who created the authorization Last Updated Date the job was most recently edited You can edit the name and description of an existing job from its summary page to improve the organization and clarity of your account s list of jobs Metrics The activity chart will provide metrics if available on a job s performance to give a better understanding of how your data is flowing in and out of Lytics You can see the number of profiles the job added removed or omitted during the selected time frame Note this feature is currently in development Once metrics are available for each job this chart will become populated Configuration The configuration section displays a JSON view of your job s current configuration This includes details such as the authorization used where data is coming from which data is being pulled in etc Logs The Logs section records the history of events for this job details about the work completed and the time each job was run The logs are helpful to ensure your work is running as expected and for troubleshooting if any issues arise Below are descriptions of the job events you may see in the logs Job Events Description Started The job has started running for the first time Synced The job has completed a unit of work successfully and will continue to run Error The job has encountered an error and will retry automatically Sleeping The job is currently sleeping due to external restrictions such as hitting a provider s API limits Failed The job has encountered consecutive errors over 10 hours and is removed from running again Completed The job has completed all its scheduled tasks and will not be rerun Backfilling Data Some use cases involve having historical data available for segmentation This data might be demographic in nature or describe how customers prefer to be contacted This document offers guidelines for cases where large amounts of this data must be available in your Lytics account Best Practices Separate Backfill from Real time Streams A real time data stream contains messages sent in response to the activity they describe This is distinguished from batched data streams where messages are sent in groups on a given schedule or according to another trigger For attributes that will be kept updated by a real time stream there is the additional requirement to populate that attribute with a substantial amount of pre existing information separating that backfilling from now forward messages Backfill messages can be sent using multiple means API loads should be sent via the bulk CSV or bulk JSON endpoints It is also possible to use integration workflows to import this data such as Amazon Web Services AWS S3 The benefit of separating this data from real time message streams is that the processing of backfill messages does not impact the processing time of messages received from real time streams The bulk imports are processed in parallel to real time messages This means that marketing activations reliant on real time updates are not affected Utilize Timestamps Whenever possible all messages should have an explicit timestamp While all messages are additionally time stamped by Lytics at the time of ingestion specifying a message timestamp is helpful in all circumstances particularly in cases when messages are received out of order so that Lytics knows which one is the most up to date It is essential when a backfill occurs concurrently with a real time stream of the same attribute All means of loading data permit specifying timestamps Via API this is via a timestamp_field URL parameter In the Admin UI data import configuration options feature a menu to pick among the file schema for a timestamp field Evaluate Necessity All messages imported into your Lytics account are stored in their raw form and represented as profile attributes in the graph The purpose of storing all messages is to enable the reprocessing of those messages a process called rebuilding Rebuilding enables all received messages to be represented differently with different attributes identity resolution rules etc All data ingested into Lytics incrementally increase the overhead of rebuilding making it a longer and more processing intensive operation Therefore before importing large amounts of data consider the value benefit of that data If there is no clear use case for backfilling consider skipping it Updated 6 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-sources#content",
    "title": "Introduction",
    "chunk_text": "Introduction Consumers engage with your brand across many channels resulting in vast amounts of rich behavioral data siloed away across various channel tools Lytics connects to these channels via Jobs to aggregate and unify that data into a comprehensive view of the customer This enables you to gain deeper insights create personalized experiences and drive revenue The landscape in which your consumers interact is broad To ensure Lytics makes it easy to both collect and deliver essential data insights and audiences we have a variety of integration options The Basics Import Jobs are managed by Lytics and are responsible for automating where applicable the process of Authenticating and managing a connection to an external system Gathering data from an external system and ingesting it in Lytics on sensible data streams Handling errors and retry logic Determining the cadence at which the job should run again Similarly Export Jobs are managed by Lytics and are responsible for automating where applicable the process of Authenticating and managing a connection to an external system Gathering data like user attributes audiences or events from Lytics and exporting it to an external system Handling errors and retry logic Determining the cadence at which the job should run again Adding a new Job New data import Jobs are added from the Conductor interface by first navigating to the Jobs section under the Pipeline section in the main navigation From there you ll click Create New at the top of the list and enter the wizard to guide you through the creation process Configuring a Job Select a Provider Each Job is first categorized by the provider making it easy to narrow down the channel you d like to integrate with To select a provider click the tile representing your desired provider such as Google Select Job Type With the provider selected we ll surface the various ways you can integrate with that particular provider This will vary significantly by the provider Select Authorization Method Each provider and job type may require additional authorization to finalize the connection On the select authorization step you can either select an existing authorization or create a new one When creating a new authorization you will be asked to provide the required credentials such as key and secret to proceed Create New Authorization You can create it during source configuration if you lack valid authorization for your desired provider source combination Click Create new Authorization above the list follow the wizard in Vault and return to where you left off Configure Job The final step lets you provide the specific configuration details for your chosen provider and job type Again the options supported by each provider will vary greatly and provider specific integration details should be leveraged to determine the optimal approach Monitoring a Job Once you have one or more Source jobs running they will be accessible from the Source list view as pictured below This view provides quick access to essential details Name Name of job such as Export of High Value Users to Facebook Authorization Name of the associated authorization Provider Third party tool that you are connecting with Lytics Type Indicates whether the job is an import export or enrichment Status Current state of a job such as running paused completed etc Created Date the job was initially created Job Status Detailed states are provided to understand better what is happening in the background during a job s lifecycle These states will vary by job but include Job Status Description Running The job is actively running Sleeping The job is not actively running but is scheduled to run again after a given period A job is sleeping either because the job runs on a periodic cadence with scheduled sleep in between job runs or the job has encountered an error and is sleeping before retrying the request Failed The job has encountered consecutive errors over 10 hours and is removed from running again Check the logs to see if there are any fixable issues Failed works can be resumed which will schedule it to run again Failed jobs will be automatically purged after 90 days Paused A user has paused the job The work can be scheduled to run again by resuming the job Paused works will be automatically purged after 90 days Completed The job has completed all its scheduled tasks and will not be rerun These will be purged from the job history after 90 days For more information on job states or troubleshooting failed jobs see job processing Job Summary Clicking on any of the items in the Source list will navigate to its dedicated summary view for greater detail This summary provides all the relevant information about each job you ve created in Lytics and an entry point to alter the configuration or status At the top of the Job Summary page you ll find the following quick access information Status Indicates the current state of a job See the table below for descriptions of each status Provider Third party tool that you are connecting with Lytics such as Facebook Google Mailchimp etc Type Indicates whether the job is an import export or enrichment Job Name Name of the job such as Import Users Activity or Export Audiences Authorization Name of the authorization such as Main Salesforce auth Created By Lytics user who created the authorization Last Updated Date the job was most recently edited You can edit the name and description of an existing job from its summary page to improve the organization and clarity of your account s list of jobs Metrics The activity chart will provide metrics if available on a job s performance to give a better understanding of how your data is flowing in and out of Lytics You can see the number of profiles the job added removed or omitted during the selected time frame Note this feature is currently in development Once metrics are available for each job this chart will become populated Configuration The configuration section displays a JSON view of your job s current configuration This includes details such as the authorization used where data is coming from which data is being pulled in etc Logs The Logs section records the history of events for this job details about the work completed and the time each job was run The logs are helpful to ensure your work is running as expected and for troubleshooting if any issues arise Below are descriptions of the job events you may see in the logs Job Events Description Started The job has started running for the first time Synced The job has completed a unit of work successfully and will continue to run Error The job has encountered an error and will retry automatically Sleeping The job is currently sleeping due to external restrictions such as hitting a provider s API limits Failed The job has encountered consecutive errors over 10 hours and is removed from running again Completed The job has completed all its scheduled tasks and will not be rerun Backfilling Data Some use cases involve having historical data available for segmentation This data might be demographic in nature or describe how customers prefer to be contacted This document offers guidelines for cases where large amounts of this data must be available in your Lytics account Best Practices Separate Backfill from Real time Streams A real time data stream contains messages sent in response to the activity they describe This is distinguished from batched data streams where messages are sent in groups on a given schedule or according to another trigger For attributes that will be kept updated by a real time stream there is the additional requirement to populate that attribute with a substantial amount of pre existing information separating that backfilling from now forward messages Backfill messages can be sent using multiple means API loads should be sent via the bulk CSV or bulk JSON endpoints It is also possible to use integration workflows to import this data such as Amazon Web Services AWS S3 The benefit of separating this data from real time message streams is that the processing of backfill messages does not impact the processing time of messages received from real time streams The bulk imports are processed in parallel to real time messages This means that marketing activations reliant on real time updates are not affected Utilize Timestamps Whenever possible all messages should have an explicit timestamp While all messages are additionally time stamped by Lytics at the time of ingestion specifying a message timestamp is helpful in all circumstances particularly in cases when messages are received out of order so that Lytics knows which one is the most up to date It is essential when a backfill occurs concurrently with a real time stream of the same attribute All means of loading data permit specifying timestamps Via API this is via a timestamp_field URL parameter In the Admin UI data import configuration options feature a menu to pick among the file schema for a timestamp field Evaluate Necessity All messages imported into your Lytics account are stored in their raw form and represented as profile attributes in the graph The purpose of storing all messages is to enable the reprocessing of those messages a process called rebuilding Rebuilding enables all received messages to be represented differently with different attributes identity resolution rules etc All data ingested into Lytics incrementally increase the overhead of rebuilding making it a longer and more processing intensive operation Therefore before importing large amounts of data consider the value benefit of that data If there is no clear use case for backfilling consider skipping it Updated 6 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-streams-1",
    "title": "Introduction",
    "chunk_text": "Introduction A data stream is a continuous flow of data generated from various sources such as websites mobile apps email providers social media and other digital platforms Data streams typically involve high volumes of data generated in real time or near real time making it necessary to process and analyze the data as it arrives Lytics allows for creating any number of data streams to provide logical distinctions among data sources in either type or scope For example data describing email subscriber attributes should exist on a different data stream than one describing email subscriber activity This ensures maximum flexibility when defining the relationships between sources and how they ultimately are unified into a materialized user profile What is an event In Lytics an event is an action or activity performed by a user or a customer such as visiting a website purchasing or subscribing to a newsletter As pictured below events are showcased as independent key value pairs on a single data stream These keys are then translated into Fields Mappings in order to materialize to user profile for segmentation Exploring Data Streams Lytics will ingest data that is sent to one of Lytics Collection APIs the collect API or the bulk API The bulk API is generally intended for larger imports of offline data while the collect API is generally intended for more real time sources and usage Viewing Your Data Streams You can view information about your data streams in your Lytics dashboard by navigating to Conductor Pipeline Streams The primary purpose of this section is to verify that data is successfully being received by Lytics If your account has multiple data streams you can view a different stream from the dropdown menu above the graph Many integrations have multiple streams For instance it is common for email integrations to have an activity stream and a user stream Integration streams should be prefixed to help identify the source You can find the streams for integration under the documentation for that integration The number of keys in a data stream can be extremely large This is normal and does not impact performance Any keys that comprise less than 0 1 of the data volume OR have not been seen in 7 days will be hidden from display to reduce clutter Event Ingress Graph The event ingress graph shows the number of events collected on a stream for the selected time period past day week month 3 months and year and interval hourly daily weekly and monthly Above the graph you will find the time the last message from this stream was received the source of the data stream and the number of fields in the stream Last message received strives for real time reporting but can lag under a number of conditions including during bulk imports If a data stream is not updating as expected please contact Lytics Support for assistance Raw Keys Table Below the event ingress graph is the raw keys table An event may contain any number of key value pairs Each record in this table represents a unique raw key seen on the stream in at least one event The table has the following information on keys Column Description Name The name of the key Predicted Type The assumed data type for the value is determined by sampling the values received First Seen The date the key was first seen according to the date of the event Last Seen The last time a key was seen according to the date of the event Times Seen The number of events that contained the key Unique Values The number of different values seen Times Used The number of user fields that use the key In addition to these seven columns each record in the table can be clicked to open up a set of sample values This can be used to verify that values are being collected and they match the expected data If a key has many different values the modal may not display all the values for the chosen key The table can be filtered in three ways used vs unused common vs uncommon and text search Filter Description Used A raw key that is mapped to a user field Unused Raw keys are collected and stored but never mapped to user fields Common Raw keys that have been seen more often on events relative to other raw keys based on the times seen value Uncommon Raw keys are seldom seen on events relative to other raw keys Hiding Keys Raw event keys can be hidden but it is important to note that keys cannot be made visible again through the user interface only through the API It is recommended that a list is kept of hidden keys in the event one needs to be resurfaced at a later date If you need assistance please contact Lytics Support with your key name and account ID To hide a key Select the checkbox next to the name of the key or keys Click Remove selected key Final Thoughts Having logically differentiated data streams for different data sources also helps to facilitate a more straightforward process for mapping data from data sources to user profiles However integrating data from some data providers can make this distinction difficult For example data routers like Segment or Rudderstack can route data from multiple sources into a single destination like Lytics Updated 10 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-streams-1#content",
    "title": "Introduction",
    "chunk_text": "Introduction A data stream is a continuous flow of data generated from various sources such as websites mobile apps email providers social media and other digital platforms Data streams typically involve high volumes of data generated in real time or near real time making it necessary to process and analyze the data as it arrives Lytics allows for creating any number of data streams to provide logical distinctions among data sources in either type or scope For example data describing email subscriber attributes should exist on a different data stream than one describing email subscriber activity This ensures maximum flexibility when defining the relationships between sources and how they ultimately are unified into a materialized user profile What is an event In Lytics an event is an action or activity performed by a user or a customer such as visiting a website purchasing or subscribing to a newsletter As pictured below events are showcased as independent key value pairs on a single data stream These keys are then translated into Fields Mappings in order to materialize to user profile for segmentation Exploring Data Streams Lytics will ingest data that is sent to one of Lytics Collection APIs the collect API or the bulk API The bulk API is generally intended for larger imports of offline data while the collect API is generally intended for more real time sources and usage Viewing Your Data Streams You can view information about your data streams in your Lytics dashboard by navigating to Conductor Pipeline Streams The primary purpose of this section is to verify that data is successfully being received by Lytics If your account has multiple data streams you can view a different stream from the dropdown menu above the graph Many integrations have multiple streams For instance it is common for email integrations to have an activity stream and a user stream Integration streams should be prefixed to help identify the source You can find the streams for integration under the documentation for that integration The number of keys in a data stream can be extremely large This is normal and does not impact performance Any keys that comprise less than 0 1 of the data volume OR have not been seen in 7 days will be hidden from display to reduce clutter Event Ingress Graph The event ingress graph shows the number of events collected on a stream for the selected time period past day week month 3 months and year and interval hourly daily weekly and monthly Above the graph you will find the time the last message from this stream was received the source of the data stream and the number of fields in the stream Last message received strives for real time reporting but can lag under a number of conditions including during bulk imports If a data stream is not updating as expected please contact Lytics Support for assistance Raw Keys Table Below the event ingress graph is the raw keys table An event may contain any number of key value pairs Each record in this table represents a unique raw key seen on the stream in at least one event The table has the following information on keys Column Description Name The name of the key Predicted Type The assumed data type for the value is determined by sampling the values received First Seen The date the key was first seen according to the date of the event Last Seen The last time a key was seen according to the date of the event Times Seen The number of events that contained the key Unique Values The number of different values seen Times Used The number of user fields that use the key In addition to these seven columns each record in the table can be clicked to open up a set of sample values This can be used to verify that values are being collected and they match the expected data If a key has many different values the modal may not display all the values for the chosen key The table can be filtered in three ways used vs unused common vs uncommon and text search Filter Description Used A raw key that is mapped to a user field Unused Raw keys are collected and stored but never mapped to user fields Common Raw keys that have been seen more often on events relative to other raw keys based on the times seen value Uncommon Raw keys are seldom seen on events relative to other raw keys Hiding Keys Raw event keys can be hidden but it is important to note that keys cannot be made visible again through the user interface only through the API It is recommended that a list is kept of hidden keys in the event one needs to be resurfaced at a later date If you need assistance please contact Lytics Support with your key name and account ID To hide a key Select the checkbox next to the name of the key or keys Click Remove selected key Final Thoughts Having logically differentiated data streams for different data sources also helps to facilitate a more straightforward process for mapping data from data sources to user profiles However integrating data from some data providers can make this distinction difficult For example data routers like Segment or Rudderstack can route data from multiple sources into a single destination like Lytics Updated 10 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/stream-routing-api",
    "title": "https://docs.lytics.com/docs/stream-routing-api",
    "chunk_text": "WHERE Clauses Route Rules V2 Conductor Schema does not have a direct analog for WHERE clauses in V1 schema or LQL In V1 for example it was possible to describe a clause to filter data that is mapped for a stream such as the following which ignores events whose _url field contains the string localhost WHERE not contains _url localhost To achieve the same result in accounts with Conductor Schema turned on we need to use the Stream Route Rules API whose endpoints include the following GET v2 stream rule retrieves a list of all route rules defined in the account GET v2 stream rule id retrieves a single route rule by its ID POST v2 stream rule creates a new route rule POST PUT v2 stream rule id upserts an existing route rule by its ID DELETE v2 stream rule id deletes an existing route rule by its ID Route rules define data to route from one input stream to another output stream On ingress the stream on the record is overwritten from input to output if the rule is active and evaluates to true when executed against the incoming record The mechanics of this imply one important distinction relative to V1 WHERE clauses since route rules describe which records to redirect away from the input stream rather than which records to evaluate for the input stream they are in effect the inverse of WHERE clauses If for example we want to ignore urls containing the string localhost from our input stream app in the WHERE clause above we would need to define a route rule containing the following expression which is the precise inverse of our WHERE clause WHERE contains _url localhost This tells the system to redirect events matching this expression to a new output stream we define on the route rule object By convention if we don t care about mapping records that match our route rule we call that output stream input stream _divert and define the following route rule object note the need to escape double quotes inside the expression so that our object is valid JSON account_id 4f7b525bdba058fc096757a6 active true aid 12 expression contains _url localhost input app name Ignore events from localhost output app_divert priority 1 Note If there is a use case to take all events and route them to the output stream the expression can hold the string value of true instead of a logic condition i e expression true Our object includes several properties which should be self explanatory account_id aid and name The rest are as follows active defines whether the rule should be activated against incoming data Marking a rule as active false turns it off priority indicates the order in which the rules are evaluated higher priority first against an event secondary sorting according the age newer rules first is performed when priorities match Note that because these route rules are cached it will take up to 10 minutes for any updates you make to take effect Example To create our sample route rule we make the following call If successful the response body will include the full route rule object including a system generated ID which can be used for subsequent calls against the object Bash echo account_id 4f7b525bdba058fc096757a6 active true aid 12 expression contains _url localhost input app name Ignore events from localhost output app_divert priority 1 http POST LIOAPIPROD v2 stream rule Authorization LIOTOKEN account_id 4f7b525bdba058fc096757a6 Routing Tips and Tricks Exporting Routed Data When data is routed from the input stream to the output stream Lytics will associate the raw routed data to the output stream This means when a raw activity data is exported the data that was routed will be associated with the output stream only Behavior Scoring on Streams An optional feature with all streams is to add Behavioral Scoring to selected streams If a behavioral scores are desired for a specific stream make sure the stream that is being targeted is the routing output stream and not the input stream Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/stream-routing-api#content",
    "title": "https://docs.lytics.com/docs/stream-routing-api#content",
    "chunk_text": "WHERE Clauses Route Rules V2 Conductor Schema does not have a direct analog for WHERE clauses in V1 schema or LQL In V1 for example it was possible to describe a clause to filter data that is mapped for a stream such as the following which ignores events whose _url field contains the string localhost WHERE not contains _url localhost To achieve the same result in accounts with Conductor Schema turned on we need to use the Stream Route Rules API whose endpoints include the following GET v2 stream rule retrieves a list of all route rules defined in the account GET v2 stream rule id retrieves a single route rule by its ID POST v2 stream rule creates a new route rule POST PUT v2 stream rule id upserts an existing route rule by its ID DELETE v2 stream rule id deletes an existing route rule by its ID Route rules define data to route from one input stream to another output stream On ingress the stream on the record is overwritten from input to output if the rule is active and evaluates to true when executed against the incoming record The mechanics of this imply one important distinction relative to V1 WHERE clauses since route rules describe which records to redirect away from the input stream rather than which records to evaluate for the input stream they are in effect the inverse of WHERE clauses If for example we want to ignore urls containing the string localhost from our input stream app in the WHERE clause above we would need to define a route rule containing the following expression which is the precise inverse of our WHERE clause WHERE contains _url localhost This tells the system to redirect events matching this expression to a new output stream we define on the route rule object By convention if we don t care about mapping records that match our route rule we call that output stream input stream _divert and define the following route rule object note the need to escape double quotes inside the expression so that our object is valid JSON account_id 4f7b525bdba058fc096757a6 active true aid 12 expression contains _url localhost input app name Ignore events from localhost output app_divert priority 1 Note If there is a use case to take all events and route them to the output stream the expression can hold the string value of true instead of a logic condition i e expression true Our object includes several properties which should be self explanatory account_id aid and name The rest are as follows active defines whether the rule should be activated against incoming data Marking a rule as active false turns it off priority indicates the order in which the rules are evaluated higher priority first against an event secondary sorting according the age newer rules first is performed when priorities match Note that because these route rules are cached it will take up to 10 minutes for any updates you make to take effect Example To create our sample route rule we make the following call If successful the response body will include the full route rule object including a system generated ID which can be used for subsequent calls against the object Bash echo account_id 4f7b525bdba058fc096757a6 active true aid 12 expression contains _url localhost input app name Ignore events from localhost output app_divert priority 1 http POST LIOAPIPROD v2 stream rule Authorization LIOTOKEN account_id 4f7b525bdba058fc096757a6 Routing Tips and Tricks Exporting Routed Data When data is routed from the input stream to the output stream Lytics will associate the raw routed data to the output stream This means when a raw activity data is exported the data that was routed will be associated with the output stream only Behavior Scoring on Streams An optional feature with all streams is to add Behavioral Scoring to selected streams If a behavioral scores are desired for a specific stream make sure the stream that is being targeted is the routing output stream and not the input stream Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/templates-1",
    "title": "Overview",
    "chunk_text": "Overview Lytics Templates are used with the Lytics Webhook Export workflow provide a powerful interface for users to create bespoke real time integrations with arbitrary third party API destinations Templates can be defined in the UI or via Lytics APIs to configure the payload and profile data that would be passed Templates created using the API can be defined in Jsonnet Handlebars Once made they can be selected for use in a Webhook Export executing against the outgoing payload for each request Viewing Templates Templates are available in the Lytics UI under the Data Pipeline section The Templates Overview page shows all the templates in an account as well as an action button to create a new template Creating Templates The instructions for creating templates in the UI will differ from those via the API Depending on the desired method visit one of the following documents Creating Templates in the UI Creating Templates using the API Using the jsonnet Library Template Examples Activating Templates To activate a template create a Webhook Export job See the Lytics Webhooks documentation for full instructions on configuring outgoing webhooks From the Lytics Template dropdown menu select the template you would like to activate against each outgoing request Using Templates Once you have created your first Template you can find it in the Template List view and click on it to access the individual Template From this view you can create Webhooks to export users or events using your Template by clicking on the Create New button This view will show all of the Webhooks associated with your Template Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/templates-1#content",
    "title": "Overview",
    "chunk_text": "Overview Lytics Templates are used with the Lytics Webhook Export workflow provide a powerful interface for users to create bespoke real time integrations with arbitrary third party API destinations Templates can be defined in the UI or via Lytics APIs to configure the payload and profile data that would be passed Templates created using the API can be defined in Jsonnet Handlebars Once made they can be selected for use in a Webhook Export executing against the outgoing payload for each request Viewing Templates Templates are available in the Lytics UI under the Data Pipeline section The Templates Overview page shows all the templates in an account as well as an action button to create a new template Creating Templates The instructions for creating templates in the UI will differ from those via the API Depending on the desired method visit one of the following documents Creating Templates in the UI Creating Templates using the API Using the jsonnet Library Template Examples Activating Templates To activate a template create a Webhook Export job See the Lytics Webhooks documentation for full instructions on configuring outgoing webhooks From the Lytics Template dropdown menu select the template you would like to activate against each outgoing request Using Templates Once you have created your first Template you can find it in the Template List view and click on it to access the individual Template From this view you can create Webhooks to export users or events using your Template by clicking on the Create New button This view will show all of the Webhooks associated with your Template Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/ui-templates",
    "title": "Creating Templates",
    "chunk_text": "Creating Templates Clicking the Create New button will open a wizard that will guide you through creating a new Template The first step involves selecting a Name Description Data Type and Template Type The Data Type allows you to select the type of data used by the Template either User or Event the default option is User The Template Type configures the type of templating language used by the Template either Jsonnet or Handlebars js After clicking Next you will be guided to the Template configuration page where you must first select the type of Sample Data used by the Template If the User data type was selected you will see a dummy user comprised of all of the fields in the user schema or the option to search for a user If the Event data type was selected in the previous step the Sample Data will be populated by a recent event from the selected stream Once the Sample Data has been selected Step 2 involves specifying your desired JSON structure for your destination in the Template Co Pilot text box Consider the example below where we specify the structure of our JSON payload with fields such as _uid last_active_ts last_name and pillowcase_affinity derived from the lytics_content field We are also using the Find a User feature to populate the Sample Data Note this example is using the Additional Prompt text box to assist the Co Pilot in generating the template Here we are instructing the Co Pilot to use the lytics_content field to derive the pillowcase_affinity template field Once Generate Template has been clicked the text box in 3 will populate with the template With the previous example the following template has been generated The Template contains all of the data specified in Step 2 and the Output to the right shows the Template applied to the Sample Data We can see that the pillowcase_affinity was derived from the lytics_content field as well as the other fields specified in the Template Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/ui-templates#content",
    "title": "Creating Templates",
    "chunk_text": "Creating Templates Clicking the Create New button will open a wizard that will guide you through creating a new Template The first step involves selecting a Name Description Data Type and Template Type The Data Type allows you to select the type of data used by the Template either User or Event the default option is User The Template Type configures the type of templating language used by the Template either Jsonnet or Handlebars js After clicking Next you will be guided to the Template configuration page where you must first select the type of Sample Data used by the Template If the User data type was selected you will see a dummy user comprised of all of the fields in the user schema or the option to search for a user If the Event data type was selected in the previous step the Sample Data will be populated by a recent event from the selected stream Once the Sample Data has been selected Step 2 involves specifying your desired JSON structure for your destination in the Template Co Pilot text box Consider the example below where we specify the structure of our JSON payload with fields such as _uid last_active_ts last_name and pillowcase_affinity derived from the lytics_content field We are also using the Find a User feature to populate the Sample Data Note this example is using the Additional Prompt text box to assist the Co Pilot in generating the template Here we are instructing the Co Pilot to use the lytics_content field to derive the pillowcase_affinity template field Once Generate Template has been clicked the text box in 3 will populate with the template With the previous example the following template has been generated The Template contains all of the data specified in Step 2 and the Output to the right shows the Template applied to the Sample Data We can see that the pillowcase_affinity was derived from the lytics_content field as well as the other fields specified in the Template Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/api-created-templates",
    "title": "Creating Templates",
    "chunk_text": "Creating Templates Templates can be created tested and managed using the Lytics Template APIs Full API documentation can be found here To create a template simply submit a Jsonnet or Handlebars file to the v2 template endpoint like this see below for more information on using the lytemplates libsonnet library in Jsonnet templates Write to template file echo local event import lytemplates libsonnet local emailField event jobConfGet email_field email local userEmail event get emailField local errorMsg if userEmail then Profile missing email email_address userEmail email_address_sha256 event sha256 userEmail if event isEnter then lytics_audience event segSlug if event has first_name then first_name event get first_name test jsonnet Create template request http POST LIOAPI v2 template name test template type jsonnet description A test template for demos Authorization LIOTOKEN account_id LIOACCTID test jsonnet Create template response HTTP 1 1 200 OK Content Encoding gzip Content Length 228 Content Type application json Date Wed 20 Sep 2023 21 10 45 GMT Request Id 2a42314b 57fa 11ee bc0f 0242ac110039 Server lytics io data created 2023 09 20T20 38 24 579029236Z description A test template for demos id 83d1439ff457ab94377e697180e8f8f1 name test template type jsonnet updated 2023 09 20T20 38 24 579029236Z request_id 2a42314b 57fa 11ee bc0f 0242ac110039 status 200 The endpoint requires name and type query parameters An optional description can also be included Testing Templates Once templates have been created the v2 template id test endpoint makes it easy to test the template s behavior given a particular job configuration and outgoing user profile A configuration can be included in your request as well as a custom entity profile If no entity is included in the request the API will auto generate one from your Lytics user table schema Request echo job_config email_field email entity email email protected first_name Tester segment_events id e4c8ef6712fc40d76d8202394095f3a6 slug test_audience event enter enter 2017 10 15T19 12 00 661749884Z http POST LIOAPI v2 template 83d1439ff457ab94377e697180e8f8f1 test Authorization LIOTOKEN Response HTTP 1 1 200 OK Content Encoding gzip Content Length 222 Content Type application json Date Wed 20 Sep 2023 20 53 16 GMT Request Id b8cd77f4 57f7 11ee bc0f 0242ac110039 Server lytics io data n email_address email protected n email_address_sha256 e43763399e5318f14cd7473c4902a6b319343d577ec8283898a5edf9dbc6d711 n first_name Tester n lytics_audience test_audience n n request_id b8cd77f4 57f7 11ee bc0f 0242ac110039 status 200 Template Examples Simple webhook payloads One of the primary use cases for templates is for shaping the request payload for outgoing Webhook Exports from Lytics For example say you are exporting a Lytics audience called frequent_visitors to a service that expects the following JSON in the request body JSON first_name Bob last_name Smith email_address email protected marketing_list frequent_visitors We could create the following template in Lytics and select it in our Webhook Export job configuration to send the correct request using the first_name last_name and email fields on your Lytics profiles see here for details on using the lytemplates libsonnet library local event import lytemplates libsonnet first_name event get first_name last_name event get last_name email_address event get email marketing_list event segSlug Once created this template can be selected from the Lytics Template dropdown menu in the webhook job configuration Using assert to skip events that have empty required fields Many times when sending webhook events certain fields must be set or the webhook endpoint will respond with an HTTP error causing the webhook job to fail This simple template uses the Jsonnet assert function to signal that email must be set before sending These events will be omitted from sending and will be logged with the included assertion message email must be set JSON local event import lytemplates libsonnet local email local email event get email assert email email must be set email email email Using templates for dynamic URLs You can also use a template to dynamically generate URLs for webhook requests instead of hard coding one in your job configuration Say you are exporting Lytics profiles to a service that expects requests to the following endpoint where email is the user s email address https test com users email subscribe We could create the following template which extracts the email from each Lytics profile and includes it in the URL local event import lytemplates libsonnet https www test com users event get email subscribe Once created this template can be selected from the Webhook URL dropdown menu in the webhook job configuration Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/api-created-templates#content",
    "title": "Creating Templates",
    "chunk_text": "Creating Templates Templates can be created tested and managed using the Lytics Template APIs Full API documentation can be found here To create a template simply submit a Jsonnet or Handlebars file to the v2 template endpoint like this see below for more information on using the lytemplates libsonnet library in Jsonnet templates Write to template file echo local event import lytemplates libsonnet local emailField event jobConfGet email_field email local userEmail event get emailField local errorMsg if userEmail then Profile missing email email_address userEmail email_address_sha256 event sha256 userEmail if event isEnter then lytics_audience event segSlug if event has first_name then first_name event get first_name test jsonnet Create template request http POST LIOAPI v2 template name test template type jsonnet description A test template for demos Authorization LIOTOKEN account_id LIOACCTID test jsonnet Create template response HTTP 1 1 200 OK Content Encoding gzip Content Length 228 Content Type application json Date Wed 20 Sep 2023 21 10 45 GMT Request Id 2a42314b 57fa 11ee bc0f 0242ac110039 Server lytics io data created 2023 09 20T20 38 24 579029236Z description A test template for demos id 83d1439ff457ab94377e697180e8f8f1 name test template type jsonnet updated 2023 09 20T20 38 24 579029236Z request_id 2a42314b 57fa 11ee bc0f 0242ac110039 status 200 The endpoint requires name and type query parameters An optional description can also be included Testing Templates Once templates have been created the v2 template id test endpoint makes it easy to test the template s behavior given a particular job configuration and outgoing user profile A configuration can be included in your request as well as a custom entity profile If no entity is included in the request the API will auto generate one from your Lytics user table schema Request echo job_config email_field email entity email email protected first_name Tester segment_events id e4c8ef6712fc40d76d8202394095f3a6 slug test_audience event enter enter 2017 10 15T19 12 00 661749884Z http POST LIOAPI v2 template 83d1439ff457ab94377e697180e8f8f1 test Authorization LIOTOKEN Response HTTP 1 1 200 OK Content Encoding gzip Content Length 222 Content Type application json Date Wed 20 Sep 2023 20 53 16 GMT Request Id b8cd77f4 57f7 11ee bc0f 0242ac110039 Server lytics io data n email_address email protected n email_address_sha256 e43763399e5318f14cd7473c4902a6b319343d577ec8283898a5edf9dbc6d711 n first_name Tester n lytics_audience test_audience n n request_id b8cd77f4 57f7 11ee bc0f 0242ac110039 status 200 Template Examples Simple webhook payloads One of the primary use cases for templates is for shaping the request payload for outgoing Webhook Exports from Lytics For example say you are exporting a Lytics audience called frequent_visitors to a service that expects the following JSON in the request body JSON first_name Bob last_name Smith email_address email protected marketing_list frequent_visitors We could create the following template in Lytics and select it in our Webhook Export job configuration to send the correct request using the first_name last_name and email fields on your Lytics profiles see here for details on using the lytemplates libsonnet library local event import lytemplates libsonnet first_name event get first_name last_name event get last_name email_address event get email marketing_list event segSlug Once created this template can be selected from the Lytics Template dropdown menu in the webhook job configuration Using assert to skip events that have empty required fields Many times when sending webhook events certain fields must be set or the webhook endpoint will respond with an HTTP error causing the webhook job to fail This simple template uses the Jsonnet assert function to signal that email must be set before sending These events will be omitted from sending and will be logged with the included assertion message email must be set JSON local event import lytemplates libsonnet local email local email event get email assert email email must be set email email email Using templates for dynamic URLs You can also use a template to dynamically generate URLs for webhook requests instead of hard coding one in your job configuration Say you are exporting Lytics profiles to a service that expects requests to the following endpoint where email is the user s email address https test com users email subscribe We could create the following template which extracts the email from each Lytics profile and includes it in the URL local event import lytemplates libsonnet https www test com users event get email subscribe Once created this template can be selected from the Webhook URL dropdown menu in the webhook job configuration Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/using-the-jsonnet-library",
    "title": "The lytemplates.libsonnet Library",
    "chunk_text": "The lytemplates libsonnet Library For convenience Jsonnet templates can import Lytics custom lytemplates libsonnet library which contains utilities for common operations on profiles in exports To import the library simply include the following line at the top of your template local event import lytemplates libsonnet The following methods on event can be used to access data on the profile and job configuration has field get field default null jobConfGet key default null inSeg id isEnter isExit segSlug sha256 obj isValidSha256 obj sha1 obj isValidSha1 obj profileFieldFromConfig configField default null validatedEnum field enumOptions default has field Reports whether the entity on the event contains a field named field get field def null Retrieves the field on the profile named field If field does not exist on the profile the optional default will be returned or null if default is not supplied jobConfGet key def null Retrieves the job configuration field named key If key does not exist in the job configuration the optional default will be returned or null if default is not supplied inSeg id Reports whether the user is a member of the segment with ID id isEnter Reports whether the trigger event is an enter event isExit Reports whether the trigger event is an exit event segSlug Returns the segment slug for the trigger event sha256 obj Returns the sha256 hash of obj isValidSha256 obj Returns whether obj matches the formatting of a sha256 hash sha1 obj Returns the sha1 hash of obj isValidSha1 obj Returns whether obj matches the formatting of a sha1 hash profileFieldFromConfig configField default null If a field call configField exists on the job configuration retrieves the field corresponding to the field s value from the user profile For example if the job configuration contains foo bar profileFieldFromCOnfig foo is equivalent to get bar If foo does not exist on the job configuration the optional default will be returned or null is default is not supplied validatedEnum field enumOptions default Returns the value for field on the job config verifying that the resulting value is contained in the enumOptions array If the value is not contained in enumOptions default is returned For example if the job configuration contains num Three validatedEnum num One Two Three Zero will return Three If the job configuration contains num bar validatedEnum num One Two Three Zero will return Zero Updated 10 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/using-the-jsonnet-library#content",
    "title": "The lytemplates.libsonnet Library",
    "chunk_text": "The lytemplates libsonnet Library For convenience Jsonnet templates can import Lytics custom lytemplates libsonnet library which contains utilities for common operations on profiles in exports To import the library simply include the following line at the top of your template local event import lytemplates libsonnet The following methods on event can be used to access data on the profile and job configuration has field get field default null jobConfGet key default null inSeg id isEnter isExit segSlug sha256 obj isValidSha256 obj sha1 obj isValidSha1 obj profileFieldFromConfig configField default null validatedEnum field enumOptions default has field Reports whether the entity on the event contains a field named field get field def null Retrieves the field on the profile named field If field does not exist on the profile the optional default will be returned or null if default is not supplied jobConfGet key def null Retrieves the job configuration field named key If key does not exist in the job configuration the optional default will be returned or null if default is not supplied inSeg id Reports whether the user is a member of the segment with ID id isEnter Reports whether the trigger event is an enter event isExit Reports whether the trigger event is an exit event segSlug Returns the segment slug for the trigger event sha256 obj Returns the sha256 hash of obj isValidSha256 obj Returns whether obj matches the formatting of a sha256 hash sha1 obj Returns the sha1 hash of obj isValidSha1 obj Returns whether obj matches the formatting of a sha1 hash profileFieldFromConfig configField default null If a field call configField exists on the job configuration retrieves the field corresponding to the field s value from the user profile For example if the job configuration contains foo bar profileFieldFromCOnfig foo is equivalent to get bar If foo does not exist on the job configuration the optional default will be returned or null is default is not supplied validatedEnum field enumOptions default Returns the value for field on the job config verifying that the resulting value is contained in the enumOptions array If the value is not contained in enumOptions default is returned For example if the job configuration contains num Three validatedEnum num One Two Three Zero will return Three If the job configuration contains num bar validatedEnum num One Two Three Zero will return Zero Updated 10 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/template-examples",
    "title": "https://docs.lytics.com/docs/template-examples",
    "chunk_text": "Simple webhook payloads One of the primary use cases for templates is for shaping the request payload for outgoing Webhook Exports from Lytics For example say you are exporting a Lytics audience called frequent_visitors to a service that expects the following JSON in the request body JSON first_name Bob last_name Smith email_address email protected marketing_list frequent_visitors We could create the following template in Lytics and select it in our Webhook Export job configuration to send the correct request using the first_name last_name and email fields on your Lytics profiles see here for details on using the lytemplates libsonnet library jsonnet local event import lytemplates libsonnet first_name event get first_name last_name event get last_name email_address event get email marketing_list event segSlug Once created this template can be selected from the Lytics Template dropdown menu in the webhook job configuration Using assert to skip events that have empty required fields Many times when sending webhook events certain fields must be set or the webhook endpoint will respond with an HTTP error causing the webhook job to fail This simple template uses the jsonnet assert function to signal that email must be set before sending These events will be omitted from sending and will be logged with the included assertion message email must be set jsonnet local event import lytemplates libsonnet local email local email event get email assert email email must be set email email email Using templates for dynamic URLs You can also use a template to dynamically generate URLs for webhook requests instead of hard coding one in your job configuration Say you are exporting Lytics profiles to a service that expects requests to the following endpoint where email is the user s email address HTTP https test com users email subscribe We could create the following template which extracts the email from each Lytics profile and includes it in the URL jsonnet local event import lytemplates libsonnet https www test com users event get email subscribe Once created this template can be selected from the Webhook URL dropdown menu in the webhook job configuration Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/template-examples#content",
    "title": "https://docs.lytics.com/docs/template-examples#content",
    "chunk_text": "Simple webhook payloads One of the primary use cases for templates is for shaping the request payload for outgoing Webhook Exports from Lytics For example say you are exporting a Lytics audience called frequent_visitors to a service that expects the following JSON in the request body JSON first_name Bob last_name Smith email_address email protected marketing_list frequent_visitors We could create the following template in Lytics and select it in our Webhook Export job configuration to send the correct request using the first_name last_name and email fields on your Lytics profiles see here for details on using the lytemplates libsonnet library jsonnet local event import lytemplates libsonnet first_name event get first_name last_name event get last_name email_address event get email marketing_list event segSlug Once created this template can be selected from the Lytics Template dropdown menu in the webhook job configuration Using assert to skip events that have empty required fields Many times when sending webhook events certain fields must be set or the webhook endpoint will respond with an HTTP error causing the webhook job to fail This simple template uses the jsonnet assert function to signal that email must be set before sending These events will be omitted from sending and will be logged with the included assertion message email must be set jsonnet local event import lytemplates libsonnet local email local email event get email assert email email must be set email email email Using templates for dynamic URLs You can also use a template to dynamically generate URLs for webhook requests instead of hard coding one in your job configuration Say you are exporting Lytics profiles to a service that expects requests to the following endpoint where email is the user s email address HTTP https test com users email subscribe We could create the following template which extracts the email from each Lytics profile and includes it in the URL jsonnet local event import lytemplates libsonnet https www test com users event get email subscribe Once created this template can be selected from the Webhook URL dropdown menu in the webhook job configuration Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/schema-management",
    "title": "https://docs.lytics.com/docs/schema-management",
    "chunk_text": "Welcome to the Schema Management section where we will explore how to define and manage data structures within the Lytics platform This section will cover how to ensure data quality and consistency including defining data types creating custom fields and enforcing validation rules Whether you are a data analyst developer or system administrator this section will provide you with the essential knowledge needed to understand schema management within the context of the Lytics platform Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/schema-management#content",
    "title": "https://docs.lytics.com/docs/schema-management#content",
    "chunk_text": "Welcome to the Schema Management section where we will explore how to define and manage data structures within the Lytics platform This section will cover how to ensure data quality and consistency including defining data types creating custom fields and enforcing validation rules Whether you are a data analyst developer or system administrator this section will provide you with the essential knowledge needed to understand schema management within the context of the Lytics platform Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/fields-mappings",
    "title": "Introduction",
    "chunk_text": "Introduction User fields and mappings are essential for materializing user profiles in such a way that provides businesses with a comprehensive view of their customers User fields capture specific attributes and characteristics while mappings transform and cleanse data for consistency and accuracy This ensures your profiles are materialized in an ideal way to support highly relevant and personalized marketing campaigns What are fields Fields can include demographic data behavioral data or any other data point that is relevant to understanding and engaging with customers In addition fields themselves are defined by one of many common data types such as strings integers sets and maps What are mappings Sometimes you may want to transform or cleanse messy data before it hits a profile Other times you may want to perform an operation or aggregation to reflect its usefulness for business decisions or segmentation like aggregating multiple purchases into a combined lifetime spend metric In either case mappings provide the necessary translation layer to ensure each data point collected is clean and consistent Most importantly mappings guide the relationship between disparate data points and the final materialized user profile Managing User Fields Lytics profiles are composed of a collection of user fields These fields have standard metadata name description and typical properties you d expect from a traditional database column kind type capacity In addition each field has a merge operator that describes how we want to combine data from different sources at different times into a single field For example a field describing a customer s first purchase date would use a minimum operator to ensure that regardless of the order in which Lytics sees purchase data the first purchase date for the field would represent the earliest possible value Creating a User Field To create a user field visit Fields under the Schema tab in the main navigation at the left of your window Here you will find a list of all current field definitions Clicking on Create New will enter the field creation wizard The field creation wizard has a single step where you will define a few parameters related to your new user field ID An alphanumeric key that defines how this user field will be stored on the profile Short Description A user friendly description that will be used throughout the ID to provide additional context to the field Data Type The type of data that will be stored in this field Long Description An optional long description that provides additional context in a few areas throughout the UI Categories An optional categorization for the field in question This helps further inform the intent of the field and enhances our ability to measure the comprehensiveness of your user profile and overall C360 readiness index coming soon Identity A field to identify a user within Lytics or in a downstream channel tool Governance Any context related to consent governance etc Interests Information supporting surfacing and understanding a consumer s interests such as a product purchase Behavior Interactions to be used in understanding behavioral patterns such as page views and non conversion related clicks First Party Any standard first party data Intelligence ML AI related attributes such as LTV ingested from BigQuery or scores related to Lytics models Activation Data points related to supporting or monitoring activation in downstream channels Merge Operator How the merge between two different data points mapped to the same field will be handled Identity Key A true or false statement identifying if the field should be used as a key to link two or more independent events together Keep Days The number of days to keep values for this field Capacity The number of values to store in the set PII Personally Identifiable Information Key A true or false statement identifying if the field is to be considered PII Personally Identifiable Information Data Types Standard Data Type Description string Stores a sequence of characters letters numbers punctuation with no set limitation for length integer Stores positive or negative whole numbers without decimals 64 bit number Stores positive or negative numbers with decimals 64 bit boolean Stores only true or false values date Stores datetime Advanced Data Type Description string Stores an array of unique string values time Stores an array of unique datetime values date string Stores a time ordered unique array of strings useful for keeping track of order in which they performed set of unique events map string datatype Stores a set of key value pairs The key is a unique string and the value is a the specified data type The value by default will be the most recent value map string string map string integer map string number map string boolean map string date map string intsum Stores a set of key value pairs The key is a unique string and the value is an integer but unlike a map string integer the default merge operator is sum so the values are summed together Merge Operators Supported merge operators are as follows Minimum When comparing two values take the smallest one Maximum When comparing two values take the largest one Oldest When comparing two values take the one with the oldest timestamp Latest When comparing two values take the one with the most recent timestamp Merge When comparing two sets take the union of the two Capacity and Keep Days The keep_days and capacity properties specify the amount of time to keep values and the number of values to retain in a set field respectively Any values in the set older than keep_days in the past will be discarded when the profile is evaluated and no more than capacity values will be stored in the set When values are removed from a set due to exceeding the capacity limit they are removed in FIFO first in first out order If keep_days or capacity are set to 0 or omitted when creating a field they are ignored Maintaining a User Field As your schema grows in complexity keeping an eye on the defined relationships is essential The field summary provides a window into how a single user field is being populated from various channels This view is excellent for diagnosing what may be causing a conflict or that things are operating healthily Deleting User Fields Sometimes you may want to remove a user field from your schema altogether This can be done from the field summary pictured above Click the menu with three docs to the right of Edit Field and you will be presented with a sub menu This menu contains a Delete option Deleting a field can have major implications once the change has been published It is important to understand the implications of deleting a field and how it will impact how data is processed and mapped to user profiles What happens when I delete a field As shown in the screenshot above selecting and confirming deletion will not have an immediate impact The delete will request will be referenced in the unpublished version of your schema You must publish a new version of your schema for the changes to take effect At that point it is essential to understand the following Data previously collected and mapped to that field will no longer be accessible on the user profile Any existing mappings related to that field will no longer be implemented as new events occur Any mappings that are associated with this field will need to be independently deleted Failing to delete associated mappings manually will result in validation errors when attempting to publish the schema version Managing Mappings Mappings are expressions that provide instructions for how to perform transformations if any on raw data They can range from simple to expressive or even include conditional logic Mappings occur when data is processed or observed within Lytics real time profile pipeline Multiple mappings can map data into a single field where the field s merge operator controls updates Let s say we have a user currently visiting the lytics com website and we observe the following data sent from JSTag JSON email_address email protected _uid 123e4567 e89b 12d3 a456 426614174000 utm_campaign exciting_campaign url www lytics com get started event_type page view Based on the data from the event we might consider some of the following mappings email_address no transformation performed and takes the value of the email as is email email_address use the email function to validate that the email address is syntactically valid email oneof email_address emailAddress coalesce either email_address or emailAddress to extract the value of the email address count event_type IF event_type page view sets up a counter to track page views only if the event is of type page view Creating a Mapping To create a mapping visit Mappings under the Schema tab in the main navigation at the left of your window Here you will find a list of all current mapping definitions Clicking on Create New will enter the mapping creation wizard The mapping creation wizard has a single step where you will define a few parameters related to your new mapping Stream The name of the stream for which to apply the mapping to Expression The rules to apply to the mapping Condition An optional condition statement of when to apply the mapping Maintaining Mappings Since mappings depend on the data available to a stream monitoring that things are working as desired is important For instance if a key changes or stops streaming entirely it may negatively impact your profiles and ultimately your marketing efforts As such the mapping summary view is available to review the health of mappings and provide a path for editing mappings in the future if necessary Deleting Mappings Sometimes you may want to remove a mapping from your schema altogether This can be done from the mapping summary pictured above Simply click the menu with three docs to the right of Edit Mapping and you will be presented with a sub menu This menu contains a Delete option Deleting a mapping can have major implications once the change has been published It is important to understand the implications of deleting a mapping and how it will impact how data is processed and mapped to user profiles What happens when I delete a mapping As shown in the screenshot above selecting and confirming deletion will not have an immediate impact The delete will request will be referenced in the unpublished version of your schema You must publish a new version of your schema for the changes to take effect At that point it is crucial to understand the following Data previously collected via the mapping being deleted will remain on the profile as mapping changes only impact event processing from when the change has been published Fields associated with the mapping will not be impacted or deleted Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/fields-mappings#content",
    "title": "Introduction",
    "chunk_text": "Introduction User fields and mappings are essential for materializing user profiles in such a way that provides businesses with a comprehensive view of their customers User fields capture specific attributes and characteristics while mappings transform and cleanse data for consistency and accuracy This ensures your profiles are materialized in an ideal way to support highly relevant and personalized marketing campaigns What are fields Fields can include demographic data behavioral data or any other data point that is relevant to understanding and engaging with customers In addition fields themselves are defined by one of many common data types such as strings integers sets and maps What are mappings Sometimes you may want to transform or cleanse messy data before it hits a profile Other times you may want to perform an operation or aggregation to reflect its usefulness for business decisions or segmentation like aggregating multiple purchases into a combined lifetime spend metric In either case mappings provide the necessary translation layer to ensure each data point collected is clean and consistent Most importantly mappings guide the relationship between disparate data points and the final materialized user profile Managing User Fields Lytics profiles are composed of a collection of user fields These fields have standard metadata name description and typical properties you d expect from a traditional database column kind type capacity In addition each field has a merge operator that describes how we want to combine data from different sources at different times into a single field For example a field describing a customer s first purchase date would use a minimum operator to ensure that regardless of the order in which Lytics sees purchase data the first purchase date for the field would represent the earliest possible value Creating a User Field To create a user field visit Fields under the Schema tab in the main navigation at the left of your window Here you will find a list of all current field definitions Clicking on Create New will enter the field creation wizard The field creation wizard has a single step where you will define a few parameters related to your new user field ID An alphanumeric key that defines how this user field will be stored on the profile Short Description A user friendly description that will be used throughout the ID to provide additional context to the field Data Type The type of data that will be stored in this field Long Description An optional long description that provides additional context in a few areas throughout the UI Categories An optional categorization for the field in question This helps further inform the intent of the field and enhances our ability to measure the comprehensiveness of your user profile and overall C360 readiness index coming soon Identity A field to identify a user within Lytics or in a downstream channel tool Governance Any context related to consent governance etc Interests Information supporting surfacing and understanding a consumer s interests such as a product purchase Behavior Interactions to be used in understanding behavioral patterns such as page views and non conversion related clicks First Party Any standard first party data Intelligence ML AI related attributes such as LTV ingested from BigQuery or scores related to Lytics models Activation Data points related to supporting or monitoring activation in downstream channels Merge Operator How the merge between two different data points mapped to the same field will be handled Identity Key A true or false statement identifying if the field should be used as a key to link two or more independent events together Keep Days The number of days to keep values for this field Capacity The number of values to store in the set PII Personally Identifiable Information Key A true or false statement identifying if the field is to be considered PII Personally Identifiable Information Data Types Standard Data Type Description string Stores a sequence of characters letters numbers punctuation with no set limitation for length integer Stores positive or negative whole numbers without decimals 64 bit number Stores positive or negative numbers with decimals 64 bit boolean Stores only true or false values date Stores datetime Advanced Data Type Description string Stores an array of unique string values time Stores an array of unique datetime values date string Stores a time ordered unique array of strings useful for keeping track of order in which they performed set of unique events map string datatype Stores a set of key value pairs The key is a unique string and the value is a the specified data type The value by default will be the most recent value map string string map string integer map string number map string boolean map string date map string intsum Stores a set of key value pairs The key is a unique string and the value is an integer but unlike a map string integer the default merge operator is sum so the values are summed together Merge Operators Supported merge operators are as follows Minimum When comparing two values take the smallest one Maximum When comparing two values take the largest one Oldest When comparing two values take the one with the oldest timestamp Latest When comparing two values take the one with the most recent timestamp Merge When comparing two sets take the union of the two Capacity and Keep Days The keep_days and capacity properties specify the amount of time to keep values and the number of values to retain in a set field respectively Any values in the set older than keep_days in the past will be discarded when the profile is evaluated and no more than capacity values will be stored in the set When values are removed from a set due to exceeding the capacity limit they are removed in FIFO first in first out order If keep_days or capacity are set to 0 or omitted when creating a field they are ignored Maintaining a User Field As your schema grows in complexity keeping an eye on the defined relationships is essential The field summary provides a window into how a single user field is being populated from various channels This view is excellent for diagnosing what may be causing a conflict or that things are operating healthily Deleting User Fields Sometimes you may want to remove a user field from your schema altogether This can be done from the field summary pictured above Click the menu with three docs to the right of Edit Field and you will be presented with a sub menu This menu contains a Delete option Deleting a field can have major implications once the change has been published It is important to understand the implications of deleting a field and how it will impact how data is processed and mapped to user profiles What happens when I delete a field As shown in the screenshot above selecting and confirming deletion will not have an immediate impact The delete will request will be referenced in the unpublished version of your schema You must publish a new version of your schema for the changes to take effect At that point it is essential to understand the following Data previously collected and mapped to that field will no longer be accessible on the user profile Any existing mappings related to that field will no longer be implemented as new events occur Any mappings that are associated with this field will need to be independently deleted Failing to delete associated mappings manually will result in validation errors when attempting to publish the schema version Managing Mappings Mappings are expressions that provide instructions for how to perform transformations if any on raw data They can range from simple to expressive or even include conditional logic Mappings occur when data is processed or observed within Lytics real time profile pipeline Multiple mappings can map data into a single field where the field s merge operator controls updates Let s say we have a user currently visiting the lytics com website and we observe the following data sent from JSTag JSON email_address email protected _uid 123e4567 e89b 12d3 a456 426614174000 utm_campaign exciting_campaign url www lytics com get started event_type page view Based on the data from the event we might consider some of the following mappings email_address no transformation performed and takes the value of the email as is email email_address use the email function to validate that the email address is syntactically valid email oneof email_address emailAddress coalesce either email_address or emailAddress to extract the value of the email address count event_type IF event_type page view sets up a counter to track page views only if the event is of type page view Creating a Mapping To create a mapping visit Mappings under the Schema tab in the main navigation at the left of your window Here you will find a list of all current mapping definitions Clicking on Create New will enter the mapping creation wizard The mapping creation wizard has a single step where you will define a few parameters related to your new mapping Stream The name of the stream for which to apply the mapping to Expression The rules to apply to the mapping Condition An optional condition statement of when to apply the mapping Maintaining Mappings Since mappings depend on the data available to a stream monitoring that things are working as desired is important For instance if a key changes or stops streaming entirely it may negatively impact your profiles and ultimately your marketing efforts As such the mapping summary view is available to review the health of mappings and provide a path for editing mappings in the future if necessary Deleting Mappings Sometimes you may want to remove a mapping from your schema altogether This can be done from the mapping summary pictured above Simply click the menu with three docs to the right of Edit Mapping and you will be presented with a sub menu This menu contains a Delete option Deleting a mapping can have major implications once the change has been published It is important to understand the implications of deleting a mapping and how it will impact how data is processed and mapped to user profiles What happens when I delete a mapping As shown in the screenshot above selecting and confirming deletion will not have an immediate impact The delete will request will be referenced in the unpublished version of your schema You must publish a new version of your schema for the changes to take effect At that point it is crucial to understand the following Data previously collected via the mapping being deleted will remain on the profile as mapping changes only impact event processing from when the change has been published Fields associated with the mapping will not be impacted or deleted Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/advanced-mapping",
    "title": "String Functions",
    "chunk_text": "Lytics Conductor supports numerous built in functions for light data transformation and logic evaluation to allow users to map only data that is relevant to their customer profile and format it the way they need for activation of their use cases For more complex data transformation and aggregation we suggest utilizing Cloud Connect with or without Lytics Warehouse for bringing in calculated attributes Expressions Mapping Keys vs Literals To map the data value passed in an event you will want to use the associated key within the Expression When creating mappings it is important to remember that keys need to be wrapped in single backticks Literals which can be a string int float bool or timestamp are used to map a static value to the field These are often used with conditionals Conditions Conditions allow you perform logical evaluations to determine when to store a value on a field based on any of the data passed within the same incoming event Merge Operators Merge operators allow you to determine how a value will be written to a field in relation to the currently stored value Data Types Kind int number string date string ts string map string int map string number map string string Screenshot Example of supplying expression condition to a mapping This example showcases the default mapping for the mo_email_unsub field from the Marketo Activity import Here we see we are writing count over time in which we see activityTypeId as a key in the incoming event data However we are only writing this expressions results when that incoming event data evaluates the condition eq activityTypeId 9 as true String Functions These functions are used to manipulate string fields join Join together multiple values coerce them into strings Last argument is which string to use to join may be empty string join Example Example Event Data JSON street 698 Candlewood Lane city Cabot Cove state ME _uid 0123 4567 8901 2345 6789 Expression Resulting Value join street city state 698 Candlewood Lane Cabot Cove ME Breaking down the Example The join function takes at minimum 2 arguments utilizing the LAST argument as the joining string and concatenates each argument in order utilizing the joining string In this example we produce a single string consisting of street city state values concatenated utilizing the joining string comma followed by a space len Length of array string find the length of a string return integer value of length len Example Example Event Data JSON _e item_added_to_cart items_in_cart ISBN_9780553119978 ISBN_9780345324481 _uid 0123 4567 8901 2345 6789 Expression Resulting Value len items_in_cart 2 Breaking down the Example The len function here is operating on a field whose value is an array so the output is the number of items in the array Applying len to a string results in the character length of the string oneof Choose value from the first field that has a non nil empty string inclusive value oneof Example Example Event Data JSON account_id 000 000 001 account_name Planet Express _uid 0123 4567 8901 2345 6789 Expression Resulting Value oneof account_no account_id 000 000 001 Breaking down the Example This oneof function first checks and sees that the account_no field does not exist in the event data so then moves to the account_id which is found to be a non nil value and is returned replace Converts the value to a string and then replaces the matching part of a string with another string If no replacement string is passed or an empty string is passed the matched string is simply removed replace Example Example Event Data JSON _e search url https pawneeindiana com parks and recreation _uid 0123 4567 8901 2345 6789 Expression Resulting Value replace replace path url parks and recreation Breaking down the Example Using path finds the path of the url which is parks and recreation The inner replace finds all parts of the string that matches and since there is no specified string replacement is replaced with nothing This results in a value of parks and recreation The outer replace takes the resulting parks and recreation and finds all of the parts of the string that matches and replaces with a space Leading to the final value of parks and recreation split Breaks a variable into smaller fragments given a specific delimiter split Example Example Event Data JSON _e preferences set favorite genres mystery science fiction fantasy _uid 0123 4567 8901 2345 6789 Expression Resulting Value set split favorite genres fantasy mystery science fiction Breaking down the Example The split splits the incoming value associated with the favorite genres key at each of the characters the value contains Because split will split the value into fragments that are stored as an array you will need to map it to a field that is a set data type string or time and you will also want to wrap set for strings or totimeset for datetimes around the function The order of a set of strings resulting from the split function will be alphabetical The order of a set of datetimes resulting from the split function will be oldest to latest However if you use an array index function to pull out a value based on position the originally passed order will be referenced strip Strip removes leading and trailing whitespace spaces tabs newline carriage return from strings or arrays of strings strip Example Example Event Data JSON _e preferences set favorite sub genres detective fiction cozy mystery space opera steampunk _uid 0123 4567 8901 2345 6789 Expression Resulting Value strip split favorite sub genres detective fiction cozy mystery space opera steampunk Breaking down the Example The split function splits the incoming value associated with the favorite sub genres key at each of the characters the value contain In this example it will create 4 strings that are stored in an array output alphabetical order The strip function then removes the leading and trailing spaces around each of the strings within the array string lowercase Convert strings to lower case string lowercase Example Example Event Data JSON _e registration vehical_make DMC vehical_model DeLorean plate_number outatime _uid 0123 4567 8901 2345 6789 Expression Resulting Value string lowercase vehical_make dmc Breaking down the Example The string lowercase function looks at each character in the string value and converts to the lowercase equivalent string uppercase Convert strings to upper case string uppercase Example Example Event Data JSON _e registration vehical_make DMC vehical_model DeLorean plate_number outatime _uid 0123 4567 8901 2345 6789 Expression Resulting Value string uppercase plate_number OUTATIME Breaking down the Example The string uppercase function looks at each character in the string value and converts to the uppercase equivalent string titlecase Convert strings to title case string titlecase Example Example Event Data JSON _e profile completed full_name ARTHUR DENT _uid 0123 4567 8901 2345 6789 Expression Resulting Value string titlecase string lowercase full_name Arthur Dent Using string titlecase only operates on the first character of each word in the string and thus will always require that you first convert the string to lowercase using string lowercase for the full traditional titlecase conversion Breaking down the Example Using the string lowercase will first normalize the incoming string by converting it to lowercase Wrapping the string titlecase will then convert the string into title case string index Find position of substring within a string return ordinal starting position string index Example Example Event Data JSON numberString 0123456789 _uid 0123 4567 8901 2345 6789 Expression Resulting Value string index numberString 1 1 Breaking down the Example string index utilizes a 0 based index so the first character in the string is at index 0 and the 1 being the second character in the string is at index 1 string substr Extract a string from a string using positional start end string substr Example Example Event Data JSON numberString 0123456789 _uid 0123 4567 8901 2345 6789 Expression Resulting Value string substr numberString 3 7 3456 Breaking down the Example string substr utilizes a 0 based index and returns the substring of the provided string starting at the provided start index up to but not including the end index The end index is optional here and will return from the start index through the remainder of the string string substr android 0 3 and string substr android 2 droid contains Does this value contain this string Is a sub string match not full match eq contains Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value contains stringExample string true Breaking down the Example The contains function takes 2 arguments the field or raw string to be searched and the substring to search for In this example the value for the stringExample field is searched for the substring string and being found returns the boolean value true hasprefix Does this value start with this string hasprefix Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hasprefix stringExample This is a string true Breaking down the Example The hasprefix function takes 2 arguments the field or raw string to be searched and the substring to check for a match starting at index 0 of the 1st argument In this example the value for the stringExample field is checked for the substring This is a string and being found to match as the prefix returns the boolean value true hassuffix Does this value end with this string hassuffix Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hassuffix stringExample as an example true Breaking down the Example The hassuffix function takes 2 arguments the field or raw string to be searched and the substring to check for a match to end the 1st argument In this example the value for the stringExample field is checked for the substring as an example and being found to match as the suffix returns the boolean value true Hash Encoding Functions You can apply hash functions to encode incoming data hash sip Hash the given value using sip hash to integer output hash sip Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hash sip stringExample 1913777820508603599 hash md5 Hash the given value using md5 hash md5 Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hash md5 stringExample b6c4db114d07e225a8d9d77e47779f5c hash sha1 Hash the given value using sha1 hash sha1 Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hash sha1 stringExample 1fe04eb0f9ffd1df677657c914f42b68fff9e0cb hash sha256 Hash the given value using sha256 hash sha256 Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hash sha256 stringExample e2f7ae28b1c04104c11ee09ab4ab79ca20da6ac4e665c13f1b91be2f02b0f986 hash sha512 Hash the given value using sha512 hash sha512 Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hash sha512 stringExample e0771e85eeb0ed73b38df14f42e2c20c6755356c1f1222bcd8d661503645e3659460f3bf668af527b75c1373fc419dd4f8e8493692fb0ca17329f1232898b7ca encoding b64encode base64 encode encoding b64encode Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value encoding b64encode stringExample VGhpcyBpcyBhIHN0cmluZyBiZWluZyB1c2VkIGFzIGFuIGV4YW1wbGU encoding b64decode field base64 decode encoding b64decode Example Example Event Data JSON stringExample VGhpcyBpcyBhIHN0cmluZyBiZWluZyB1c2VkIGFzIGFuIGV4YW1wbGU _uid 0123 4567 8901 2345 6789 Expression Resulting Value encoding b64decode stringExample This is a string being used as an example Casting Conversion These functions allow you to cast and convert data into different types note for todate conversion see the Date Time section below toint Converts strings to integers Useful for converting a string to a number before applying a number based expression toint Example Example Event Data JSON stringOne 1 7 stringTwo 2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value sum toint stringOne toint stringTwo 3 Breaking down the Example Here we have a summation function applying to the result of converting two different string fields to int s and wrapping them in the sum function We first convert the value for stringOne 1 7 into it s int equivalent 1 then convert the value for stringTwo 2 into it s int equivalent 2 then the summation result of the two int values is 3 tonumber Converts string to numbers Useful for converting a string to a number while needing to keep decimal precision tonumber Example Example Event Data JSON stringOne 1 7 stringTwo 2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value sum tonumber stringOne tonumber stringTwo 3 7 Breaking down the Example Here we have a summation function applying to the result of converting two different string fields to number s and wrapping them in the sum function We first convert the value for stringOne 1 7 into it s number equivalent 1 7 keeping decimal precision then convert the value for stringTwo 2 into it s number equivalent 2 then the summation result of the two number values is 3 7 tobool Casts to boolean Numeric Values of 0 1 convert to false true respectively String Values will convert as 0 f F false FALSE False false 1 t T true TRUE True true tobool Example Example Event Data JSON boolField F _uid 0123 4567 8901 2345 6789 Expression Resulting Value tobool boolField false Map Set Array Functions These functions manipulate map or set fields note for the len function see the String function listed above filter Filter out values that match the specified criteria filter Example Example Event Data JSON sliceField red orange yellow green blue indigo violet _uid 0123 4567 8901 2345 6789 Expression Resulting Value filter strip split sliceField bl red orange yellow green indigo violet Breaking Down the Example This filter operates on top of the array built by split ing and strip ing the sliceField Once we have our base array we then apply the filter bl in which is a wildcard to match the blue value and filter it OUT of the array returning an array including all the unmatched values map Create an object map of key value pairs Often used to keep map of key event name to value last occurrence date Or other user level key value pair data map Example Example Event Data JSON listName Pretend Campaign subscribeStatus subscribed _uid 0123 4567 8901 2345 6789 Expression Resulting Value map listName subscribeStatus Pretend Campaign subscribed match Match a key and then keep a map of key values with the match value removed match Example Example Event Data JSON example_a 1 example_b 2 example_c 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value match example_ a 1 b 2 c 3 Breaking Down the Example The match function here looks for all keys prefixed with example_ and finding 3 results creates a map of key key suffix value pairs from those results utilizing the suffix of the original keys to write to the map mapkeys Given a map return a list of strings consisting of the keys from the map mapkeys Example Example Event Data JSON example_a 1 example_b 2 example_c 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value mapkeys match example_ b c a Breaking Down the Example The mapkeys function here utilizing the result of the match statement as it s input map and returns a list consisting of the keys from that map mapvalues Given a map return a list of the values as strings mapvalues Example Example Event Data JSON example_a 1 example_b 2 example_c 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value mapvalues match example_ 3 1 2 Breaking Down the Example The mapvalues function here utilizes the result of the match statement as it s input map and returns a string list consisting of the values from that map mapinvert Given a map return a map of type map string string inverting the keys values from the initial map Example Event Data JSON example_a 1 example_b 2 example_c 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value mapinvert match example_ 1 a 2 b 3 c Breaking Down the Example The mapinvert function here utilizes the result of the match statement as it s input map and returns a map map string string with each key value pair inverted value key array index Cherry pick a single item out of an array array index Example Example Event Data JSON fruits apples oranges peaches _uid 0123 4567 8901 2345 6789 Expression Resulting Value array index fruits 0 apples Breaking Down the Example The array index function utilizes a 0 indexed array to cherry pick the requested indexes value in this case 0 being the first indexed item returns apples array slice Slice an array of items selecting some subset of them array slice Example Example Event Data JSON fruits tomato apple orange peach _uid 0123 4567 8901 2345 6789 Expression Resulting Value array slice fruits 1 4 apple orange peach Breaking Down the Example For this example the array slice function takes 3 parameters the 3rd being optional and returns an array consisting of the subset of the initial array 1st parameter beginning at the start index 2nd parameter up to but not including the end index 3rd parameter if not provided then it defaults to the end of the input array Reminder that these functions utilize 0 indexed arrays so the index of 1 is actually the 2nd item in the array URL HTTP Email Functions These functions manipulate strings which are URLs or email addresses email Extract email address from Bob email protected format note that the extracted email addresses are converted to lowercase and checked to ensure the existence of symbol as well email Example Example Event Data JSON email Test email protected _uid 0123 4567 8901 2345 6789 Expression Resulting Value email email email protected Breaking Down the Example In this example the email function first extracts the email address of email protected from the input this input can be in the the simplified input already and will then just apply the second part of the function Once we have the email address the function then performs a lowercase operation and checks to ensure the presence of an symbol This check is fairly rudimentary and may change to provide stricter validation in the future emailname Extract Bob from Bob email protected emailname Example Example Event Data JSON email Test email protected _uid 0123 4567 8901 2345 6789 Expression Resulting Value emailname email Test emaildomain Extract gmail com from Bob email protected or email protected Example Event Data JSON email Test email protected _uid 0123 4567 8901 2345 6789 Expression Resulting Value emaildomain email test com url Checks if URL string is valid and returns URL if true url Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value url _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 urlmain Removes the query string and scheme from the url urlmain Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value urlmain _url subdomain domain tld path extended_path Breaking Down the Example The urlmain function here strips the leading scheme https and query string parameters qsparam p1 qsp2 param2 from the provided url domain Extract domain from URL domain Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value domain _url domain tld host Extract host from URL host Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value host _url subdomain domain tld path Extract the URL path from the URL path Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value path _url path extended_path urldecode Perform URL decoding on a field my 20value my value urldecode Example Example Event Data JSON _url https subdomain domain tld path extended_path spaced this 20is 20spaced _uid 0123 4567 8901 2345 6789 Expression Resulting Value urldecode qs _url spaced this is spaced Breaking Down the Example With this example of urldecode we want to decode the spaced query parameter value To do this we first extract the parameters value utilizing the qs function returning this 20is 20spaced We then proceed to use the urldecode function to convert the 20 to and have our decoded string of this is spaced urlminusqs Removes a specific query parameter and it s value from a URL urlminusqs Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value urlminusqs _url qsp2 https subdomain domain tld path extended_path qsparam p1 qs Extract the query string parameter from URL qs Example Example Event Data JSON _url https subdomain domain tld path extended_path qsParam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value qs _url qsp2 param2 Breaking Down the Example Here the qs function attempts to find the requested query string parameter in the URL and returns it if found It s important to note here that this function inherently lowercases the URL provided BEFORE attempting to match the query string where qs2 will search the raw URL provided without lowercasing Effectively qs url param qs2 tolower url param qs2 Extract a querystring parameter without lowercasing the URL before checking for the parameter qs2 Example Example Event Data JSON _url https subdomain domain tld path extended_path qsParam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value qs2 _url qsParam p1 useragent Extract info from user agent string Below examples based on Mozilla 5 0 X11 Linux x86_64 AppleWebKit 537 11 KHTML like Gecko Chrome 23 0 1271 97 Safari 537 11 useragent _ua bot Extracts True False is this a bot useragent _ua mobile Extracts True False is this mobile useragent _ua mozilla Extracts 5 0 useragent _ua platform Extracts X11 useragent _ua os Extracts Linux x86_64 useragent _ua engine Extracts Linux x86_64 useragent _ua engine_version Extracts AppleWebKit useragent _ua browser Extracts Chrome useragent _ua browser_version Extracts 23 0 1271 97 useragent map _ua Extract map of all of above useragent Example Example Event Data JSON _ua Mozilla 5 0 X11 Linux x86_64 AppleWebKit 537 11 KHTML like Gecko Chrome 23 0 1271 97 Safari 537 11 _uid 0123 4567 8901 2345 6789 Expression Resulting Value useragent map _ua bot false browser Chrome browser_version 23 0 1271 97 engine AppleWebKit engine_version 537 11 mobile false mozilla 5 0 os Linux x86_64 platform X11 Date Time Functions These functions manipulate date fields Our core Date Parser recognizes about 50 date formats so in general these will operate on any format If you are using EU dates you will need to specify the parser format now The current message event times now Example Example Event Data JSON _uid 0123 4567 8901 2345 6789 Expression Resulting Value now 2024 11 18T17 51 21 483775672Z Breaking Down the Example The event in question contains no attribution defining the date time of the event and therefore is processed utilizing the current time as the datetime for the event The time of this example being 2024 11 18T17 51 21 483775672Z epochms Unix MS of the date stamp on the current message being processed Example Event Data JSON _uid 0123 4567 8901 2345 6789 Expression Resulting Value epochms 1731952777954 Breaking Down the Example Similar to the now function the epochms function uses the current event s timestamp to produce a result This time however we return it s representation as the integer unix seconds UTC format todate todate Converts strings to dates Datemath todate now 3m Date math relative to message timestamp Parser todate 02 01 2006 See Date Parser for supported formats Examples with 2 arguments todate 02 01 2006 07 04 2014 use golang s time package formatting todate 02 01 2006 07 04 2014 Reformats the date 07 04 2014 from US formatting to UK formatting with the resulting output being 04 07 2014 todate 02 01 2006 date_field_name Outputs date_field_name as European format where 01 is a placeholder for month 02 is a placeholder for day and 2006 is a placeholder for year todate Example Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value todate dateExample 2024 11 15T00 00 00Z todatein Converts strings to dates whiles specifying a location timezone We still convert back to UTC for storage todatein Example Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value todatein dateExample America Los_Angeles 2024 11 15T08 00 00Z totimestamp Convert date time to Integer Unix Seconds UTC totimestamp Example Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value totimestamp dateExample 1731628800 extract Used to extract parts of a date time Example usage on the strftime site extract Example Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value extract dateExample d 15 yy Date conversion to YY format so May 1 2014 is expressed as 14 yy dob or yy for record time stamp yy Example Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value yy dateExample 24 yymm String The YYMM date format so May 1 2014 is expressed as 1405 Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value yymm dateExample 2411 mm Date conversion to Integer month value alias for monthofyear mm Example Example Event Data JSON dateExample 2024 05 18 _uid 0123 4567 8901 2345 6789 Expression Resulting Value mm dateExample 5 monthofyear See mm dayofweek Integer representation of the day of the week 0 6 0 Sunday 1 Monday etc dayofweek Example Example Event Data JSON dateExample 2024 11 18 _uid 0123 4567 8901 2345 6789 Expression Resulting Value dayofweek dateExample 1 hourofweek 0 167 Integer representing the hour of the week 12 00 12 59am 00 00 00 00 59 59 on Sunday is 0 hour hourofweek Example Example Event Data JSON dateExample 2024 11 15T00 00 00Z _uid 0123 4567 8901 2345 6789 Expression Resulting Value hourofweek dateExample 120 hourofday Hour of day 12 00 12 59am 00 00 00 00 59 59 0 hourofday Example Example Event Data JSON dateExample 2024 11 15T00 00 00Z _uid 0123 4567 8901 2345 6789 Expression Resulting Value hourofday dateExample 0 seconds The Integer number of seconds in a give time works with datetime as well as MM SS things like seconds 00 30 30 and seconds 10 30 630 seconds Example Example Event Data JSON dateExample 2024 11 15T00 00 00Z _uid 0123 4567 8901 2345 6789 Expression Resulting Value seconds dateExample 1731628800 Aggregate Functions There are a variety of expressions for building document type structures maps lists sets These are functional expressions but can only be used in Columns count Count of of occurrences of the specified key count Example Example Event Data JSON Example Event Data 2 JSON key value _uid 0123 4567 8901 2345 6789 key value_too _uid 0123 4567 8901 2345 6789 Expression Resulting Value count key 2 valuect Count of of occurences of each value for a specific key stored as a map value count valuect Example Example Event Data JSON Example Event Data 2 JSON key value _uid 0123 4567 8901 2345 6789 key value_too _uid 0123 4567 8901 2345 6789 Expression Resulting Value count key value 1 value_too 1 sum Summation of values for a specified key over time sum Example Example Event Data JSON Example Event Data 2 JSON key 30 _uid 0123 4567 8901 2345 6789 key 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value sum key 33 min Minimum numeric value seen for the specified key over time min Example Example Event Data JSON Example Event Data 2 JSON key 30 _uid 0123 4567 8901 2345 6789 key 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value min key 3 max Maximum numeric value seen for the specified key over time max Example Example Event Data JSON Example Event Data 2 JSON key 30 _uid 0123 4567 8901 2345 6789 key 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value max key 30 set Create a unique list array of each value seen for this key over time set Example Example Event Data JSON Example Event Data 2 JSON Example Event Data 3 JSON key value _uid 0123 4567 8901 2345 6789 key value_too _uid 0123 4567 8901 2345 6789 key value _uid 0123 4567 8901 2345 6789 Expression Resulting Value set key value value_too Logical Functions These functions are used for local evaluation often as conditional statements and return boolean values true false all Checks a list of values or keys values and returns true if ALL those values or keys values are non zero values keys that are missing from incoming data will result in a false return here all Example Example Event Data JSON key key_too value_too _uid 0123 4567 8901 2345 6789 Expression Resulting Value all key key_too false any Similar to all except only requires one of the given parameters to evaluate to true ish not a zero value for the result to be true any Example Example Event Data JSON key key_too value_too _uid 0123 4567 8901 2345 6789 Expression Resulting Value any key key_too true exists Checks for the existence of a key or a passed value and confirms the value if exists is not the empty string exists Example Example Event Data JSON key 0 _uid 0123 4567 8901 2345 6789 Expression Resulting Value exists key true eq Checks for equality eq Example Example Event Data JSON key 0 _uid 0123 4567 8901 2345 6789 Expression Resulting Value eq key 0 true ne Inverse of eq ne Example Example Event Data JSON key 0 _uid 0123 4567 8901 2345 6789 Expression Resulting Value ne key 0 false lt Checks if the first argument is less than the second lt Example Example Event Data JSON key 0 key_too 1 _uid 0123 4567 8901 2345 6789 Expression Resulting Value lt key key_too true le Checks if the first argument is less than OR equal to the second le Example Example Event Data JSON key 0 key_too 1 _uid 0123 4567 8901 2345 6789 Expression Resulting Value le key key_too true gt Checks if the first argument is greater than the second gt Example Example Event Data JSON key 0 key_too 1 _uid 0123 4567 8901 2345 6789 Expression Resulting Value gt key key_too false ge Checks if the first argument is greater than OR equal to the second ge Example Example Event Data JSON key 0 key_too 1 _uid 0123 4567 8901 2345 6789 Expression Resulting Value ge key key_too false not Returns the inverse of a boolean valuation not false true not Example Example Event Data JSON key 0 key_too 1 _uid 0123 4567 8901 2345 6789 Expression Resulting Value not eq key key_too true in Checks if is in the supplied value list in Example Example Event Data JSON key 0 _uid 0123 4567 8901 2345 6789 Expression Resulting Value key in 0 2 4 6 8 true Updated about 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/advanced-mapping#content",
    "title": "String Functions",
    "chunk_text": "Lytics Conductor supports numerous built in functions for light data transformation and logic evaluation to allow users to map only data that is relevant to their customer profile and format it the way they need for activation of their use cases For more complex data transformation and aggregation we suggest utilizing Cloud Connect with or without Lytics Warehouse for bringing in calculated attributes Expressions Mapping Keys vs Literals To map the data value passed in an event you will want to use the associated key within the Expression When creating mappings it is important to remember that keys need to be wrapped in single backticks Literals which can be a string int float bool or timestamp are used to map a static value to the field These are often used with conditionals Conditions Conditions allow you perform logical evaluations to determine when to store a value on a field based on any of the data passed within the same incoming event Merge Operators Merge operators allow you to determine how a value will be written to a field in relation to the currently stored value Data Types Kind int number string date string ts string map string int map string number map string string Screenshot Example of supplying expression condition to a mapping This example showcases the default mapping for the mo_email_unsub field from the Marketo Activity import Here we see we are writing count over time in which we see activityTypeId as a key in the incoming event data However we are only writing this expressions results when that incoming event data evaluates the condition eq activityTypeId 9 as true String Functions These functions are used to manipulate string fields join Join together multiple values coerce them into strings Last argument is which string to use to join may be empty string join Example Example Event Data JSON street 698 Candlewood Lane city Cabot Cove state ME _uid 0123 4567 8901 2345 6789 Expression Resulting Value join street city state 698 Candlewood Lane Cabot Cove ME Breaking down the Example The join function takes at minimum 2 arguments utilizing the LAST argument as the joining string and concatenates each argument in order utilizing the joining string In this example we produce a single string consisting of street city state values concatenated utilizing the joining string comma followed by a space len Length of array string find the length of a string return integer value of length len Example Example Event Data JSON _e item_added_to_cart items_in_cart ISBN_9780553119978 ISBN_9780345324481 _uid 0123 4567 8901 2345 6789 Expression Resulting Value len items_in_cart 2 Breaking down the Example The len function here is operating on a field whose value is an array so the output is the number of items in the array Applying len to a string results in the character length of the string oneof Choose value from the first field that has a non nil empty string inclusive value oneof Example Example Event Data JSON account_id 000 000 001 account_name Planet Express _uid 0123 4567 8901 2345 6789 Expression Resulting Value oneof account_no account_id 000 000 001 Breaking down the Example This oneof function first checks and sees that the account_no field does not exist in the event data so then moves to the account_id which is found to be a non nil value and is returned replace Converts the value to a string and then replaces the matching part of a string with another string If no replacement string is passed or an empty string is passed the matched string is simply removed replace Example Example Event Data JSON _e search url https pawneeindiana com parks and recreation _uid 0123 4567 8901 2345 6789 Expression Resulting Value replace replace path url parks and recreation Breaking down the Example Using path finds the path of the url which is parks and recreation The inner replace finds all parts of the string that matches and since there is no specified string replacement is replaced with nothing This results in a value of parks and recreation The outer replace takes the resulting parks and recreation and finds all of the parts of the string that matches and replaces with a space Leading to the final value of parks and recreation split Breaks a variable into smaller fragments given a specific delimiter split Example Example Event Data JSON _e preferences set favorite genres mystery science fiction fantasy _uid 0123 4567 8901 2345 6789 Expression Resulting Value set split favorite genres fantasy mystery science fiction Breaking down the Example The split splits the incoming value associated with the favorite genres key at each of the characters the value contains Because split will split the value into fragments that are stored as an array you will need to map it to a field that is a set data type string or time and you will also want to wrap set for strings or totimeset for datetimes around the function The order of a set of strings resulting from the split function will be alphabetical The order of a set of datetimes resulting from the split function will be oldest to latest However if you use an array index function to pull out a value based on position the originally passed order will be referenced strip Strip removes leading and trailing whitespace spaces tabs newline carriage return from strings or arrays of strings strip Example Example Event Data JSON _e preferences set favorite sub genres detective fiction cozy mystery space opera steampunk _uid 0123 4567 8901 2345 6789 Expression Resulting Value strip split favorite sub genres detective fiction cozy mystery space opera steampunk Breaking down the Example The split function splits the incoming value associated with the favorite sub genres key at each of the characters the value contain In this example it will create 4 strings that are stored in an array output alphabetical order The strip function then removes the leading and trailing spaces around each of the strings within the array string lowercase Convert strings to lower case string lowercase Example Example Event Data JSON _e registration vehical_make DMC vehical_model DeLorean plate_number outatime _uid 0123 4567 8901 2345 6789 Expression Resulting Value string lowercase vehical_make dmc Breaking down the Example The string lowercase function looks at each character in the string value and converts to the lowercase equivalent string uppercase Convert strings to upper case string uppercase Example Example Event Data JSON _e registration vehical_make DMC vehical_model DeLorean plate_number outatime _uid 0123 4567 8901 2345 6789 Expression Resulting Value string uppercase plate_number OUTATIME Breaking down the Example The string uppercase function looks at each character in the string value and converts to the uppercase equivalent string titlecase Convert strings to title case string titlecase Example Example Event Data JSON _e profile completed full_name ARTHUR DENT _uid 0123 4567 8901 2345 6789 Expression Resulting Value string titlecase string lowercase full_name Arthur Dent Using string titlecase only operates on the first character of each word in the string and thus will always require that you first convert the string to lowercase using string lowercase for the full traditional titlecase conversion Breaking down the Example Using the string lowercase will first normalize the incoming string by converting it to lowercase Wrapping the string titlecase will then convert the string into title case string index Find position of substring within a string return ordinal starting position string index Example Example Event Data JSON numberString 0123456789 _uid 0123 4567 8901 2345 6789 Expression Resulting Value string index numberString 1 1 Breaking down the Example string index utilizes a 0 based index so the first character in the string is at index 0 and the 1 being the second character in the string is at index 1 string substr Extract a string from a string using positional start end string substr Example Example Event Data JSON numberString 0123456789 _uid 0123 4567 8901 2345 6789 Expression Resulting Value string substr numberString 3 7 3456 Breaking down the Example string substr utilizes a 0 based index and returns the substring of the provided string starting at the provided start index up to but not including the end index The end index is optional here and will return from the start index through the remainder of the string string substr android 0 3 and string substr android 2 droid contains Does this value contain this string Is a sub string match not full match eq contains Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value contains stringExample string true Breaking down the Example The contains function takes 2 arguments the field or raw string to be searched and the substring to search for In this example the value for the stringExample field is searched for the substring string and being found returns the boolean value true hasprefix Does this value start with this string hasprefix Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hasprefix stringExample This is a string true Breaking down the Example The hasprefix function takes 2 arguments the field or raw string to be searched and the substring to check for a match starting at index 0 of the 1st argument In this example the value for the stringExample field is checked for the substring This is a string and being found to match as the prefix returns the boolean value true hassuffix Does this value end with this string hassuffix Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hassuffix stringExample as an example true Breaking down the Example The hassuffix function takes 2 arguments the field or raw string to be searched and the substring to check for a match to end the 1st argument In this example the value for the stringExample field is checked for the substring as an example and being found to match as the suffix returns the boolean value true Hash Encoding Functions You can apply hash functions to encode incoming data hash sip Hash the given value using sip hash to integer output hash sip Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hash sip stringExample 1913777820508603599 hash md5 Hash the given value using md5 hash md5 Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hash md5 stringExample b6c4db114d07e225a8d9d77e47779f5c hash sha1 Hash the given value using sha1 hash sha1 Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hash sha1 stringExample 1fe04eb0f9ffd1df677657c914f42b68fff9e0cb hash sha256 Hash the given value using sha256 hash sha256 Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hash sha256 stringExample e2f7ae28b1c04104c11ee09ab4ab79ca20da6ac4e665c13f1b91be2f02b0f986 hash sha512 Hash the given value using sha512 hash sha512 Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value hash sha512 stringExample e0771e85eeb0ed73b38df14f42e2c20c6755356c1f1222bcd8d661503645e3659460f3bf668af527b75c1373fc419dd4f8e8493692fb0ca17329f1232898b7ca encoding b64encode base64 encode encoding b64encode Example Example Event Data JSON stringExample This is a string being used as an example _uid 0123 4567 8901 2345 6789 Expression Resulting Value encoding b64encode stringExample VGhpcyBpcyBhIHN0cmluZyBiZWluZyB1c2VkIGFzIGFuIGV4YW1wbGU encoding b64decode field base64 decode encoding b64decode Example Example Event Data JSON stringExample VGhpcyBpcyBhIHN0cmluZyBiZWluZyB1c2VkIGFzIGFuIGV4YW1wbGU _uid 0123 4567 8901 2345 6789 Expression Resulting Value encoding b64decode stringExample This is a string being used as an example Casting Conversion These functions allow you to cast and convert data into different types note for todate conversion see the Date Time section below toint Converts strings to integers Useful for converting a string to a number before applying a number based expression toint Example Example Event Data JSON stringOne 1 7 stringTwo 2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value sum toint stringOne toint stringTwo 3 Breaking down the Example Here we have a summation function applying to the result of converting two different string fields to int s and wrapping them in the sum function We first convert the value for stringOne 1 7 into it s int equivalent 1 then convert the value for stringTwo 2 into it s int equivalent 2 then the summation result of the two int values is 3 tonumber Converts string to numbers Useful for converting a string to a number while needing to keep decimal precision tonumber Example Example Event Data JSON stringOne 1 7 stringTwo 2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value sum tonumber stringOne tonumber stringTwo 3 7 Breaking down the Example Here we have a summation function applying to the result of converting two different string fields to number s and wrapping them in the sum function We first convert the value for stringOne 1 7 into it s number equivalent 1 7 keeping decimal precision then convert the value for stringTwo 2 into it s number equivalent 2 then the summation result of the two number values is 3 7 tobool Casts to boolean Numeric Values of 0 1 convert to false true respectively String Values will convert as 0 f F false FALSE False false 1 t T true TRUE True true tobool Example Example Event Data JSON boolField F _uid 0123 4567 8901 2345 6789 Expression Resulting Value tobool boolField false Map Set Array Functions These functions manipulate map or set fields note for the len function see the String function listed above filter Filter out values that match the specified criteria filter Example Example Event Data JSON sliceField red orange yellow green blue indigo violet _uid 0123 4567 8901 2345 6789 Expression Resulting Value filter strip split sliceField bl red orange yellow green indigo violet Breaking Down the Example This filter operates on top of the array built by split ing and strip ing the sliceField Once we have our base array we then apply the filter bl in which is a wildcard to match the blue value and filter it OUT of the array returning an array including all the unmatched values map Create an object map of key value pairs Often used to keep map of key event name to value last occurrence date Or other user level key value pair data map Example Example Event Data JSON listName Pretend Campaign subscribeStatus subscribed _uid 0123 4567 8901 2345 6789 Expression Resulting Value map listName subscribeStatus Pretend Campaign subscribed match Match a key and then keep a map of key values with the match value removed match Example Example Event Data JSON example_a 1 example_b 2 example_c 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value match example_ a 1 b 2 c 3 Breaking Down the Example The match function here looks for all keys prefixed with example_ and finding 3 results creates a map of key key suffix value pairs from those results utilizing the suffix of the original keys to write to the map mapkeys Given a map return a list of strings consisting of the keys from the map mapkeys Example Example Event Data JSON example_a 1 example_b 2 example_c 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value mapkeys match example_ b c a Breaking Down the Example The mapkeys function here utilizing the result of the match statement as it s input map and returns a list consisting of the keys from that map mapvalues Given a map return a list of the values as strings mapvalues Example Example Event Data JSON example_a 1 example_b 2 example_c 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value mapvalues match example_ 3 1 2 Breaking Down the Example The mapvalues function here utilizes the result of the match statement as it s input map and returns a string list consisting of the values from that map mapinvert Given a map return a map of type map string string inverting the keys values from the initial map Example Event Data JSON example_a 1 example_b 2 example_c 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value mapinvert match example_ 1 a 2 b 3 c Breaking Down the Example The mapinvert function here utilizes the result of the match statement as it s input map and returns a map map string string with each key value pair inverted value key array index Cherry pick a single item out of an array array index Example Example Event Data JSON fruits apples oranges peaches _uid 0123 4567 8901 2345 6789 Expression Resulting Value array index fruits 0 apples Breaking Down the Example The array index function utilizes a 0 indexed array to cherry pick the requested indexes value in this case 0 being the first indexed item returns apples array slice Slice an array of items selecting some subset of them array slice Example Example Event Data JSON fruits tomato apple orange peach _uid 0123 4567 8901 2345 6789 Expression Resulting Value array slice fruits 1 4 apple orange peach Breaking Down the Example For this example the array slice function takes 3 parameters the 3rd being optional and returns an array consisting of the subset of the initial array 1st parameter beginning at the start index 2nd parameter up to but not including the end index 3rd parameter if not provided then it defaults to the end of the input array Reminder that these functions utilize 0 indexed arrays so the index of 1 is actually the 2nd item in the array URL HTTP Email Functions These functions manipulate strings which are URLs or email addresses email Extract email address from Bob email protected format note that the extracted email addresses are converted to lowercase and checked to ensure the existence of symbol as well email Example Example Event Data JSON email Test email protected _uid 0123 4567 8901 2345 6789 Expression Resulting Value email email email protected Breaking Down the Example In this example the email function first extracts the email address of email protected from the input this input can be in the the simplified input already and will then just apply the second part of the function Once we have the email address the function then performs a lowercase operation and checks to ensure the presence of an symbol This check is fairly rudimentary and may change to provide stricter validation in the future emailname Extract Bob from Bob email protected emailname Example Example Event Data JSON email Test email protected _uid 0123 4567 8901 2345 6789 Expression Resulting Value emailname email Test emaildomain Extract gmail com from Bob email protected or email protected Example Event Data JSON email Test email protected _uid 0123 4567 8901 2345 6789 Expression Resulting Value emaildomain email test com url Checks if URL string is valid and returns URL if true url Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value url _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 urlmain Removes the query string and scheme from the url urlmain Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value urlmain _url subdomain domain tld path extended_path Breaking Down the Example The urlmain function here strips the leading scheme https and query string parameters qsparam p1 qsp2 param2 from the provided url domain Extract domain from URL domain Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value domain _url domain tld host Extract host from URL host Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value host _url subdomain domain tld path Extract the URL path from the URL path Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value path _url path extended_path urldecode Perform URL decoding on a field my 20value my value urldecode Example Example Event Data JSON _url https subdomain domain tld path extended_path spaced this 20is 20spaced _uid 0123 4567 8901 2345 6789 Expression Resulting Value urldecode qs _url spaced this is spaced Breaking Down the Example With this example of urldecode we want to decode the spaced query parameter value To do this we first extract the parameters value utilizing the qs function returning this 20is 20spaced We then proceed to use the urldecode function to convert the 20 to and have our decoded string of this is spaced urlminusqs Removes a specific query parameter and it s value from a URL urlminusqs Example Example Event Data JSON _url https subdomain domain tld path extended_path qsparam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value urlminusqs _url qsp2 https subdomain domain tld path extended_path qsparam p1 qs Extract the query string parameter from URL qs Example Example Event Data JSON _url https subdomain domain tld path extended_path qsParam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value qs _url qsp2 param2 Breaking Down the Example Here the qs function attempts to find the requested query string parameter in the URL and returns it if found It s important to note here that this function inherently lowercases the URL provided BEFORE attempting to match the query string where qs2 will search the raw URL provided without lowercasing Effectively qs url param qs2 tolower url param qs2 Extract a querystring parameter without lowercasing the URL before checking for the parameter qs2 Example Example Event Data JSON _url https subdomain domain tld path extended_path qsParam p1 qsp2 param2 _uid 0123 4567 8901 2345 6789 Expression Resulting Value qs2 _url qsParam p1 useragent Extract info from user agent string Below examples based on Mozilla 5 0 X11 Linux x86_64 AppleWebKit 537 11 KHTML like Gecko Chrome 23 0 1271 97 Safari 537 11 useragent _ua bot Extracts True False is this a bot useragent _ua mobile Extracts True False is this mobile useragent _ua mozilla Extracts 5 0 useragent _ua platform Extracts X11 useragent _ua os Extracts Linux x86_64 useragent _ua engine Extracts Linux x86_64 useragent _ua engine_version Extracts AppleWebKit useragent _ua browser Extracts Chrome useragent _ua browser_version Extracts 23 0 1271 97 useragent map _ua Extract map of all of above useragent Example Example Event Data JSON _ua Mozilla 5 0 X11 Linux x86_64 AppleWebKit 537 11 KHTML like Gecko Chrome 23 0 1271 97 Safari 537 11 _uid 0123 4567 8901 2345 6789 Expression Resulting Value useragent map _ua bot false browser Chrome browser_version 23 0 1271 97 engine AppleWebKit engine_version 537 11 mobile false mozilla 5 0 os Linux x86_64 platform X11 Date Time Functions These functions manipulate date fields Our core Date Parser recognizes about 50 date formats so in general these will operate on any format If you are using EU dates you will need to specify the parser format now The current message event times now Example Example Event Data JSON _uid 0123 4567 8901 2345 6789 Expression Resulting Value now 2024 11 18T17 51 21 483775672Z Breaking Down the Example The event in question contains no attribution defining the date time of the event and therefore is processed utilizing the current time as the datetime for the event The time of this example being 2024 11 18T17 51 21 483775672Z epochms Unix MS of the date stamp on the current message being processed Example Event Data JSON _uid 0123 4567 8901 2345 6789 Expression Resulting Value epochms 1731952777954 Breaking Down the Example Similar to the now function the epochms function uses the current event s timestamp to produce a result This time however we return it s representation as the integer unix seconds UTC format todate todate Converts strings to dates Datemath todate now 3m Date math relative to message timestamp Parser todate 02 01 2006 See Date Parser for supported formats Examples with 2 arguments todate 02 01 2006 07 04 2014 use golang s time package formatting todate 02 01 2006 07 04 2014 Reformats the date 07 04 2014 from US formatting to UK formatting with the resulting output being 04 07 2014 todate 02 01 2006 date_field_name Outputs date_field_name as European format where 01 is a placeholder for month 02 is a placeholder for day and 2006 is a placeholder for year todate Example Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value todate dateExample 2024 11 15T00 00 00Z todatein Converts strings to dates whiles specifying a location timezone We still convert back to UTC for storage todatein Example Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value todatein dateExample America Los_Angeles 2024 11 15T08 00 00Z totimestamp Convert date time to Integer Unix Seconds UTC totimestamp Example Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value totimestamp dateExample 1731628800 extract Used to extract parts of a date time Example usage on the strftime site extract Example Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value extract dateExample d 15 yy Date conversion to YY format so May 1 2014 is expressed as 14 yy dob or yy for record time stamp yy Example Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value yy dateExample 24 yymm String The YYMM date format so May 1 2014 is expressed as 1405 Example Event Data JSON dateExample 2024 11 15 _uid 0123 4567 8901 2345 6789 Expression Resulting Value yymm dateExample 2411 mm Date conversion to Integer month value alias for monthofyear mm Example Example Event Data JSON dateExample 2024 05 18 _uid 0123 4567 8901 2345 6789 Expression Resulting Value mm dateExample 5 monthofyear See mm dayofweek Integer representation of the day of the week 0 6 0 Sunday 1 Monday etc dayofweek Example Example Event Data JSON dateExample 2024 11 18 _uid 0123 4567 8901 2345 6789 Expression Resulting Value dayofweek dateExample 1 hourofweek 0 167 Integer representing the hour of the week 12 00 12 59am 00 00 00 00 59 59 on Sunday is 0 hour hourofweek Example Example Event Data JSON dateExample 2024 11 15T00 00 00Z _uid 0123 4567 8901 2345 6789 Expression Resulting Value hourofweek dateExample 120 hourofday Hour of day 12 00 12 59am 00 00 00 00 59 59 0 hourofday Example Example Event Data JSON dateExample 2024 11 15T00 00 00Z _uid 0123 4567 8901 2345 6789 Expression Resulting Value hourofday dateExample 0 seconds The Integer number of seconds in a give time works with datetime as well as MM SS things like seconds 00 30 30 and seconds 10 30 630 seconds Example Example Event Data JSON dateExample 2024 11 15T00 00 00Z _uid 0123 4567 8901 2345 6789 Expression Resulting Value seconds dateExample 1731628800 Aggregate Functions There are a variety of expressions for building document type structures maps lists sets These are functional expressions but can only be used in Columns count Count of of occurrences of the specified key count Example Example Event Data JSON Example Event Data 2 JSON key value _uid 0123 4567 8901 2345 6789 key value_too _uid 0123 4567 8901 2345 6789 Expression Resulting Value count key 2 valuect Count of of occurences of each value for a specific key stored as a map value count valuect Example Example Event Data JSON Example Event Data 2 JSON key value _uid 0123 4567 8901 2345 6789 key value_too _uid 0123 4567 8901 2345 6789 Expression Resulting Value count key value 1 value_too 1 sum Summation of values for a specified key over time sum Example Example Event Data JSON Example Event Data 2 JSON key 30 _uid 0123 4567 8901 2345 6789 key 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value sum key 33 min Minimum numeric value seen for the specified key over time min Example Example Event Data JSON Example Event Data 2 JSON key 30 _uid 0123 4567 8901 2345 6789 key 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value min key 3 max Maximum numeric value seen for the specified key over time max Example Example Event Data JSON Example Event Data 2 JSON key 30 _uid 0123 4567 8901 2345 6789 key 3 _uid 0123 4567 8901 2345 6789 Expression Resulting Value max key 30 set Create a unique list array of each value seen for this key over time set Example Example Event Data JSON Example Event Data 2 JSON Example Event Data 3 JSON key value _uid 0123 4567 8901 2345 6789 key value_too _uid 0123 4567 8901 2345 6789 key value _uid 0123 4567 8901 2345 6789 Expression Resulting Value set key value value_too Logical Functions These functions are used for local evaluation often as conditional statements and return boolean values true false all Checks a list of values or keys values and returns true if ALL those values or keys values are non zero values keys that are missing from incoming data will result in a false return here all Example Example Event Data JSON key key_too value_too _uid 0123 4567 8901 2345 6789 Expression Resulting Value all key key_too false any Similar to all except only requires one of the given parameters to evaluate to true ish not a zero value for the result to be true any Example Example Event Data JSON key key_too value_too _uid 0123 4567 8901 2345 6789 Expression Resulting Value any key key_too true exists Checks for the existence of a key or a passed value and confirms the value if exists is not the empty string exists Example Example Event Data JSON key 0 _uid 0123 4567 8901 2345 6789 Expression Resulting Value exists key true eq Checks for equality eq Example Example Event Data JSON key 0 _uid 0123 4567 8901 2345 6789 Expression Resulting Value eq key 0 true ne Inverse of eq ne Example Example Event Data JSON key 0 _uid 0123 4567 8901 2345 6789 Expression Resulting Value ne key 0 false lt Checks if the first argument is less than the second lt Example Example Event Data JSON key 0 key_too 1 _uid 0123 4567 8901 2345 6789 Expression Resulting Value lt key key_too true le Checks if the first argument is less than OR equal to the second le Example Example Event Data JSON key 0 key_too 1 _uid 0123 4567 8901 2345 6789 Expression Resulting Value le key key_too true gt Checks if the first argument is greater than the second gt Example Example Event Data JSON key 0 key_too 1 _uid 0123 4567 8901 2345 6789 Expression Resulting Value gt key key_too false ge Checks if the first argument is greater than OR equal to the second ge Example Example Event Data JSON key 0 key_too 1 _uid 0123 4567 8901 2345 6789 Expression Resulting Value ge key key_too false not Returns the inverse of a boolean valuation not false true not Example Example Event Data JSON key 0 key_too 1 _uid 0123 4567 8901 2345 6789 Expression Resulting Value not eq key key_too true in Checks if is in the supplied value list in Example Example Event Data JSON key 0 _uid 0123 4567 8901 2345 6789 Expression Resulting Value key in 0 2 4 6 8 true Updated about 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/meta-fields",
    "title": "Meta Fields",
    "chunk_text": "A meta field is a field that has been automatically been added to your Schema by Lytics Meta fields are not integration specific For lists of fields created for specific integrations reference the documentation for the tool of interest Meta Fields Field ID Short Description Data Type Summary _created Created Timestamp date The earliest historic timestamp found across all data sources _id Lytics ID string Canonical identifier from Lytics identity resolution _last_scored Last Scored Timestamp date Timestamp indicating when the profile was last scored _modified Modified Timestamp date Timestamp indicating when the profile was last modifed _segments Segment Membership string All of the segments to which a profile currently belongs _segs Computed Traits membership Segment history shows in and out times for segment membership _split Random Split 1 int Random profile partitions 0 99 _split2 Random Split 2 int Random profile partitions 0 99 _num_aliases int The number of identifiers in the profile _num_events int The number of total user events _num_streams int The number of streams where the user has been seen _num_days int The number of days where there has been a stream event associated with the user _num_conflicts int The number of merge conflicts encountered on the traversal artifact of traversal before indexing _conflicts map string int The number of conflicts per identifier field _num_max_neighbors int The number of fragments skipped in traversal due to max neighbors _max_traversals bool Indicates the profile has hit the maximum number of traversals _num_nested_values int The number of values in nested field types on an entity profile _total_sz int The total byte size of all fields on the profile _cust_sz int The total byte size of all non meta fields on the profile _internal_sz int The total byte size of all meta fields on the profile _elasticsearch_size int The total byte size attempted to write to Elasticsearch but failed _streamnames Stream Names string All the streams that have been seen on each profile _broken_profile_broke_max_size bool If true indicates that this is the reason for the profile s unhealthy state _broken_profile_broke_max_fragment_size bool If true indicates that this is the reason for the profile s unhealthy state _broken_profile_max_neighbors bool If true indicates that this is the reason for the profile s unhealthy state _broken_profile_nested_count bool If true indicates that this is the reason for the profile s unhealthy state On Unhealthy Profiles only some Meta fields will continue to be surfaced View the these fields in our Understanding Profile Health documentation ML Powered Meta Fields These meta fields are the result of Lytics machine learning algorithms Field ID Short Description Data Type Description lytics_content Content Topics map string number Raw topic interests from Lytics Affinity Engine lytics_content_inferred Inferred Content Topics map string number Inferred topic interests from Lytics Affinity Engine lytics_rollup Content Affinities map string number Content affinities from Lytics Affinity Engine score_consistency Score Consistency int Behavior based score Consistency score_frequency Score Frequency int Behavior based score Frequency score_intensity Score Intensity int Behavior based score Intensity score_maturity Score Maturity int Behavior based score Maturity score_momentum Score Momentum int Behavior based score Momentum score_propensity Score Propensity int Behavior based score Propensity score_quantity Score Quantity int Behavior based score Quantity score_recency Score Recency int Behavior based score Recency score_volatility Score Volatility int Behavior based score Volatility segment_prediction Lookalike Model Predictions map string number Scores from Lytics Lookalike and SegmentML models segment_prediction_percentile Lookalike Model Percentiles map string int Percentiles of scores from Lytics Lookalike and SegmentML models deliver_day deliver day map string int The predicted best day to communicate with the user based on their next predicted event deliver_hour deliver hour map string int The predicted best time to communicate with the user based on their next predicted event If you have turned on Scoring by Stream you will see additional sets of Score fields containing the stream name for each stream being individually scored Orchestration Meta Fields These fields will only be available when orchestration has been turned on in an account holdout_groups map string bool Membership of holdout group by experience for orchestration simulation picked_experiences picked experiences string IDs of out of the box integration experiences that leverage delivery optimization and have been selected at one point for the user needs_message Needs Message Score map string number Score that represents the user s need for a message in a specific stream based on the relative distance to or from the predicted next event in the same stream next_event Next Event Prediction map string time The predicted timestamp an event is expected in a specific stream based on interaction patterns of the user in the same stream next_event_low map string time Next Event Prediction Lower Bound next_event_upper map string time Next Event Prediction Upper Bound decision_ttl date Approximate time that decisioning for the profile will be reevaluated Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/meta-fields#content",
    "title": "Meta Fields",
    "chunk_text": "A meta field is a field that has been automatically been added to your Schema by Lytics Meta fields are not integration specific For lists of fields created for specific integrations reference the documentation for the tool of interest Meta Fields Field ID Short Description Data Type Summary _created Created Timestamp date The earliest historic timestamp found across all data sources _id Lytics ID string Canonical identifier from Lytics identity resolution _last_scored Last Scored Timestamp date Timestamp indicating when the profile was last scored _modified Modified Timestamp date Timestamp indicating when the profile was last modifed _segments Segment Membership string All of the segments to which a profile currently belongs _segs Computed Traits membership Segment history shows in and out times for segment membership _split Random Split 1 int Random profile partitions 0 99 _split2 Random Split 2 int Random profile partitions 0 99 _num_aliases int The number of identifiers in the profile _num_events int The number of total user events _num_streams int The number of streams where the user has been seen _num_days int The number of days where there has been a stream event associated with the user _num_conflicts int The number of merge conflicts encountered on the traversal artifact of traversal before indexing _conflicts map string int The number of conflicts per identifier field _num_max_neighbors int The number of fragments skipped in traversal due to max neighbors _max_traversals bool Indicates the profile has hit the maximum number of traversals _num_nested_values int The number of values in nested field types on an entity profile _total_sz int The total byte size of all fields on the profile _cust_sz int The total byte size of all non meta fields on the profile _internal_sz int The total byte size of all meta fields on the profile _elasticsearch_size int The total byte size attempted to write to Elasticsearch but failed _streamnames Stream Names string All the streams that have been seen on each profile _broken_profile_broke_max_size bool If true indicates that this is the reason for the profile s unhealthy state _broken_profile_broke_max_fragment_size bool If true indicates that this is the reason for the profile s unhealthy state _broken_profile_max_neighbors bool If true indicates that this is the reason for the profile s unhealthy state _broken_profile_nested_count bool If true indicates that this is the reason for the profile s unhealthy state On Unhealthy Profiles only some Meta fields will continue to be surfaced View the these fields in our Understanding Profile Health documentation ML Powered Meta Fields These meta fields are the result of Lytics machine learning algorithms Field ID Short Description Data Type Description lytics_content Content Topics map string number Raw topic interests from Lytics Affinity Engine lytics_content_inferred Inferred Content Topics map string number Inferred topic interests from Lytics Affinity Engine lytics_rollup Content Affinities map string number Content affinities from Lytics Affinity Engine score_consistency Score Consistency int Behavior based score Consistency score_frequency Score Frequency int Behavior based score Frequency score_intensity Score Intensity int Behavior based score Intensity score_maturity Score Maturity int Behavior based score Maturity score_momentum Score Momentum int Behavior based score Momentum score_propensity Score Propensity int Behavior based score Propensity score_quantity Score Quantity int Behavior based score Quantity score_recency Score Recency int Behavior based score Recency score_volatility Score Volatility int Behavior based score Volatility segment_prediction Lookalike Model Predictions map string number Scores from Lytics Lookalike and SegmentML models segment_prediction_percentile Lookalike Model Percentiles map string int Percentiles of scores from Lytics Lookalike and SegmentML models deliver_day deliver day map string int The predicted best day to communicate with the user based on their next predicted event deliver_hour deliver hour map string int The predicted best time to communicate with the user based on their next predicted event If you have turned on Scoring by Stream you will see additional sets of Score fields containing the stream name for each stream being individually scored Orchestration Meta Fields These fields will only be available when orchestration has been turned on in an account holdout_groups map string bool Membership of holdout group by experience for orchestration simulation picked_experiences picked experiences string IDs of out of the box integration experiences that leverage delivery optimization and have been selected at one point for the user needs_message Needs Message Score map string number Score that represents the user s need for a message in a specific stream based on the relative distance to or from the predicted next event in the same stream next_event Next Event Prediction map string time The predicted timestamp an event is expected in a specific stream based on interaction patterns of the user in the same stream next_event_low map string time Next Event Prediction Lower Bound next_event_upper map string time Next Event Prediction Upper Bound decision_ttl date Approximate time that decisioning for the profile will be reevaluated Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lytics-query-language",
    "title": "Introduction",
    "chunk_text": "With the move to Schema this page has been deprecated Please see Field Mappings and Advanced Mapping Functions for more up to date information Introduction LQL Lytics Query Language is a proprietary query language developed by Lytics that allows users to cleanse filter and define the relationship between independent sources of data to materialize a unified consumer profile This document outlines how to review maintain and create complex LQL queries With the introduction of Conductor all core data mapping functionality is now available directly in the UI LQL is still available via API for technical users looking to automate process or manage fields an mappings in bulk but the vast majority of day to day users may benefit from diving deeper into Conductor Exploring LQL Queries The Browse Queries section in Lytics lets you see the Lytics Query Language LQL used in your account To view this on your Lytics dashboard navigate to Data Queries From there you can click on any item in the table to view an individual LQL file This is useful if you need to find out the exact definition of a specific user field and cannot access your LQL directly Remember that you can t edit or remove LQL from the Lytics UI For a more detailed breakdown of LQL and how it works see the full article on Queries LQL Managing LQL Queries The Lytics Query Language LQL is used to define the transformation of uploaded records and event data into user fields on a customer profile It transforms row level event data into document oriented user info This Query language is similar to the HIVE or SQL query languages However it departs from these to offer more of a Rich Document JSON user profile construction The following section will explain how to write validate and upload queries using LQL Query Example Query Management Standard Syntax Functions Kinds Data Types Merge Operations Query Example The following is a simple example of an LQL file that translates events from a website into profile fields SELECT name Simple field by default string age KIND INT cast field as int last_visit_ts KIND DATE cast as date Showing the aggregate counter function and aliasing name of output column AS count _ref AS ref_ct Valuect makes a map string int count of occurrences of a key valuect my field AS myfield_mapct showcase every optional syntax element in column meregeop oldest we don t want to over write this value keep oldest KIND INT normally we don t have to cast as most functions have a specific type amt AS first_order_amount IF event cart checkout SHORTDESC Amount of First Order LONGDESC Amount of First Order KIND INT MERGEOP OLDEST lets keep around the date at which they signed up mergeop oldest now AS signedup_date IF event signed up KIND DATE MERGEOP oldest maps map all fields that start with user into a fact map match user AS user_attributes KIND map string string list of strings set event AS all_events Identified By Columns allow merging across streams email EmailAddress AS email _uid fbuid FROM default INTO user BY _uid OR email OR fbuid WHERE _bot f OR NOT EXISTS _bot ALIAS web_user Query Management Once you have written your LQL file you can save it with the lql extension And use the following request to validate the query using the Lytics API curl s XPOST https api lytics io api query _validate H Authorization LIOKEY H Content Type text plain data binary tmp tmp lql jq You can upload your query to your account if it is valid curl s XPOST https api lytics io api query H Authorization LIOKEY H Content Type text plain data binary your_file lql jq To look at the user schema generated from the LQL curl s H Authorization LIOKEY XGET https api lytics io api schema user jq Standard Syntax There a few common keywords used in LQL syntax SELECT Select data to be added to user profiles including Maps Counts and other complex data types FROM The stream to select from INTO This is USER for all user profiles Technically you could create other types such as account WHERE Filters out entire records to not be included analyzed such as Bots Employees Test data BY What field are we going to identify this entity by ALIAS When a selection query has an alias that is the profile fragment table name to use Use the following reference for a full syntactical guide when writing your own LQL Select SELECT COLUMNS FROM INTO BY WHERE ALIAS required from the stream to operate on for this query FROM FROM Identifier Required Identified By field name of column AS from Column BY BY Identifier OR Identifier Required Alias for giving a query a unique identifier ALIAS ALIAS Identifier Optional Where Filter same as SQL where WHERE WHERE LogicalExpression COLUMNS COLUMN COLUMN COLUMN Expression AS Identifier IF LogicalExpression SHORTDESC String LONGDESC String KIND Kind MERGEOP MergeOp LogicalExpression NOT Comparison EXISTS IN CONTAINS LIKE Function Expression LogicalExpression LogicalExpression OR LogicalExpression LogicalExpression AND LogicalExpression Expression Identifier Function Literal Function Identifier Expression Expression NOT NOT LogicalExpression Comparison Identifier ComparisonOp Literal ComparisonOp EXISTS EXISTS Identifier IN Identifier IN Literal Literal CONTAINS Identifier CONTAINS Literal LIKE Identifier LIKE String uses for wildcards Literal String Int Float Bool Timestamp Identifier a zA Z a zA Z0 9_ String Kind int number string date string ts string map string int map string number map string string MergeOp s are very seldom used and have to be used on the right Kind ie string can use Latest Oldest but not min max MergeOp max min latest oldest mapmax Functions LQL has many built in functions for transformation and logic evaluation that can be applied to raw fields in LQL Aggregate Functions There are a variety of expressions for building document type structures maps lists sets These are functional expressions but can only be used in Columns count Count of this key For instance count occurrences of sessions that have started ie visited website set Create a unique list array of each value we have seen from this field min max Minimum or Maximum value for numerics sum Sum values keep track of total video play time etc Logical Functions These functions are used for local evaluation and return boolean values true false all Check for the existence of n keys Returns true of false all key1 key2 key3 any Check for the existence of at least one of the given n keys Returns true or false any fieldname value1 value2 value3 exists Check for the existence of a single key Returns true or false exists purchase_total checks to see if purchase_total is defined for the current message valuect yymm AS visits_by_yymm IF exists _sesstart Only fires valuect yymm if _sesstart exists in Check if a field value is in a set of values Returns true or false t AS is_student IF role_type IN student other dailyContact AS dailyContact IF dailyContact IN student other eq Check if the two values are equal Returns true or false eq domain google com ne Check if the two values are not equal Returns true or false ne domain google com lt Check if the first value is less than the second value Returns true or false lt seconds video_time 30 le Check if the first value is less than or equal to the second value Returns true or false le seconds video_time 30 gt Check if the first value is greater than the second value Returns true or false gt seconds video_time 30 ge Check if the first value is greater than or equal to the second value Returns true or false ge seconds video_time 30 not Returns true if the inner value resolves as false and returns false if the inner value resolves as true not exists domain or Returns true if at least one of the inner statements resolves to true or exists domain contains domain google com AS from_google if Check if the first IF clause is true If not use the value in the else clause Planet Earth IF CONTAINS Planet Earth ELSE Some Other Planet Format IF_TRUE_VALUE IF CONDITION ELSE ELSE_VALUE ifcase Check for multiple IF conditions If none are true default to the last value ifcase Planet Mars IF CONTAINS Planet Mars Planet Venus IF CONTAINS Planet Venus Planet Earth Format ifcase IF_TRUE_VALUE_1 IF CONDITION_1 IF_TRUE_VALUE_2 IF CONDITION_2 ELSE_VALUE String Functions These functions are used to manipulate string fields join Join together multiple values coerce them into strings Last argument is which string to use to join may be empty string join apples oranges apples oranges join apples oranges applesoranges len Length of array string find the length of a string return integer value of length oneof Choose value from the first field that has a non nil value oneof fielda fieldb fieldc replace Replace a matching part of a string with another string or an empty string Converts to string first replace url search apachesolr_search Removes search apachesolr_search from URL in this case leaving the search term replace url 20 replaces 20 from URL with a space string split Breaks a variable into smaller fragments given a specific delimiter split cc Splits the variable cc at each comma it contains string strip field Strips leading and trailing whitespace spaces tabs newline carriage return from string or arrays of strings string lowercase Convert strings to lower case string uppercase Convert strings to upper case string titlecase Convert strings to title case string index Find position of substring within a string return ordinal starting position string index apple p 1 find starting index of the first p string substr Extract a string from a string using positional start end string substr android 0 3 and string substr android 2 droid contains Does this value contain this string Is a sub string match not full match eq IF contains total_price Check to see if total_price has a in it IF not contains subscriber_key AND not contains subscriber_key check to make sure or is not in it hasprefix Does this value start with this string hasprefix event created Check to see if event starts with created hassuffix Does this value start with this string hassuffix subscriber_key user Check to see if subscriber_key ends with user Hash Encoding Functions You can apply hash functions to encode incoming data hash sip hash sip email Hash the given value using sip hash to integer output hash md5 hash md5 email Hash the given value using md5 hash sha1 hash sha1 email Hash the given value using sha1 hash sha256 hash sha256 email Hash the given value using sha256 hash sha512 hash sha512 email Hash the given value using sha512 encoding b64encode field base64 encode encoding b64decode field base64 decode Casting Conversion These functions allow you to cast and convert data into different types toint Converts strings to integers Useful for converting a string to a number before applying a number based expression toint order_total Converts order_total to an int set toint split cc Takes the field cc and splits it at commas and converts the results to integers Then adds them to a set tonumber Convert to Number todate Converts strings to dates see full doc in Date Time section below tobool field Cast to Boolean Map Set Array Functions These functions manipulate map or set fields filter Filter out Values that match specified list of match filter criteria filter split apples oranges ora apples len Length of array string map Create an object map of key value pairs Often used to keep map of key event name to value last occurrence date Or other user level key value pair data map key1 todate date_field map key1 todate date_field KIND map string time By default the map is generic map cast to map string time with match Type Map generic map use KIND to cast Match a key and then keep a map of key values with the match value removed match topic_ AS global KIND map string number mapkeys Type Map input string output Given a map return a list of string of each of the keys mapvalues Type Map input string output Given a map return a list of string values of each of the values mapinvert Type Map input MapString output Given a map return a map string string inverting keys values array index Cherry pick a single item out of an array array index split apples oranges peaches 1 oranges array slice Slice an array of items selecting some sub set of them array slice split apples oranges peaches pineapple 2 peaches pineapple array slice split apples oranges peaches pineapple 1 3 oranges peaches URL HTTP Email Functions These functions manipulate strings which are URLs or email addresses email Extract email address from Bob email protected format note that email addresses are converted to lowercase emailname Extract Bob from Bob email protected or email protected emaildomain Extract gmail com from Bob email protected or email protected domain Extract domain lytics io from URL http www lytics io index html host Extract host www lytics io from URL http www lytics io index html path Extract the URL path from URL no query string or domain must be valid URL parseable string qs Extract the query string parameter from URL qs urlfield nameOfParam qs url mc_eid Extracts the MailChimp user ID set qs url video_id Creates a set of video_id qs tolower url riid Converts the complete URL to lowercase before attempting to match email oneof email qs url email Attempts to get the email address from the URL and from the regular fields chooses whichever is populated and treats it like an email field qs2 Extract a querystring parameter without lowercasing before checking for the parameter qs2 is the same as qs above except that it does not lowercase before checking for a querystring url Checks if URL string is valid and returns URL if true urldecode Perform URL decode on a field urldecode field If field contains my 20value urldecode field will return my value urlmain Removes the querystring and scheme from the url urlmain http www lytics com utm_source google will return www lytics com urlminusqs Removes a specific query parameter and its value from a url urlminusqs http www lytics com q1 google q2 123 q1 will return http www lytics com q2 123 useragent Extract info from user agent string Below examples based on Mozilla 5 0 X11 Linux x86_64 AppleWebKit 537 11 KHTML like Gecko Chrome 23 0 1271 97 Safari 537 11 useragent user_agent bot Extracts True False is this a bot useragent user_agent mobile Extracts True False is this mobile useragent user_agent mozilla Extracts 5 0 useragent user_agent platform Extracts X11 useragent user_agent os Extracts Linux x86_64 useragent user_agent engine Extracts Linux x86_64 useragent user_agent engine_version Extracts AppleWebKit useragent user_agent browser Extracts Chrome useragent user_agent browser_version Extracts 23 0 1271 97 useragent map field Extract map of all of above Date Time Functions These functions manipulate date fields Our core date parser recognizes about 50 date formats so in general these will operate on any format If you are using EU dates you will need to specify the parser format dayofweek Type Integer 0 6 integer of day of week Examples dayofweek 4 OR dayofweek mydatefield epochms Type Integer Unix MS of the date stamp on the current message being processed extract Can be used to extract parts of date and time Example usage on the strftime site extract reg_date B Returns name of month extract reg_date d Returns day of month hourofday Type Integer Hour of day in 24 hour utc time hourofday OR hourofday field hourofweek 0 167 integer for hour of week mm Type Integer 0 11 month alias for monthofyear mm current month 6 for june mm my_date_field monthofyear Type Integer Output the 0 11 month value now Type Date The current message event times seconds Type Integer Seconds extracts things like seconds 00 30 30 and seconds 10 30 630 todate Converts strings to dates Datemath todate now 3m Date math relative to message timestamp Parser todate 02 01 2006 More than 30 formats supported Date Parser Examples with 2 arguments todate date_field_format date_field_name where date_field_format represents how date_field_name should be parsed and uses golang s time package formatting todate 02 01 2006 15 04 05 PM date_field_name outputs date_field_name as European format where 01 is a placeholder for month 02 is a placeholder for day and 2006 is a placeholder for year 15 is a placeholder for hour 04 is a placeholder for minute and 05 is a placeholder for second If the timestamp is in AM PM format use PM For 24Hr format do not add am pm after second field for e g todate 02 01 2006 15 04 05 PM 30 04 2014 12 25 30 PM parses the date 30 04 2014 12 25 30 PM as European format Please refer to golang s time package documentation for more information about date time formats todatein Converts strings to dates and parses the given datetime for the given location For e g todatein date_field_name America Los_Angeles parses the date_field_name for Los Angeles location If no location info is provided in date string such as 2017 09 30 17 00 00 this will allow you to apply a timezone We still convert back to UTC for storage totimestamp Convert to Integer Unix Seconds UTC yy Type int Date conversion to YY format so May 1 2014 is expressed as 14 yy dob or yy for record time stamp yymm String The YYMM date format so May 1 2014 is expressed as 1405 yy dob or yy for record time stamp timebucket Creates a tabulation of timestamps which can be used to segment based on timewindows timebucket now for collect time or timebucket todate field to bucket on the value of a field Kinds Data Types The KIND syntax allows you to explicitly define the data type of a field Often this is optional as it is inferred from functional expression int 64 bit signed integer number 64 bit signed Float value bool Boolean date Date Time string string time Array of times string Array of strings ts string Time ordered Unique set of strings useful for keeping track of order in which they performed set of unique events map string int Map of key integers map string number map string string map string time Merge Operations The MERGEOP syntax allows you to define merge behavior that is do you want to keep new incoming values or values from previous events In the UI you will only see the mergeops that will be valid for the data type Single Value Fields Scalar Holds the latest value passed in to the field old_score KIND INT MERGEOP latest Holds the first value seen for my_date my_date KIND DATE MERGEOP oldest Holds the oldest value passed in to the field old_score KIND INT MERGEOP oldest Multi Value Fields Non Scalar Only Store Latest Set all previous values of set discarded set lists AS lists KIND string MERGEOP latest Only store data for keys that were seen in the last event The latest event will overwrite what is in the map If only one key is found in the last event there will only be one row returned on the profile map key attribute AS mergeop_latest KIND map string number MERGEOP latest Only store data for keys that were seen in the first event The oldest event will overwrite what is in the map If only one key is found in the last event there will only be one row returned on the profile map key attribute AS mergeop_oldest KIND map string number MERGEOP oldest Store the latest attribute for for each key This will overwrite attributes NOT keys map key attribute AS mergeop_latestmap KIND map string number MERGEOP latestmap Store the oldest attribute for each key This will overwrite attributes NOT keys map key attribute AS mergeop_oldestmap KIND map string number MERGEOP oldestmap Store the latest attribute for for each key This will overwrite attributes NOT keys This will behave like mergeop latest for maps map key attribute AS mergeop_merge KIND map string number MERGEOP merge Sum the attribute value per key as new events come in map attribute AS mergeop_sum KIND map string int MERGEOP sum Store the minimum attribute for each key map key attribute AS meregeop_mapmax KIND map string number MERGEOP mapmin Store the maximum attribute for each key map key attribute AS meregeop_mapmax KIND map string number MERGEOP mapmax Updated 3 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lytics-query-language#content",
    "title": "Introduction",
    "chunk_text": "With the move to Schema this page has been deprecated Please see Field Mappings and Advanced Mapping Functions for more up to date information Introduction LQL Lytics Query Language is a proprietary query language developed by Lytics that allows users to cleanse filter and define the relationship between independent sources of data to materialize a unified consumer profile This document outlines how to review maintain and create complex LQL queries With the introduction of Conductor all core data mapping functionality is now available directly in the UI LQL is still available via API for technical users looking to automate process or manage fields an mappings in bulk but the vast majority of day to day users may benefit from diving deeper into Conductor Exploring LQL Queries The Browse Queries section in Lytics lets you see the Lytics Query Language LQL used in your account To view this on your Lytics dashboard navigate to Data Queries From there you can click on any item in the table to view an individual LQL file This is useful if you need to find out the exact definition of a specific user field and cannot access your LQL directly Remember that you can t edit or remove LQL from the Lytics UI For a more detailed breakdown of LQL and how it works see the full article on Queries LQL Managing LQL Queries The Lytics Query Language LQL is used to define the transformation of uploaded records and event data into user fields on a customer profile It transforms row level event data into document oriented user info This Query language is similar to the HIVE or SQL query languages However it departs from these to offer more of a Rich Document JSON user profile construction The following section will explain how to write validate and upload queries using LQL Query Example Query Management Standard Syntax Functions Kinds Data Types Merge Operations Query Example The following is a simple example of an LQL file that translates events from a website into profile fields SELECT name Simple field by default string age KIND INT cast field as int last_visit_ts KIND DATE cast as date Showing the aggregate counter function and aliasing name of output column AS count _ref AS ref_ct Valuect makes a map string int count of occurrences of a key valuect my field AS myfield_mapct showcase every optional syntax element in column meregeop oldest we don t want to over write this value keep oldest KIND INT normally we don t have to cast as most functions have a specific type amt AS first_order_amount IF event cart checkout SHORTDESC Amount of First Order LONGDESC Amount of First Order KIND INT MERGEOP OLDEST lets keep around the date at which they signed up mergeop oldest now AS signedup_date IF event signed up KIND DATE MERGEOP oldest maps map all fields that start with user into a fact map match user AS user_attributes KIND map string string list of strings set event AS all_events Identified By Columns allow merging across streams email EmailAddress AS email _uid fbuid FROM default INTO user BY _uid OR email OR fbuid WHERE _bot f OR NOT EXISTS _bot ALIAS web_user Query Management Once you have written your LQL file you can save it with the lql extension And use the following request to validate the query using the Lytics API curl s XPOST https api lytics io api query _validate H Authorization LIOKEY H Content Type text plain data binary tmp tmp lql jq You can upload your query to your account if it is valid curl s XPOST https api lytics io api query H Authorization LIOKEY H Content Type text plain data binary your_file lql jq To look at the user schema generated from the LQL curl s H Authorization LIOKEY XGET https api lytics io api schema user jq Standard Syntax There a few common keywords used in LQL syntax SELECT Select data to be added to user profiles including Maps Counts and other complex data types FROM The stream to select from INTO This is USER for all user profiles Technically you could create other types such as account WHERE Filters out entire records to not be included analyzed such as Bots Employees Test data BY What field are we going to identify this entity by ALIAS When a selection query has an alias that is the profile fragment table name to use Use the following reference for a full syntactical guide when writing your own LQL Select SELECT COLUMNS FROM INTO BY WHERE ALIAS required from the stream to operate on for this query FROM FROM Identifier Required Identified By field name of column AS from Column BY BY Identifier OR Identifier Required Alias for giving a query a unique identifier ALIAS ALIAS Identifier Optional Where Filter same as SQL where WHERE WHERE LogicalExpression COLUMNS COLUMN COLUMN COLUMN Expression AS Identifier IF LogicalExpression SHORTDESC String LONGDESC String KIND Kind MERGEOP MergeOp LogicalExpression NOT Comparison EXISTS IN CONTAINS LIKE Function Expression LogicalExpression LogicalExpression OR LogicalExpression LogicalExpression AND LogicalExpression Expression Identifier Function Literal Function Identifier Expression Expression NOT NOT LogicalExpression Comparison Identifier ComparisonOp Literal ComparisonOp EXISTS EXISTS Identifier IN Identifier IN Literal Literal CONTAINS Identifier CONTAINS Literal LIKE Identifier LIKE String uses for wildcards Literal String Int Float Bool Timestamp Identifier a zA Z a zA Z0 9_ String Kind int number string date string ts string map string int map string number map string string MergeOp s are very seldom used and have to be used on the right Kind ie string can use Latest Oldest but not min max MergeOp max min latest oldest mapmax Functions LQL has many built in functions for transformation and logic evaluation that can be applied to raw fields in LQL Aggregate Functions There are a variety of expressions for building document type structures maps lists sets These are functional expressions but can only be used in Columns count Count of this key For instance count occurrences of sessions that have started ie visited website set Create a unique list array of each value we have seen from this field min max Minimum or Maximum value for numerics sum Sum values keep track of total video play time etc Logical Functions These functions are used for local evaluation and return boolean values true false all Check for the existence of n keys Returns true of false all key1 key2 key3 any Check for the existence of at least one of the given n keys Returns true or false any fieldname value1 value2 value3 exists Check for the existence of a single key Returns true or false exists purchase_total checks to see if purchase_total is defined for the current message valuect yymm AS visits_by_yymm IF exists _sesstart Only fires valuect yymm if _sesstart exists in Check if a field value is in a set of values Returns true or false t AS is_student IF role_type IN student other dailyContact AS dailyContact IF dailyContact IN student other eq Check if the two values are equal Returns true or false eq domain google com ne Check if the two values are not equal Returns true or false ne domain google com lt Check if the first value is less than the second value Returns true or false lt seconds video_time 30 le Check if the first value is less than or equal to the second value Returns true or false le seconds video_time 30 gt Check if the first value is greater than the second value Returns true or false gt seconds video_time 30 ge Check if the first value is greater than or equal to the second value Returns true or false ge seconds video_time 30 not Returns true if the inner value resolves as false and returns false if the inner value resolves as true not exists domain or Returns true if at least one of the inner statements resolves to true or exists domain contains domain google com AS from_google if Check if the first IF clause is true If not use the value in the else clause Planet Earth IF CONTAINS Planet Earth ELSE Some Other Planet Format IF_TRUE_VALUE IF CONDITION ELSE ELSE_VALUE ifcase Check for multiple IF conditions If none are true default to the last value ifcase Planet Mars IF CONTAINS Planet Mars Planet Venus IF CONTAINS Planet Venus Planet Earth Format ifcase IF_TRUE_VALUE_1 IF CONDITION_1 IF_TRUE_VALUE_2 IF CONDITION_2 ELSE_VALUE String Functions These functions are used to manipulate string fields join Join together multiple values coerce them into strings Last argument is which string to use to join may be empty string join apples oranges apples oranges join apples oranges applesoranges len Length of array string find the length of a string return integer value of length oneof Choose value from the first field that has a non nil value oneof fielda fieldb fieldc replace Replace a matching part of a string with another string or an empty string Converts to string first replace url search apachesolr_search Removes search apachesolr_search from URL in this case leaving the search term replace url 20 replaces 20 from URL with a space string split Breaks a variable into smaller fragments given a specific delimiter split cc Splits the variable cc at each comma it contains string strip field Strips leading and trailing whitespace spaces tabs newline carriage return from string or arrays of strings string lowercase Convert strings to lower case string uppercase Convert strings to upper case string titlecase Convert strings to title case string index Find position of substring within a string return ordinal starting position string index apple p 1 find starting index of the first p string substr Extract a string from a string using positional start end string substr android 0 3 and string substr android 2 droid contains Does this value contain this string Is a sub string match not full match eq IF contains total_price Check to see if total_price has a in it IF not contains subscriber_key AND not contains subscriber_key check to make sure or is not in it hasprefix Does this value start with this string hasprefix event created Check to see if event starts with created hassuffix Does this value start with this string hassuffix subscriber_key user Check to see if subscriber_key ends with user Hash Encoding Functions You can apply hash functions to encode incoming data hash sip hash sip email Hash the given value using sip hash to integer output hash md5 hash md5 email Hash the given value using md5 hash sha1 hash sha1 email Hash the given value using sha1 hash sha256 hash sha256 email Hash the given value using sha256 hash sha512 hash sha512 email Hash the given value using sha512 encoding b64encode field base64 encode encoding b64decode field base64 decode Casting Conversion These functions allow you to cast and convert data into different types toint Converts strings to integers Useful for converting a string to a number before applying a number based expression toint order_total Converts order_total to an int set toint split cc Takes the field cc and splits it at commas and converts the results to integers Then adds them to a set tonumber Convert to Number todate Converts strings to dates see full doc in Date Time section below tobool field Cast to Boolean Map Set Array Functions These functions manipulate map or set fields filter Filter out Values that match specified list of match filter criteria filter split apples oranges ora apples len Length of array string map Create an object map of key value pairs Often used to keep map of key event name to value last occurrence date Or other user level key value pair data map key1 todate date_field map key1 todate date_field KIND map string time By default the map is generic map cast to map string time with match Type Map generic map use KIND to cast Match a key and then keep a map of key values with the match value removed match topic_ AS global KIND map string number mapkeys Type Map input string output Given a map return a list of string of each of the keys mapvalues Type Map input string output Given a map return a list of string values of each of the values mapinvert Type Map input MapString output Given a map return a map string string inverting keys values array index Cherry pick a single item out of an array array index split apples oranges peaches 1 oranges array slice Slice an array of items selecting some sub set of them array slice split apples oranges peaches pineapple 2 peaches pineapple array slice split apples oranges peaches pineapple 1 3 oranges peaches URL HTTP Email Functions These functions manipulate strings which are URLs or email addresses email Extract email address from Bob email protected format note that email addresses are converted to lowercase emailname Extract Bob from Bob email protected or email protected emaildomain Extract gmail com from Bob email protected or email protected domain Extract domain lytics io from URL http www lytics io index html host Extract host www lytics io from URL http www lytics io index html path Extract the URL path from URL no query string or domain must be valid URL parseable string qs Extract the query string parameter from URL qs urlfield nameOfParam qs url mc_eid Extracts the MailChimp user ID set qs url video_id Creates a set of video_id qs tolower url riid Converts the complete URL to lowercase before attempting to match email oneof email qs url email Attempts to get the email address from the URL and from the regular fields chooses whichever is populated and treats it like an email field qs2 Extract a querystring parameter without lowercasing before checking for the parameter qs2 is the same as qs above except that it does not lowercase before checking for a querystring url Checks if URL string is valid and returns URL if true urldecode Perform URL decode on a field urldecode field If field contains my 20value urldecode field will return my value urlmain Removes the querystring and scheme from the url urlmain http www lytics com utm_source google will return www lytics com urlminusqs Removes a specific query parameter and its value from a url urlminusqs http www lytics com q1 google q2 123 q1 will return http www lytics com q2 123 useragent Extract info from user agent string Below examples based on Mozilla 5 0 X11 Linux x86_64 AppleWebKit 537 11 KHTML like Gecko Chrome 23 0 1271 97 Safari 537 11 useragent user_agent bot Extracts True False is this a bot useragent user_agent mobile Extracts True False is this mobile useragent user_agent mozilla Extracts 5 0 useragent user_agent platform Extracts X11 useragent user_agent os Extracts Linux x86_64 useragent user_agent engine Extracts Linux x86_64 useragent user_agent engine_version Extracts AppleWebKit useragent user_agent browser Extracts Chrome useragent user_agent browser_version Extracts 23 0 1271 97 useragent map field Extract map of all of above Date Time Functions These functions manipulate date fields Our core date parser recognizes about 50 date formats so in general these will operate on any format If you are using EU dates you will need to specify the parser format dayofweek Type Integer 0 6 integer of day of week Examples dayofweek 4 OR dayofweek mydatefield epochms Type Integer Unix MS of the date stamp on the current message being processed extract Can be used to extract parts of date and time Example usage on the strftime site extract reg_date B Returns name of month extract reg_date d Returns day of month hourofday Type Integer Hour of day in 24 hour utc time hourofday OR hourofday field hourofweek 0 167 integer for hour of week mm Type Integer 0 11 month alias for monthofyear mm current month 6 for june mm my_date_field monthofyear Type Integer Output the 0 11 month value now Type Date The current message event times seconds Type Integer Seconds extracts things like seconds 00 30 30 and seconds 10 30 630 todate Converts strings to dates Datemath todate now 3m Date math relative to message timestamp Parser todate 02 01 2006 More than 30 formats supported Date Parser Examples with 2 arguments todate date_field_format date_field_name where date_field_format represents how date_field_name should be parsed and uses golang s time package formatting todate 02 01 2006 15 04 05 PM date_field_name outputs date_field_name as European format where 01 is a placeholder for month 02 is a placeholder for day and 2006 is a placeholder for year 15 is a placeholder for hour 04 is a placeholder for minute and 05 is a placeholder for second If the timestamp is in AM PM format use PM For 24Hr format do not add am pm after second field for e g todate 02 01 2006 15 04 05 PM 30 04 2014 12 25 30 PM parses the date 30 04 2014 12 25 30 PM as European format Please refer to golang s time package documentation for more information about date time formats todatein Converts strings to dates and parses the given datetime for the given location For e g todatein date_field_name America Los_Angeles parses the date_field_name for Los Angeles location If no location info is provided in date string such as 2017 09 30 17 00 00 this will allow you to apply a timezone We still convert back to UTC for storage totimestamp Convert to Integer Unix Seconds UTC yy Type int Date conversion to YY format so May 1 2014 is expressed as 14 yy dob or yy for record time stamp yymm String The YYMM date format so May 1 2014 is expressed as 1405 yy dob or yy for record time stamp timebucket Creates a tabulation of timestamps which can be used to segment based on timewindows timebucket now for collect time or timebucket todate field to bucket on the value of a field Kinds Data Types The KIND syntax allows you to explicitly define the data type of a field Often this is optional as it is inferred from functional expression int 64 bit signed integer number 64 bit signed Float value bool Boolean date Date Time string string time Array of times string Array of strings ts string Time ordered Unique set of strings useful for keeping track of order in which they performed set of unique events map string int Map of key integers map string number map string string map string time Merge Operations The MERGEOP syntax allows you to define merge behavior that is do you want to keep new incoming values or values from previous events In the UI you will only see the mergeops that will be valid for the data type Single Value Fields Scalar Holds the latest value passed in to the field old_score KIND INT MERGEOP latest Holds the first value seen for my_date my_date KIND DATE MERGEOP oldest Holds the oldest value passed in to the field old_score KIND INT MERGEOP oldest Multi Value Fields Non Scalar Only Store Latest Set all previous values of set discarded set lists AS lists KIND string MERGEOP latest Only store data for keys that were seen in the last event The latest event will overwrite what is in the map If only one key is found in the last event there will only be one row returned on the profile map key attribute AS mergeop_latest KIND map string number MERGEOP latest Only store data for keys that were seen in the first event The oldest event will overwrite what is in the map If only one key is found in the last event there will only be one row returned on the profile map key attribute AS mergeop_oldest KIND map string number MERGEOP oldest Store the latest attribute for for each key This will overwrite attributes NOT keys map key attribute AS mergeop_latestmap KIND map string number MERGEOP latestmap Store the oldest attribute for each key This will overwrite attributes NOT keys map key attribute AS mergeop_oldestmap KIND map string number MERGEOP oldestmap Store the latest attribute for for each key This will overwrite attributes NOT keys This will behave like mergeop latest for maps map key attribute AS mergeop_merge KIND map string number MERGEOP merge Sum the attribute value per key as new events come in map attribute AS mergeop_sum KIND map string int MERGEOP sum Store the minimum attribute for each key map key attribute AS meregeop_mapmax KIND map string number MERGEOP mapmin Store the maximum attribute for each key map key attribute AS meregeop_mapmax KIND map string number MERGEOP mapmax Updated 3 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/identity-key-ranks",
    "title": "Introduction",
    "chunk_text": "Introduction Identity ranks in Lytics are critical to the platform s identity resolution capabilities In Lytics a user s identity is based upon many unique identifiers that are used to connect data across different sources This allows businesses to comprehensively view the user s behavior and preferences which can be used to create targeted and personalized marketing campaigns Identity ranks provide a way to emphasize one identifier over the other in the case of conflicts or uncertainties during the stitching or independent events into a profile Managing Ranks Lytics makes managing ranks easy Press the up or down arrow for a specific identifier to move it up or down in the list Altering ranks without a clear intent can cause unexpected outcomes When managing ranks it is always best to consult with your primary technical contact at Lytics Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/identity-key-ranks#content",
    "title": "Introduction",
    "chunk_text": "Introduction Identity ranks in Lytics are critical to the platform s identity resolution capabilities In Lytics a user s identity is based upon many unique identifiers that are used to connect data across different sources This allows businesses to comprehensively view the user s behavior and preferences which can be used to create targeted and personalized marketing campaigns Identity ranks provide a way to emphasize one identifier over the other in the case of conflicts or uncertainties during the stitching or independent events into a profile Managing Ranks Lytics makes managing ranks easy Press the up or down arrow for a specific identifier to move it up or down in the list Altering ranks without a clear intent can cause unexpected outcomes When managing ranks it is always best to consult with your primary technical contact at Lytics Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/schema-versions",
    "title": "Introduction",
    "chunk_text": "Introduction Schema versions allow changes to be made in advance of publishing changes directly to the pipeline A version combines the changes from fields mappings and rankings After making changes to fields mappings or rankings Since mappings occur within Lytics real time profile pipeline mappings will only be applied to data that passes through the pipeline and will not be retroactively applied to historical data For information on creating profile attributes with data outside of Lytics collection APIs Publishing Reverting Schema Changes Publishing changes is easy You can first determine if there are any unpublished changes to your schema by visiting the Versions under the Schema menu in the main navigation within Conductor There you will see a summary of your version history and the number of unpublished changes Publishing Changes If you have unpublished changes click on the Publish Changes button to review those changes and ultimately publish when ready Once you have opted to publish the changes you will be asked to complete a final review This review will outline the changes to fields mappings and rankings On the final step you ll have an opportunity to provide a description to associate with the version and ultimately publish This ensures any changes have a clear history and reduces any change of accidental schema changes Reverting Changes Discarding Unpublished Changes If you determine that you would like to discard all the current unpublished changes to the schema click on the Discard Changes button This will open a dialog box that will confirm that you wish to reset the schema to the last published version Select the Discard Changes button to discard all changes Reverting Published Changes If you would like to remove the changes you published in your most recent schema version s navigate to the version you would like to return your schema to and click the Revert to Schema button This will create a new unpublished version that contains all the changes needed to return all the fields mappings and ranks back to the state of the desired schema version Your will then need to publish these changes in order to complete the reversion Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/schema-versions#content",
    "title": "Introduction",
    "chunk_text": "Introduction Schema versions allow changes to be made in advance of publishing changes directly to the pipeline A version combines the changes from fields mappings and rankings After making changes to fields mappings or rankings Since mappings occur within Lytics real time profile pipeline mappings will only be applied to data that passes through the pipeline and will not be retroactively applied to historical data For information on creating profile attributes with data outside of Lytics collection APIs Publishing Reverting Schema Changes Publishing changes is easy You can first determine if there are any unpublished changes to your schema by visiting the Versions under the Schema menu in the main navigation within Conductor There you will see a summary of your version history and the number of unpublished changes Publishing Changes If you have unpublished changes click on the Publish Changes button to review those changes and ultimately publish when ready Once you have opted to publish the changes you will be asked to complete a final review This review will outline the changes to fields mappings and rankings On the final step you ll have an opportunity to provide a description to associate with the version and ultimately publish This ensures any changes have a clear history and reduces any change of accidental schema changes Reverting Changes Discarding Unpublished Changes If you determine that you would like to discard all the current unpublished changes to the schema click on the Discard Changes button This will open a dialog box that will confirm that you wish to reset the schema to the last published version Select the Discard Changes button to discard all changes Reverting Published Changes If you would like to remove the changes you published in your most recent schema version s navigate to the version you would like to return your schema to and click the Revert to Schema button This will create a new unpublished version that contains all the changes needed to return all the fields mappings and ranks back to the state of the desired schema version Your will then need to publish these changes in order to complete the reversion Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/schema-audit",
    "title": "Schema Visualization",
    "chunk_text": "Schema Visualization The Lytics schema visualization tool lets users visualize the relationships between data fields and data sources within the Lytics platform The visualization provides a graphical representation of the data schema making it easier for users to understand the structure of their data and how it is connected With the schema visualization users can Explore data relationships The visualization lets users see how different data fields and sources are connected providing a clear picture of the overall data schema Identify data gaps Users can quickly identify gaps in their data by looking for missing fields or disconnected data sources Plan data integrations The visualization can help users plan data integrations by providing a visual representation of how data from different sources can be connected Troubleshoot data issues The visualization can be used to troubleshoot data issues by identifying inconsistencies or errors in the data schema Overall the Lytics schema visualization provides a powerful tool for understanding the data structure within the Lytics platform enabling users to gain deeper insights and make more informed decisions about their data strategy Schema Audit The Schema Audit provides an overview of how your user fields are being used the data they contain and where they are getting that data It is a great way to see if you have user fields that don t have any data or are not being used for any audience On your Lytics dashboard navigate to Data Schema Audit This section offers a snapshot of your data to verify your data mapping techniques Filtering the Schema Audit By default the Schema Audit includes all user fields in your account You can filter the report in three different ways Users with field allows you to filter fields based the percentage of users in your account who have a user field For example if you choose At least 50 the Schema Audit will be filtered to include only user fields found on 50 or more of the profiles in your account Data stream allows you to filter the Schema Audit based on the data source of a user field Remember that a user field may receive data from multiple data streams Search box allows you to search for a specific user field by name Interpreting Data Visualizations The visualizations near the top of the report tell you how user fields are used in your Lytics account You can click on one of the visualizations to filter the table below The first pie chart shows the percentage of user fields that are providing data to build profiles from In the example above only 40 of user fields provide data to profiles That means the other 60 of user fields have no data at all This number should be as close to 100 as possible The second pie chart shows the percentage of user fields that are being used to define audiences In this example 94 of user fields are not being used to define any audience This account probably mapped too much data and could trim down their LQL quite a bit The third pie chart shows how many user fields are merging data from multiple streams A common example of merging data from multiple streams is an email user field Typically this may read data from your website as well as an email tool One of Lytics core competencies is merging data from different sources so be sure to take advantage of this when creating your user fields The distribution bar along the bottom of this section shows you what type of user fields are in your account Certain types of user fields especially any containing map are more expensive and should be used carefully Mouse over the slices of the distribution bar to see how many user fields of each type are in your account User Fields Table Browse the table to find detailed information about a specific user field Select the List audiences each field uses checkbox to expand the table and see any audience that contains a user field in its definition Column Description ID Slug for a user field Name User friendly name for a user field Type Data type contained in the user field Sources Streams that the user field reads data from Users with field Number of user profiles with data from this user field Approx Cardinality Number of unique values in this user field Times used Number of times this user field is used to define an audience If you have questions about the user fields on your Schema Audit contact your Lytics customer success representative for more information Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/schema-audit#content",
    "title": "Schema Visualization",
    "chunk_text": "Schema Visualization The Lytics schema visualization tool lets users visualize the relationships between data fields and data sources within the Lytics platform The visualization provides a graphical representation of the data schema making it easier for users to understand the structure of their data and how it is connected With the schema visualization users can Explore data relationships The visualization lets users see how different data fields and sources are connected providing a clear picture of the overall data schema Identify data gaps Users can quickly identify gaps in their data by looking for missing fields or disconnected data sources Plan data integrations The visualization can help users plan data integrations by providing a visual representation of how data from different sources can be connected Troubleshoot data issues The visualization can be used to troubleshoot data issues by identifying inconsistencies or errors in the data schema Overall the Lytics schema visualization provides a powerful tool for understanding the data structure within the Lytics platform enabling users to gain deeper insights and make more informed decisions about their data strategy Schema Audit The Schema Audit provides an overview of how your user fields are being used the data they contain and where they are getting that data It is a great way to see if you have user fields that don t have any data or are not being used for any audience On your Lytics dashboard navigate to Data Schema Audit This section offers a snapshot of your data to verify your data mapping techniques Filtering the Schema Audit By default the Schema Audit includes all user fields in your account You can filter the report in three different ways Users with field allows you to filter fields based the percentage of users in your account who have a user field For example if you choose At least 50 the Schema Audit will be filtered to include only user fields found on 50 or more of the profiles in your account Data stream allows you to filter the Schema Audit based on the data source of a user field Remember that a user field may receive data from multiple data streams Search box allows you to search for a specific user field by name Interpreting Data Visualizations The visualizations near the top of the report tell you how user fields are used in your Lytics account You can click on one of the visualizations to filter the table below The first pie chart shows the percentage of user fields that are providing data to build profiles from In the example above only 40 of user fields provide data to profiles That means the other 60 of user fields have no data at all This number should be as close to 100 as possible The second pie chart shows the percentage of user fields that are being used to define audiences In this example 94 of user fields are not being used to define any audience This account probably mapped too much data and could trim down their LQL quite a bit The third pie chart shows how many user fields are merging data from multiple streams A common example of merging data from multiple streams is an email user field Typically this may read data from your website as well as an email tool One of Lytics core competencies is merging data from different sources so be sure to take advantage of this when creating your user fields The distribution bar along the bottom of this section shows you what type of user fields are in your account Certain types of user fields especially any containing map are more expensive and should be used carefully Mouse over the slices of the distribution bar to see how many user fields of each type are in your account User Fields Table Browse the table to find detailed information about a specific user field Select the List audiences each field uses checkbox to expand the table and see any audience that contains a user field in its definition Column Description ID Slug for a user field Name User friendly name for a user field Type Data type contained in the user field Sources Streams that the user field reads data from Users with field Number of user profiles with data from this user field Approx Cardinality Number of unique values in this user field Times used Number of times this user field is used to define an audience If you have questions about the user fields on your Schema Audit contact your Lytics customer success representative for more information Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/navigation-management-1",
    "title": "Universal Schema",
    "chunk_text": "Lytics profiles enjoy access to both a universal schema which provides computed intelligent attributes on every profile in Lytics as well as a common schema a set of standard attributes that facilitates faster integration and more reliable consistency when integrating profiles to and from other systems Growth and Enterprise Lytics accounts may also customize their schema with additional fields and mappings Universal Schema Lytics universal schema delivers a set of intelligent attributes that are universal to every profile that gets created regardless of data source age or their anonymous or known status These attributes include rich behavioral models AI derived interests and identity resolution metadata leading to more comprehensive insights on all of your profiles Not just the known ones Universal attributes provide a common vocabulary with which to think about how you might engage with each and every individual what they re interested in what their engagement has been or how they re likely to engage in the future Identifiers Identifiers in Lytics Schema serve to stitch profiles together For instance if you pass an email along with the _ uid all events that have only been associated with either identifier will be merged into a single comprehensive profile Default identifiers are listed below Some jobs in your data pipeline may add new identifiers to your schema like shopify_customer_id or salesforce_contact_ids Field Short Description Long Description Example _id Lytics ID A unique ID that represents the materialized profile in Lytics 4fafb5b3 b199 58f2 a68b 4b266b363dd1 Metafields Metafields encompass all system level information that provides insights into the health and breadth of the profile This includes data such as creation date last update timestamp source information and other metadata associated with the profile s management and maintenance Metafields offer a behind the scenes view of the profile s overall status and administration Field Short Description Long Description Example _created Created The time a profile was created 2024 02 28T02 45 51 377423153Z _last_scored Last Scored Timestamp The time a profile was last scored by Lytics 2024 02 28T02 45 51 377423153Z _modified Modified Timestamp The time a profile was last modified by Lytics 2024 02 28T02 45 51 377423153Z _num_aliases Number of Aliases The number of aliases for a profile as calculated by Lytics Identity Resolution 5 _num_days Number of Days The number of distinct days a profile has had activity 3 _num_events Number of Events The total number of events processed for a profile 81 _num_streams Number of Streams The number of distinct data streams in which a profile has been present 2 _streamnames Stream Names The distinct streams in which a profile has been present default Behavioral Behavioral attributes comprise a multidimensional set of scores that provide insight into an individual s behavior over time These insights are invaluable when personalizing experiences based on changes in behavior or behaviors indicative of high likelihood For instance you might want to present a premium offer to users exhibiting higher momentum than usual Behavioral attributes enable targeted and timely interventions tailored to user actions and patterns Field Short Description Long Description Example score_consistency Consistency Measures the long term consistency of a typical user s daily engagement 56 score_frequency Frequency Measures the frequency of a user s engagement relative to your most frequent users 74 score_intensity Intensity Measures the depth of a typical user s daily engagement 3 score_maturity Maturity Measures the length of a user s history relative to your most mature users 97 score_momentum Momentum Measures the rate at which user engagement is changing 45 score_propensity Propensity Measures how likely a user is to re engage with more activity 91 score_quantity Quantity Measures the quantity of a user s engagement relative to your most frequent users 12 score_recency Recency Measures the recency over a 1 year window of a user s engagement 28 score_volatility Volatility Measures the long term volatility of the depth of a typical user s daily engagement 63 Interests Interests entail understanding the topics a user is interested in based on their interactions cross referenced by deep programmatic analysis of their online activities This allows for tailored content recommendations and targeted messaging aligned with the user s preferences and engagement history Field Short Description Long Description Example lytics_content Lytics Content A map of topic level interests for the user Shoes 0 76 Pants 0 43 Intelligence Attributes classified as intelligence encompass diverse highly valuable information to facilitate relevant and high value personalized experiences Within this category you ll discover real time segment membership values crucial for split testing and experimentation and direct correlation to our real time machine learning modeling These attributes empower dynamic and data driven decision making enhancing the efficacy of personalized marketing strategies Field Short Description Long Description Example _segments Segment Membership The segments or audiences of which on individual is a member all anonymous_profiles smt_power _split Random Split 1 A randomly assigned value for making randomized audiences and driving experiments 0 _split2 Random Split 2 A randomly assigned value for making randomized audiences and driving experiments 99 segment_prediction Lytics Predictive Scores Scores from Lytics SegmentML Predictive Models likely_to_buy_shoes 0 47 segment_prediction_percentile Lytics Preditive Percentiles Percentiles from Lytics SegmentML Predictive Models likely_to_buy_shoes 91 _split Random splits are assigned by algorithmic hashing and result in an even distribution across profiles There are 100 possible splits 0 99 so creating an audience where _split 44 would result in a random subset of 1 of profiles A random split where _split 50 would result in a subset of 50 of profiles _split2 Having access to two random split assignments allows you to target 100 100 or 10k different subsets of your audiences This means you can create splits that are capable of targeting down to 0 01 of profiles segment_prediction Lytics SegmentML models provide scores for modeling custom outcomes in Lookalike models Each active model attaches a score between 0 and 1 to a profile with its name segment_prediction_percentile Similar to segment_prediction values the percentiles provide the ability to create audiences and target users based on their percentile instead of their raw score This enables you for example to create audiences of users with the top 10 of scores by using segment_prediction_percentile 90 Common Schema Common fields help to structure your profiles in a way for developers to easily plug into them and for marketers to easily use them in personalization Common mappings help to translate your source data into a format that can be used by common fields These fields and mappings help to provide consistency in your profiles regardless of the source from which the data came For example your CRM might have tax_exempt true while your data warehouse might has tax_status exempt and your ESP might have is_tax_exempt 1 In Lytics Common Schema this would simply be represented as tax_exempt true Pre defined Mappings For your convenience Jobs managed in your Data Pipeline will automatically create schema fields and mappings to implement Lytics Common Schema in your data so that you can get to more use cases more quickly with our Inspiration Library Some fields like name are automatically part of every Lytics account Other channel specific fields will be added when you add channel specific data sources to your account For example adding a Shopify import job to your data sources would add the common schema field purchase_total among others Identifiers Identifiers in Lytics Schema serve to stitch profiles together For instance if you pass an email along with the _ uid all events that have only been associated with either identifier will be merged into a single comprehensive profile Default identifiers are listed below Some jobs in your data pipeline may add new identifiers to your schema like shopify_customer_id or salesforce_contact_ids Field Short Description Long Description Example _uids Web Cookie Id All All cookies associated with a profile 50b772f5 a0be 42f2 8828 84b8db5d5a23 email Email Address Email address of a profile email protected email_sha256 Email Address Hash SHA256 SHA256 hash of the profile s email address e43763399e5318f14cd7473c4902a6b319343d577ec8283898a5edf9dbc6d711 external_id External ID An identifier to link a profile to custom sources abc123 _uids JavaScript cURL HTTPie Postman jstag send _uid 50b772f5 a0be 42f2 8828 84b8db5d5a23 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data _uid 50b772f5 a0be 42f2 8828 84b8db5d5a23 echo _uid 50b772f5 a0be 42f2 8828 84b8db5d5a23 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify _uid 50b772f5 a0be 42f2 8828 84b8db5d5a23 pm sendRequest url https api lytics io collect json default method POST email An individual s email address is automatically standardized syntactically validated and lower cased so as to be compatible as an identifier in your identity graph JavaScript cURL HTTPie Postman jstag send email_address email protected curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data email_address email protected echo email_address email protected http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify email_address email protected pm sendRequest url https api lytics io collect json default method POST email_sha256 The SHA256 hash of an individual s email address In the event that your account has an email address present the hash is automatically computed so as to be compatible with external systems that require the SHA256 hash for integration In the event that you don t want any PII in your account you can pass the hash directly instead of the raw address JavaScript cURL HTTPie Postman jstag send email_address email protected curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data email_address email protected echo email_address email protected http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify email_address email protected pm sendRequest url https api lytics io collect json default method POST external_id Optional and if provided this will usually come from your proprietary first party database This will be used for profile stitching and should therefore be unique to an individual JavaScript cURL HTTPie Postman jstag send external_id abc123 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data external_id abc123 echo external_id abc123 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify external_id abc123 pm sendRequest url https api lytics io collect json default method POST Interests Interests entail understanding the topics a user is interested in based on their interactions cross referenced by deep programmatic analysis of their online activities This allows for tailored content recommendations and targeted messaging aligned with the user s preferences and engagement history Field Short Description Long Description Example hashedurls Hashed URLs A map of URLs an individual has engaged with indexed by each URL s hashed value hashedurls 4058474390481920149 5 680176754148162020 2 hashedurls A history of an individual s most recently visited URLs helpful for powering Lytics Interest Engines A siphash of each URL s sanitized value without query parameters is used to index the map hashedurls are used in Lytics standard Interest Engine but you can create additional Interest Engines with other sets of URLs product IDs or atomic content IDs from your CMS JavaScript cURL HTTPie Postman jstag send url www lytics com blog real talk about real time cdps curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data url www lytics com blog real talk about real time cdps echo url www lytics com blog real talk about real time cdps http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify url www lytics com blog real talk about real time cdps pm sendRequest url https api lytics io collect json default method POST Intelligence Attributes classified as intelligence encompass diverse highly valuable information to facilitate relevant and high value personalized experiences Within this category you ll discover real time segment membership values crucial for split testing and experimentation and direct correlation to our real time machine learning modeling These attributes empower dynamic and data driven decision making enhancing the efficacy of personalized marketing strategies Field Short Description Long Description Example next_event Next Event Stream specific preditions for the timestamp of the next expected interaction on a stream needs_message Needs Message Stream specific score to predict how much an individual needs a message on a data stream needs_message The needs message score evaluates how likely an individual is to engage on a channel without any messaging A higher score would indicate that an individual is less likely to return within a typical engagement window relative to other individuals in a data stream A lower score would indicate that they are more likely to return within a typical engagement window Details Details encompass all default attributes related to user demographics and general information including name phone number status etc It serves as a catch all for attributes not specifically tied to interactions or behaviors Field Short Description Long Description Example first_name First Name An individual s first name Jane last_name Last Name An individual s last name Doe name Name An individual s name Jane Doe birthday Birthday An individual s birthday July 22 birthday Date of Birth An individual s exact date of birth 2000 07 22 phone Phone Number In most cases this will be automatically formatted in E164 format 15555555555 phone_mobile Mobile Phone Number In most cases this will be automatically formatted in E164 format 15555555555 address1 Address 1 First line of customer address 30 Rockefeller Plaza address2 Address 2 Second line of customer address Suite 1000 city City This will usually correspond to a contact provided value registration shipping address etc New York region Region State or Province This will usually correspond to a contact provided value registration shipping address etc NY country Country This will usually correspond to a contact provided value registration shipping address etc USA postal_code Postal Code This will usually correspond to a contact provided value registration shipping address etc 10112 status Profile Status This may be used to indicate a generic customer status active churned premium unknown etc active first_name JavaScript cURL HTTPie Postman jstag send first_name Jane curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data first_name Jane echo first_name Jane http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify first_name Jane pm sendRequest url https api lytics io collect json default method POST last_name JavaScript cURL HTTPie Postman jstag send last_name Doe curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data last_name Doe echo last_name Doe http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify last_name Doe pm sendRequest url https api lytics io collect json default method POST name An individual s name may take a few forms depending on the source and this field may sometimes be just the first name a combination of names or completely empty JavaScript cURL HTTPie Postman jstag send name Jane Doe curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data name Jane Doe echo name Jane Doe http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify name Jane Doe pm sendRequest url https api lytics io collect json default method POST birthday JavaScript cURL HTTPie Postman jstag send birthday July 22 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data birthday July 22 echo birthday July 22 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify birthday July 22 pm sendRequest url https api lytics io collect json default method POST birthday JavaScript cURL HTTPie Postman jstag send dob 2000 07 22 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data dob 2000 07 22 echo dob 2000 07 22 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify dob 2000 07 22 pm sendRequest url https api lytics io collect json default method POST phone JavaScript cURL HTTPie Postman jstag send phone 555 555 5555 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data phone 555 555 5555 echo phone 555 555 5555 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify phone 555 555 5555 pm sendRequest url https api lytics io collect json default method POST phone_mobile JavaScript cURL HTTPie Postman jstag send mobile 555 555 5555 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data mobile 555 555 5555 echo mobile 555 555 5555 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify mobile 555 555 5555 pm sendRequest url https api lytics io collect json default method POST address1 JavaScript cURL HTTPie Postman jstag send address1 30 Rockefeller Plaza curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data address1 30 Rockefeller Plaza echo address1 30 Rockefeller Plaza http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify address1 30 Rockefeller Plaza pm sendRequest url https api lytics io collect json default method POST address2 JavaScript cURL HTTPie Postman jstag send address2 Suite 1000 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data address2 Suite 1000 echo address2 Suite 1000 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify address2 Suite 1000 pm sendRequest url https api lytics io collect json default method POST city JavaScript cURL HTTPie Postman jstag send city New York curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data city New York echo city New York http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify city New York pm sendRequest url https api lytics io collect json default method POST region JavaScript cURL HTTPie Postman jstag send region NY curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data region NY echo region NY http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify region NY pm sendRequest url https api lytics io collect json default method POST country JavaScript cURL HTTPie Postman jstag send country United States curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data country United States echo country United States http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify country United States pm sendRequest url https api lytics io collect json default method POST postal_code JavaScript cURL HTTPie Postman jstag send postal_code 10112 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data postal_code 10112 echo postal_code 10112 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify postal_code 10112 pm sendRequest url https api lytics io collect json default method POST status JavaScript cURL HTTPie Postman jstag send status active curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data status active echo status active http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify status active pm sendRequest url https api lytics io collect json default method POST Geo Geolocation attributes are inferred from geolocation on network activity Field Short Description Long Description Example geoip_org GeoIP Organization Organization inferred from the most recently observed IP address for an individual This may correspond to a business name or an internet service provider in the case of residential IP addresses Acme Corp geoip_country GeoIP Country Country inferred from the most recently observed IP address for an individual USA geoip_city GeoIP City City inferred from the most recently observed IP address for an individual New York geoip_region GeoIP Region Region state or province inferred from the most recently observed IP address for an individual NY designated_market_area Designated Market Area An individual s designated marketing area New York timezone Timezone Timezone associated with an individual s browser or location 4 geoip_org JavaScript cURL HTTPie Postman jstag send ip_address 192 168 0 1 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data ip_address 192 168 0 1 echo ip_address 192 168 0 1 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify ip_address 192 168 0 1 pm sendRequest url https api lytics io collect json default method POST geoip_country JavaScript cURL HTTPie Postman jstag send ip_address 192 168 0 2 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data ip_address 192 168 0 2 echo ip_address 192 168 0 2 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify ip_address 192 168 0 2 pm sendRequest url https api lytics io collect json default method POST geoip_city JavaScript cURL HTTPie Postman jstag send ip_address 192 168 0 3 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data ip_address 192 168 0 3 echo ip_address 192 168 0 3 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify ip_address 192 168 0 3 pm sendRequest url https api lytics io collect json default method POST geoip_region JavaScript cURL HTTPie Postman jstag send ip_address 192 168 0 4 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data ip_address 192 168 0 4 echo ip_address 192 168 0 4 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify ip_address 192 168 0 4 pm sendRequest url https api lytics io collect json default method POST designated_market_area JavaScript cURL HTTPie Postman jstag send dma New York curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data dma New York echo dma New York http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify dma New York pm sendRequest url https api lytics io collect json default method POST timezone JavaScript cURL HTTPie Postman jstag send timezone 4 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data timezone 4 echo timezone 4 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify timezone 4 pm sendRequest url https api lytics io collect json default method POST Device Device attributes describe the devices that have been associated with an individual and their activity Field Short Description Long Description Example device_id Device ID Most Recent An individual s most recent device ID 555837ca cce7 496c 8acc 552793ce969a device_ids Device ID All The collection of all of an individual s observed device IDs 555837ca cce7 496c 8acc 552793ce969a device_advertising_id Device Advertising ID Most Recent An individual s most recent device ID AB1234CD E123 12FG J123 device_advertising_ids Device Advertising ID All The collection of all of an individual s device IDs AB1234CD E123 12FG J123 device_types Device Types The collection of all of an individual s observed device types desktop 1 mobile 100 user_agent User Agent The most recent user agent of an individual s browser Mozilla 5 0 Macintosh Intel Mac OS X 10_15_7 AppleWebKit 537 36 KHTML like Gecko Chrome 128 0 0 0 Safari 537 36 is_mobile Mobile Visitor A flag to indicate if the user has ever been a mobile visitor FALSE is_bot Is Bot A flag to indicate whether or not an individual is suspected of being a bot determined by their user agent FALSE device_os Device OS The operating system of an individual s most recent device iOS device_model Device Model The model of an individual s most recent device iPhone 15 browser_hash Browser Computed Hash The set computed hash of an individual s browsers 555837ca cce7 496c 8acc 552793ce969a browser Browser Version The version of an individual s browser Chrome 130 0 0 0 device_id JavaScript cURL HTTPie Postman jstag send 555837ca cce7 496c 8acc 552793ce969a curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 555837ca cce7 496c 8acc 552793ce969a echo 555837ca cce7 496c 8acc 552793ce969a http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 555837ca cce7 496c 8acc 552793ce969a pm sendRequest url https api lytics io collect json default method POST device_ids JavaScript cURL HTTPie Postman jstag send 555837ca cce7 496c 8acc 552793ce969a curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 555837ca cce7 496c 8acc 552793ce969a echo 555837ca cce7 496c 8acc 552793ce969a http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 555837ca cce7 496c 8acc 552793ce969a pm sendRequest url https api lytics io collect json default method POST device_advertising_id This may be a Google Advertising ID GAID or an Apple Identifier for Advertisers IDFA JavaScript cURL HTTPie Postman jstag send AB1234CD E123 12FG J123 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data AB1234CD E123 12FG J123 echo AB1234CD E123 12FG J123 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify AB1234CD E123 12FG J123 pm sendRequest url https api lytics io collect json default method POST device_advertising_ids These may be a Google Advertising ID GAID or an Apple Identifier for Advertisers IDFA JavaScript cURL HTTPie Postman jstag send AB1234CD E123 12FG J123 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data AB1234CD E123 12FG J123 echo AB1234CD E123 12FG J123 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify AB1234CD E123 12FG J123 pm sendRequest url https api lytics io collect json default method POST device_types JavaScript cURL HTTPie Postman jstag send desktop curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data desktop echo desktop http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify desktop pm sendRequest url https api lytics io collect json default method POST user_agent JavaScript cURL HTTPie Postman jstag send useragent Mozilla 5 0 Macintosh Intel Mac OS X 10_15_7 AppleWebKit 537 36 KHTML like Gecko Chrome 128 0 0 0 Safari 537 36 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data useragent Mozilla 5 0 Macintosh Intel Mac OS X 10_15_7 AppleWebKit 537 36 KHTML like Gecko Chrome 128 0 0 0 Safari 537 36 echo useragent Mozilla 5 0 Macintosh Intel Mac OS X 10_15_7 AppleWebKit 537 36 KHTML like Gecko Chrome 128 0 0 0 Safari 537 36 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify useragent Mozilla 5 0 Macintosh Intel Mac OS X 10_15_7 AppleWebKit 537 36 KHTML like Gecko Chrome 128 0 0 0 Safari 537 36 pm sendRequest url https api lytics io collect json default method POST is_mobile JavaScript cURL HTTPie Postman jstag send _uamob f curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data _uamob f echo _uamob f http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify _uamob f pm sendRequest url https api lytics io collect json default method POST is_bot JavaScript cURL HTTPie Postman jstag send _uabot f curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data _uabot f echo _uabot f http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify _uabot f pm sendRequest url https api lytics io collect json default method POST device_os JavaScript cURL HTTPie Postman jstag send device_os iOS curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data device_os iOS echo device_os iOS http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify device_os iOS pm sendRequest url https api lytics io collect json default method POST device_model JavaScript cURL HTTPie Postman jstag send device_model iPhone 15 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data device_model iPhone 15 echo device_model iPhone 15 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify device_model iPhone 15 pm sendRequest url https api lytics io collect json default method POST browser_hash While not a default part of your identity graph this field may be promoted to an identifier to perform identity stitching This should be performed with caution as it is not guaranteed to be unique and can result in stitching individuals with similarly configured browser JavaScript cURL HTTPie Postman jstag send browser_hash 555837ca cce7 496c 8acc 552793ce969a curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data browser_hash 555837ca cce7 496c 8acc 552793ce969a echo browser_hash 555837ca cce7 496c 8acc 552793ce969a http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify browser_hash 555837ca cce7 496c 8acc 552793ce969a pm sendRequest url https api lytics io collect json default method POST browser JavaScript cURL HTTPie Postman jstag send Chrome 130 0 0 0 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data Chrome 130 0 0 0 echo Chrome 130 0 0 0 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify Chrome 130 0 0 0 pm sendRequest url https api lytics io collect json default method POST Attribution Field Short Description Long Description Example utm_campaign UTM Campaign Most Recent An individual s most recently observed UTM campaign mycampaign1 utm_campaigns UTM Campaign All The set of an individual s N most recently observed UTM campaigns mycampaign1 mycampaign0 utm_source UTM Source Most Recent An individual s most recently observed UTM source instagram utm_sources UTM Campaign All The set of an individual s N most recently observed UTM sources instagram google utm_term UTM Term Most Recent An individual s most recently observed UTM term winter coats utm_terms UTM Campaign All The set of an individual s N most recently observed UTM terms winter coats utm_content UTM Content Most Recent An individual s most recently observed UTM content spanish utm_contents UTM Content All The set of an individual s N most recently observed UTM contents spanish utm_medium UTM Medium Most Recent An individual s most recently observed UTM medium paid utm_mediums UTM Campaign All The set of an individual s N most recently observed UTM mediums paid ly_impressions Attribution Impressions A map of campaign impressions for an individual for Lytics managed campaigns content rec modal 10 ly_conversions Attribution Conversions A map of campaign conversions for an individual for Lytics managed campaigns content rec modal 2 ly_closes Attribution Closes A map of campaign closes for an individual for Lytics managed campaigns content rec modal 7 ly_cancels Attribution Cancels A map of campaign cancels for an individual for Lytics managed campaigns content rec modal 1 ly_hover Attribution Hovered A map of campaign hovers for an individual for Lytics managed campaigns content rec modal 5 conversions_ts Conversion Events A map of conversion events of an individual by timestamp content rec modal 2024 02 28T02 45 51 377423153Z impressions_ts Impression Events A map of impression events of an individual by timestamp content rec modal 2024 02 28T02 45 51 377423153Z utm_campaign JavaScript cURL HTTPie Postman jstag send utm_campaign mycampaign1 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_campaign mycampaign1 echo utm_campaign mycampaign1 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_campaign mycampaign1 pm sendRequest url https api lytics io collect json default method POST utm_campaigns JavaScript cURL HTTPie Postman jstag send utm_campaign mycampaign1 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_campaign mycampaign1 echo utm_campaign mycampaign1 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_campaign mycampaign1 pm sendRequest url https api lytics io collect json default method POST utm_source JavaScript cURL HTTPie Postman jstag send utm_source instagram curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_source instagram echo utm_source instagram http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_source instagram pm sendRequest url https api lytics io collect json default method POST utm_sources JavaScript cURL HTTPie Postman jstag send utm_source instagram curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_source instagram echo utm_source instagram http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_source instagram pm sendRequest url https api lytics io collect json default method POST utm_term JavaScript cURL HTTPie Postman jstag send utm_term winter coats curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_term winter coats echo utm_term winter coats http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_term winter coats pm sendRequest url https api lytics io collect json default method POST utm_terms JavaScript cURL HTTPie Postman jstag send utm_term winter coats curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_term winter coats echo utm_term winter coats http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_term winter coats pm sendRequest url https api lytics io collect json default method POST utm_content JavaScript cURL HTTPie Postman jstag send utm_content spanish curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_content spanish echo utm_content spanish http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_content spanish pm sendRequest url https api lytics io collect json default method POST utm_contents JavaScript cURL HTTPie Postman jstag send utm_content spanish curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_content spanish echo utm_content spanish http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_content spanish pm sendRequest url https api lytics io collect json default method POST utm_medium JavaScript cURL HTTPie Postman jstag send utm_medium paid curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_medium paid echo utm_medium paid http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_medium paid pm sendRequest url https api lytics io collect json default method POST utm_mediums JavaScript cURL HTTPie Postman jstag send utm_medium paid curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_medium paid echo utm_medium paid http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_medium paid pm sendRequest url https api lytics io collect json default method POST ly_impressions JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST ly_conversions JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST ly_closes JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST ly_cancels JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST ly_hover JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST conversions_ts JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST impressions_ts JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST Demographic Field Short Description Long Description Example gender Gender An individual s gender F age Age An individual s age 38 locale Locale An individual s locale often determined by their browser en_US language Language Code An individual s language often determined by their browser en gender JavaScript cURL HTTPie Postman jstag send gender F curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data gender F echo gender F http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify gender F pm sendRequest url https api lytics io collect json default method POST age JavaScript cURL HTTPie Postman jstag send age 38 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data age 38 echo age 38 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify age 38 pm sendRequest url https api lytics io collect json default method POST locale An individual s locale is usually a combination of an individual s language code and country code JavaScript cURL HTTPie Postman jstag send locale en_US curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data locale en_US echo locale en_US http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify locale en_US pm sendRequest url https api lytics io collect json default method POST language An individual s language code standardized by ISO 639 1 two letter codes JavaScript cURL HTTPie Postman jstag send locale en_US curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data locale en_US echo locale en_US http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify locale en_US pm sendRequest url https api lytics io collect json default method POST First Party Field Short Description Long Description Example user_attributes User Attributes A map of custom properties for a profile role member status active form_data Form Data A map to store custom form data for a profile field1 value1 field2 value2 user_attributes User Attributes are helpful for storing custom attributes about an individual without having to create and map additional user fields JavaScript cURL HTTPie Postman jstag send attr status active curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data attr status active echo attr status active http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify attr status active pm sendRequest url https api lytics io collect json default method POST form_data Form Data is helpful for storing custom form data from an individual without having to create and map additional user fields JavaScript cURL HTTPie Postman jstag send form field1 value1 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data form field1 value1 echo form field1 value1 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify form field1 value1 pm sendRequest url https api lytics io collect json default method POST Behaviors Field Short Description Long Description Example hourly Activity by Hour A count of an individual s activity by the hour of the day 9 1 12 4 22 1 hourofweek Activity by Hour of Week A count of an individual s activity by the hour of the week 2 2 140 3 167 9 hourly hourly utilized the timestamp of the event being collected and does not require any mappings JavaScript cURL HTTPie Postman jstag send foo bar curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data foo bar echo foo bar http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify foo bar pm sendRequest url https api lytics io collect json default method POST hourofweek hourofweek utilized the timestamp of the event being collected and does not require any mappings JavaScript cURL HTTPie Postman jstag send foo bar curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data foo bar echo foo bar http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify foo bar pm sendRequest url https api lytics io collect json default method POST Governance Field Short Description Long Description Example consent_status Consent Status A map of consented marketing channels and content status web_necessary consented consent_status_ts Consent Status Timestamp A map of consented marketing channels and when that status was updated web_necessary 2024 02 28T02 45 51 377423153Z consent_status_source Consent Status Source A map of consented marketing channels and the source from which the consent came web_necessary onetrust consent_status The marketing tracking and activation channels to which an individual has expressly given consent This typically includes the following values email_marketing sms_marketing push_marketing cookies_necessary cookies_performance web_functional web_targeting web_social JavaScript cURL HTTPie Postman jstag send consent purpose c0001 constented true curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data consent purpose c0001 constented true echo consent purpose c0001 constented true http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify consent purpose c0001 constented true pm sendRequest url https api lytics io collect json default method POST consent_status_ts The time at which the consent has most recently been confirmed JavaScript cURL HTTPie Postman jstag send consent purpose c0001 constented true curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data consent purpose c0001 constented true echo consent purpose c0001 constented true http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify consent purpose c0001 constented true pm sendRequest url https api lytics io collect json default method POST consent_status_source The source of the consent status JavaScript cURL HTTPie Postman jstag send consent purpose c0001 constented true curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data consent purpose c0001 constented true echo consent purpose c0001 constented true http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify consent purpose c0001 constented true pm sendRequest url https api lytics io collect json default method POST B2B Field Short Description Long Description Example job_title Job Title An individual s job title CEO job_role Job Role An individual s job role Executive company_name Company Name The name of the company at which an individual is employed Lytics Inc company_size Company Size The number of employess of the company at which an individual is employed 224 company_revenue Company Revenue The annual revenue of the company at which an individual is employed 5e 08 company_industry Company Industry The industry of the company at which an individual is employed Healthcare phone_business Business Phone The phone number of the company at which an individual is employed 555 555 5555 job_title JavaScript cURL HTTPie Postman jstag send CEO curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data CEO echo CEO http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify CEO pm sendRequest url https api lytics io collect json default method POST job_role JavaScript cURL HTTPie Postman jstag send Executive curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data Executive echo Executive http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify Executive pm sendRequest url https api lytics io collect json default method POST company_name JavaScript cURL HTTPie Postman jstag send Lytics Inc curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data Lytics Inc echo Lytics Inc http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify Lytics Inc pm sendRequest url https api lytics io collect json default method POST company_size JavaScript cURL HTTPie Postman jstag send 224 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 224 echo 224 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 224 pm sendRequest url https api lytics io collect json default method POST company_revenue JavaScript cURL HTTPie Postman jstag send 5e 08 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 5e 08 echo 5e 08 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 5e 08 pm sendRequest url https api lytics io collect json default method POST company_industry JavaScript cURL HTTPie Postman jstag send Healthcare curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data Healthcare echo Healthcare http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify Healthcare pm sendRequest url https api lytics io collect json default method POST phone_business JavaScript cURL HTTPie Postman jstag send 555 555 5555 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 555 555 5555 echo 555 555 5555 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 555 555 5555 pm sendRequest url https api lytics io collect json default method POST Social Field Short Description Long Description Example facebook_id Facebook ID An individual s Facebook ID jane doe33 twitter_id Twitter ID An individual s X Twitter ID potus pinterest_id Pinterest ID An individual s Pinterest ID 1234567891234 linkedin_id LinkedIn ID An Individual s LinkedIn ID jeff dean 8b212555 tiktok_id TikTok ID An Individual s TikTok ID bts_official_bighit facebook_id JavaScript cURL HTTPie Postman jstag send jane doe33 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data jane doe33 echo jane doe33 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify jane doe33 pm sendRequest url https api lytics io collect json default method POST twitter_id JavaScript cURL HTTPie Postman jstag send potus curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data potus echo potus http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify potus pm sendRequest url https api lytics io collect json default method POST pinterest_id JavaScript cURL HTTPie Postman jstag send 1234567891234 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 1234567891234 echo 1234567891234 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 1234567891234 pm sendRequest url https api lytics io collect json default method POST linkedin_id JavaScript cURL HTTPie Postman jstag send jeff dean 8b212555 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data jeff dean 8b212555 echo jeff dean 8b212555 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify jeff dean 8b212555 pm sendRequest url https api lytics io collect json default method POST tiktok_id JavaScript cURL HTTPie Postman jstag send bts_official_bighit curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data bts_official_bighit echo bts_official_bighit http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify bts_official_bighit pm sendRequest url https api lytics io collect json default method POST Channels Field Short Description Long Description Example channel_activity_first_ts Activity By Channel First Oldest The earliest observed activity for an individual in a channel web 2024 09 13T20 34 17 546Z channel_activity_last_ts Activity By Channel Most Recent The most recently observed activity for an individual in a channel web 2023 01 11T20 22 57 249Z channel_activity_first_ts JavaScript cURL HTTPie Postman jstag send channel web timestamp 2024 09 13T20 34 17 546Z curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data channel web timestamp 2024 09 13T20 34 17 546Z echo channel web timestamp 2024 09 13T20 34 17 546Z http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify channel web timestamp 2024 09 13T20 34 17 546Z pm sendRequest url https api lytics io collect json default method POST channel_activity_last_ts JavaScript cURL HTTPie Postman jstag send channel web timestamp 2023 01 11T20 22 57 249Z curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data channel web timestamp 2023 01 11T20 22 57 249Z echo channel web timestamp 2023 01 11T20 22 57 249Z http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify channel web timestamp 2023 01 11T20 22 57 249Z pm sendRequest url https api lytics io collect json default method POST Web Field Short Description Long Description Example _uid Web Cookie Id Current The most recently observed cookie for an individual s browser as generated by Lytics JSTag 50b772f5 a0be 42f2 8828 84b8db5d5a23 refdomain Web Referrer Domains The set of referring web domains for an individual facebook com action_web_count Web Actions Count A set of counts of various activities observed in web sources pageview 45 action_web_ts Web Actions Most Recent A set of the most recent timestamps of various activities observed in the billing sources pageview 2024 09 10T12 00 00Z analytics_cohorts Analytics Cohorts A set of the analytics cohorts of which an individual is a member group1 group2 _uid JavaScript cURL HTTPie Postman jstag send 50b772f5 a0be 42f2 8828 84b8db5d5a23 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 50b772f5 a0be 42f2 8828 84b8db5d5a23 echo 50b772f5 a0be 42f2 8828 84b8db5d5a23 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 50b772f5 a0be 42f2 8828 84b8db5d5a23 pm sendRequest url https api lytics io collect json default method POST refdomain JavaScript cURL HTTPie Postman jstag send facebook com curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data facebook com echo facebook com http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify facebook com pm sendRequest url https api lytics io collect json default method POST action_web_count JavaScript cURL HTTPie Postman jstag send action pageview curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action pageview echo action pageview http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action pageview pm sendRequest url https api lytics io collect json default method POST action_web_ts JavaScript cURL HTTPie Postman jstag send action pageview curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action pageview echo action pageview http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action pageview pm sendRequest url https api lytics io collect json default method POST analytics_cohorts JavaScript cURL HTTPie Postman jstag send group1 group2 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data group1 group2 echo group1 group2 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify group1 group2 pm sendRequest url https api lytics io collect json default method POST Email Field Short Description Long Description Example email_domain Email Address Domain The domain of an individual s email address gmail com mail google com lytics com etc lytics com email_list_ids Email Lists The email lists to which an individual is subscribed newsletter subscribed email_status Email Subscriber Status Optional provides a generic subscriber status for an individual active action_email_count Email Actions Count A set of counts of various activities observed in email sources open 45 action_email_ts Email Actions Most Recent A set of the most recent timestamps of various activities observed in email sources open 2024 09 10T12 00 00Z email_domain JavaScript cURL HTTPie Postman jstag send email_address email protected curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data email_address email protected echo email_address email protected http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify email_address email protected pm sendRequest url https api lytics io collect json default method POST email_list_ids JavaScript cURL HTTPie Postman jstag send list newsletter status subscribed curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data list newsletter status subscribed echo list newsletter status subscribed http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify list newsletter status subscribed pm sendRequest url https api lytics io collect json default method POST email_status JavaScript cURL HTTPie Postman jstag send active curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data active echo active http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify active pm sendRequest url https api lytics io collect json default method POST action_email_count JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST action_email_ts JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST SMS Field Short Description Long Description Example action_sms_count SMS Actions Count A set of counts of various activities observed in SMS sources send 45 action_sms_ts SMS Actions Most Recent A set of the most recent timestamps of various activities observed in SMS sources send 2024 09 10T12 00 00Z mobile_carrier Mobile Carrier An individual s mobile carrier vodafone action_sms_count JavaScript cURL HTTPie Postman jstag send action send curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action send echo action send http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action send pm sendRequest url https api lytics io collect json default method POST action_sms_ts JavaScript cURL HTTPie Postman jstag send action send curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action send echo action send http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action send pm sendRequest url https api lytics io collect json default method POST mobile_carrier JavaScript cURL HTTPie Postman jstag send vodafone curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data vodafone echo vodafone http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify vodafone pm sendRequest url https api lytics io collect json default method POST App Field Short Description Long Description Example app_version Mobile App Version The version of the app an individual is using 12 0 1 action_push_count Mobile Push Actions Count A set of counts of various activities observed in push sources open 45 action_push_ts Mobile Push Actions Most Recent A set of the most recent timestamps of various activities observed in push sources open 2024 09 10T12 00 00Z action_app_count Mobile App Actions Count A set of counts of various activities observed in app sources open 45 action_app_ts Mobile App Actions Most Recent A set of the most recent timestamps of various activities observed in app sources open 2024 09 10T12 00 00Z app_version JavaScript cURL HTTPie Postman jstag send 12 0 1 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 12 0 1 echo 12 0 1 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 12 0 1 pm sendRequest url https api lytics io collect json default method POST action_push_count JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST action_push_ts JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST action_app_count JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST action_app_ts JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST Chat Field Short Description Long Description Example action_chat_count Chat Actions Count A set of counts of various activities observed in chat sources reply 45 action_chat_ts Chat Actions Most Recent A set of the most recent timestamps of various activities observed in chat sources reply 2024 09 10T12 00 00Z action_chat_count JavaScript cURL HTTPie Postman jstag send action reply curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action reply echo action reply http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action reply pm sendRequest url https api lytics io collect json default method POST action_chat_ts JavaScript cURL HTTPie Postman jstag send action reply curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action reply echo action reply http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action reply pm sendRequest url https api lytics io collect json default method POST Retail Field Short Description Long Description Example tax_exempt Tax Exempt Whether an individual is tax exempt FALSE currency Currency An individual s most recently used currency usd purchase_total Purchase Total An individual s total purchase amount from retail sources in that individual s currency 142 01 purchase_count Purchase Count An individual s total number of purchases from retail sources 2 purchase_shop_total Purchase Total by Shop Total amount spent by each shop mystore 123 45 purchase_shop_count Purchase Count by Shop Total number of purchases by each shop s name mystore 2 action_retail_count Retail Actions Count A set of counts of various activities observed in retail sources refund 45 action_retail_ts Retail Actions Most Recent A set of the most recent timestamps of various activities observed in retail sources refund 2024 09 10T12 00 00Z product_ids Product IDs Ordered The set of product IDs an individual has ordered abc123 order_ids Order IDs The set of order IDs of an individual s order history 1294322 tax_exempt JavaScript cURL HTTPie Postman jstag send false curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data false echo false http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify false pm sendRequest url https api lytics io collect json default method POST currency JavaScript cURL HTTPie Postman jstag send usd curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data usd echo usd http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify usd pm sendRequest url https api lytics io collect json default method POST purchase_total JavaScript cURL HTTPie Postman jstag send 142 01 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 142 01 echo 142 01 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 142 01 pm sendRequest url https api lytics io collect json default method POST purchase_count JavaScript cURL HTTPie Postman jstag send 2 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 2 echo 2 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 2 pm sendRequest url https api lytics io collect json default method POST purchase_shop_total JavaScript cURL HTTPie Postman jstag send shop_name mystore total_spent 123 45 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data shop_name mystore total_spent 123 45 echo shop_name mystore total_spent 123 45 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify shop_name mystore total_spent 123 45 pm sendRequest url https api lytics io collect json default method POST purchase_shop_count JavaScript cURL HTTPie Postman jstag send shop_name mystore curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data shop_name mystore echo shop_name mystore http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify shop_name mystore pm sendRequest url https api lytics io collect json default method POST action_retail_count JavaScript cURL HTTPie Postman jstag send action refund curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action refund echo action refund http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action refund pm sendRequest url https api lytics io collect json default method POST action_retail_ts JavaScript cURL HTTPie Postman jstag send action refund curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action refund echo action refund http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action refund pm sendRequest url https api lytics io collect json default method POST product_ids JavaScript cURL HTTPie Postman jstag send abc123 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data abc123 echo abc123 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify abc123 pm sendRequest url https api lytics io collect json default method POST order_ids JavaScript cURL HTTPie Postman jstag send 1294322 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 1294322 echo 1294322 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 1294322 pm sendRequest url https api lytics io collect json default method POST CRM Field Short Description Long Description Example account_id Account ID The account ID associated with an individual acme corp 123 lead_status Lead Status The lead status associated with an individual open lead_source Lead Source The lead source associated with an individual blog lead_score Lead Score The lead score associated with an individual 0 72 lifecycle_stage Lifecycle Stage An individual s lifecycle stage loyal opportunity_value Opportunity Value The opportunity value of an individual 50000 account_id JavaScript cURL HTTPie Postman jstag send acme corp 123 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data acme corp 123 echo acme corp 123 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify acme corp 123 pm sendRequest url https api lytics io collect json default method POST lead_status JavaScript cURL HTTPie Postman jstag send open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data open echo open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify open pm sendRequest url https api lytics io collect json default method POST lead_source JavaScript cURL HTTPie Postman jstag send blog curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data blog echo blog http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify blog pm sendRequest url https api lytics io collect json default method POST lead_score JavaScript cURL HTTPie Postman jstag send 0 72 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 0 72 echo 0 72 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 0 72 pm sendRequest url https api lytics io collect json default method POST lifecycle_stage JavaScript cURL HTTPie Postman jstag send loyal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data loyal echo loyal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify loyal pm sendRequest url https api lytics io collect json default method POST opportunity_value JavaScript cURL HTTPie Postman jstag send 50000 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 50000 echo 50000 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 50000 pm sendRequest url https api lytics io collect json default method POST Survey Field Short Description Long Description Example survey_responses Survey Responses A collection of the individual s survey responses nps promoter survey_responses JavaScript cURL HTTPie Postman jstag send nps promoter curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data nps promoter echo nps promoter http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify nps promoter pm sendRequest url https api lytics io collect json default method POST Support Field Short Description Long Description Example action_survey_count Support Actions Count A set of counts of various activities observed in survey sources respond 45 action_survey_ts Support Actions Most Recent A set of the most recent timestamps of various activities observed in survey sources respond 2024 09 10T12 00 00Z csat_score Customer Satisfaction Score An individual s current customer satistfaction score 24 support_ticket_status Current Support Ticket Status An individual s support ticket status open action_survey_count JavaScript cURL HTTPie Postman jstag send action respond curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action respond echo action respond http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action respond pm sendRequest url https api lytics io collect json default method POST action_survey_ts JavaScript cURL HTTPie Postman jstag send action respond curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action respond echo action respond http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action respond pm sendRequest url https api lytics io collect json default method POST csat_score JavaScript cURL HTTPie Postman jstag send 24 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 24 echo 24 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 24 pm sendRequest url https api lytics io collect json default method POST support_ticket_status JavaScript cURL HTTPie Postman jstag send open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data open echo open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify open pm sendRequest url https api lytics io collect json default method POST Billing Field Short Description Long Description Example action_billing_count Billing Actions Count A set of counts of various activities observed in billing sources paid 45 action_billing_ts Billing Actions Most Recent A set of the most recent timestamps of various activities observed in billing sources paid 2024 09 10T12 00 00Z action_billing_count JavaScript cURL HTTPie Postman jstag send action paid curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action paid echo action paid http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action paid pm sendRequest url https api lytics io collect json default method POST action_billing_ts JavaScript cURL HTTPie Postman jstag send action paid curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action paid echo action paid http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action paid pm sendRequest url https api lytics io collect json default method POST Media Field Short Description Long Description Example subscription_status Subscription Status An individual s subscription status active subscription_start Subscription Term Start The start date of an individual s most recent subscription 2024 02 28 subscription_end Subscription Term End The end date of an individual s most recent subscription 2025 02 28 subscription_status JavaScript cURL HTTPie Postman jstag send active curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data active echo active http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify active pm sendRequest url https api lytics io collect json default method POST subscription_start JavaScript cURL HTTPie Postman jstag send 2024 02 28 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 2024 02 28 echo 2024 02 28 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 2024 02 28 pm sendRequest url https api lytics io collect json default method POST subscription_end JavaScript cURL HTTPie Postman jstag send 2025 02 28 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 2025 02 28 echo 2025 02 28 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 2025 02 28 pm sendRequest url https api lytics io collect json default method POST JavaScript cURL HTTPie Postman jstag send subscription_start 2024 02 28 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data subscription_start 2024 02 28 echo subscription_start 2024 02 28 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify subscription_start 2024 02 28 pm sendRequest url https api lytics io collect json default method POST subscription_end JavaScript cURL HTTPie Postman jstag send subscription_end 2025 02 28 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data subscription_end 2025 02 28 echo subscription_end 2025 02 28 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify subscription_end 2025 02 28 pm sendRequest url https api lytics io collect json default method POST Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/navigation-management-1#content",
    "title": "Universal Schema",
    "chunk_text": "Lytics profiles enjoy access to both a universal schema which provides computed intelligent attributes on every profile in Lytics as well as a common schema a set of standard attributes that facilitates faster integration and more reliable consistency when integrating profiles to and from other systems Growth and Enterprise Lytics accounts may also customize their schema with additional fields and mappings Universal Schema Lytics universal schema delivers a set of intelligent attributes that are universal to every profile that gets created regardless of data source age or their anonymous or known status These attributes include rich behavioral models AI derived interests and identity resolution metadata leading to more comprehensive insights on all of your profiles Not just the known ones Universal attributes provide a common vocabulary with which to think about how you might engage with each and every individual what they re interested in what their engagement has been or how they re likely to engage in the future Identifiers Identifiers in Lytics Schema serve to stitch profiles together For instance if you pass an email along with the _ uid all events that have only been associated with either identifier will be merged into a single comprehensive profile Default identifiers are listed below Some jobs in your data pipeline may add new identifiers to your schema like shopify_customer_id or salesforce_contact_ids Field Short Description Long Description Example _id Lytics ID A unique ID that represents the materialized profile in Lytics 4fafb5b3 b199 58f2 a68b 4b266b363dd1 Metafields Metafields encompass all system level information that provides insights into the health and breadth of the profile This includes data such as creation date last update timestamp source information and other metadata associated with the profile s management and maintenance Metafields offer a behind the scenes view of the profile s overall status and administration Field Short Description Long Description Example _created Created The time a profile was created 2024 02 28T02 45 51 377423153Z _last_scored Last Scored Timestamp The time a profile was last scored by Lytics 2024 02 28T02 45 51 377423153Z _modified Modified Timestamp The time a profile was last modified by Lytics 2024 02 28T02 45 51 377423153Z _num_aliases Number of Aliases The number of aliases for a profile as calculated by Lytics Identity Resolution 5 _num_days Number of Days The number of distinct days a profile has had activity 3 _num_events Number of Events The total number of events processed for a profile 81 _num_streams Number of Streams The number of distinct data streams in which a profile has been present 2 _streamnames Stream Names The distinct streams in which a profile has been present default Behavioral Behavioral attributes comprise a multidimensional set of scores that provide insight into an individual s behavior over time These insights are invaluable when personalizing experiences based on changes in behavior or behaviors indicative of high likelihood For instance you might want to present a premium offer to users exhibiting higher momentum than usual Behavioral attributes enable targeted and timely interventions tailored to user actions and patterns Field Short Description Long Description Example score_consistency Consistency Measures the long term consistency of a typical user s daily engagement 56 score_frequency Frequency Measures the frequency of a user s engagement relative to your most frequent users 74 score_intensity Intensity Measures the depth of a typical user s daily engagement 3 score_maturity Maturity Measures the length of a user s history relative to your most mature users 97 score_momentum Momentum Measures the rate at which user engagement is changing 45 score_propensity Propensity Measures how likely a user is to re engage with more activity 91 score_quantity Quantity Measures the quantity of a user s engagement relative to your most frequent users 12 score_recency Recency Measures the recency over a 1 year window of a user s engagement 28 score_volatility Volatility Measures the long term volatility of the depth of a typical user s daily engagement 63 Interests Interests entail understanding the topics a user is interested in based on their interactions cross referenced by deep programmatic analysis of their online activities This allows for tailored content recommendations and targeted messaging aligned with the user s preferences and engagement history Field Short Description Long Description Example lytics_content Lytics Content A map of topic level interests for the user Shoes 0 76 Pants 0 43 Intelligence Attributes classified as intelligence encompass diverse highly valuable information to facilitate relevant and high value personalized experiences Within this category you ll discover real time segment membership values crucial for split testing and experimentation and direct correlation to our real time machine learning modeling These attributes empower dynamic and data driven decision making enhancing the efficacy of personalized marketing strategies Field Short Description Long Description Example _segments Segment Membership The segments or audiences of which on individual is a member all anonymous_profiles smt_power _split Random Split 1 A randomly assigned value for making randomized audiences and driving experiments 0 _split2 Random Split 2 A randomly assigned value for making randomized audiences and driving experiments 99 segment_prediction Lytics Predictive Scores Scores from Lytics SegmentML Predictive Models likely_to_buy_shoes 0 47 segment_prediction_percentile Lytics Preditive Percentiles Percentiles from Lytics SegmentML Predictive Models likely_to_buy_shoes 91 _split Random splits are assigned by algorithmic hashing and result in an even distribution across profiles There are 100 possible splits 0 99 so creating an audience where _split 44 would result in a random subset of 1 of profiles A random split where _split 50 would result in a subset of 50 of profiles _split2 Having access to two random split assignments allows you to target 100 100 or 10k different subsets of your audiences This means you can create splits that are capable of targeting down to 0 01 of profiles segment_prediction Lytics SegmentML models provide scores for modeling custom outcomes in Lookalike models Each active model attaches a score between 0 and 1 to a profile with its name segment_prediction_percentile Similar to segment_prediction values the percentiles provide the ability to create audiences and target users based on their percentile instead of their raw score This enables you for example to create audiences of users with the top 10 of scores by using segment_prediction_percentile 90 Common Schema Common fields help to structure your profiles in a way for developers to easily plug into them and for marketers to easily use them in personalization Common mappings help to translate your source data into a format that can be used by common fields These fields and mappings help to provide consistency in your profiles regardless of the source from which the data came For example your CRM might have tax_exempt true while your data warehouse might has tax_status exempt and your ESP might have is_tax_exempt 1 In Lytics Common Schema this would simply be represented as tax_exempt true Pre defined Mappings For your convenience Jobs managed in your Data Pipeline will automatically create schema fields and mappings to implement Lytics Common Schema in your data so that you can get to more use cases more quickly with our Inspiration Library Some fields like name are automatically part of every Lytics account Other channel specific fields will be added when you add channel specific data sources to your account For example adding a Shopify import job to your data sources would add the common schema field purchase_total among others Identifiers Identifiers in Lytics Schema serve to stitch profiles together For instance if you pass an email along with the _ uid all events that have only been associated with either identifier will be merged into a single comprehensive profile Default identifiers are listed below Some jobs in your data pipeline may add new identifiers to your schema like shopify_customer_id or salesforce_contact_ids Field Short Description Long Description Example _uids Web Cookie Id All All cookies associated with a profile 50b772f5 a0be 42f2 8828 84b8db5d5a23 email Email Address Email address of a profile email protected email_sha256 Email Address Hash SHA256 SHA256 hash of the profile s email address e43763399e5318f14cd7473c4902a6b319343d577ec8283898a5edf9dbc6d711 external_id External ID An identifier to link a profile to custom sources abc123 _uids JavaScript cURL HTTPie Postman jstag send _uid 50b772f5 a0be 42f2 8828 84b8db5d5a23 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data _uid 50b772f5 a0be 42f2 8828 84b8db5d5a23 echo _uid 50b772f5 a0be 42f2 8828 84b8db5d5a23 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify _uid 50b772f5 a0be 42f2 8828 84b8db5d5a23 pm sendRequest url https api lytics io collect json default method POST email An individual s email address is automatically standardized syntactically validated and lower cased so as to be compatible as an identifier in your identity graph JavaScript cURL HTTPie Postman jstag send email_address email protected curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data email_address email protected echo email_address email protected http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify email_address email protected pm sendRequest url https api lytics io collect json default method POST email_sha256 The SHA256 hash of an individual s email address In the event that your account has an email address present the hash is automatically computed so as to be compatible with external systems that require the SHA256 hash for integration In the event that you don t want any PII in your account you can pass the hash directly instead of the raw address JavaScript cURL HTTPie Postman jstag send email_address email protected curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data email_address email protected echo email_address email protected http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify email_address email protected pm sendRequest url https api lytics io collect json default method POST external_id Optional and if provided this will usually come from your proprietary first party database This will be used for profile stitching and should therefore be unique to an individual JavaScript cURL HTTPie Postman jstag send external_id abc123 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data external_id abc123 echo external_id abc123 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify external_id abc123 pm sendRequest url https api lytics io collect json default method POST Interests Interests entail understanding the topics a user is interested in based on their interactions cross referenced by deep programmatic analysis of their online activities This allows for tailored content recommendations and targeted messaging aligned with the user s preferences and engagement history Field Short Description Long Description Example hashedurls Hashed URLs A map of URLs an individual has engaged with indexed by each URL s hashed value hashedurls 4058474390481920149 5 680176754148162020 2 hashedurls A history of an individual s most recently visited URLs helpful for powering Lytics Interest Engines A siphash of each URL s sanitized value without query parameters is used to index the map hashedurls are used in Lytics standard Interest Engine but you can create additional Interest Engines with other sets of URLs product IDs or atomic content IDs from your CMS JavaScript cURL HTTPie Postman jstag send url www lytics com blog real talk about real time cdps curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data url www lytics com blog real talk about real time cdps echo url www lytics com blog real talk about real time cdps http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify url www lytics com blog real talk about real time cdps pm sendRequest url https api lytics io collect json default method POST Intelligence Attributes classified as intelligence encompass diverse highly valuable information to facilitate relevant and high value personalized experiences Within this category you ll discover real time segment membership values crucial for split testing and experimentation and direct correlation to our real time machine learning modeling These attributes empower dynamic and data driven decision making enhancing the efficacy of personalized marketing strategies Field Short Description Long Description Example next_event Next Event Stream specific preditions for the timestamp of the next expected interaction on a stream needs_message Needs Message Stream specific score to predict how much an individual needs a message on a data stream needs_message The needs message score evaluates how likely an individual is to engage on a channel without any messaging A higher score would indicate that an individual is less likely to return within a typical engagement window relative to other individuals in a data stream A lower score would indicate that they are more likely to return within a typical engagement window Details Details encompass all default attributes related to user demographics and general information including name phone number status etc It serves as a catch all for attributes not specifically tied to interactions or behaviors Field Short Description Long Description Example first_name First Name An individual s first name Jane last_name Last Name An individual s last name Doe name Name An individual s name Jane Doe birthday Birthday An individual s birthday July 22 birthday Date of Birth An individual s exact date of birth 2000 07 22 phone Phone Number In most cases this will be automatically formatted in E164 format 15555555555 phone_mobile Mobile Phone Number In most cases this will be automatically formatted in E164 format 15555555555 address1 Address 1 First line of customer address 30 Rockefeller Plaza address2 Address 2 Second line of customer address Suite 1000 city City This will usually correspond to a contact provided value registration shipping address etc New York region Region State or Province This will usually correspond to a contact provided value registration shipping address etc NY country Country This will usually correspond to a contact provided value registration shipping address etc USA postal_code Postal Code This will usually correspond to a contact provided value registration shipping address etc 10112 status Profile Status This may be used to indicate a generic customer status active churned premium unknown etc active first_name JavaScript cURL HTTPie Postman jstag send first_name Jane curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data first_name Jane echo first_name Jane http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify first_name Jane pm sendRequest url https api lytics io collect json default method POST last_name JavaScript cURL HTTPie Postman jstag send last_name Doe curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data last_name Doe echo last_name Doe http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify last_name Doe pm sendRequest url https api lytics io collect json default method POST name An individual s name may take a few forms depending on the source and this field may sometimes be just the first name a combination of names or completely empty JavaScript cURL HTTPie Postman jstag send name Jane Doe curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data name Jane Doe echo name Jane Doe http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify name Jane Doe pm sendRequest url https api lytics io collect json default method POST birthday JavaScript cURL HTTPie Postman jstag send birthday July 22 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data birthday July 22 echo birthday July 22 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify birthday July 22 pm sendRequest url https api lytics io collect json default method POST birthday JavaScript cURL HTTPie Postman jstag send dob 2000 07 22 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data dob 2000 07 22 echo dob 2000 07 22 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify dob 2000 07 22 pm sendRequest url https api lytics io collect json default method POST phone JavaScript cURL HTTPie Postman jstag send phone 555 555 5555 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data phone 555 555 5555 echo phone 555 555 5555 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify phone 555 555 5555 pm sendRequest url https api lytics io collect json default method POST phone_mobile JavaScript cURL HTTPie Postman jstag send mobile 555 555 5555 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data mobile 555 555 5555 echo mobile 555 555 5555 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify mobile 555 555 5555 pm sendRequest url https api lytics io collect json default method POST address1 JavaScript cURL HTTPie Postman jstag send address1 30 Rockefeller Plaza curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data address1 30 Rockefeller Plaza echo address1 30 Rockefeller Plaza http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify address1 30 Rockefeller Plaza pm sendRequest url https api lytics io collect json default method POST address2 JavaScript cURL HTTPie Postman jstag send address2 Suite 1000 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data address2 Suite 1000 echo address2 Suite 1000 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify address2 Suite 1000 pm sendRequest url https api lytics io collect json default method POST city JavaScript cURL HTTPie Postman jstag send city New York curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data city New York echo city New York http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify city New York pm sendRequest url https api lytics io collect json default method POST region JavaScript cURL HTTPie Postman jstag send region NY curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data region NY echo region NY http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify region NY pm sendRequest url https api lytics io collect json default method POST country JavaScript cURL HTTPie Postman jstag send country United States curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data country United States echo country United States http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify country United States pm sendRequest url https api lytics io collect json default method POST postal_code JavaScript cURL HTTPie Postman jstag send postal_code 10112 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data postal_code 10112 echo postal_code 10112 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify postal_code 10112 pm sendRequest url https api lytics io collect json default method POST status JavaScript cURL HTTPie Postman jstag send status active curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data status active echo status active http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify status active pm sendRequest url https api lytics io collect json default method POST Geo Geolocation attributes are inferred from geolocation on network activity Field Short Description Long Description Example geoip_org GeoIP Organization Organization inferred from the most recently observed IP address for an individual This may correspond to a business name or an internet service provider in the case of residential IP addresses Acme Corp geoip_country GeoIP Country Country inferred from the most recently observed IP address for an individual USA geoip_city GeoIP City City inferred from the most recently observed IP address for an individual New York geoip_region GeoIP Region Region state or province inferred from the most recently observed IP address for an individual NY designated_market_area Designated Market Area An individual s designated marketing area New York timezone Timezone Timezone associated with an individual s browser or location 4 geoip_org JavaScript cURL HTTPie Postman jstag send ip_address 192 168 0 1 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data ip_address 192 168 0 1 echo ip_address 192 168 0 1 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify ip_address 192 168 0 1 pm sendRequest url https api lytics io collect json default method POST geoip_country JavaScript cURL HTTPie Postman jstag send ip_address 192 168 0 2 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data ip_address 192 168 0 2 echo ip_address 192 168 0 2 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify ip_address 192 168 0 2 pm sendRequest url https api lytics io collect json default method POST geoip_city JavaScript cURL HTTPie Postman jstag send ip_address 192 168 0 3 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data ip_address 192 168 0 3 echo ip_address 192 168 0 3 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify ip_address 192 168 0 3 pm sendRequest url https api lytics io collect json default method POST geoip_region JavaScript cURL HTTPie Postman jstag send ip_address 192 168 0 4 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data ip_address 192 168 0 4 echo ip_address 192 168 0 4 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify ip_address 192 168 0 4 pm sendRequest url https api lytics io collect json default method POST designated_market_area JavaScript cURL HTTPie Postman jstag send dma New York curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data dma New York echo dma New York http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify dma New York pm sendRequest url https api lytics io collect json default method POST timezone JavaScript cURL HTTPie Postman jstag send timezone 4 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data timezone 4 echo timezone 4 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify timezone 4 pm sendRequest url https api lytics io collect json default method POST Device Device attributes describe the devices that have been associated with an individual and their activity Field Short Description Long Description Example device_id Device ID Most Recent An individual s most recent device ID 555837ca cce7 496c 8acc 552793ce969a device_ids Device ID All The collection of all of an individual s observed device IDs 555837ca cce7 496c 8acc 552793ce969a device_advertising_id Device Advertising ID Most Recent An individual s most recent device ID AB1234CD E123 12FG J123 device_advertising_ids Device Advertising ID All The collection of all of an individual s device IDs AB1234CD E123 12FG J123 device_types Device Types The collection of all of an individual s observed device types desktop 1 mobile 100 user_agent User Agent The most recent user agent of an individual s browser Mozilla 5 0 Macintosh Intel Mac OS X 10_15_7 AppleWebKit 537 36 KHTML like Gecko Chrome 128 0 0 0 Safari 537 36 is_mobile Mobile Visitor A flag to indicate if the user has ever been a mobile visitor FALSE is_bot Is Bot A flag to indicate whether or not an individual is suspected of being a bot determined by their user agent FALSE device_os Device OS The operating system of an individual s most recent device iOS device_model Device Model The model of an individual s most recent device iPhone 15 browser_hash Browser Computed Hash The set computed hash of an individual s browsers 555837ca cce7 496c 8acc 552793ce969a browser Browser Version The version of an individual s browser Chrome 130 0 0 0 device_id JavaScript cURL HTTPie Postman jstag send 555837ca cce7 496c 8acc 552793ce969a curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 555837ca cce7 496c 8acc 552793ce969a echo 555837ca cce7 496c 8acc 552793ce969a http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 555837ca cce7 496c 8acc 552793ce969a pm sendRequest url https api lytics io collect json default method POST device_ids JavaScript cURL HTTPie Postman jstag send 555837ca cce7 496c 8acc 552793ce969a curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 555837ca cce7 496c 8acc 552793ce969a echo 555837ca cce7 496c 8acc 552793ce969a http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 555837ca cce7 496c 8acc 552793ce969a pm sendRequest url https api lytics io collect json default method POST device_advertising_id This may be a Google Advertising ID GAID or an Apple Identifier for Advertisers IDFA JavaScript cURL HTTPie Postman jstag send AB1234CD E123 12FG J123 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data AB1234CD E123 12FG J123 echo AB1234CD E123 12FG J123 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify AB1234CD E123 12FG J123 pm sendRequest url https api lytics io collect json default method POST device_advertising_ids These may be a Google Advertising ID GAID or an Apple Identifier for Advertisers IDFA JavaScript cURL HTTPie Postman jstag send AB1234CD E123 12FG J123 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data AB1234CD E123 12FG J123 echo AB1234CD E123 12FG J123 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify AB1234CD E123 12FG J123 pm sendRequest url https api lytics io collect json default method POST device_types JavaScript cURL HTTPie Postman jstag send desktop curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data desktop echo desktop http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify desktop pm sendRequest url https api lytics io collect json default method POST user_agent JavaScript cURL HTTPie Postman jstag send useragent Mozilla 5 0 Macintosh Intel Mac OS X 10_15_7 AppleWebKit 537 36 KHTML like Gecko Chrome 128 0 0 0 Safari 537 36 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data useragent Mozilla 5 0 Macintosh Intel Mac OS X 10_15_7 AppleWebKit 537 36 KHTML like Gecko Chrome 128 0 0 0 Safari 537 36 echo useragent Mozilla 5 0 Macintosh Intel Mac OS X 10_15_7 AppleWebKit 537 36 KHTML like Gecko Chrome 128 0 0 0 Safari 537 36 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify useragent Mozilla 5 0 Macintosh Intel Mac OS X 10_15_7 AppleWebKit 537 36 KHTML like Gecko Chrome 128 0 0 0 Safari 537 36 pm sendRequest url https api lytics io collect json default method POST is_mobile JavaScript cURL HTTPie Postman jstag send _uamob f curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data _uamob f echo _uamob f http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify _uamob f pm sendRequest url https api lytics io collect json default method POST is_bot JavaScript cURL HTTPie Postman jstag send _uabot f curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data _uabot f echo _uabot f http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify _uabot f pm sendRequest url https api lytics io collect json default method POST device_os JavaScript cURL HTTPie Postman jstag send device_os iOS curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data device_os iOS echo device_os iOS http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify device_os iOS pm sendRequest url https api lytics io collect json default method POST device_model JavaScript cURL HTTPie Postman jstag send device_model iPhone 15 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data device_model iPhone 15 echo device_model iPhone 15 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify device_model iPhone 15 pm sendRequest url https api lytics io collect json default method POST browser_hash While not a default part of your identity graph this field may be promoted to an identifier to perform identity stitching This should be performed with caution as it is not guaranteed to be unique and can result in stitching individuals with similarly configured browser JavaScript cURL HTTPie Postman jstag send browser_hash 555837ca cce7 496c 8acc 552793ce969a curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data browser_hash 555837ca cce7 496c 8acc 552793ce969a echo browser_hash 555837ca cce7 496c 8acc 552793ce969a http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify browser_hash 555837ca cce7 496c 8acc 552793ce969a pm sendRequest url https api lytics io collect json default method POST browser JavaScript cURL HTTPie Postman jstag send Chrome 130 0 0 0 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data Chrome 130 0 0 0 echo Chrome 130 0 0 0 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify Chrome 130 0 0 0 pm sendRequest url https api lytics io collect json default method POST Attribution Field Short Description Long Description Example utm_campaign UTM Campaign Most Recent An individual s most recently observed UTM campaign mycampaign1 utm_campaigns UTM Campaign All The set of an individual s N most recently observed UTM campaigns mycampaign1 mycampaign0 utm_source UTM Source Most Recent An individual s most recently observed UTM source instagram utm_sources UTM Campaign All The set of an individual s N most recently observed UTM sources instagram google utm_term UTM Term Most Recent An individual s most recently observed UTM term winter coats utm_terms UTM Campaign All The set of an individual s N most recently observed UTM terms winter coats utm_content UTM Content Most Recent An individual s most recently observed UTM content spanish utm_contents UTM Content All The set of an individual s N most recently observed UTM contents spanish utm_medium UTM Medium Most Recent An individual s most recently observed UTM medium paid utm_mediums UTM Campaign All The set of an individual s N most recently observed UTM mediums paid ly_impressions Attribution Impressions A map of campaign impressions for an individual for Lytics managed campaigns content rec modal 10 ly_conversions Attribution Conversions A map of campaign conversions for an individual for Lytics managed campaigns content rec modal 2 ly_closes Attribution Closes A map of campaign closes for an individual for Lytics managed campaigns content rec modal 7 ly_cancels Attribution Cancels A map of campaign cancels for an individual for Lytics managed campaigns content rec modal 1 ly_hover Attribution Hovered A map of campaign hovers for an individual for Lytics managed campaigns content rec modal 5 conversions_ts Conversion Events A map of conversion events of an individual by timestamp content rec modal 2024 02 28T02 45 51 377423153Z impressions_ts Impression Events A map of impression events of an individual by timestamp content rec modal 2024 02 28T02 45 51 377423153Z utm_campaign JavaScript cURL HTTPie Postman jstag send utm_campaign mycampaign1 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_campaign mycampaign1 echo utm_campaign mycampaign1 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_campaign mycampaign1 pm sendRequest url https api lytics io collect json default method POST utm_campaigns JavaScript cURL HTTPie Postman jstag send utm_campaign mycampaign1 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_campaign mycampaign1 echo utm_campaign mycampaign1 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_campaign mycampaign1 pm sendRequest url https api lytics io collect json default method POST utm_source JavaScript cURL HTTPie Postman jstag send utm_source instagram curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_source instagram echo utm_source instagram http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_source instagram pm sendRequest url https api lytics io collect json default method POST utm_sources JavaScript cURL HTTPie Postman jstag send utm_source instagram curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_source instagram echo utm_source instagram http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_source instagram pm sendRequest url https api lytics io collect json default method POST utm_term JavaScript cURL HTTPie Postman jstag send utm_term winter coats curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_term winter coats echo utm_term winter coats http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_term winter coats pm sendRequest url https api lytics io collect json default method POST utm_terms JavaScript cURL HTTPie Postman jstag send utm_term winter coats curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_term winter coats echo utm_term winter coats http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_term winter coats pm sendRequest url https api lytics io collect json default method POST utm_content JavaScript cURL HTTPie Postman jstag send utm_content spanish curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_content spanish echo utm_content spanish http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_content spanish pm sendRequest url https api lytics io collect json default method POST utm_contents JavaScript cURL HTTPie Postman jstag send utm_content spanish curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_content spanish echo utm_content spanish http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_content spanish pm sendRequest url https api lytics io collect json default method POST utm_medium JavaScript cURL HTTPie Postman jstag send utm_medium paid curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_medium paid echo utm_medium paid http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_medium paid pm sendRequest url https api lytics io collect json default method POST utm_mediums JavaScript cURL HTTPie Postman jstag send utm_medium paid curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data utm_medium paid echo utm_medium paid http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify utm_medium paid pm sendRequest url https api lytics io collect json default method POST ly_impressions JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST ly_conversions JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST ly_closes JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST ly_cancels JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST ly_hover JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST conversions_ts JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST impressions_ts JavaScript cURL HTTPie Postman jstag send pf widget id content rec modal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data pf widget id content rec modal echo pf widget id content rec modal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify pf widget id content rec modal pm sendRequest url https api lytics io collect json default method POST Demographic Field Short Description Long Description Example gender Gender An individual s gender F age Age An individual s age 38 locale Locale An individual s locale often determined by their browser en_US language Language Code An individual s language often determined by their browser en gender JavaScript cURL HTTPie Postman jstag send gender F curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data gender F echo gender F http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify gender F pm sendRequest url https api lytics io collect json default method POST age JavaScript cURL HTTPie Postman jstag send age 38 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data age 38 echo age 38 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify age 38 pm sendRequest url https api lytics io collect json default method POST locale An individual s locale is usually a combination of an individual s language code and country code JavaScript cURL HTTPie Postman jstag send locale en_US curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data locale en_US echo locale en_US http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify locale en_US pm sendRequest url https api lytics io collect json default method POST language An individual s language code standardized by ISO 639 1 two letter codes JavaScript cURL HTTPie Postman jstag send locale en_US curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data locale en_US echo locale en_US http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify locale en_US pm sendRequest url https api lytics io collect json default method POST First Party Field Short Description Long Description Example user_attributes User Attributes A map of custom properties for a profile role member status active form_data Form Data A map to store custom form data for a profile field1 value1 field2 value2 user_attributes User Attributes are helpful for storing custom attributes about an individual without having to create and map additional user fields JavaScript cURL HTTPie Postman jstag send attr status active curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data attr status active echo attr status active http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify attr status active pm sendRequest url https api lytics io collect json default method POST form_data Form Data is helpful for storing custom form data from an individual without having to create and map additional user fields JavaScript cURL HTTPie Postman jstag send form field1 value1 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data form field1 value1 echo form field1 value1 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify form field1 value1 pm sendRequest url https api lytics io collect json default method POST Behaviors Field Short Description Long Description Example hourly Activity by Hour A count of an individual s activity by the hour of the day 9 1 12 4 22 1 hourofweek Activity by Hour of Week A count of an individual s activity by the hour of the week 2 2 140 3 167 9 hourly hourly utilized the timestamp of the event being collected and does not require any mappings JavaScript cURL HTTPie Postman jstag send foo bar curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data foo bar echo foo bar http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify foo bar pm sendRequest url https api lytics io collect json default method POST hourofweek hourofweek utilized the timestamp of the event being collected and does not require any mappings JavaScript cURL HTTPie Postman jstag send foo bar curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data foo bar echo foo bar http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify foo bar pm sendRequest url https api lytics io collect json default method POST Governance Field Short Description Long Description Example consent_status Consent Status A map of consented marketing channels and content status web_necessary consented consent_status_ts Consent Status Timestamp A map of consented marketing channels and when that status was updated web_necessary 2024 02 28T02 45 51 377423153Z consent_status_source Consent Status Source A map of consented marketing channels and the source from which the consent came web_necessary onetrust consent_status The marketing tracking and activation channels to which an individual has expressly given consent This typically includes the following values email_marketing sms_marketing push_marketing cookies_necessary cookies_performance web_functional web_targeting web_social JavaScript cURL HTTPie Postman jstag send consent purpose c0001 constented true curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data consent purpose c0001 constented true echo consent purpose c0001 constented true http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify consent purpose c0001 constented true pm sendRequest url https api lytics io collect json default method POST consent_status_ts The time at which the consent has most recently been confirmed JavaScript cURL HTTPie Postman jstag send consent purpose c0001 constented true curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data consent purpose c0001 constented true echo consent purpose c0001 constented true http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify consent purpose c0001 constented true pm sendRequest url https api lytics io collect json default method POST consent_status_source The source of the consent status JavaScript cURL HTTPie Postman jstag send consent purpose c0001 constented true curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data consent purpose c0001 constented true echo consent purpose c0001 constented true http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify consent purpose c0001 constented true pm sendRequest url https api lytics io collect json default method POST B2B Field Short Description Long Description Example job_title Job Title An individual s job title CEO job_role Job Role An individual s job role Executive company_name Company Name The name of the company at which an individual is employed Lytics Inc company_size Company Size The number of employess of the company at which an individual is employed 224 company_revenue Company Revenue The annual revenue of the company at which an individual is employed 5e 08 company_industry Company Industry The industry of the company at which an individual is employed Healthcare phone_business Business Phone The phone number of the company at which an individual is employed 555 555 5555 job_title JavaScript cURL HTTPie Postman jstag send CEO curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data CEO echo CEO http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify CEO pm sendRequest url https api lytics io collect json default method POST job_role JavaScript cURL HTTPie Postman jstag send Executive curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data Executive echo Executive http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify Executive pm sendRequest url https api lytics io collect json default method POST company_name JavaScript cURL HTTPie Postman jstag send Lytics Inc curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data Lytics Inc echo Lytics Inc http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify Lytics Inc pm sendRequest url https api lytics io collect json default method POST company_size JavaScript cURL HTTPie Postman jstag send 224 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 224 echo 224 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 224 pm sendRequest url https api lytics io collect json default method POST company_revenue JavaScript cURL HTTPie Postman jstag send 5e 08 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 5e 08 echo 5e 08 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 5e 08 pm sendRequest url https api lytics io collect json default method POST company_industry JavaScript cURL HTTPie Postman jstag send Healthcare curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data Healthcare echo Healthcare http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify Healthcare pm sendRequest url https api lytics io collect json default method POST phone_business JavaScript cURL HTTPie Postman jstag send 555 555 5555 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 555 555 5555 echo 555 555 5555 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 555 555 5555 pm sendRequest url https api lytics io collect json default method POST Social Field Short Description Long Description Example facebook_id Facebook ID An individual s Facebook ID jane doe33 twitter_id Twitter ID An individual s X Twitter ID potus pinterest_id Pinterest ID An individual s Pinterest ID 1234567891234 linkedin_id LinkedIn ID An Individual s LinkedIn ID jeff dean 8b212555 tiktok_id TikTok ID An Individual s TikTok ID bts_official_bighit facebook_id JavaScript cURL HTTPie Postman jstag send jane doe33 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data jane doe33 echo jane doe33 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify jane doe33 pm sendRequest url https api lytics io collect json default method POST twitter_id JavaScript cURL HTTPie Postman jstag send potus curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data potus echo potus http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify potus pm sendRequest url https api lytics io collect json default method POST pinterest_id JavaScript cURL HTTPie Postman jstag send 1234567891234 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 1234567891234 echo 1234567891234 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 1234567891234 pm sendRequest url https api lytics io collect json default method POST linkedin_id JavaScript cURL HTTPie Postman jstag send jeff dean 8b212555 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data jeff dean 8b212555 echo jeff dean 8b212555 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify jeff dean 8b212555 pm sendRequest url https api lytics io collect json default method POST tiktok_id JavaScript cURL HTTPie Postman jstag send bts_official_bighit curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data bts_official_bighit echo bts_official_bighit http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify bts_official_bighit pm sendRequest url https api lytics io collect json default method POST Channels Field Short Description Long Description Example channel_activity_first_ts Activity By Channel First Oldest The earliest observed activity for an individual in a channel web 2024 09 13T20 34 17 546Z channel_activity_last_ts Activity By Channel Most Recent The most recently observed activity for an individual in a channel web 2023 01 11T20 22 57 249Z channel_activity_first_ts JavaScript cURL HTTPie Postman jstag send channel web timestamp 2024 09 13T20 34 17 546Z curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data channel web timestamp 2024 09 13T20 34 17 546Z echo channel web timestamp 2024 09 13T20 34 17 546Z http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify channel web timestamp 2024 09 13T20 34 17 546Z pm sendRequest url https api lytics io collect json default method POST channel_activity_last_ts JavaScript cURL HTTPie Postman jstag send channel web timestamp 2023 01 11T20 22 57 249Z curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data channel web timestamp 2023 01 11T20 22 57 249Z echo channel web timestamp 2023 01 11T20 22 57 249Z http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify channel web timestamp 2023 01 11T20 22 57 249Z pm sendRequest url https api lytics io collect json default method POST Web Field Short Description Long Description Example _uid Web Cookie Id Current The most recently observed cookie for an individual s browser as generated by Lytics JSTag 50b772f5 a0be 42f2 8828 84b8db5d5a23 refdomain Web Referrer Domains The set of referring web domains for an individual facebook com action_web_count Web Actions Count A set of counts of various activities observed in web sources pageview 45 action_web_ts Web Actions Most Recent A set of the most recent timestamps of various activities observed in the billing sources pageview 2024 09 10T12 00 00Z analytics_cohorts Analytics Cohorts A set of the analytics cohorts of which an individual is a member group1 group2 _uid JavaScript cURL HTTPie Postman jstag send 50b772f5 a0be 42f2 8828 84b8db5d5a23 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 50b772f5 a0be 42f2 8828 84b8db5d5a23 echo 50b772f5 a0be 42f2 8828 84b8db5d5a23 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 50b772f5 a0be 42f2 8828 84b8db5d5a23 pm sendRequest url https api lytics io collect json default method POST refdomain JavaScript cURL HTTPie Postman jstag send facebook com curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data facebook com echo facebook com http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify facebook com pm sendRequest url https api lytics io collect json default method POST action_web_count JavaScript cURL HTTPie Postman jstag send action pageview curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action pageview echo action pageview http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action pageview pm sendRequest url https api lytics io collect json default method POST action_web_ts JavaScript cURL HTTPie Postman jstag send action pageview curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action pageview echo action pageview http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action pageview pm sendRequest url https api lytics io collect json default method POST analytics_cohorts JavaScript cURL HTTPie Postman jstag send group1 group2 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data group1 group2 echo group1 group2 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify group1 group2 pm sendRequest url https api lytics io collect json default method POST Email Field Short Description Long Description Example email_domain Email Address Domain The domain of an individual s email address gmail com mail google com lytics com etc lytics com email_list_ids Email Lists The email lists to which an individual is subscribed newsletter subscribed email_status Email Subscriber Status Optional provides a generic subscriber status for an individual active action_email_count Email Actions Count A set of counts of various activities observed in email sources open 45 action_email_ts Email Actions Most Recent A set of the most recent timestamps of various activities observed in email sources open 2024 09 10T12 00 00Z email_domain JavaScript cURL HTTPie Postman jstag send email_address email protected curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data email_address email protected echo email_address email protected http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify email_address email protected pm sendRequest url https api lytics io collect json default method POST email_list_ids JavaScript cURL HTTPie Postman jstag send list newsletter status subscribed curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data list newsletter status subscribed echo list newsletter status subscribed http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify list newsletter status subscribed pm sendRequest url https api lytics io collect json default method POST email_status JavaScript cURL HTTPie Postman jstag send active curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data active echo active http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify active pm sendRequest url https api lytics io collect json default method POST action_email_count JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST action_email_ts JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST SMS Field Short Description Long Description Example action_sms_count SMS Actions Count A set of counts of various activities observed in SMS sources send 45 action_sms_ts SMS Actions Most Recent A set of the most recent timestamps of various activities observed in SMS sources send 2024 09 10T12 00 00Z mobile_carrier Mobile Carrier An individual s mobile carrier vodafone action_sms_count JavaScript cURL HTTPie Postman jstag send action send curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action send echo action send http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action send pm sendRequest url https api lytics io collect json default method POST action_sms_ts JavaScript cURL HTTPie Postman jstag send action send curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action send echo action send http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action send pm sendRequest url https api lytics io collect json default method POST mobile_carrier JavaScript cURL HTTPie Postman jstag send vodafone curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data vodafone echo vodafone http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify vodafone pm sendRequest url https api lytics io collect json default method POST App Field Short Description Long Description Example app_version Mobile App Version The version of the app an individual is using 12 0 1 action_push_count Mobile Push Actions Count A set of counts of various activities observed in push sources open 45 action_push_ts Mobile Push Actions Most Recent A set of the most recent timestamps of various activities observed in push sources open 2024 09 10T12 00 00Z action_app_count Mobile App Actions Count A set of counts of various activities observed in app sources open 45 action_app_ts Mobile App Actions Most Recent A set of the most recent timestamps of various activities observed in app sources open 2024 09 10T12 00 00Z app_version JavaScript cURL HTTPie Postman jstag send 12 0 1 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 12 0 1 echo 12 0 1 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 12 0 1 pm sendRequest url https api lytics io collect json default method POST action_push_count JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST action_push_ts JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST action_app_count JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST action_app_ts JavaScript cURL HTTPie Postman jstag send action open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action open echo action open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action open pm sendRequest url https api lytics io collect json default method POST Chat Field Short Description Long Description Example action_chat_count Chat Actions Count A set of counts of various activities observed in chat sources reply 45 action_chat_ts Chat Actions Most Recent A set of the most recent timestamps of various activities observed in chat sources reply 2024 09 10T12 00 00Z action_chat_count JavaScript cURL HTTPie Postman jstag send action reply curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action reply echo action reply http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action reply pm sendRequest url https api lytics io collect json default method POST action_chat_ts JavaScript cURL HTTPie Postman jstag send action reply curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action reply echo action reply http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action reply pm sendRequest url https api lytics io collect json default method POST Retail Field Short Description Long Description Example tax_exempt Tax Exempt Whether an individual is tax exempt FALSE currency Currency An individual s most recently used currency usd purchase_total Purchase Total An individual s total purchase amount from retail sources in that individual s currency 142 01 purchase_count Purchase Count An individual s total number of purchases from retail sources 2 purchase_shop_total Purchase Total by Shop Total amount spent by each shop mystore 123 45 purchase_shop_count Purchase Count by Shop Total number of purchases by each shop s name mystore 2 action_retail_count Retail Actions Count A set of counts of various activities observed in retail sources refund 45 action_retail_ts Retail Actions Most Recent A set of the most recent timestamps of various activities observed in retail sources refund 2024 09 10T12 00 00Z product_ids Product IDs Ordered The set of product IDs an individual has ordered abc123 order_ids Order IDs The set of order IDs of an individual s order history 1294322 tax_exempt JavaScript cURL HTTPie Postman jstag send false curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data false echo false http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify false pm sendRequest url https api lytics io collect json default method POST currency JavaScript cURL HTTPie Postman jstag send usd curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data usd echo usd http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify usd pm sendRequest url https api lytics io collect json default method POST purchase_total JavaScript cURL HTTPie Postman jstag send 142 01 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 142 01 echo 142 01 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 142 01 pm sendRequest url https api lytics io collect json default method POST purchase_count JavaScript cURL HTTPie Postman jstag send 2 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 2 echo 2 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 2 pm sendRequest url https api lytics io collect json default method POST purchase_shop_total JavaScript cURL HTTPie Postman jstag send shop_name mystore total_spent 123 45 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data shop_name mystore total_spent 123 45 echo shop_name mystore total_spent 123 45 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify shop_name mystore total_spent 123 45 pm sendRequest url https api lytics io collect json default method POST purchase_shop_count JavaScript cURL HTTPie Postman jstag send shop_name mystore curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data shop_name mystore echo shop_name mystore http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify shop_name mystore pm sendRequest url https api lytics io collect json default method POST action_retail_count JavaScript cURL HTTPie Postman jstag send action refund curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action refund echo action refund http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action refund pm sendRequest url https api lytics io collect json default method POST action_retail_ts JavaScript cURL HTTPie Postman jstag send action refund curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action refund echo action refund http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action refund pm sendRequest url https api lytics io collect json default method POST product_ids JavaScript cURL HTTPie Postman jstag send abc123 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data abc123 echo abc123 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify abc123 pm sendRequest url https api lytics io collect json default method POST order_ids JavaScript cURL HTTPie Postman jstag send 1294322 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 1294322 echo 1294322 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 1294322 pm sendRequest url https api lytics io collect json default method POST CRM Field Short Description Long Description Example account_id Account ID The account ID associated with an individual acme corp 123 lead_status Lead Status The lead status associated with an individual open lead_source Lead Source The lead source associated with an individual blog lead_score Lead Score The lead score associated with an individual 0 72 lifecycle_stage Lifecycle Stage An individual s lifecycle stage loyal opportunity_value Opportunity Value The opportunity value of an individual 50000 account_id JavaScript cURL HTTPie Postman jstag send acme corp 123 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data acme corp 123 echo acme corp 123 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify acme corp 123 pm sendRequest url https api lytics io collect json default method POST lead_status JavaScript cURL HTTPie Postman jstag send open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data open echo open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify open pm sendRequest url https api lytics io collect json default method POST lead_source JavaScript cURL HTTPie Postman jstag send blog curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data blog echo blog http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify blog pm sendRequest url https api lytics io collect json default method POST lead_score JavaScript cURL HTTPie Postman jstag send 0 72 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 0 72 echo 0 72 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 0 72 pm sendRequest url https api lytics io collect json default method POST lifecycle_stage JavaScript cURL HTTPie Postman jstag send loyal curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data loyal echo loyal http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify loyal pm sendRequest url https api lytics io collect json default method POST opportunity_value JavaScript cURL HTTPie Postman jstag send 50000 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 50000 echo 50000 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 50000 pm sendRequest url https api lytics io collect json default method POST Survey Field Short Description Long Description Example survey_responses Survey Responses A collection of the individual s survey responses nps promoter survey_responses JavaScript cURL HTTPie Postman jstag send nps promoter curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data nps promoter echo nps promoter http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify nps promoter pm sendRequest url https api lytics io collect json default method POST Support Field Short Description Long Description Example action_survey_count Support Actions Count A set of counts of various activities observed in survey sources respond 45 action_survey_ts Support Actions Most Recent A set of the most recent timestamps of various activities observed in survey sources respond 2024 09 10T12 00 00Z csat_score Customer Satisfaction Score An individual s current customer satistfaction score 24 support_ticket_status Current Support Ticket Status An individual s support ticket status open action_survey_count JavaScript cURL HTTPie Postman jstag send action respond curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action respond echo action respond http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action respond pm sendRequest url https api lytics io collect json default method POST action_survey_ts JavaScript cURL HTTPie Postman jstag send action respond curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action respond echo action respond http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action respond pm sendRequest url https api lytics io collect json default method POST csat_score JavaScript cURL HTTPie Postman jstag send 24 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 24 echo 24 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 24 pm sendRequest url https api lytics io collect json default method POST support_ticket_status JavaScript cURL HTTPie Postman jstag send open curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data open echo open http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify open pm sendRequest url https api lytics io collect json default method POST Billing Field Short Description Long Description Example action_billing_count Billing Actions Count A set of counts of various activities observed in billing sources paid 45 action_billing_ts Billing Actions Most Recent A set of the most recent timestamps of various activities observed in billing sources paid 2024 09 10T12 00 00Z action_billing_count JavaScript cURL HTTPie Postman jstag send action paid curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action paid echo action paid http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action paid pm sendRequest url https api lytics io collect json default method POST action_billing_ts JavaScript cURL HTTPie Postman jstag send action paid curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data action paid echo action paid http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify action paid pm sendRequest url https api lytics io collect json default method POST Media Field Short Description Long Description Example subscription_status Subscription Status An individual s subscription status active subscription_start Subscription Term Start The start date of an individual s most recent subscription 2024 02 28 subscription_end Subscription Term End The end date of an individual s most recent subscription 2025 02 28 subscription_status JavaScript cURL HTTPie Postman jstag send active curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data active echo active http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify active pm sendRequest url https api lytics io collect json default method POST subscription_start JavaScript cURL HTTPie Postman jstag send 2024 02 28 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 2024 02 28 echo 2024 02 28 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 2024 02 28 pm sendRequest url https api lytics io collect json default method POST subscription_end JavaScript cURL HTTPie Postman jstag send 2025 02 28 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data 2025 02 28 echo 2025 02 28 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify 2025 02 28 pm sendRequest url https api lytics io collect json default method POST JavaScript cURL HTTPie Postman jstag send subscription_start 2024 02 28 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data subscription_start 2024 02 28 echo subscription_start 2024 02 28 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify subscription_start 2024 02 28 pm sendRequest url https api lytics io collect json default method POST subscription_end JavaScript cURL HTTPie Postman jstag send subscription_end 2025 02 28 curl request POST url https api lytics io collect json default header accept application json header authorization API_KEY header content type data subscription_end 2025 02 28 echo subscription_end 2025 02 28 http post htps api lytics io collect json default Authorization API_KEY pm request headers add key Authorization value API_KEY pm request body raw JSON stringify subscription_end 2025 02 28 pm sendRequest url https api lytics io collect json default method POST Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/schema-copilot",
    "title": "Overview",
    "chunk_text": "Overview Schema Copilot revolutionizes how users manage data connections streamlining the integration process with our Customer Data Platform CDP Lytics Before starting this document it is important to understand some key fundamentals regarding fields and mappings which can be found here Streamlined Data Integration Process Integrating custom data into Lytics is simplified into two straightforward steps Schema Definition Outline the schema to dictate how your new data source should update existing customer profiles Data Stream Creation Establish a new data stream tailored to your source to ensure seamless data flow Features of Schema Copilot Schema Copilot leverages advanced generative artificial intelligence to comprehensively scrutinize your new data source It offers intuitive suggestions for fields and mappings enabling seamless integration of your new data source with the existing schema This intelligent assistance ensures that your data aligns perfectly with the Lytics platform enhancing your customer data integration s overall efficiency and accuracy Getting Started To get started with Schema Copilot Navigate to the Schema Copilot wizard Fill out the Provide Data box with an example of your data source s data either JSON or CSV In the Additional Prompt box you can also give the model more directives JSON Example Tip If you do not correctly input the JSON you will see an error message on the red banner CSV Example Select the stream from which the data is going to be coming in Optional If you would like to have more complex data types or only map data in certain conditions you can do that using the Additional Prompt Box Example of Adding a prompt based on the CSV file input Now on the email mapping for the default stream you will see a condition that requires the first name to exist Click Suggest Schema and review the suggestions in the editable data grid If you want to accept the suggestions click Save Schema If you don t you can return to the first step to change your data or prompt or exit the wizard entirely Understanding the Suggested Schema View Field rows will have the following columns Field Name The field s name being added or updated If there is a green dot on this row the field is new if the dot is yellow then the field already exists and is being updated The lock next to the field indicates that this is an identifier and therefore cannot be edited as it would impact the integrity of the profiles already built Type This will indicate the data type To better understand Lytics Field data types please visit here Merge Op This will indicate how data merges into this field over time and is defined here Description This is the short description of the field and will act as the field name for the audience builder Is Identifier This will indicate whether it is an identifier Mappings The number of mappings recommended for the field based on Mappings will have the following columns Stream This will be the data source that will populate the mapping In the example above the stream is default Lytics Jstag s default stream Expression This is where additional aggregation cleansing hashing string parsing and manipulation can be done using LQL Adding more context to the Additional Prompt Section will automatically populate some expressions To learn more about what expressions are available please look here Condition Additional logic should be used to decide if the data should map This will use the LQL syntax Once the suggestions are saved you can publish the changes by clicking Publish Changes on your Schema Dashboard Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/schema-copilot#content",
    "title": "Overview",
    "chunk_text": "Overview Schema Copilot revolutionizes how users manage data connections streamlining the integration process with our Customer Data Platform CDP Lytics Before starting this document it is important to understand some key fundamentals regarding fields and mappings which can be found here Streamlined Data Integration Process Integrating custom data into Lytics is simplified into two straightforward steps Schema Definition Outline the schema to dictate how your new data source should update existing customer profiles Data Stream Creation Establish a new data stream tailored to your source to ensure seamless data flow Features of Schema Copilot Schema Copilot leverages advanced generative artificial intelligence to comprehensively scrutinize your new data source It offers intuitive suggestions for fields and mappings enabling seamless integration of your new data source with the existing schema This intelligent assistance ensures that your data aligns perfectly with the Lytics platform enhancing your customer data integration s overall efficiency and accuracy Getting Started To get started with Schema Copilot Navigate to the Schema Copilot wizard Fill out the Provide Data box with an example of your data source s data either JSON or CSV In the Additional Prompt box you can also give the model more directives JSON Example Tip If you do not correctly input the JSON you will see an error message on the red banner CSV Example Select the stream from which the data is going to be coming in Optional If you would like to have more complex data types or only map data in certain conditions you can do that using the Additional Prompt Box Example of Adding a prompt based on the CSV file input Now on the email mapping for the default stream you will see a condition that requires the first name to exist Click Suggest Schema and review the suggestions in the editable data grid If you want to accept the suggestions click Save Schema If you don t you can return to the first step to change your data or prompt or exit the wizard entirely Understanding the Suggested Schema View Field rows will have the following columns Field Name The field s name being added or updated If there is a green dot on this row the field is new if the dot is yellow then the field already exists and is being updated The lock next to the field indicates that this is an identifier and therefore cannot be edited as it would impact the integrity of the profiles already built Type This will indicate the data type To better understand Lytics Field data types please visit here Merge Op This will indicate how data merges into this field over time and is defined here Description This is the short description of the field and will act as the field name for the audience builder Is Identifier This will indicate whether it is an identifier Mappings The number of mappings recommended for the field based on Mappings will have the following columns Stream This will be the data source that will populate the mapping In the example above the stream is default Lytics Jstag s default stream Expression This is where additional aggregation cleansing hashing string parsing and manipulation can be done using LQL Adding more context to the Additional Prompt Section will automatically populate some expressions To learn more about what expressions are available please look here Condition Additional logic should be used to decide if the data should map This will use the LQL syntax Once the suggestions are saved you can publish the changes by clicking Publish Changes on your Schema Dashboard Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/merge-statistics",
    "title": "https://docs.lytics.com/docs/merge-statistics",
    "chunk_text": "When data from multiple sources are combined into a single user profile it is essential to ensure that the resulting data is accurate and consistent Merge statistics in Lytics provide a way to monitor and optimize the merging process ensuring that the data is adequately combined and reflects the most up to date and accurate information In the example below you can see how merge stats can be used to uncover potential areas of issue Out of the four available identifiers user_id is not responsible for any merges This could be due to several reasons such as no data populating that field the relationship being defined inaccurately etc Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/merge-statistics#content",
    "title": "https://docs.lytics.com/docs/merge-statistics#content",
    "chunk_text": "When data from multiple sources are combined into a single user profile it is essential to ensure that the resulting data is accurate and consistent Merge statistics in Lytics provide a way to monitor and optimize the merging process ensuring that the data is adequately combined and reflects the most up to date and accurate information In the example below you can see how merge stats can be used to uncover potential areas of issue Out of the four available identifiers user_id is not responsible for any merges This could be due to several reasons such as no data populating that field the relationship being defined inaccurately etc Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/identity-explorer",
    "title": "Overview",
    "chunk_text": "Overview The Identity Explorer is a powerful feature within the Lytics platform crafted to offer you an extensive and thorough examination of an individual user s Customer 360 C360 profile This tool not only improves your capacity to comprehend the composition of a user s profile from diverse sources but also grants access to a wealth of attributes and insights associated with the user Key Sections The Identity Explorer is organized into several key sections each offering a unique perspective into the consumer Identity In the Identity section you can explore the relationships between unique identifiers that establish connections across the various channels the consumer engages with The Identifier List provides a detailed overview of the keys and values used for linking while the Identity Graph visually represents these relationships This section helps you understand how the consumer is identified and linked across platforms Profile Fields The Profile Fields section encompasses an exhaustive catalog feature store of attributes along with their corresponding values linked to the customer s profile This encompasses default schema fields from connected tools custom attributes and many inferred or machine learning based attributes generated by Lytics This section offers an expansive overview of the consumer s data facilitating precise targeting and personalized interactions Searching Filtering The Profile Fields view can be filtered by either typing in a query or selecting any combination of pre built filters We find it most effective to filter by the field categories to simplify the view during exploration Raw Data For developers and data enthusiasts the Raw Data section offers a JSON representation of the complete profile Behavior In the Behavior section you ll find a graphical representation of Lytics nine behavioral scores These scores offer valuable insights into the user s engagement patterns across channels helping you tailor marketing strategies and campaigns to their preferences Content Affinity The Content Affinity section provides a graphical representation of product and content based affinity scores for the user It reveals the user s preferences and interests enabling you to make data driven recommendations and content suggestions Activity The Activity section overviews the user s activity over time You can track when they are most active and identify the best times to communicate with them This historical data helps optimize the timing of your interactions for maximum engagement Deleting Profiles In support of GDPR Profile Administrators may also delete a single profile or download the profile data to provide to a consumer directly if requested Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/identity-explorer#content",
    "title": "Overview",
    "chunk_text": "Overview The Identity Explorer is a powerful feature within the Lytics platform crafted to offer you an extensive and thorough examination of an individual user s Customer 360 C360 profile This tool not only improves your capacity to comprehend the composition of a user s profile from diverse sources but also grants access to a wealth of attributes and insights associated with the user Key Sections The Identity Explorer is organized into several key sections each offering a unique perspective into the consumer Identity In the Identity section you can explore the relationships between unique identifiers that establish connections across the various channels the consumer engages with The Identifier List provides a detailed overview of the keys and values used for linking while the Identity Graph visually represents these relationships This section helps you understand how the consumer is identified and linked across platforms Profile Fields The Profile Fields section encompasses an exhaustive catalog feature store of attributes along with their corresponding values linked to the customer s profile This encompasses default schema fields from connected tools custom attributes and many inferred or machine learning based attributes generated by Lytics This section offers an expansive overview of the consumer s data facilitating precise targeting and personalized interactions Searching Filtering The Profile Fields view can be filtered by either typing in a query or selecting any combination of pre built filters We find it most effective to filter by the field categories to simplify the view during exploration Raw Data For developers and data enthusiasts the Raw Data section offers a JSON representation of the complete profile Behavior In the Behavior section you ll find a graphical representation of Lytics nine behavioral scores These scores offer valuable insights into the user s engagement patterns across channels helping you tailor marketing strategies and campaigns to their preferences Content Affinity The Content Affinity section provides a graphical representation of product and content based affinity scores for the user It reveals the user s preferences and interests enabling you to make data driven recommendations and content suggestions Activity The Activity section overviews the user s activity over time You can track when they are most active and identify the best times to communicate with them This historical data helps optimize the timing of your interactions for maximum engagement Deleting Profiles In support of GDPR Profile Administrators may also delete a single profile or download the profile data to provide to a consumer directly if requested Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/identity-rules",
    "title": "https://docs.lytics.com/docs/identity-rules",
    "chunk_text": "Identity rules in Lytics provide businesses with a clear understanding of how customer profiles are created from different data streams The visualizations that support these rules make it easy to identify any gaps in the identity resolution strategy ensuring the strategy remains healthy and effective in the long term This is crucial for businesses looking to maintain accurate and reliable customer profiles and create targeted and personalized marketing campaigns Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/identity-rules#content",
    "title": "https://docs.lytics.com/docs/identity-rules#content",
    "chunk_text": "Identity rules in Lytics provide businesses with a clear understanding of how customer profiles are created from different data streams The visualizations that support these rules make it easy to identify any gaps in the identity resolution strategy ensuring the strategy remains healthy and effective in the long term This is crucial for businesses looking to maintain accurate and reliable customer profiles and create targeted and personalized marketing campaigns Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/cloud-connect-intro",
    "title": "Introduction",
    "chunk_text": "Introduction Cloud Connect allows you to run complex SQL queries directly against your data warehouse and translate the resulting records into profile attributes and audiences Cloud Connect in Action Cloud Connect in Action Check out the solution architecture developed with Google which leverages BigQuery and Analytics Hub in addition to Cloud Connect to create a rich pattern for secure data collaboration and activation Getting Started Accessing Cloud Connect Cloud Connect is available to all Lytics customers If you don t currently have access via the product switcher at the top of the primary navigation contact support or your account management team Common Use cases Cloud Connect unlocks many use cases enabling marketers to segment their customers based on any attributes stored in their database A few examples include Time Window All users who did not log in last month Joins B2B All users associated with accounts without feature x Lifetime Value LTV or Rollup All users with a premium subscription have purchased at least two products Need a warehouse Don t currently have access to a data warehouse Lytics has you covered with Lytics Warehouse We provide a simple data warehouse on top of Google BigQuery to all of our customers as part of Conductor Simply reach out to account manager or support for access and information How it Works Cloud Connect augments the rest of the Lytics CDP suite by providing a secure and flexible entry point into your data warehouse Users can quickly write a standard SQL query to perform a number of complex data manipulations or aggregations and stream the results directly to materialized user profiles From there generate insight heavy reports enrich targeted segments and activate across hundreds of marketing channels in just a few clicks Below you ll find an overview of the general architecture which can be summarized into these key value drivers Direct access to existing customer data in your warehouse No need to rip and replace or replicate consumer data in order to activate Leverage standard SQL to extract only what is relevant to your business goals Maintain your warehouse as the source of truth Requires very little to implement and begin generating ROI Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/cloud-connect-intro#content",
    "title": "Introduction",
    "chunk_text": "Introduction Cloud Connect allows you to run complex SQL queries directly against your data warehouse and translate the resulting records into profile attributes and audiences Cloud Connect in Action Cloud Connect in Action Check out the solution architecture developed with Google which leverages BigQuery and Analytics Hub in addition to Cloud Connect to create a rich pattern for secure data collaboration and activation Getting Started Accessing Cloud Connect Cloud Connect is available to all Lytics customers If you don t currently have access via the product switcher at the top of the primary navigation contact support or your account management team Common Use cases Cloud Connect unlocks many use cases enabling marketers to segment their customers based on any attributes stored in their database A few examples include Time Window All users who did not log in last month Joins B2B All users associated with accounts without feature x Lifetime Value LTV or Rollup All users with a premium subscription have purchased at least two products Need a warehouse Don t currently have access to a data warehouse Lytics has you covered with Lytics Warehouse We provide a simple data warehouse on top of Google BigQuery to all of our customers as part of Conductor Simply reach out to account manager or support for access and information How it Works Cloud Connect augments the rest of the Lytics CDP suite by providing a secure and flexible entry point into your data warehouse Users can quickly write a standard SQL query to perform a number of complex data manipulations or aggregations and stream the results directly to materialized user profiles From there generate insight heavy reports enrich targeted segments and activate across hundreds of marketing channels in just a few clicks Below you ll find an overview of the general architecture which can be summarized into these key value drivers Direct access to existing customer data in your warehouse No need to rip and replace or replicate consumer data in order to activate Leverage standard SQL to extract only what is relevant to your business goals Maintain your warehouse as the source of truth Requires very little to implement and begin generating ROI Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/managing-cloud-connections",
    "title": "Access",
    "chunk_text": "Access Cloud Connect tabs are found under Data Pipeline Cloud Connect Connections configure the access to your data warehouses and Data Models configure the SQL queries that are run to connect audience membership and profile attributes Creating a Connection Click Create New Connection from the Connections Dashboard at the top right and complete the following steps Choose the provider Choose the Connection type Select an existing Authorization or create a new one by following the Authorization instructions Add a name label description and complete the configuration options These will vary slightly between providers Authorization Security The authorization selected for your Connection will control your Lytics account users access to your data warehouse You can control whether a user has read access to the entire dataset or individual tables maintaining your security and governance practices within your data warehouse Supported Data Warehouses Cloud Connect currently supports a number of popular data warehouses Amazon Redshift Databricks Google BigQuery Microsoft Azure SQL Database Snowflake Managing Connections Once you have created a Connection you can access a summary page showing how data from your data warehouse is being leveraged in Lytics At the top of the page you ll see the following information Provider Data warehouse that you are connecting with Lytics Authorization Name of the authorization such as Cloud Connect JWT Note Lytics users can access any data tables that the Connection Authorization has read access to Type Indicates the type based on your provider Created By Lytics user who created the Connection Created On Date the Connection was initially created Last Updated Date the Connection was most recently edited The rest of the Summary tab shows how many active and inactive data models are built using this Connection as a data source and how many tables are accessible from this dataset The Activity chart displays how many rows are being queried which can have cost implications based on your data warehouse usage Explore The Explore tab provides a simple Schema Explorer to validate that the data shown is as you would expect to see in your data warehouse In the example below we only connected an individual table but here you will see as many tables as the authorization has read access to Details The Details section displays all the information about setting up your Connection including the authorization and configuration settings Logs The Logs section records the history of events for this Connection which are helpful to ensure your connection is working as expected Below are the connection event types you may see Connection Events Description Created First event indicating the Connection is active Updated Connection was updated by a Lytics user Deleted Connection was removed and any data models built on this Connection will no longer be updated Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/managing-cloud-connections#content",
    "title": "Access",
    "chunk_text": "Access Cloud Connect tabs are found under Data Pipeline Cloud Connect Connections configure the access to your data warehouses and Data Models configure the SQL queries that are run to connect audience membership and profile attributes Creating a Connection Click Create New Connection from the Connections Dashboard at the top right and complete the following steps Choose the provider Choose the Connection type Select an existing Authorization or create a new one by following the Authorization instructions Add a name label description and complete the configuration options These will vary slightly between providers Authorization Security The authorization selected for your Connection will control your Lytics account users access to your data warehouse You can control whether a user has read access to the entire dataset or individual tables maintaining your security and governance practices within your data warehouse Supported Data Warehouses Cloud Connect currently supports a number of popular data warehouses Amazon Redshift Databricks Google BigQuery Microsoft Azure SQL Database Snowflake Managing Connections Once you have created a Connection you can access a summary page showing how data from your data warehouse is being leveraged in Lytics At the top of the page you ll see the following information Provider Data warehouse that you are connecting with Lytics Authorization Name of the authorization such as Cloud Connect JWT Note Lytics users can access any data tables that the Connection Authorization has read access to Type Indicates the type based on your provider Created By Lytics user who created the Connection Created On Date the Connection was initially created Last Updated Date the Connection was most recently edited The rest of the Summary tab shows how many active and inactive data models are built using this Connection as a data source and how many tables are accessible from this dataset The Activity chart displays how many rows are being queried which can have cost implications based on your data warehouse usage Explore The Explore tab provides a simple Schema Explorer to validate that the data shown is as you would expect to see in your data warehouse In the example below we only connected an individual table but here you will see as many tables as the authorization has read access to Details The Details section displays all the information about setting up your Connection including the authorization and configuration settings Logs The Logs section records the history of events for this Connection which are helpful to ensure your connection is working as expected Below are the connection event types you may see Connection Events Description Created First event indicating the Connection is active Updated Connection was updated by a Lytics user Deleted Connection was removed and any data models built on this Connection will no longer be updated Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/creating-cloud-connect-audiences",
    "title": "Cloud Connect Data Models",
    "chunk_text": "Cloud Connect Data Models A Data Model is used by Cloud Connect to link or connect a user s external data warehouse to Lytics profiles Each Data Model represents a set of records defined by a SQL query Each Data Model will also configure a join key which defines how the Data Model is joined to Lytics Profiles Once a Connection to your data warehouse has been created Data Models can be created via the Data Models tab within the navigation bar Creating a Data Model Click Create New from the Data Models dashboard and complete the following steps Select the Connection Write the SQL query Query Editor Write and test standard SQL queries directly in Lytics Alternatively copy and paste queries you ve tested in your BigQuery or Snowflake instance When you click Test Query Lytics will return 10 sample records Test the query and validate the results Configure the Data Model Name Data Model name Description The Description of the Data Model Slug The Data Model name that will be used in the membership and activation fields in the audience builder It is important that the name chosen here makes sense for those building audiences in the tool If no slug is selected it will auto populate using the model name Primary Key Select the data warehouse ID that will be used to match against profiles in Lytics External Lytics Key Select a Lytics user profile field that is a unique identifier to map to an identifier in your incoming data source Activated Fields Select the fields you want to bring into Lytics profiles for activation Note that each data model can only include 25 columns as activated fields Sync Frequency Select a time interval to run the query on this is also the frequency that your Lytics profiles will be updated The beta options are currently every 1 hour to every 3 weeks Create new Lytics profile Check this box if you want to create new profiles in Lytics if a profile with a matching ID does not already exist in Lytics If you do not select this check box only users with matching IDs to the Data Model IDs will be updated Activate the Model Until the Data Model is activated its SQL query will not be run against your data warehouse and Lytics profiles will not be updated with the selected fields When building multiple Cloud Connect Data Models with the same primary key you must select the same External Lytics Key mapping Selecting a different Lytics key will result in an error when you try to save the new Data Model Example Use Case Consider this scenario to demonstrate why you d want to create a Cloud Connect Data Model driven audience instead of a standard Lytics audience Your company sells e bikes and wants to run a holiday campaign that sends a promotion to any customer who purchased an e bike in November or December last year Perhaps you also want to refine your audience to those who are interested in particular bike brands All of this purchase and product data already exists in your Google BigQuery instance as shown below Instead of directly importing all that purchase history data into Lytics you can write a SQL query to find which customers meet this audience criteria By copying this query directly into the Lytics Model Builder as shown in the generate a query screenshot above you ll create a new audience in Lytics that will be updated on the frequency interval you decide Once the Data Model is activated profiles will be updated with a membership field that can be used to create an audience Activated fields can be added to the Data Model that can then be used for more dynamic audiences SQL Translator If you would like to skip having to write a SQL query simply describe the Data Model of what you wish to fetch and using GenAI Lytics will translate the description to a SQL query for you Lytics makes queries to your database to ensure that the data is up to date and accurate when creating the query Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/creating-cloud-connect-audiences#content",
    "title": "Cloud Connect Data Models",
    "chunk_text": "Cloud Connect Data Models A Data Model is used by Cloud Connect to link or connect a user s external data warehouse to Lytics profiles Each Data Model represents a set of records defined by a SQL query Each Data Model will also configure a join key which defines how the Data Model is joined to Lytics Profiles Once a Connection to your data warehouse has been created Data Models can be created via the Data Models tab within the navigation bar Creating a Data Model Click Create New from the Data Models dashboard and complete the following steps Select the Connection Write the SQL query Query Editor Write and test standard SQL queries directly in Lytics Alternatively copy and paste queries you ve tested in your BigQuery or Snowflake instance When you click Test Query Lytics will return 10 sample records Test the query and validate the results Configure the Data Model Name Data Model name Description The Description of the Data Model Slug The Data Model name that will be used in the membership and activation fields in the audience builder It is important that the name chosen here makes sense for those building audiences in the tool If no slug is selected it will auto populate using the model name Primary Key Select the data warehouse ID that will be used to match against profiles in Lytics External Lytics Key Select a Lytics user profile field that is a unique identifier to map to an identifier in your incoming data source Activated Fields Select the fields you want to bring into Lytics profiles for activation Note that each data model can only include 25 columns as activated fields Sync Frequency Select a time interval to run the query on this is also the frequency that your Lytics profiles will be updated The beta options are currently every 1 hour to every 3 weeks Create new Lytics profile Check this box if you want to create new profiles in Lytics if a profile with a matching ID does not already exist in Lytics If you do not select this check box only users with matching IDs to the Data Model IDs will be updated Activate the Model Until the Data Model is activated its SQL query will not be run against your data warehouse and Lytics profiles will not be updated with the selected fields When building multiple Cloud Connect Data Models with the same primary key you must select the same External Lytics Key mapping Selecting a different Lytics key will result in an error when you try to save the new Data Model Example Use Case Consider this scenario to demonstrate why you d want to create a Cloud Connect Data Model driven audience instead of a standard Lytics audience Your company sells e bikes and wants to run a holiday campaign that sends a promotion to any customer who purchased an e bike in November or December last year Perhaps you also want to refine your audience to those who are interested in particular bike brands All of this purchase and product data already exists in your Google BigQuery instance as shown below Instead of directly importing all that purchase history data into Lytics you can write a SQL query to find which customers meet this audience criteria By copying this query directly into the Lytics Model Builder as shown in the generate a query screenshot above you ll create a new audience in Lytics that will be updated on the frequency interval you decide Once the Data Model is activated profiles will be updated with a membership field that can be used to create an audience Activated fields can be added to the Data Model that can then be used for more dynamic audiences SQL Translator If you would like to skip having to write a SQL query simply describe the Data Model of what you wish to fetch and using GenAI Lytics will translate the description to a SQL query for you Lytics makes queries to your database to ensure that the data is up to date and accurate when creating the query Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/leveraging-cloud-connect-audiences",
    "title": "Activating Data Models",
    "chunk_text": "Activating Data Models Because the queries that power your Cloud Connect Data Models can have costs associated with your database usage Lytics doesn t run the scheduled sync automatically After you ve created a new Cloud Connect Data Model you ll notice that the Status is listed as Inactive In order to activate click the Activate button on the Data Model page Once you click the Activate button your query will complete its first run within an hour of the Next Sync On timestamp listed under the Details tab and then continue to run at the interval you selected During each sync the SQL query will be run against your database and your Lytics profiles will be updated according to the configuration defined on the Data Model Once synced the Total Records metric on the Data Model summary tab may take up to 2 hours to display This number represents the number of rows returned by the SQL query Data Model Field Creation Upon activation of a Data Model Lytics will automatically create one customer profile field which represents the membership of a user for the Data Model Additional fields will be created if the Data Model was configured to include Activated Fields Below is a guide for how to locate these generated fields within a customer profile or within the Audience Builder on the Custom Fields tab Profile Field Structure of Short Description Structure of Slug Data Model Membership Data Model Slug membership cc_ Data Model Slug _membership Data Model Activated Fields Data Model Slug Query Field cc_ Data Model Slug _ Query Field Deactivate Data Model If you need to disable a Cloud Connect Data Model from syncing at any point you can do so by navigating to the Data Model and clicking the Deactivate button Deactivating the Data Model will not remove its corresponding fields from schema or from Lytics profiles however it will cause the values for these fields to become out of date In order to completely remove the fields from schema profiles the Data Model must be deleted Total Records vs Count of Users Throughout the app you may see different metrics for Cloud Connect Data Models Total Records within the Data Model Summary On the summary page for your Cloud Connect Data Model under the Total Records statistic shown in the graph below you will see the number of records that are selected by the query based on the unique number of primary keys in the origin database This may be equal to or less than the number of total rows imported and may be significantly higher than the number you see in the audience builder when utilizing this Data Model Count of Users within the Audience Builder When adding Cloud Connect Data Model membership or activated fields to audience logic in the Audience Builder you may see a smaller size than the Total Records on the summary The count of users within the Audience Builder is the number of users in your Lytics account who met the qualifications for the query based on the matching Lytics user field configured on the Data Model This number reflects the number of records that would be included if you were to run an export of the audience Most common reasons for why this number may be smaller than the Total Records metric are the following If the Create New Profiles option isn t selected on the Data Model the count of users in the Audience Builder will only include profiles that already existed in your Lytics accounts Audience Builder will exclude any profiles which are marked as being Unhealthy Learn more about unhealthy profiles here https docs lytics com docs user profile health unhealthy profiles Exporting Data Models Once activating a Data Model its associated fields will be stored as user fields on the customer profile to see the naming convention here Therefore in order to export the members of the Data Model you will first need to create an audience in the Audience Builder You can create an audience of only members or layer in additional audience rules to get the most out of your customer data For example you could build a Cloud Connect audience using account level data for a B2B use case and add one of Lytics behavioral scores to refine your targeting based on your desired user engagement level To learn how to export audiences visit our Activating Audiences documentation here Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/leveraging-cloud-connect-audiences#content",
    "title": "Activating Data Models",
    "chunk_text": "Activating Data Models Because the queries that power your Cloud Connect Data Models can have costs associated with your database usage Lytics doesn t run the scheduled sync automatically After you ve created a new Cloud Connect Data Model you ll notice that the Status is listed as Inactive In order to activate click the Activate button on the Data Model page Once you click the Activate button your query will complete its first run within an hour of the Next Sync On timestamp listed under the Details tab and then continue to run at the interval you selected During each sync the SQL query will be run against your database and your Lytics profiles will be updated according to the configuration defined on the Data Model Once synced the Total Records metric on the Data Model summary tab may take up to 2 hours to display This number represents the number of rows returned by the SQL query Data Model Field Creation Upon activation of a Data Model Lytics will automatically create one customer profile field which represents the membership of a user for the Data Model Additional fields will be created if the Data Model was configured to include Activated Fields Below is a guide for how to locate these generated fields within a customer profile or within the Audience Builder on the Custom Fields tab Profile Field Structure of Short Description Structure of Slug Data Model Membership Data Model Slug membership cc_ Data Model Slug _membership Data Model Activated Fields Data Model Slug Query Field cc_ Data Model Slug _ Query Field Deactivate Data Model If you need to disable a Cloud Connect Data Model from syncing at any point you can do so by navigating to the Data Model and clicking the Deactivate button Deactivating the Data Model will not remove its corresponding fields from schema or from Lytics profiles however it will cause the values for these fields to become out of date In order to completely remove the fields from schema profiles the Data Model must be deleted Total Records vs Count of Users Throughout the app you may see different metrics for Cloud Connect Data Models Total Records within the Data Model Summary On the summary page for your Cloud Connect Data Model under the Total Records statistic shown in the graph below you will see the number of records that are selected by the query based on the unique number of primary keys in the origin database This may be equal to or less than the number of total rows imported and may be significantly higher than the number you see in the audience builder when utilizing this Data Model Count of Users within the Audience Builder When adding Cloud Connect Data Model membership or activated fields to audience logic in the Audience Builder you may see a smaller size than the Total Records on the summary The count of users within the Audience Builder is the number of users in your Lytics account who met the qualifications for the query based on the matching Lytics user field configured on the Data Model This number reflects the number of records that would be included if you were to run an export of the audience Most common reasons for why this number may be smaller than the Total Records metric are the following If the Create New Profiles option isn t selected on the Data Model the count of users in the Audience Builder will only include profiles that already existed in your Lytics accounts Audience Builder will exclude any profiles which are marked as being Unhealthy Learn more about unhealthy profiles here https docs lytics com docs user profile health unhealthy profiles Exporting Data Models Once activating a Data Model its associated fields will be stored as user fields on the customer profile to see the naming convention here Therefore in order to export the members of the Data Model you will first need to create an audience in the Audience Builder You can create an audience of only members or layer in additional audience rules to get the most out of your customer data For example you could build a Cloud Connect audience using account level data for a B2B use case and add one of Lytics behavioral scores to refine your targeting based on your desired user engagement level To learn how to export audiences visit our Activating Audiences documentation here Updated 2 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/cloud-connect-troubleshooting-and-faqs",
    "title": "Syncs",
    "chunk_text": "Syncs What is a sync in the context of Cloud Connect A sync refers to the process of running SQL queries configured on Data Models against data warehouses and then updating Lytics profiles with any changes that have occurred since the previous sync Will my SQL query only be run once per sync Most of the time yes However if an interruption occurs during the sync either due to a processing or network error we ll attempt to resume the sync from the place where we left off If that occurs we ll need to rerun the query Why are the sync times slightly different than what I d expect On the Data Model Details page we display two timestamps related to the sync for your Data Model Last Sync on and Next Sync On The Last Sync On timestamp displays the exact time when your Data Model was last synced However the timestamp shown for Next Sync On will vary slightly from the time when your model will actually sync In an effort to reduce the number of syncs needed we set the Next Sync On timestamp in a way where more models will end up synced together Then every hour we check to see which models are ready to sync if Next Sync on is in the past we sync the model Ultimately you should think of your selected sync frequency as the number of times per day your model will sync e g a model with a sync frequency of four hours will sync six times per day The Next Sync on timestamp gives an estimate as to when the next sync will occur rather than the exact time Data Models Why can t I create a Data Model that returns no rows We use the columns returned by the SQL query to set up our internal schema If no data is returned by the query we don t have the required information to correctly set up our schema Note that once the schema is set up your Data Model will continue to sync regardless of how many rows are returned Why can t I create update a Data Model when my schema has unpublished changes Creating a Data Model modifies your Conductor schema at a minimum a true false membership field will be added to denote whether a profile falls into that Data Model In addition one field is added for each activated field that s selected In order for these fields to be added your Conductor schema cannot be in a draft state When updating a Data Model we ll attempt to update your Conductor schema if any activated fields are being changed For this reason if you try to edit your activated fields and your schema has unpublished changes we ll reject the update Can I select any field as the primary key The UI allows for selecting any column that s returned by your SQL query as your primary key However it s important that the selected primary key field contain unique values If there are duplicate values we cannot guarantee that the values for your activated fields will be correct You should choose a field whose values will match to the values of an existing by field in your Lytics schema Can I select any field as the Lytics key No only by fields can be selected Further once a Data Model has been created for a certain primary key all subsequent Data Models which use that primary key must also use that same Lytics key Sync Failures Related To Collation Cloud Connect requires that the column you use as the primary key of your data model queries be UTF 8 collated If your column is collated differently this can cause your data model syncs to fail Most database providers allow columns to be converted to a particular collation within a query If your primary key column is collated differently consult the documentation of your database provider to ensure a compatible collation Snowflake BigQuery Azure RedShift Updated 11 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/cloud-connect-troubleshooting-and-faqs#content",
    "title": "Syncs",
    "chunk_text": "Syncs What is a sync in the context of Cloud Connect A sync refers to the process of running SQL queries configured on Data Models against data warehouses and then updating Lytics profiles with any changes that have occurred since the previous sync Will my SQL query only be run once per sync Most of the time yes However if an interruption occurs during the sync either due to a processing or network error we ll attempt to resume the sync from the place where we left off If that occurs we ll need to rerun the query Why are the sync times slightly different than what I d expect On the Data Model Details page we display two timestamps related to the sync for your Data Model Last Sync on and Next Sync On The Last Sync On timestamp displays the exact time when your Data Model was last synced However the timestamp shown for Next Sync On will vary slightly from the time when your model will actually sync In an effort to reduce the number of syncs needed we set the Next Sync On timestamp in a way where more models will end up synced together Then every hour we check to see which models are ready to sync if Next Sync on is in the past we sync the model Ultimately you should think of your selected sync frequency as the number of times per day your model will sync e g a model with a sync frequency of four hours will sync six times per day The Next Sync on timestamp gives an estimate as to when the next sync will occur rather than the exact time Data Models Why can t I create a Data Model that returns no rows We use the columns returned by the SQL query to set up our internal schema If no data is returned by the query we don t have the required information to correctly set up our schema Note that once the schema is set up your Data Model will continue to sync regardless of how many rows are returned Why can t I create update a Data Model when my schema has unpublished changes Creating a Data Model modifies your Conductor schema at a minimum a true false membership field will be added to denote whether a profile falls into that Data Model In addition one field is added for each activated field that s selected In order for these fields to be added your Conductor schema cannot be in a draft state When updating a Data Model we ll attempt to update your Conductor schema if any activated fields are being changed For this reason if you try to edit your activated fields and your schema has unpublished changes we ll reject the update Can I select any field as the primary key The UI allows for selecting any column that s returned by your SQL query as your primary key However it s important that the selected primary key field contain unique values If there are duplicate values we cannot guarantee that the values for your activated fields will be correct You should choose a field whose values will match to the values of an existing by field in your Lytics schema Can I select any field as the Lytics key No only by fields can be selected Further once a Data Model has been created for a certain primary key all subsequent Data Models which use that primary key must also use that same Lytics key Sync Failures Related To Collation Cloud Connect requires that the column you use as the primary key of your data model queries be UTF 8 collated If your column is collated differently this can cause your data model syncs to fail Most database providers allow columns to be converted to a particular collation within a query If your primary key column is collated differently consult the documentation of your database provider to ensure a compatible collation Snowflake BigQuery Azure RedShift Updated 11 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/understanding-user-profiles",
    "title": "Introduction",
    "chunk_text": "Introduction User profiles provide relevant insights about individual customers in relation to your entire customer base Referencing a user profile helps answer questions about who your customers are and how they are engaging with your brand Initially the user profile offers a way to test your Lytics implementation and validate the outcomes of your marketing tactics For example you can check if campaigns are working as expected by using a test persona and seeing how the user profile data gets updated As you get deeper into building campaigns the user profile provides insight into how your marketing influences user behaviors For example if you run a mobile campaign you can drill down to see if customers are engaging on mobile devices what days and times they are most active and what types of content they are affinity for User profiles are updated in real time but there can be a delay while the data is being processed and scores are being calculated for behavior and content affinity To provide quick access to customer data the user profile is divided into three tabs Intelligence Audiences and Details Anatomy of a User Profile Intelligence The intelligence tab gives a snapshot of key information about an individual user At the top a bar is displayed to help you quickly understand user engagement across all channels Likelihood to re engage Current engagement level and Frequency of user interactions Each of these boxes summarizes the data science powered behavioral scores into practical terms The individual behavior scores and the user s content affinity are displayed below This rich data based on a user s actual behavior is available thanks to the predictive analytics built into Lytics Recent activity by channel This module gives an overview of which channels email web mobile etc an individual user has been active in When appropriately mapped it will also provide information on when users were active on each channel within the last day or within the last 30 days NOTE If this module is empty please see below for details on how to configure the user fields As with all data mapping exercises it is best to include your Customer Success representatives for optimal results How the recent activity by channel is managed If you are customizing LQL or handling custom streams it is important to understand how this module should be configured For all our built in integrations Lytics includes this data mapping by default At its core the Recent activity by channel module is built from a single user field This field will not exist in legacy accounts and must be added to the existing LQL manually For all new accounts that get the latest default LQL files the baseline should be included In order to handle either custom data mapping for an account or backfill an old account the user field last_channel_activities must be defined in a streams LQL file This field is defined as a map string time and should not be altered In each stream you ll simply map a string such as web or email to a timestamp such as epochms in order to update the field A more lengthy example for an email LQL might look something like Profile Support map email epochms AS last_channel_activities IF eq tolower action open OR eq tolower action click SHORTDESC Last Activity By Channel KIND map string time The example above is for when you only want to map the activity event in the case of a click or open This definition will vary from stream to stream When it comes to which keys to use we recommend following these standards for common channels email ad web mobile support Unique identifiers Highlights the identifiers that have been used to materialize this particular user s profile Event chart The event chart shows a user s activity by hour and day of the week The top right of the chart highlights when a user is most active for example Tuesdays at 10am Audience Membership This tab displays a list of all the current Audiences a user belongs to and the total size of each audience Audiences include factual information such as Has Email Address and Known Location along with Lytics score driven characteristics such as Deeply Engaged or Binge User Profile Details The details tab gives an under the hood display of the exact user fields contributing to a user s behavioral data and their audiences Unique identifiers are shown first which are essential for enabling cross channel mapping For all user fields the associated stream and value is provided Profile Picture Some profiles may include a profile picture when viewed in the user interface This image comes from Gravatar If the profile in question has an email address Lytics converts it to an MD5 hash That hash is then used to look up the corresponding image on Gravatar This image is only displayed in the Lytics UI and is not part of the profile itself Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/understanding-user-profiles#content",
    "title": "Introduction",
    "chunk_text": "Introduction User profiles provide relevant insights about individual customers in relation to your entire customer base Referencing a user profile helps answer questions about who your customers are and how they are engaging with your brand Initially the user profile offers a way to test your Lytics implementation and validate the outcomes of your marketing tactics For example you can check if campaigns are working as expected by using a test persona and seeing how the user profile data gets updated As you get deeper into building campaigns the user profile provides insight into how your marketing influences user behaviors For example if you run a mobile campaign you can drill down to see if customers are engaging on mobile devices what days and times they are most active and what types of content they are affinity for User profiles are updated in real time but there can be a delay while the data is being processed and scores are being calculated for behavior and content affinity To provide quick access to customer data the user profile is divided into three tabs Intelligence Audiences and Details Anatomy of a User Profile Intelligence The intelligence tab gives a snapshot of key information about an individual user At the top a bar is displayed to help you quickly understand user engagement across all channels Likelihood to re engage Current engagement level and Frequency of user interactions Each of these boxes summarizes the data science powered behavioral scores into practical terms The individual behavior scores and the user s content affinity are displayed below This rich data based on a user s actual behavior is available thanks to the predictive analytics built into Lytics Recent activity by channel This module gives an overview of which channels email web mobile etc an individual user has been active in When appropriately mapped it will also provide information on when users were active on each channel within the last day or within the last 30 days NOTE If this module is empty please see below for details on how to configure the user fields As with all data mapping exercises it is best to include your Customer Success representatives for optimal results How the recent activity by channel is managed If you are customizing LQL or handling custom streams it is important to understand how this module should be configured For all our built in integrations Lytics includes this data mapping by default At its core the Recent activity by channel module is built from a single user field This field will not exist in legacy accounts and must be added to the existing LQL manually For all new accounts that get the latest default LQL files the baseline should be included In order to handle either custom data mapping for an account or backfill an old account the user field last_channel_activities must be defined in a streams LQL file This field is defined as a map string time and should not be altered In each stream you ll simply map a string such as web or email to a timestamp such as epochms in order to update the field A more lengthy example for an email LQL might look something like Profile Support map email epochms AS last_channel_activities IF eq tolower action open OR eq tolower action click SHORTDESC Last Activity By Channel KIND map string time The example above is for when you only want to map the activity event in the case of a click or open This definition will vary from stream to stream When it comes to which keys to use we recommend following these standards for common channels email ad web mobile support Unique identifiers Highlights the identifiers that have been used to materialize this particular user s profile Event chart The event chart shows a user s activity by hour and day of the week The top right of the chart highlights when a user is most active for example Tuesdays at 10am Audience Membership This tab displays a list of all the current Audiences a user belongs to and the total size of each audience Audiences include factual information such as Has Email Address and Known Location along with Lytics score driven characteristics such as Deeply Engaged or Binge User Profile Details The details tab gives an under the hood display of the exact user fields contributing to a user s behavioral data and their audiences Unique identifiers are shown first which are essential for enabling cross channel mapping For all user fields the associated stream and value is provided Profile Picture Some profiles may include a profile picture when viewed in the user interface This image comes from Gravatar If the profile in question has an email address Lytics converts it to an MD5 hash That hash is then used to look up the corresponding image on Gravatar This image is only displayed in the Lytics UI and is not part of the profile itself Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/user-profile-health",
    "title": "User Profile Health",
    "chunk_text": "User Profile Health Because Lytics user profiles are created by stitching data across sources the stability of a given profile depends on the quality and quantity of data used to create it Lytics is now surfacing the health of user profiles to improve your account performance and reliability Healthy profiles are stable and actionable with strong identifiers connecting data fragments across sources to the right user Unhealthy profiles are unstable and not actionable as they are either missing entirely or missing a subset of data Lytics is providing visibility into user profile health to facilitate the resolution of various issues caused by unhealthy profiles which can include missing data inconsistent audience counts between Lytics and other tools and duplicate profiles in audience exports triggers Unhealthy Profiles A user profile is considered unhealthy if the traversal through all data fragments fails for any reason Unhealthy profiles are mostly commonly hitting one of the following limitations Max Neighbors Max Traversals Profile size is too large Unhealthy profiles in Lytics are no longer processed for audience evaluations audience exports or triggers and enrichment processes including behavioral scoring and content affinity calculations Because unhealthy profiles are unusable in Lytics or any of your connected marketing tools this change will reduce latencies and ensure that only valid user profiles are surfaced for activations What information is contained for unhealthy profiles Unhealthy profiles only contain unique identifiers by fields and meta fields such as profile size an indication of why the profile is unhealthy the data stream names etc Meta Fields that remain on Unhealthy Profiles _num_aliases _num_events _num_streams _num_days _num_conflicts _conflicts _num_max_neighbors _max_traversals _num_nested_values _total_sz _cust_sz _internal_sz _elasticsearch_size _streamnames _profile_processing_failure _broken_profile_broke_max_size _broken_profile_broke_max_fragment_size _broken_profile_max_neighbors _broken_profile_nested_count Lytics is not destroying or losing any data about your users Rather unhealthy profiles simply no longer surface the portion of a profile that can be retrieved as it may result in inaccurate audience counts and activations How can I identify unhealthy profiles A new predefined audience called Unhealthy Profiles will be made available in all accounts If user profiles become unhealthy then we should see an increase in this audience at the same rate that we see a decrease in other audiences Will other audiences be affected by this change The only fields that we drop from the profiles when they become unhealthy are the non by fields So an audience that only has conditions on those by fields will not be affected For example Filter Exists email wouldn t be affected but the audience Filter Exists email AND State WA would be affected The latter would be affected because Lytics will drop the state field for the unhealthy profiles How can I resolve unhealthy profiles Contact your Lytics Account Manager to discuss a strategy to resolve or reduce the number of unhealthy profiles The approach will vary depending on your identity resolution strategy and the requirements of your marketing use cases Can I export unhealthy profiles Yes the Unhealthy Profiles audience can be exported via BigQuery SFTP or S3 However unhealthy profiles cannot be exported to other provider tools for activations since they are excluded from the audience evaluation process Profile Limits User profiles become unhealthy by hitting one or more of the following limits Max Neighbors Max neighbors refers to the number of edges associated with a node A node is created in Lytics graph when an identifier is introduced to a user profile Audience Impact From an activation perspective this means that what would have been one user profile in the audience is now increased to how many fragmented nodes there were Above is an example of when max neighbors could impact a profile The profile on the left has one email and many web cookies Each time a user gets a new web cookie and they are logged into the site Lytics will update the graph with a new node Over time the node with an email will have more and more cookies associated with it until it hits the max neighbors limit Once the profile hits max traversals the email node will drop off Then instead of having one user profile in the Lytics audience builder there will be as many profiles as there are fragmented nodes off the original four in this example Max Traversals Max Traversals refers to the number of edges that need to be traversed in order to retrieve the user profile for the audience Once this hits the limit specified on the account the profile will no longer update Audience Impact If a user hits max traversals their profile will no longer be updated for audience building and will fall into a stale state See the following examples If a user has opted out for emails and they hit max traversals they will not be opted out even if the event is received to opt them out They will be stuck in that audience unless the criteria changes and they no longer qualify If a user has opted out for an email and they do not qualify for the audience originally but eventually opt in that will not be reflected on the profile in the audience builder Profile Size When a profile becomes too large it cannot be pulled in for audience building at all At this point the profile is unusable There are a few different points in our pipeline which can trigger a profile to be marked unhealthy due to size If a single node in the graph becomes too large to write to the underlying data structure for our graph we mark that node as unhealthy subsequently marking any profile built from that node in the graph as unhealthy This particular size limit leads to data loss as we could not write updated attribution to the node in the graph and cannot guarantee profile accuracy This particular instance of size check can be resolved by addressing the root source contributing to the size of data attempting to be written i e place a cap on the number of values retained in some set map fields and replaying the account If the traversal of the graph builds a complete profile that is too large to write to the underlying data structure for our entity storage we mark the profile as unhealthy This can typically be resolved without requiring a replay as there has been no potential data loss in the graph and often involves addressing the root source contributing and simply re evaluating the profile impacted this re evaluation can occur by receiving new events for that profile or during our natural cadence of re scoring profiles If a full profile is not too large for our key indexed profile storage but is too large to write to our fully indexed used for bulk exports ad hoc audience scans profile storage this is treated equally to 2 and the profile is marked unhealthy with equal resolution strategy Updated 11 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/user-profile-health#content",
    "title": "User Profile Health",
    "chunk_text": "User Profile Health Because Lytics user profiles are created by stitching data across sources the stability of a given profile depends on the quality and quantity of data used to create it Lytics is now surfacing the health of user profiles to improve your account performance and reliability Healthy profiles are stable and actionable with strong identifiers connecting data fragments across sources to the right user Unhealthy profiles are unstable and not actionable as they are either missing entirely or missing a subset of data Lytics is providing visibility into user profile health to facilitate the resolution of various issues caused by unhealthy profiles which can include missing data inconsistent audience counts between Lytics and other tools and duplicate profiles in audience exports triggers Unhealthy Profiles A user profile is considered unhealthy if the traversal through all data fragments fails for any reason Unhealthy profiles are mostly commonly hitting one of the following limitations Max Neighbors Max Traversals Profile size is too large Unhealthy profiles in Lytics are no longer processed for audience evaluations audience exports or triggers and enrichment processes including behavioral scoring and content affinity calculations Because unhealthy profiles are unusable in Lytics or any of your connected marketing tools this change will reduce latencies and ensure that only valid user profiles are surfaced for activations What information is contained for unhealthy profiles Unhealthy profiles only contain unique identifiers by fields and meta fields such as profile size an indication of why the profile is unhealthy the data stream names etc Meta Fields that remain on Unhealthy Profiles _num_aliases _num_events _num_streams _num_days _num_conflicts _conflicts _num_max_neighbors _max_traversals _num_nested_values _total_sz _cust_sz _internal_sz _elasticsearch_size _streamnames _profile_processing_failure _broken_profile_broke_max_size _broken_profile_broke_max_fragment_size _broken_profile_max_neighbors _broken_profile_nested_count Lytics is not destroying or losing any data about your users Rather unhealthy profiles simply no longer surface the portion of a profile that can be retrieved as it may result in inaccurate audience counts and activations How can I identify unhealthy profiles A new predefined audience called Unhealthy Profiles will be made available in all accounts If user profiles become unhealthy then we should see an increase in this audience at the same rate that we see a decrease in other audiences Will other audiences be affected by this change The only fields that we drop from the profiles when they become unhealthy are the non by fields So an audience that only has conditions on those by fields will not be affected For example Filter Exists email wouldn t be affected but the audience Filter Exists email AND State WA would be affected The latter would be affected because Lytics will drop the state field for the unhealthy profiles How can I resolve unhealthy profiles Contact your Lytics Account Manager to discuss a strategy to resolve or reduce the number of unhealthy profiles The approach will vary depending on your identity resolution strategy and the requirements of your marketing use cases Can I export unhealthy profiles Yes the Unhealthy Profiles audience can be exported via BigQuery SFTP or S3 However unhealthy profiles cannot be exported to other provider tools for activations since they are excluded from the audience evaluation process Profile Limits User profiles become unhealthy by hitting one or more of the following limits Max Neighbors Max neighbors refers to the number of edges associated with a node A node is created in Lytics graph when an identifier is introduced to a user profile Audience Impact From an activation perspective this means that what would have been one user profile in the audience is now increased to how many fragmented nodes there were Above is an example of when max neighbors could impact a profile The profile on the left has one email and many web cookies Each time a user gets a new web cookie and they are logged into the site Lytics will update the graph with a new node Over time the node with an email will have more and more cookies associated with it until it hits the max neighbors limit Once the profile hits max traversals the email node will drop off Then instead of having one user profile in the Lytics audience builder there will be as many profiles as there are fragmented nodes off the original four in this example Max Traversals Max Traversals refers to the number of edges that need to be traversed in order to retrieve the user profile for the audience Once this hits the limit specified on the account the profile will no longer update Audience Impact If a user hits max traversals their profile will no longer be updated for audience building and will fall into a stale state See the following examples If a user has opted out for emails and they hit max traversals they will not be opted out even if the event is received to opt them out They will be stuck in that audience unless the criteria changes and they no longer qualify If a user has opted out for an email and they do not qualify for the audience originally but eventually opt in that will not be reflected on the profile in the audience builder Profile Size When a profile becomes too large it cannot be pulled in for audience building at all At this point the profile is unusable There are a few different points in our pipeline which can trigger a profile to be marked unhealthy due to size If a single node in the graph becomes too large to write to the underlying data structure for our graph we mark that node as unhealthy subsequently marking any profile built from that node in the graph as unhealthy This particular size limit leads to data loss as we could not write updated attribution to the node in the graph and cannot guarantee profile accuracy This particular instance of size check can be resolved by addressing the root source contributing to the size of data attempting to be written i e place a cap on the number of values retained in some set map fields and replaying the account If the traversal of the graph builds a complete profile that is too large to write to the underlying data structure for our entity storage we mark the profile as unhealthy This can typically be resolved without requiring a replay as there has been no potential data loss in the graph and often involves addressing the root source contributing and simply re evaluating the profile impacted this re evaluation can occur by receiving new events for that profile or during our natural cadence of re scoring profiles If a full profile is not too large for our key indexed profile storage but is too large to write to our fully indexed used for bulk exports ad hoc audience scans profile storage this is treated equally to 2 and the profile is marked unhealthy with equal resolution strategy Updated 11 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/finding-a-user",
    "title": "Find a user",
    "chunk_text": "Find a user There are a number of circumstances where you may need to search for a user For example you built a test user to validate a campaign is working correctly you want to see how your marketing efforts are influencing individual user s behavior or you need to view delete a profile for GDPR compliance Follow these steps to search for a user profile in Lytics In the app select Audiences from the navigation menu Select Find a user from the expanded menu Select the field you would like to search with from the drop down menu By default Email is selected In the Search box enter the email address or selected search term of interest If you find multiple profiles for a single email or any other identifier this may indicate data fragments haven t been merged together yet or that your identity resolution strategy is not configured correctly Please contact Lytics Support for assistance Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/finding-a-user#content",
    "title": "Find a user",
    "chunk_text": "Find a user There are a number of circumstances where you may need to search for a user For example you built a test user to validate a campaign is working correctly you want to see how your marketing efforts are influencing individual user s behavior or you need to view delete a profile for GDPR compliance Follow these steps to search for a user profile in Lytics In the app select Audiences from the navigation menu Select Find a user from the expanded menu Select the field you would like to search with from the drop down menu By default Email is selected In the Search box enter the email address or selected search term of interest If you find multiple profiles for a single email or any other identifier this may indicate data fragments haven t been merged together yet or that your identity resolution strategy is not configured correctly Please contact Lytics Support for assistance Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/audiences",
    "title": "Introduction",
    "chunk_text": "Introduction Audiences are central to creating personalized marketing using Lytics It is how groups of users get targeted and defines how cross channel user data is used in campaigns Lytics offers audiences as a tool that operates on user fields as well as other audiences This provides the ability to craft audiences that target one user every user or any number in between Lytics audiences are automatically kept up to date As time passes an audience that once targeted 500 users may grow to target 10 000 This is great if your audience is targeting engaged users who have shown interest in your upcoming product but not so great if your audience targets users with outstanding support tickets Lytics makes it easy to find these insights so your campaign strategies can be adjusted accordingly Audiences can be used in Lytics Experiences third party ad campaigns and tools like Google BigQuery for advanced reporting When all of that isn t enough the Lytics APIs provide deep integrations with the Lytics platform Access the audience builder from Lytics navigation menu by expanding the Audiences tab and clicking Audiences Once on the Audiences page click on the Create New Audience button Creating Audiences Building new audiences allows you to target specific groups of your users Why send the same email to your entire audience Instead send emails to distinct audiences with content that you know those users enjoy Lytics gives you the ability to create audiences based on cross channel user data behaviors and interests Audiences can be built using existing audiences user content affinity your personalization campaigns or by custom rules utilizing any user fields in your Lytics account Create rulesets by combining multiple audiences and boolean logic to target users with as much or as little granularity as you require Lytics updates your audiences automatically Once an audience is built users will join or leave whenever they match or fail to match the rules you have set Export your audiences often in real time to your integrated marketing tools giving you the power of Lytics however you engage with your users Access the audience builder from Lytics navigation menu by expanding the Audiences tab and clicking Audiences Once on the Audiences page click on the Create New Audience button Building Audiences Existing Audiences The Existing Audiences tab in the audience builder contains a list of all existing audiences and their size categorized by audience type such as characteristic Characteristics are pre built audiences pertaining to single user attributes such as location or behavior Keep in mind that the audience sizes you see in this list are not real time They are updated every few hours for performance reasons When creating or editing an audience however you will always see real time numbers so that you can make precise decisions based on accurate data You can use the Filter by Audience Type drop down to filter the list or use the Search box to quickly find an audience by name Select an audience or characteristic to add it to the definition of the audience you are building or editing Building Audiences Content Affinity The Content Affinity tab in the audience builder is used to add Affinity based rules to your audience Since Affinities are a group of related Topics this allows you to effectively target users interested in several subjects or products In the example above we created a Lavender Affinity for an online beauty store which includes 6 Topics such as lavender lavender lotion and lavender luxury Instead of creating an audience with 6 rules one per Topic we just select our Lavender Affinity that contains those 6 Topics Once you choose an Affinity for your audience you will be able to select the range of affinity values The histogram displays the distribution of user interest for the selected Affinity and is helpful to build an audience that has the desired size By default users with Any Affinity are selected You can choose a built in range by clicking any of the Affinity buttons or to set a custom range use the slider to refine the range of users to target As you change the range the total number of users that fit the range is shown in the right column As soon as you create an Affinity Lytics start scoring users against it as they interact with your content or products For active users you can expect this number to start populating within a few days For inactive users it can take up to 2 weeks for them to be scored against an Affinity So it s recommended that you create Affinities in advance of the audience needed for an Affinity based campaign Topic Based Audiences Under the Custom Rule tab in the Audience Builder you can find the existing audiences based on Topics in your content taxonomy If you want to create new audiences based on a single Topic you can do so as follows Search for Topics in the Custom Rule tab of the Audience Builder Select the Topic of interest Set the threshold according to the desired users level of interest in that Topic Once you hit Add Condition the custom rule for a Topic will look like this Although Topics are still supported in the Audience Builder we strongly recommend you use Affinities to build audiences for a more efficient workflow and more effective targeting Inferred Content Affinity Some users may find a field named Inferred Content Affinity when trying to build affinity or topic based audiences This field contains topics that a user could be interested in even though they may not have interacted with the topics directly To learn more about how these inferrences are made you can read about our content taxonomy process Note that topic affinity already includes this information but this field contains only inferred affinity We would also recommend not using this field to build audiences as it is not a wholistic view of a user s affinity Building Audiences Custom Rules The Custom Rules tab in the audience builder is used to add any rule based on a user field to the audience being built or edited Custom rules allow for ultimate access of all data that is aggregated in user fields Custom rules are simple statements that can be combined to create very precise audiences Using them correctly requires a thorough understanding of the data being used but there is no replacement for this level of segmentation Audiences Field Value Limits Audiences can have a maximum of 1 000 field values Values in this context apply to a single evaluation against a user field When exceeded the error message Audience too large Remove values to save this audience will be displayed For example the following scenarios would trigger the alert An audience with a single rule that supports multiple values e g contains one of with 1001 values An audience with 1001 user field rules each with a single evaluation e g exists Any variation in between such as two rules each containing over 500 evaluations etc The user field list displays all the fields in your account The Source drop down can be used to filter on the data stream the user field came from The Includes drop down can be used to filter user fields on the percentage of users that have a field Use the Search input to search for a user field by name Generally to add a Custom Rule to an audience definition Choose a User Field Choose an operator e g text contains value is less than Choose a value There are variations to this general procedure based on the type of the user field and the operator chosen User Field Types How you work with user fields in the Custom Rules tab will depend on way the field is mapped in on the user profile Numeric User Fields Numeric user fields are most commonly used for data that is counted For instance the number of times a visitor has been to a website or the number of times a subscriber has opened an email Exact values can be matched but more commonly inequalities are expressed Examples Total Number of Visits must equal 5 Any user who has visited 4 times 6 times or any number of times other than 5 will not be matched by this rule Total Number of Visits must be less than 3 Any user who has visited 0 1 or 2 times will be matched by this rule Text User Fields Text User fields are commonly used for words and miscellaneous information For instance a user s first name Since there is no mathematical relationship between two text values the operations used are generally exact match or partial match There are 5 operator options when making audiences with text user fields Equal The value for the field you want the audience to have Format and character spacing for the value must match exactly what is in the data stream You can select the value by interacting with the visualization or be promoted with available values by typing into the search bar Contain The text entered case sensitive and exact order appears within a value for the field Be Like Use the wildcard character along with text to decide the parts of values you want to match E g test will only match on the exact string test while test will match strings starting with test such as testing and test will match any string that has test in it such as my test case Equal one of Add each exact value you want included individually A new search bar will appear after each selection You can remove values from the list using the x to the left of the value The logic for each of these rules follows the logic from Equal Exist Excludes everyone that does not have a value for the field Examples First Name must equal Ash Only users named Ash will be matched First name must contain Ash Any user named Ash will be matched Additionally anyone named Ashley Ashton or any other name that has the letters Ash next to each other will be matched Dash or Natasha will NOT be matched as these do not have an A To make an audience that includes these create a second rule set for First name must contain ash Date User Fields Date user fields are commonly used for any data that represents a point in time For instance the last time a user visited a website Most commonly a date is chosen to divide the people who fall before or after that date You will need to select both your starting point and a direction in time for your custom rule Your starting point could be a fixed point in time useful for milestone events like product launches or a relative point in time useful for scheduled follow ups Since each rule only handles going forward or backward from a single point in time you may need to create two rules that work together to bound a range of time One rule will capture all dates after the first point in time and a second rule will capture all dates before a later point in time Some date fields have a natural boundary such as Last Visits which will never include a date in the future If you want all Last Visits from a point in time up until now you would only need to create one rule Examples Last Visit must be Before June 22 2016 Created by selecting Specific Date and the direction Before This rule includes only users who have not visited since the 22nd of June Last Visit must be After 3 days in the past Created by selecting Relative Date entering 3 days In the past and selecting the direction After This rule includes only users who have visited in the last three days Subscription End Date must be within the next 30 days Created by building two rules one to set the start date to always be the current date and the other to set the end date to 30 days in the future relative to the current date Create the first rule by selecting Relative Date After entering 0 Days selecting In the past and clicking Add Condition Create the second rule by selecting Relative Date Before 30 Days In the future and clicking Add Condition This audience will now include all users who have a subscription ending in the next 30 days beginning with the current date Set User Fields Set user fields are commonly used for collecting related data over time For instance all the URLs a user has visited These fields are generally used much like text user fields even though the data is structured differently Examples All URL Paths Ever must contain one of blog products or about Any user who has visited any one of these three paths will be matched Followed Sports must contain Baseball Any user who follows Baseball will be matched This is true whether they only follow Baseball or follow Baseball in addition to Football Hockey and Bowling Map Nested User Fields Map user fields are used to add hierarchy to a dynamic domain of data For instance Events By Device is a count of all events but grouped by each device So instead of building a rule by only specifying the count the rule is built by first specifying the device then the count The device could be thought of as an additional dynamic user field that is nested under the map user field Selecting a Key When using a map user field the first step is selecting the dynamic user field to build a rule with called a key Using the URLs Visited example the keys could include any numeric value Since these keys are dynamic counts will be updated automatically Building the Condition Once a key is selected a condition is built The type of the nested user field is called the value type In the case of URLs Visited the value type is numeric When building audiences with nested fields the visualization chart will not display for mapped fields to minimize page load times Examples Events By Device Desktop must be greater than 5 Only users who have visited the website more than 5 times on a desktop will be matched If a user has visited more than 5 times on the mobile web they will not be matched Signup Date for Event Personalization Webinar must be within the last 7 days Only the users who signed up for the Personalization Webinar in the last week will be matched Users who signed up more than 7 days ago will not be matched Users who signed up for a different event in the last 7 days will also not be matched Out of the Box Custom Rules Some user fields are mapped by default and populated through the use of the Lytics Javascript tag and Experiences These out of the box fields can be incredibly useful when building audiences using Custom Rules Lytics Javascript Tag Assuming that you have not made changes to the default web LQL file that is automatically created when the Lytics Javascript Tag is installed the following custom rules are available to you for use when building audiences Rule Description All channels used web email etc All the channels a user has been active in based on the data imported into your Lytics account Bot The Lytics JavaScript Tag captures information from the web browser to determine if the user is bot or not When data is collected from the Lytics JavaScript Tag that request will include the user agent of the client that was used to initiate the request The user agent is parsed and evaluated using a third party library That evaluation determines if the request is from a bot or not NOTE The third party library does not capture all bots Created Timestamp The timestamp of when a user profile was created When an anonymous and known profile is merged the oldest timestamp is retained Devices Used Any devices a user has used e g desktop Android iOS Event First Time Seen Captures the timestamp of the first event sent through from your website by either your tag manager or the Lytics JavaScript Tag along with some details around what that event was Event Last Time Seen Captures the timestamp of the last event sent through from your website from either your tag manager or our Lytics JavaScript Tag along with some details around what that event was Last Active The last timestamp on the profile that indicated activity on web or any connected sources importing activity data to your account Last Activity by Channel The last timestamp on the profile that indicated activity on a particular channel Last Visit City Pulled from visit_city field from your Default web source and indicates the last value seen Last Visit Country Pulled from visit_country field from your Default web source and indicates the last value seen Last Visit State Province Pulled from visit_region field from your Default web source and indicated last value seen Modified Timestamp The last time that a profile was updated Random uniform partition of users Every profile in Lytics is assigned a random number between 1 100 By using this rule you can perform simple A B tests to decrease the size of an audience for testing down to a certain percentage of the total audience size Read more about simple AB testing Score Frequency Intensity Momentum Propensity Quntatiy or Recency The values of the user s Lytics behavorial scores See Lytics Scores for detailed descriptions of these fields Time of First Visit The time of a user s first visit to your website since the Lytics JavaScript Tag was installed Time of Last Visit The time of a user s last website visit Timezone The timezone they are in based on their last web session Total Number of Visits Total number of different times a user has come to your website Total Pageview Count A user s lifetime total of pageviews User Agent The last browser user agent of the user e g Chrome Firefox Edge Web Cookie ID current The cookie id of the last session a user had on your website Web Cookie IDs all All of the cookie ids tied to a user Web Domains Visited All the domains a user has visited that have the Lytics JavaScript Tag installed Web Events by Hour Number of tracked events for each hour of the day in 24 hour UTC time Web Events by Week Number of tracked events for each hour in a week Experiences There are a variety of use cases that involve targeting users who have engaged with previous marketing campaigns For example if a user converted on an Iterable Experience email and you want to follow up with an SMS message The steps below will walk you through how to create an audience to target users who were reached by or clicked on an Experience Navigate to Experiences and search for the one you would like to use You will need to get an ID for the Experience which differs depending on the Experience type For Lytics Web Personalization Experiences Look up the URL for this Experience and locate the long string of numbers of letters as highlighted below Save this to your clipboard For all other Experience types open developer tools and navigate to the Network tab Refresh the page and filter the requests by experience Find the response that looks similar to the example below and save the external_id value nested under vehicle to your clipboard Note You can also use the Experience API to fetch the current Experience by ID to get the full payload including the Experience s external_id In your Lytics account navigate to Audiences Create New Audience In the audience builder select Custom Rule and search for the provider of the Experience you would like to segment on After you enter a provider you should see a field for conversions and reach on those Experience types Select the action you wish to segment off of Copy and paste the ID you copied from step 2 into the text box Choose Exist as your operator and add the condition to your audience Select Add Condition You now have an audience based on past interactions with an Experience You can save the audience as is or continue to add rules based on your use case Building Audiences Multiple Rules and Rule Sets All audience definitions are comprised of rules based on existing audiences content affinity campaigns and custom rules You may have noticed that after you add your first rule in the audience builder you have the option to Add New Rule or Add New Rule Set Adding new rules and rulesets and setting the conditions for their interaction gives you the ability to refine which users your audiences target Working With Multiple Rules This audience has a single rule included all users with the characteristic Behavior Perusers This will select all users with an intensity score of 20 or less but with a frequency score of 20 or greater These are users who interact often but not on a deep level You can refine this rule further by clicking Add New Rule This audience now also includes a rule for users who have a low content affinity for Technology content Now that it has been added there are three numbers of interest The first number 87 650 is the number of users with the characteristic Behavior Perusers The second number 466 730 is the number of users who have low affinity for Technology content The third number 11 514 are the users who meet both of these conditions Clicking the And Or toggle will switch the way the two rules intereact The audience now includes all 542 921 users who either have the characteristic Behavior Perusers or have low afffinity for Technology content Excluding Rules In addition to the And Or toggle there is the Included Excluded toggle This toggle inverts a condition This audience contains a rule that targets the 159 084 users with the characteristic Browser OS Mobile or users who have used a mobile devices Clicking the Include Exclude toggle the audience will now target the 705 166 users who do not have the characteristic Browser OS Mobile The sum of the two numbers will be the total audience size that meets those rule s This is especially apparent when using a rule such as Created Timestamp Exists Every user in Lytics will have a timestamp of when they were created Therefore the number of users who do not meet the condition of having a created timestamp will always be 0 Working With Rule Sets When building elaborate audiences having a single set of rules that are evaluated using either an AND or an OR is not enough A ruleset is a set of rules that itself can be used as a rule for an even larger set of rules that is again evaluated using an AND or an OR This audience has two rulesets The first ruleset has one rule all users who have the characteristic Email Capture Status Known Email The second ruleset has two rules all users have some affinity for Marketing OR Advertising content Combining these two rulesets with the AND operator produces an audience that targets users with an email address that have some interest in either marketing or advertising This audience could be used to email a special newsletter or promotion about a product or trending topic that is related to marketing or advertising Excluding Rule Sets Rulesets just like rules can be excluded Clicking the Include Exclude toogle on the second ruleset will result in the audience targeting all users with an email address who do not have some interest in either marketing or advertising It could be used to send a different email to the remainder of your users with email addresses Building Audiences Configuration Options Configure your Lytics audiences with the following options to execute your use cases Enabling API Access By default newly created Lytics audiences are not enabled for API access and thus will not be available to public APIs Enabling API access is necessary when integrating with other client side tags pixels Pathfora or the Lytics personalization API endpoints Select the API Accessible checkbox to enable access Generate Insights Lytics Insights provide visibility into the performance of your audiences and campaigns as users interact with your brand Insights are generated out of the box for Lytics Behavioral and Engagement audiences You can also request up to 10 custom audiences to be prioritized as candidates for generating Insights When creating a new audience or editing an existing one select the Generate Insights checkbox to make that audience a candidate for Insights shown in the screenshot above Lytics prioritizes Insights based on the statistical significance of the data and the most frequently used audiences for your account Therefore even if you select the Generate Insights option for a particular audience it is not guaranteed to show up in your Insights drawer Managing Audiences Managing audiences becomes important as an account develops and your user base grows Audiences are critical to both targeted campaigns as well as discovering insights about your users The Audiences section of Lytics houses all of your account s audiences You can view create and manage audiences from this section Audiences are listed alphabetically by default Click any column header to change the sort property Common sort options are Last Modified and Size the number of users in the audience Naming Your Audiences For better targeting Lytics encourages the creation of many audiences They re easy and free to make When working with a large library of audiences naming conventions become important Name your audiences by purpose and include any categorization in the name Giving them a common prefix e g Holiday Promo Tech lovers Holiday Promo Loyal Shoppers will help you to keep everything related next to each other in the user interface Audiences appear throughout the Lytics platform Make sure your naming convention works in any context to avoid confusion Finding Audiences The easiest way to find an audience is to use the Search box As you enter your search term the audience list will display any matching audiences Fuzzy matching is used to search for audiences so the results will not be an exact match to the search term Editing Audiences Occasionally you will want to return to previously created audiences and update the logic used to create the segment Find the audience you would like to edit Click on the audience to navigate to the overview of the audience Click the Edit button to enter the audience builder Make your desired changes within the audience builder Click Save When editing audiences that are in an active triggered workflow it is recommended that you reconfigure the job after the audience changes have been made Duplicating Audiences Find the audience you would like to duplicate Click on the audience to navigate to the overview of the audience Click the button to enter the audience builder The audience builder will be pre populated with all of the criteria of the audience you duplicated Make any desired changes Click Save Audiences created by duplication will retain the name and slug of the duplicated audience but with have duplicate appended at the end It is recommended that you update both the name and manually input a unique slug name for clarity sake Deleting Audiences Deleting audiences is an integral part to keeping a tidy workspace in Lytics Audiences can be deleted in one of two ways individually or in batch Note Deleting an audience does not delete the users associated with that audience Deleting an Individual Audience From the Browse Audiences list select the name of the audience you wish to delete From the options menu select Delete Click Delete Click Accept to confirm Deleting Multiple Audiences From the Browse Audiences list select the checkboxes of the audiences you wish to delete NOTE Audience selection persists when changing pages allowing you to select audiences from multiple pages Click Delete Selected Audiences Click Delete NOTE Lytics will check to see if the audiences you selected are safe to delete Audiences are considered safe if they are not used in an ongoing export campaign or another audience s definition You will be prompted to delete dependant audiences click Yes to delete the selected audience and any dependants listed or Skip cancel deletion of the selected audience Click Accept to confirm Maintaining Audiences From the Audiences page click any audience in the list to view all of its details An audience s landing page contains a lot of valuable information about your users and the audience itself At the top of the audience page you will find the following information Audience name ID Slug Created by Created on date Last updated date API access configuration Below this information you will find multiple tabs where you can access additional information about the audience Audience Summary The audience summary page is designed to provide insights into the current state of an audience as well as how the audience has changed over time When first navigating to an audience landing page this tab will be selected by default The Summary tab includes the following sections General Metrics The total number of users in this audience The total percentage of this audience as compared to the total number of profiles in your account The percentage change in audience size over the last 7 and last 30 days Activity trend graph of audience size over the defined date range Activity Graph After creating a new audience the audience size graph will begin to populate within a day Depending on the date range you specify the activity graph can be viewed using following intervals Hourly Daily Weekly Monthly Audience Size Trends The statistics for audience size start from the creation date of the audience Keep in mind that audiences are real time This makes them quite different from the user lists in other marketing tools which are frozen in time and only change when you update the list Audiences are filters applied to the total audience and will change whenever a user s behavior changes in a way that will add or remove them from the audience definition In this way tracking audience size over time is a powerful reporting tool For example you create an audience that contains users who have visited the international news section of your website Upon creation the audience contains 120 000 users You then run a marketing campaign promoting your international news section After one week the audience has grown from 120 000 to 400 000 users with most of the growth occurring in the 24 hours after the campaign was launched This is clear evidence that the campaign was effective and most effective in the first 24 hours at driving users to your international news section s Audience Details Select the Details tab to view the following sections Exports This section outlines what exports if any are using this audience Recent Users This section allows you to view a sample of users in this audience who have been active recently by clicking the View button Audience Characteristics Select the Characteristics tab to view the characteristics of users in this audience Characteristics include Behavior Web Activity Content Affinity Campaign Referral Interactions Audience Logs Select the Logs tab to view recent events relating to this audience Activity such as creation updating and syncing can all be found here Activating Audiences Activating Audiences in Experiences Creating a Lytics Experience is one of the easiest and most common ways to activate Lytics Audiences Learn more about Lytics Experiences to find out how you can engage your audiences on site Accessing Audiences Using the Public Entity API The Lytics Experience Editor is a great way to get started with website personalization but through the use of the Lytics API there is much more that can be done The Lytics Experience editor is powered by the Pathfora SDK which is in turn powered by the Lytics Entity API The Lytics Entity API is how to find out what audiences the current user belongs to as well as what traits the user has Using the Lytics Entity API it s possible to create completely custom personalized experiences on your site Personalizing a site using the Public Entity API requires making code changes to the host website To read more about the Entity API check out the API documentation Exporting Audiences to Other Tools A core benefit of Lytics is exporting your smart audiences to the other tools in your marketing tech stack That way the campaigns run on your channels are enriched with the behavioral data and content affinities powered by data science on Lytics From the audience overview page click the Export button to create a new export job The Export menu lists built in exports such as Email CSV and any out of the box Integrations Specific instructions for exporting can be found in the Integrations section under the desired tool of our documentation Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/audiences#content",
    "title": "Introduction",
    "chunk_text": "Introduction Audiences are central to creating personalized marketing using Lytics It is how groups of users get targeted and defines how cross channel user data is used in campaigns Lytics offers audiences as a tool that operates on user fields as well as other audiences This provides the ability to craft audiences that target one user every user or any number in between Lytics audiences are automatically kept up to date As time passes an audience that once targeted 500 users may grow to target 10 000 This is great if your audience is targeting engaged users who have shown interest in your upcoming product but not so great if your audience targets users with outstanding support tickets Lytics makes it easy to find these insights so your campaign strategies can be adjusted accordingly Audiences can be used in Lytics Experiences third party ad campaigns and tools like Google BigQuery for advanced reporting When all of that isn t enough the Lytics APIs provide deep integrations with the Lytics platform Access the audience builder from Lytics navigation menu by expanding the Audiences tab and clicking Audiences Once on the Audiences page click on the Create New Audience button Creating Audiences Building new audiences allows you to target specific groups of your users Why send the same email to your entire audience Instead send emails to distinct audiences with content that you know those users enjoy Lytics gives you the ability to create audiences based on cross channel user data behaviors and interests Audiences can be built using existing audiences user content affinity your personalization campaigns or by custom rules utilizing any user fields in your Lytics account Create rulesets by combining multiple audiences and boolean logic to target users with as much or as little granularity as you require Lytics updates your audiences automatically Once an audience is built users will join or leave whenever they match or fail to match the rules you have set Export your audiences often in real time to your integrated marketing tools giving you the power of Lytics however you engage with your users Access the audience builder from Lytics navigation menu by expanding the Audiences tab and clicking Audiences Once on the Audiences page click on the Create New Audience button Building Audiences Existing Audiences The Existing Audiences tab in the audience builder contains a list of all existing audiences and their size categorized by audience type such as characteristic Characteristics are pre built audiences pertaining to single user attributes such as location or behavior Keep in mind that the audience sizes you see in this list are not real time They are updated every few hours for performance reasons When creating or editing an audience however you will always see real time numbers so that you can make precise decisions based on accurate data You can use the Filter by Audience Type drop down to filter the list or use the Search box to quickly find an audience by name Select an audience or characteristic to add it to the definition of the audience you are building or editing Building Audiences Content Affinity The Content Affinity tab in the audience builder is used to add Affinity based rules to your audience Since Affinities are a group of related Topics this allows you to effectively target users interested in several subjects or products In the example above we created a Lavender Affinity for an online beauty store which includes 6 Topics such as lavender lavender lotion and lavender luxury Instead of creating an audience with 6 rules one per Topic we just select our Lavender Affinity that contains those 6 Topics Once you choose an Affinity for your audience you will be able to select the range of affinity values The histogram displays the distribution of user interest for the selected Affinity and is helpful to build an audience that has the desired size By default users with Any Affinity are selected You can choose a built in range by clicking any of the Affinity buttons or to set a custom range use the slider to refine the range of users to target As you change the range the total number of users that fit the range is shown in the right column As soon as you create an Affinity Lytics start scoring users against it as they interact with your content or products For active users you can expect this number to start populating within a few days For inactive users it can take up to 2 weeks for them to be scored against an Affinity So it s recommended that you create Affinities in advance of the audience needed for an Affinity based campaign Topic Based Audiences Under the Custom Rule tab in the Audience Builder you can find the existing audiences based on Topics in your content taxonomy If you want to create new audiences based on a single Topic you can do so as follows Search for Topics in the Custom Rule tab of the Audience Builder Select the Topic of interest Set the threshold according to the desired users level of interest in that Topic Once you hit Add Condition the custom rule for a Topic will look like this Although Topics are still supported in the Audience Builder we strongly recommend you use Affinities to build audiences for a more efficient workflow and more effective targeting Inferred Content Affinity Some users may find a field named Inferred Content Affinity when trying to build affinity or topic based audiences This field contains topics that a user could be interested in even though they may not have interacted with the topics directly To learn more about how these inferrences are made you can read about our content taxonomy process Note that topic affinity already includes this information but this field contains only inferred affinity We would also recommend not using this field to build audiences as it is not a wholistic view of a user s affinity Building Audiences Custom Rules The Custom Rules tab in the audience builder is used to add any rule based on a user field to the audience being built or edited Custom rules allow for ultimate access of all data that is aggregated in user fields Custom rules are simple statements that can be combined to create very precise audiences Using them correctly requires a thorough understanding of the data being used but there is no replacement for this level of segmentation Audiences Field Value Limits Audiences can have a maximum of 1 000 field values Values in this context apply to a single evaluation against a user field When exceeded the error message Audience too large Remove values to save this audience will be displayed For example the following scenarios would trigger the alert An audience with a single rule that supports multiple values e g contains one of with 1001 values An audience with 1001 user field rules each with a single evaluation e g exists Any variation in between such as two rules each containing over 500 evaluations etc The user field list displays all the fields in your account The Source drop down can be used to filter on the data stream the user field came from The Includes drop down can be used to filter user fields on the percentage of users that have a field Use the Search input to search for a user field by name Generally to add a Custom Rule to an audience definition Choose a User Field Choose an operator e g text contains value is less than Choose a value There are variations to this general procedure based on the type of the user field and the operator chosen User Field Types How you work with user fields in the Custom Rules tab will depend on way the field is mapped in on the user profile Numeric User Fields Numeric user fields are most commonly used for data that is counted For instance the number of times a visitor has been to a website or the number of times a subscriber has opened an email Exact values can be matched but more commonly inequalities are expressed Examples Total Number of Visits must equal 5 Any user who has visited 4 times 6 times or any number of times other than 5 will not be matched by this rule Total Number of Visits must be less than 3 Any user who has visited 0 1 or 2 times will be matched by this rule Text User Fields Text User fields are commonly used for words and miscellaneous information For instance a user s first name Since there is no mathematical relationship between two text values the operations used are generally exact match or partial match There are 5 operator options when making audiences with text user fields Equal The value for the field you want the audience to have Format and character spacing for the value must match exactly what is in the data stream You can select the value by interacting with the visualization or be promoted with available values by typing into the search bar Contain The text entered case sensitive and exact order appears within a value for the field Be Like Use the wildcard character along with text to decide the parts of values you want to match E g test will only match on the exact string test while test will match strings starting with test such as testing and test will match any string that has test in it such as my test case Equal one of Add each exact value you want included individually A new search bar will appear after each selection You can remove values from the list using the x to the left of the value The logic for each of these rules follows the logic from Equal Exist Excludes everyone that does not have a value for the field Examples First Name must equal Ash Only users named Ash will be matched First name must contain Ash Any user named Ash will be matched Additionally anyone named Ashley Ashton or any other name that has the letters Ash next to each other will be matched Dash or Natasha will NOT be matched as these do not have an A To make an audience that includes these create a second rule set for First name must contain ash Date User Fields Date user fields are commonly used for any data that represents a point in time For instance the last time a user visited a website Most commonly a date is chosen to divide the people who fall before or after that date You will need to select both your starting point and a direction in time for your custom rule Your starting point could be a fixed point in time useful for milestone events like product launches or a relative point in time useful for scheduled follow ups Since each rule only handles going forward or backward from a single point in time you may need to create two rules that work together to bound a range of time One rule will capture all dates after the first point in time and a second rule will capture all dates before a later point in time Some date fields have a natural boundary such as Last Visits which will never include a date in the future If you want all Last Visits from a point in time up until now you would only need to create one rule Examples Last Visit must be Before June 22 2016 Created by selecting Specific Date and the direction Before This rule includes only users who have not visited since the 22nd of June Last Visit must be After 3 days in the past Created by selecting Relative Date entering 3 days In the past and selecting the direction After This rule includes only users who have visited in the last three days Subscription End Date must be within the next 30 days Created by building two rules one to set the start date to always be the current date and the other to set the end date to 30 days in the future relative to the current date Create the first rule by selecting Relative Date After entering 0 Days selecting In the past and clicking Add Condition Create the second rule by selecting Relative Date Before 30 Days In the future and clicking Add Condition This audience will now include all users who have a subscription ending in the next 30 days beginning with the current date Set User Fields Set user fields are commonly used for collecting related data over time For instance all the URLs a user has visited These fields are generally used much like text user fields even though the data is structured differently Examples All URL Paths Ever must contain one of blog products or about Any user who has visited any one of these three paths will be matched Followed Sports must contain Baseball Any user who follows Baseball will be matched This is true whether they only follow Baseball or follow Baseball in addition to Football Hockey and Bowling Map Nested User Fields Map user fields are used to add hierarchy to a dynamic domain of data For instance Events By Device is a count of all events but grouped by each device So instead of building a rule by only specifying the count the rule is built by first specifying the device then the count The device could be thought of as an additional dynamic user field that is nested under the map user field Selecting a Key When using a map user field the first step is selecting the dynamic user field to build a rule with called a key Using the URLs Visited example the keys could include any numeric value Since these keys are dynamic counts will be updated automatically Building the Condition Once a key is selected a condition is built The type of the nested user field is called the value type In the case of URLs Visited the value type is numeric When building audiences with nested fields the visualization chart will not display for mapped fields to minimize page load times Examples Events By Device Desktop must be greater than 5 Only users who have visited the website more than 5 times on a desktop will be matched If a user has visited more than 5 times on the mobile web they will not be matched Signup Date for Event Personalization Webinar must be within the last 7 days Only the users who signed up for the Personalization Webinar in the last week will be matched Users who signed up more than 7 days ago will not be matched Users who signed up for a different event in the last 7 days will also not be matched Out of the Box Custom Rules Some user fields are mapped by default and populated through the use of the Lytics Javascript tag and Experiences These out of the box fields can be incredibly useful when building audiences using Custom Rules Lytics Javascript Tag Assuming that you have not made changes to the default web LQL file that is automatically created when the Lytics Javascript Tag is installed the following custom rules are available to you for use when building audiences Rule Description All channels used web email etc All the channels a user has been active in based on the data imported into your Lytics account Bot The Lytics JavaScript Tag captures information from the web browser to determine if the user is bot or not When data is collected from the Lytics JavaScript Tag that request will include the user agent of the client that was used to initiate the request The user agent is parsed and evaluated using a third party library That evaluation determines if the request is from a bot or not NOTE The third party library does not capture all bots Created Timestamp The timestamp of when a user profile was created When an anonymous and known profile is merged the oldest timestamp is retained Devices Used Any devices a user has used e g desktop Android iOS Event First Time Seen Captures the timestamp of the first event sent through from your website by either your tag manager or the Lytics JavaScript Tag along with some details around what that event was Event Last Time Seen Captures the timestamp of the last event sent through from your website from either your tag manager or our Lytics JavaScript Tag along with some details around what that event was Last Active The last timestamp on the profile that indicated activity on web or any connected sources importing activity data to your account Last Activity by Channel The last timestamp on the profile that indicated activity on a particular channel Last Visit City Pulled from visit_city field from your Default web source and indicates the last value seen Last Visit Country Pulled from visit_country field from your Default web source and indicates the last value seen Last Visit State Province Pulled from visit_region field from your Default web source and indicated last value seen Modified Timestamp The last time that a profile was updated Random uniform partition of users Every profile in Lytics is assigned a random number between 1 100 By using this rule you can perform simple A B tests to decrease the size of an audience for testing down to a certain percentage of the total audience size Read more about simple AB testing Score Frequency Intensity Momentum Propensity Quntatiy or Recency The values of the user s Lytics behavorial scores See Lytics Scores for detailed descriptions of these fields Time of First Visit The time of a user s first visit to your website since the Lytics JavaScript Tag was installed Time of Last Visit The time of a user s last website visit Timezone The timezone they are in based on their last web session Total Number of Visits Total number of different times a user has come to your website Total Pageview Count A user s lifetime total of pageviews User Agent The last browser user agent of the user e g Chrome Firefox Edge Web Cookie ID current The cookie id of the last session a user had on your website Web Cookie IDs all All of the cookie ids tied to a user Web Domains Visited All the domains a user has visited that have the Lytics JavaScript Tag installed Web Events by Hour Number of tracked events for each hour of the day in 24 hour UTC time Web Events by Week Number of tracked events for each hour in a week Experiences There are a variety of use cases that involve targeting users who have engaged with previous marketing campaigns For example if a user converted on an Iterable Experience email and you want to follow up with an SMS message The steps below will walk you through how to create an audience to target users who were reached by or clicked on an Experience Navigate to Experiences and search for the one you would like to use You will need to get an ID for the Experience which differs depending on the Experience type For Lytics Web Personalization Experiences Look up the URL for this Experience and locate the long string of numbers of letters as highlighted below Save this to your clipboard For all other Experience types open developer tools and navigate to the Network tab Refresh the page and filter the requests by experience Find the response that looks similar to the example below and save the external_id value nested under vehicle to your clipboard Note You can also use the Experience API to fetch the current Experience by ID to get the full payload including the Experience s external_id In your Lytics account navigate to Audiences Create New Audience In the audience builder select Custom Rule and search for the provider of the Experience you would like to segment on After you enter a provider you should see a field for conversions and reach on those Experience types Select the action you wish to segment off of Copy and paste the ID you copied from step 2 into the text box Choose Exist as your operator and add the condition to your audience Select Add Condition You now have an audience based on past interactions with an Experience You can save the audience as is or continue to add rules based on your use case Building Audiences Multiple Rules and Rule Sets All audience definitions are comprised of rules based on existing audiences content affinity campaigns and custom rules You may have noticed that after you add your first rule in the audience builder you have the option to Add New Rule or Add New Rule Set Adding new rules and rulesets and setting the conditions for their interaction gives you the ability to refine which users your audiences target Working With Multiple Rules This audience has a single rule included all users with the characteristic Behavior Perusers This will select all users with an intensity score of 20 or less but with a frequency score of 20 or greater These are users who interact often but not on a deep level You can refine this rule further by clicking Add New Rule This audience now also includes a rule for users who have a low content affinity for Technology content Now that it has been added there are three numbers of interest The first number 87 650 is the number of users with the characteristic Behavior Perusers The second number 466 730 is the number of users who have low affinity for Technology content The third number 11 514 are the users who meet both of these conditions Clicking the And Or toggle will switch the way the two rules intereact The audience now includes all 542 921 users who either have the characteristic Behavior Perusers or have low afffinity for Technology content Excluding Rules In addition to the And Or toggle there is the Included Excluded toggle This toggle inverts a condition This audience contains a rule that targets the 159 084 users with the characteristic Browser OS Mobile or users who have used a mobile devices Clicking the Include Exclude toggle the audience will now target the 705 166 users who do not have the characteristic Browser OS Mobile The sum of the two numbers will be the total audience size that meets those rule s This is especially apparent when using a rule such as Created Timestamp Exists Every user in Lytics will have a timestamp of when they were created Therefore the number of users who do not meet the condition of having a created timestamp will always be 0 Working With Rule Sets When building elaborate audiences having a single set of rules that are evaluated using either an AND or an OR is not enough A ruleset is a set of rules that itself can be used as a rule for an even larger set of rules that is again evaluated using an AND or an OR This audience has two rulesets The first ruleset has one rule all users who have the characteristic Email Capture Status Known Email The second ruleset has two rules all users have some affinity for Marketing OR Advertising content Combining these two rulesets with the AND operator produces an audience that targets users with an email address that have some interest in either marketing or advertising This audience could be used to email a special newsletter or promotion about a product or trending topic that is related to marketing or advertising Excluding Rule Sets Rulesets just like rules can be excluded Clicking the Include Exclude toogle on the second ruleset will result in the audience targeting all users with an email address who do not have some interest in either marketing or advertising It could be used to send a different email to the remainder of your users with email addresses Building Audiences Configuration Options Configure your Lytics audiences with the following options to execute your use cases Enabling API Access By default newly created Lytics audiences are not enabled for API access and thus will not be available to public APIs Enabling API access is necessary when integrating with other client side tags pixels Pathfora or the Lytics personalization API endpoints Select the API Accessible checkbox to enable access Generate Insights Lytics Insights provide visibility into the performance of your audiences and campaigns as users interact with your brand Insights are generated out of the box for Lytics Behavioral and Engagement audiences You can also request up to 10 custom audiences to be prioritized as candidates for generating Insights When creating a new audience or editing an existing one select the Generate Insights checkbox to make that audience a candidate for Insights shown in the screenshot above Lytics prioritizes Insights based on the statistical significance of the data and the most frequently used audiences for your account Therefore even if you select the Generate Insights option for a particular audience it is not guaranteed to show up in your Insights drawer Managing Audiences Managing audiences becomes important as an account develops and your user base grows Audiences are critical to both targeted campaigns as well as discovering insights about your users The Audiences section of Lytics houses all of your account s audiences You can view create and manage audiences from this section Audiences are listed alphabetically by default Click any column header to change the sort property Common sort options are Last Modified and Size the number of users in the audience Naming Your Audiences For better targeting Lytics encourages the creation of many audiences They re easy and free to make When working with a large library of audiences naming conventions become important Name your audiences by purpose and include any categorization in the name Giving them a common prefix e g Holiday Promo Tech lovers Holiday Promo Loyal Shoppers will help you to keep everything related next to each other in the user interface Audiences appear throughout the Lytics platform Make sure your naming convention works in any context to avoid confusion Finding Audiences The easiest way to find an audience is to use the Search box As you enter your search term the audience list will display any matching audiences Fuzzy matching is used to search for audiences so the results will not be an exact match to the search term Editing Audiences Occasionally you will want to return to previously created audiences and update the logic used to create the segment Find the audience you would like to edit Click on the audience to navigate to the overview of the audience Click the Edit button to enter the audience builder Make your desired changes within the audience builder Click Save When editing audiences that are in an active triggered workflow it is recommended that you reconfigure the job after the audience changes have been made Duplicating Audiences Find the audience you would like to duplicate Click on the audience to navigate to the overview of the audience Click the button to enter the audience builder The audience builder will be pre populated with all of the criteria of the audience you duplicated Make any desired changes Click Save Audiences created by duplication will retain the name and slug of the duplicated audience but with have duplicate appended at the end It is recommended that you update both the name and manually input a unique slug name for clarity sake Deleting Audiences Deleting audiences is an integral part to keeping a tidy workspace in Lytics Audiences can be deleted in one of two ways individually or in batch Note Deleting an audience does not delete the users associated with that audience Deleting an Individual Audience From the Browse Audiences list select the name of the audience you wish to delete From the options menu select Delete Click Delete Click Accept to confirm Deleting Multiple Audiences From the Browse Audiences list select the checkboxes of the audiences you wish to delete NOTE Audience selection persists when changing pages allowing you to select audiences from multiple pages Click Delete Selected Audiences Click Delete NOTE Lytics will check to see if the audiences you selected are safe to delete Audiences are considered safe if they are not used in an ongoing export campaign or another audience s definition You will be prompted to delete dependant audiences click Yes to delete the selected audience and any dependants listed or Skip cancel deletion of the selected audience Click Accept to confirm Maintaining Audiences From the Audiences page click any audience in the list to view all of its details An audience s landing page contains a lot of valuable information about your users and the audience itself At the top of the audience page you will find the following information Audience name ID Slug Created by Created on date Last updated date API access configuration Below this information you will find multiple tabs where you can access additional information about the audience Audience Summary The audience summary page is designed to provide insights into the current state of an audience as well as how the audience has changed over time When first navigating to an audience landing page this tab will be selected by default The Summary tab includes the following sections General Metrics The total number of users in this audience The total percentage of this audience as compared to the total number of profiles in your account The percentage change in audience size over the last 7 and last 30 days Activity trend graph of audience size over the defined date range Activity Graph After creating a new audience the audience size graph will begin to populate within a day Depending on the date range you specify the activity graph can be viewed using following intervals Hourly Daily Weekly Monthly Audience Size Trends The statistics for audience size start from the creation date of the audience Keep in mind that audiences are real time This makes them quite different from the user lists in other marketing tools which are frozen in time and only change when you update the list Audiences are filters applied to the total audience and will change whenever a user s behavior changes in a way that will add or remove them from the audience definition In this way tracking audience size over time is a powerful reporting tool For example you create an audience that contains users who have visited the international news section of your website Upon creation the audience contains 120 000 users You then run a marketing campaign promoting your international news section After one week the audience has grown from 120 000 to 400 000 users with most of the growth occurring in the 24 hours after the campaign was launched This is clear evidence that the campaign was effective and most effective in the first 24 hours at driving users to your international news section s Audience Details Select the Details tab to view the following sections Exports This section outlines what exports if any are using this audience Recent Users This section allows you to view a sample of users in this audience who have been active recently by clicking the View button Audience Characteristics Select the Characteristics tab to view the characteristics of users in this audience Characteristics include Behavior Web Activity Content Affinity Campaign Referral Interactions Audience Logs Select the Logs tab to view recent events relating to this audience Activity such as creation updating and syncing can all be found here Activating Audiences Activating Audiences in Experiences Creating a Lytics Experience is one of the easiest and most common ways to activate Lytics Audiences Learn more about Lytics Experiences to find out how you can engage your audiences on site Accessing Audiences Using the Public Entity API The Lytics Experience Editor is a great way to get started with website personalization but through the use of the Lytics API there is much more that can be done The Lytics Experience editor is powered by the Pathfora SDK which is in turn powered by the Lytics Entity API The Lytics Entity API is how to find out what audiences the current user belongs to as well as what traits the user has Using the Lytics Entity API it s possible to create completely custom personalized experiences on your site Personalizing a site using the Public Entity API requires making code changes to the host website To read more about the Entity API check out the API documentation Exporting Audiences to Other Tools A core benefit of Lytics is exporting your smart audiences to the other tools in your marketing tech stack That way the campaigns run on your channels are enriched with the behavioral data and content affinities powered by data science on Lytics From the audience overview page click the Export button to create a new export job The Export menu lists built in exports such as Email CSV and any out of the box Integrations Specific instructions for exporting can be found in the Integrations section under the desired tool of our documentation Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/audience-groups",
    "title": "https://docs.lytics.com/docs/audience-groups",
    "chunk_text": "Welcome to the documentation for Audience Groups a powerful new feature that allows you to organize and manage your audiences effectively With Audience Groups you can group related audiences together making it easier to navigate and work with your audience segments within the Lytics platform This document will guide you through the setup and management of Audience Groups empowering you to leverage this feature to its fullest potential Audience Groups can improve how your Audiences are organized within Lytics Think of an Audience Group as a folder of Audiences where an Audience can belong to multiple Audience Groups This comes in handy when grouping audiences based on a campaign based on an author or for setting up an A B test Managing Groups Creating Groups The Audience Group Management feature offers a user friendly interface for creating new groups Users can easily access the group creation functionality from within the audience management experience The following steps outline the process for creating a new group Locate and click the icon located on the right side of the Audience Group menu Provide a name and optionally a description for the new group Save the group configuration to create the new group Editing Groups The Audience Group Management feature allows users to modify and update the definition of their audience groups This ensures that groups accurately reflect the desired characteristics and targeting criteria Here s how to manage an existing group Locate the target group that requires modification in the Audience Group menu Click on the edit icon for the desired Group Make the necessary changes to the group s name or description Save the modifications to update the group s configuration Deleting Groups The Audience Group Management feature provides users with the ability to delete individual or multiple audience groups as needed The following steps outline the process for deleting groups Identify the group s that need to be deleted Click on the Delete icon located next to the edit icon to initiate the deletion process Confirm the deletion by acknowledging any prompts or confirmation dialogs Bulk Actions The Bulk Actions feature allows users to perform actions on multiple audiences simultaneously enhancing the audience management experience While the functionality initially supported only bulk deletion of audiences it has been reworked to also include bulk adding audiences to a group This documentation provides a comprehensive guide on utilizing the Bulk Actions feature Bulk Deleting Audiences The Bulk Actions feature enables users to delete multiple audiences at once streamlining the deletion process Follow these steps to perform a bulk delete Select the audiences that need to be deleted Users can choose multiple audiences using checkboxes or other available selection methods Locate the Bulk Actions button typically found in the toolbar or within the audience list view From the dropdown menu select the Delete option Confirm the deletion by acknowledging any prompts or confirmation dialogs Bulk Adding Audiences to a Group In addition to bulk deletion the Bulk Actions feature now supports bulk adding audiences to a group This enables users to efficiently organize and manage their audiences Follow these steps to perform a bulk add Select the audiences that need to be added to a group Users can choose multiple audiences using checkboxes or other available selection methods Locate the Bulk Actions button typically positioned in the toolbar or within the audience list view From the dropdown menu select the Add to Group option Specify the target group to which the selected audiences should be added Confirm the bulk add action to add the selected audiences to the specified group Prebuilt Audience Groups Out of the box Lytics provides a set of Prebuilt Audience Groups a set of predefined groups that offer convenient categorization and management of audiences within the Lytics platform These prebuilt Audience Groups are designed to save you time and provide quick access to commonly used audience segments The All prebuilt Audience Group includes all audiences available in your Lytics account It provides a comprehensive view of all the audiences you have created allowing you to quickly access and manage any audience within your account The All group ensures that no audience is overlooked and serves as a central hub for audience management The Your Audiences prebuilt Audience Group displays all audiences that the authenticated user owns This group is personalized to your account and shows audiences that you have created or have been shared with you as the owner It offers a convenient way to view and manage the audiences that you have direct ownership of enabling focused audience management The Recently Created prebuilt Audience Group consists of all audiences that have been created within the last 30 days based on timestamps This group helps you identify and manage audiences that have been recently created The Recently Updated prebuild Audience Group consists of all audiences that have been modified or edited within the last 30 days based By grouping these audiences together you can easily keep track of the most actively modified segments within your Lytics account The Unused prebuilt Audience Group includes all audiences that are not associated with an experience downstream workflow model or any other integration within the Lytics platform This group assists in identifying audiences that may no longer be in use or require attention By consolidating these audiences into the Unused group you can efficiently evaluate and manage audience relevance and utilization Using Audience Groups in the Audience Builder When creating new Audiences Audience Groups can be accessible in the Audience Builder Under the Existing Audiences tab the Filter by Group option allows you to display only the audiences that exist in a specific group This can streamline your Audience building process The image below shows how one can access the Audiences Groups via the Audience Builder Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/audience-groups#content",
    "title": "https://docs.lytics.com/docs/audience-groups#content",
    "chunk_text": "Welcome to the documentation for Audience Groups a powerful new feature that allows you to organize and manage your audiences effectively With Audience Groups you can group related audiences together making it easier to navigate and work with your audience segments within the Lytics platform This document will guide you through the setup and management of Audience Groups empowering you to leverage this feature to its fullest potential Audience Groups can improve how your Audiences are organized within Lytics Think of an Audience Group as a folder of Audiences where an Audience can belong to multiple Audience Groups This comes in handy when grouping audiences based on a campaign based on an author or for setting up an A B test Managing Groups Creating Groups The Audience Group Management feature offers a user friendly interface for creating new groups Users can easily access the group creation functionality from within the audience management experience The following steps outline the process for creating a new group Locate and click the icon located on the right side of the Audience Group menu Provide a name and optionally a description for the new group Save the group configuration to create the new group Editing Groups The Audience Group Management feature allows users to modify and update the definition of their audience groups This ensures that groups accurately reflect the desired characteristics and targeting criteria Here s how to manage an existing group Locate the target group that requires modification in the Audience Group menu Click on the edit icon for the desired Group Make the necessary changes to the group s name or description Save the modifications to update the group s configuration Deleting Groups The Audience Group Management feature provides users with the ability to delete individual or multiple audience groups as needed The following steps outline the process for deleting groups Identify the group s that need to be deleted Click on the Delete icon located next to the edit icon to initiate the deletion process Confirm the deletion by acknowledging any prompts or confirmation dialogs Bulk Actions The Bulk Actions feature allows users to perform actions on multiple audiences simultaneously enhancing the audience management experience While the functionality initially supported only bulk deletion of audiences it has been reworked to also include bulk adding audiences to a group This documentation provides a comprehensive guide on utilizing the Bulk Actions feature Bulk Deleting Audiences The Bulk Actions feature enables users to delete multiple audiences at once streamlining the deletion process Follow these steps to perform a bulk delete Select the audiences that need to be deleted Users can choose multiple audiences using checkboxes or other available selection methods Locate the Bulk Actions button typically found in the toolbar or within the audience list view From the dropdown menu select the Delete option Confirm the deletion by acknowledging any prompts or confirmation dialogs Bulk Adding Audiences to a Group In addition to bulk deletion the Bulk Actions feature now supports bulk adding audiences to a group This enables users to efficiently organize and manage their audiences Follow these steps to perform a bulk add Select the audiences that need to be added to a group Users can choose multiple audiences using checkboxes or other available selection methods Locate the Bulk Actions button typically positioned in the toolbar or within the audience list view From the dropdown menu select the Add to Group option Specify the target group to which the selected audiences should be added Confirm the bulk add action to add the selected audiences to the specified group Prebuilt Audience Groups Out of the box Lytics provides a set of Prebuilt Audience Groups a set of predefined groups that offer convenient categorization and management of audiences within the Lytics platform These prebuilt Audience Groups are designed to save you time and provide quick access to commonly used audience segments The All prebuilt Audience Group includes all audiences available in your Lytics account It provides a comprehensive view of all the audiences you have created allowing you to quickly access and manage any audience within your account The All group ensures that no audience is overlooked and serves as a central hub for audience management The Your Audiences prebuilt Audience Group displays all audiences that the authenticated user owns This group is personalized to your account and shows audiences that you have created or have been shared with you as the owner It offers a convenient way to view and manage the audiences that you have direct ownership of enabling focused audience management The Recently Created prebuilt Audience Group consists of all audiences that have been created within the last 30 days based on timestamps This group helps you identify and manage audiences that have been recently created The Recently Updated prebuild Audience Group consists of all audiences that have been modified or edited within the last 30 days based By grouping these audiences together you can easily keep track of the most actively modified segments within your Lytics account The Unused prebuilt Audience Group includes all audiences that are not associated with an experience downstream workflow model or any other integration within the Lytics platform This group assists in identifying audiences that may no longer be in use or require attention By consolidating these audiences into the Unused group you can efficiently evaluate and manage audience relevance and utilization Using Audience Groups in the Audience Builder When creating new Audiences Audience Groups can be accessible in the Audience Builder Under the Existing Audiences tab the Filter by Group option allows you to display only the audiences that exist in a specific group This can streamline your Audience building process The image below shows how one can access the Audiences Groups via the Audience Builder Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/prebuilt-audiences",
    "title": "https://docs.lytics.com/docs/prebuilt-audiences",
    "chunk_text": "Out of the box Lytics provides a set of prebuilt behavioral Audiences powered by data science and machine learning These prebuild audiences are designed to provide a high level behavioral breakdown of your users The prebuilt audiences can also be used as building blocks for your custom Audiences to incorporate behavioral characteristics The following list details each of the Lytics prebuild Audiences All All users in your account Lytics New Users who are new to your audience within the last week Lytics Currently Engaged Users who are currently engaging with your brand Lytics Disengaged Users who show minimal or no activity for a prolonged period of time Lytics Highly Engaged Users who engage most frequently and consistently across your users Lytics Previously Engaged Users who are currently disengaged with your brand but had been previously Lytics Engagement Audiences Engagement First time Visitors Users who are visiting for the first time Definition visitct 1 Engagement Casual Visitors Users who show little activity when they do interact with your brand Definition score_intensity 25 Engagement Moderately Engaged Visitors Users who show average activity when they do interact with your brand Definition score_intensity 24 and score_intensity 76 Engagement Deeply Engaged Users Users who show a lot of activity when they do interact with your brand Definition score_intensity 75 Engagement Repeat Visitors Users who have visited multiple times Definition visitct 1 To learn more about Lytics prebuild audiences and for more detailed information about each prebuilt audience please refer to the documentation in the Behavioral Audiences section Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/prebuilt-audiences#content",
    "title": "https://docs.lytics.com/docs/prebuilt-audiences#content",
    "chunk_text": "Out of the box Lytics provides a set of prebuilt behavioral Audiences powered by data science and machine learning These prebuild audiences are designed to provide a high level behavioral breakdown of your users The prebuilt audiences can also be used as building blocks for your custom Audiences to incorporate behavioral characteristics The following list details each of the Lytics prebuild Audiences All All users in your account Lytics New Users who are new to your audience within the last week Lytics Currently Engaged Users who are currently engaging with your brand Lytics Disengaged Users who show minimal or no activity for a prolonged period of time Lytics Highly Engaged Users who engage most frequently and consistently across your users Lytics Previously Engaged Users who are currently disengaged with your brand but had been previously Lytics Engagement Audiences Engagement First time Visitors Users who are visiting for the first time Definition visitct 1 Engagement Casual Visitors Users who show little activity when they do interact with your brand Definition score_intensity 25 Engagement Moderately Engaged Visitors Users who show average activity when they do interact with your brand Definition score_intensity 24 and score_intensity 76 Engagement Deeply Engaged Users Users who show a lot of activity when they do interact with your brand Definition score_intensity 75 Engagement Repeat Visitors Users who have visited multiple times Definition visitct 1 To learn more about Lytics prebuild audiences and for more detailed information about each prebuilt audience please refer to the documentation in the Behavioral Audiences section Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/getting-started-with-reports",
    "title": "https://docs.lytics.com/docs/getting-started-with-reports",
    "chunk_text": "With Lytics Audience Reporting you can quickly create powerful dashboards with your customer data This documentation explores the capabilities of Lytics reporting system and how it can be customized to meet your unique business needs The following links provide technical details for creating custom reports and how they can be used to gain deeper insights into your customer data What are Reports Components Managing Reports Dashboard Report Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/getting-started-with-reports#content",
    "title": "https://docs.lytics.com/docs/getting-started-with-reports#content",
    "chunk_text": "With Lytics Audience Reporting you can quickly create powerful dashboards with your customer data This documentation explores the capabilities of Lytics reporting system and how it can be customized to meet your unique business needs The following links provide technical details for creating custom reports and how they can be used to gain deeper insights into your customer data What are Reports Components Managing Reports Dashboard Report Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/reports-introduction",
    "title": "Creating your First Report",
    "chunk_text": "The new customizable Lytics Reports do not replace the reporting capabilities you are familiar with in Decision Engine They are simply another configurable tool you can use to understand your audiences Lytics Reports provide a powerful dashboarding tool to visualize and gain critical insights from your customer data Powered by our lighting fast Segmentation Engine Reports allow you to create personalized views into how your audiences evolve the distribution of user attributes within a segment and so much more Of course activating the uncovered insights is also always within a few clicks To create your first report click on the Reports item from the navigation bar in the Lytics App Creating your First Report To create your first report click the Create New button You will then be directed to the creation wizard where you can name your report and provide an optional description Once you ve set up your Report you will be redirected to the Report page where you can add Components to your Report by clicking the Add New Component button below To learn more about Reports and Components check out the following links Creating Components Managing Reports Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/reports-introduction#content",
    "title": "Creating your First Report",
    "chunk_text": "The new customizable Lytics Reports do not replace the reporting capabilities you are familiar with in Decision Engine They are simply another configurable tool you can use to understand your audiences Lytics Reports provide a powerful dashboarding tool to visualize and gain critical insights from your customer data Powered by our lighting fast Segmentation Engine Reports allow you to create personalized views into how your audiences evolve the distribution of user attributes within a segment and so much more Of course activating the uncovered insights is also always within a few clicks To create your first report click on the Reports item from the navigation bar in the Lytics App Creating your First Report To create your first report click the Create New button You will then be directed to the creation wizard where you can name your report and provide an optional description Once you ve set up your Report you will be redirected to the Report page where you can add Components to your Report by clicking the Add New Component button below To learn more about Reports and Components check out the following links Creating Components Managing Reports Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/reports-components",
    "title": "Introduction",
    "chunk_text": "Introduction Reports can consist of one or many Components Think of a Component as a method of visualizing data Each Component provides different ways of displaying and drilling into your data Supported Components The Size component allows you to display the sizes of one or more Audiences as a line chart or numeric value This component helps compare the sizes of different Audiences ex for A B testing The Composition component allows you to understand and chart the distribution of values for a field across your audience in various ways including Bar Pie Line and Table view The Audience Overlap component allows you to understand the intersection or difference in audience members between two or more audiences The Data Flow component allows you to visualize the flow of data that connects your Providers Audiences and Destinations Creating Components You can select from a list of Component types by clicking the Add New Component button on the Report Page Click on the desired component to add it to your Report Managing Components Lytics provides a handful of methods of managing your Report Components Configuration Once you ve created your Component click on the Edit Component button in the lower right corner to configure your Component Minification To minimize or hide a component click on the minimize icon in the upper right corner of the Component Stacking Merge multiple data points into a single visualization or separate each point into its unique component for streamlined consumption Shrink Expand If your Report has many components it may be desirable to shrink your components to display more information on a single page To shrink your components click on the Shrink icon in the upper right corner of the Component Deleting Click on the expanded menu in the upper right corner to delete your component Hiding Showing Missing Values By default null values are hidden from view This prevents individual component visualizations from being offset by profiles with missing data For instance in the two examples below you ll see an overview of visitor geo but if we show missing values you ll see a large portion of the users in the audience do not have a geo value at all This may be preferred in some cases and can be toggled on or off to meet your needs Organization As you add components you will likely want to customize where and how they appear The location of a particular component can be adjusted easily by simply clicking any edge of a component and dragging it to its desired location Don t forget to save your changes so they are retained the next time you visit your report Component Types Size Comparison Size Comparison components allow you to display multiple Audience Sizes on one chart This component can help compare multiple audiences simultaneously commonly used for variation testing Creating and Editing Size Components To create a Size component select one or many Audiences in the Edit Component menu In the configuration menu you can set the Component s name description and Audiences based on the selected table After selecting and saving the Audience s the Component will display a time series chart of the Audience size s Customizing Size Components Once a Size component is created the time range and the stacked options can be selected By default the Size component will chart the last seven days of data To customize the start and end dates click on the dates in the upper right section of the component To display the Audience sizes on separate charts toggle the Stacked option in the lower left section of the component Size components can also be visualized as a single number by selecting the Number chart type Audience Overlap Audience Overlap components allow you to understand the intersection or lack thereof between two or more Lytics audiences Creating and Editing Overlap Components To create an Overlap component select one or many Audiences in the Edit Component menu In the configuration menu you can set the Component s name description and Audiences After selecting and saving the Audience s the Component will display a Venn diagram representing each audience and their collective overlap Activating Insights These insights can be quickly activated by clicking directly on any intersections This will take you to a pre populated audience definition with rules defined representing the portion of the diagram you clicked on For instance in the above example clicking on Multi Session Visitors within the Has Visited Web audience will produce the following audience definition Data Flow Data Flow components allow you to see how data flows through your connected Providers Data Streams Audiences and Destinations Creating and Editing Data Flow Components To create a Data Flow component select up to 5 Audiences in the Edit Component menu In the configuration menu you can set the Component s name description and Audiences After selecting and saving the Audience s the Component will display a Bipartite diagram containing each of the selected Audiences and the connected Providers Streams and Destinations The Edit Component menu also provides options to hide or display the Providers Streams or Destination columns This allows the user to zoom in on different aspects of the Data Flow diagram Activating Insights Insights for this Component can be accessed by hovering over or clicking directly on any line in the diagram Hovering over a line will prompt the Dataflow Tooltip which contains information about the Job such as when it was created and the number of users exported Clicking directly on the line will take you to the Job s page for the corresponding job For instance clicking on the yellow line between All and Google Cloud will redirect you to this page Composition Composition components allow you to visualize a field in the user or content schema across one or many Audiences This can be useful to compare a field across Audiences or to analyze the data distribution for a group of users Creating Composition Components To create a Composition component click on the Edit Component button In the configuration menu the name description optional Audiences Field and SubField can be selected Depending on the field type Lytics provides a variety of ways to visualize the data The data can be viewed as a Bar Chart Line Chart Pie Chart Table or Stats view for numeric fields The following table shows all of the chart types for each field type Field Type Bar Line Pie Table Stats string x x x x x number x x x Date x x x string x x x x x map string string x x x x x map string number x x x map string date x x x number x x x date x x x Chart Types Bar Chart Display your data as a horizontal Bar Chart where each Audience is represented in a different color The labels correspond to each value of the Field and the values are the number of users with the field value Example the Bar Chart below shows the number of Rewards Users across 2 Audiences Line Chart Display your data as a Line Chart for fields of type number The x axis displays the field value and the y axis displays the number of users with a given value Example the Line Chart below shows the distribution of users with an Affinity for Candles Pie Chart Pie Charts are particularly useful for categorical fields ie string string types Example the Pie Chart below shows the number of Rewards Users across 2 Audiences Table the Table view presents categorical or numeric data in a table format Example the table below shows the most common _UTM Sources_across 2 Audiences Stats the Stats view displays statistical information for numeric fields Example the table below shows the mean min max standard deviation and number of users across two different Audiences Managing Composition Components Once you ve created a Composition component the bottom navigation bar allows you to customize your component Here you can select your desired chart type toggle between stacked and unstacked charts download data and customize your component Stacked depending on the chart type selecting the Stacked option will display the data on different charts The image below shows an unstacked Bar Chart Chart Types The chart icons in the navigation bar allow you to switch between different chart types Once you change a chart you can save your changes by clicking on the Save button in the pop up message Editing Your Component the Edit Component button on the right side of the navigation bar allows you to modify the name description Audiences and Field SubField associated with your component Once your changes are saved the data and charts will update Example Charting UTM Data As a first example we ll walk you through creating your first Composition component using device data Example Using Sub Fields As a more complex example we ll chart the distribution of users affinity for a Content Topic across two different Audiences Updated 7 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/reports-components#content",
    "title": "Introduction",
    "chunk_text": "Introduction Reports can consist of one or many Components Think of a Component as a method of visualizing data Each Component provides different ways of displaying and drilling into your data Supported Components The Size component allows you to display the sizes of one or more Audiences as a line chart or numeric value This component helps compare the sizes of different Audiences ex for A B testing The Composition component allows you to understand and chart the distribution of values for a field across your audience in various ways including Bar Pie Line and Table view The Audience Overlap component allows you to understand the intersection or difference in audience members between two or more audiences The Data Flow component allows you to visualize the flow of data that connects your Providers Audiences and Destinations Creating Components You can select from a list of Component types by clicking the Add New Component button on the Report Page Click on the desired component to add it to your Report Managing Components Lytics provides a handful of methods of managing your Report Components Configuration Once you ve created your Component click on the Edit Component button in the lower right corner to configure your Component Minification To minimize or hide a component click on the minimize icon in the upper right corner of the Component Stacking Merge multiple data points into a single visualization or separate each point into its unique component for streamlined consumption Shrink Expand If your Report has many components it may be desirable to shrink your components to display more information on a single page To shrink your components click on the Shrink icon in the upper right corner of the Component Deleting Click on the expanded menu in the upper right corner to delete your component Hiding Showing Missing Values By default null values are hidden from view This prevents individual component visualizations from being offset by profiles with missing data For instance in the two examples below you ll see an overview of visitor geo but if we show missing values you ll see a large portion of the users in the audience do not have a geo value at all This may be preferred in some cases and can be toggled on or off to meet your needs Organization As you add components you will likely want to customize where and how they appear The location of a particular component can be adjusted easily by simply clicking any edge of a component and dragging it to its desired location Don t forget to save your changes so they are retained the next time you visit your report Component Types Size Comparison Size Comparison components allow you to display multiple Audience Sizes on one chart This component can help compare multiple audiences simultaneously commonly used for variation testing Creating and Editing Size Components To create a Size component select one or many Audiences in the Edit Component menu In the configuration menu you can set the Component s name description and Audiences based on the selected table After selecting and saving the Audience s the Component will display a time series chart of the Audience size s Customizing Size Components Once a Size component is created the time range and the stacked options can be selected By default the Size component will chart the last seven days of data To customize the start and end dates click on the dates in the upper right section of the component To display the Audience sizes on separate charts toggle the Stacked option in the lower left section of the component Size components can also be visualized as a single number by selecting the Number chart type Audience Overlap Audience Overlap components allow you to understand the intersection or lack thereof between two or more Lytics audiences Creating and Editing Overlap Components To create an Overlap component select one or many Audiences in the Edit Component menu In the configuration menu you can set the Component s name description and Audiences After selecting and saving the Audience s the Component will display a Venn diagram representing each audience and their collective overlap Activating Insights These insights can be quickly activated by clicking directly on any intersections This will take you to a pre populated audience definition with rules defined representing the portion of the diagram you clicked on For instance in the above example clicking on Multi Session Visitors within the Has Visited Web audience will produce the following audience definition Data Flow Data Flow components allow you to see how data flows through your connected Providers Data Streams Audiences and Destinations Creating and Editing Data Flow Components To create a Data Flow component select up to 5 Audiences in the Edit Component menu In the configuration menu you can set the Component s name description and Audiences After selecting and saving the Audience s the Component will display a Bipartite diagram containing each of the selected Audiences and the connected Providers Streams and Destinations The Edit Component menu also provides options to hide or display the Providers Streams or Destination columns This allows the user to zoom in on different aspects of the Data Flow diagram Activating Insights Insights for this Component can be accessed by hovering over or clicking directly on any line in the diagram Hovering over a line will prompt the Dataflow Tooltip which contains information about the Job such as when it was created and the number of users exported Clicking directly on the line will take you to the Job s page for the corresponding job For instance clicking on the yellow line between All and Google Cloud will redirect you to this page Composition Composition components allow you to visualize a field in the user or content schema across one or many Audiences This can be useful to compare a field across Audiences or to analyze the data distribution for a group of users Creating Composition Components To create a Composition component click on the Edit Component button In the configuration menu the name description optional Audiences Field and SubField can be selected Depending on the field type Lytics provides a variety of ways to visualize the data The data can be viewed as a Bar Chart Line Chart Pie Chart Table or Stats view for numeric fields The following table shows all of the chart types for each field type Field Type Bar Line Pie Table Stats string x x x x x number x x x Date x x x string x x x x x map string string x x x x x map string number x x x map string date x x x number x x x date x x x Chart Types Bar Chart Display your data as a horizontal Bar Chart where each Audience is represented in a different color The labels correspond to each value of the Field and the values are the number of users with the field value Example the Bar Chart below shows the number of Rewards Users across 2 Audiences Line Chart Display your data as a Line Chart for fields of type number The x axis displays the field value and the y axis displays the number of users with a given value Example the Line Chart below shows the distribution of users with an Affinity for Candles Pie Chart Pie Charts are particularly useful for categorical fields ie string string types Example the Pie Chart below shows the number of Rewards Users across 2 Audiences Table the Table view presents categorical or numeric data in a table format Example the table below shows the most common _UTM Sources_across 2 Audiences Stats the Stats view displays statistical information for numeric fields Example the table below shows the mean min max standard deviation and number of users across two different Audiences Managing Composition Components Once you ve created a Composition component the bottom navigation bar allows you to customize your component Here you can select your desired chart type toggle between stacked and unstacked charts download data and customize your component Stacked depending on the chart type selecting the Stacked option will display the data on different charts The image below shows an unstacked Bar Chart Chart Types The chart icons in the navigation bar allow you to switch between different chart types Once you change a chart you can save your changes by clicking on the Save button in the pop up message Editing Your Component the Edit Component button on the right side of the navigation bar allows you to modify the name description Audiences and Field SubField associated with your component Once your changes are saved the data and charts will update Example Charting UTM Data As a first example we ll walk you through creating your first Composition component using device data Example Using Sub Fields As a more complex example we ll chart the distribution of users affinity for a Content Topic across two different Audiences Updated 7 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/reports-managing",
    "title": "https://docs.lytics.com/docs/reports-managing",
    "chunk_text": "Reports come fully equipped to manage your Reports across your team Editing and Deleting Reports Users can quickly Edit and Delete reports at the top of the Report page The Edit option allows you to rename the Report name and description Sharing Your Reports Creating Audience Reports in Lytics can be a collaborative process By default Reports within Lytics are shared across all users with the Reporting role To prohibit users from accessing Reports globally the Reporting role can be disabled for specific users In addition to the global role a report creator can further restrict access to their reports by setting the report as private and adding the specific list of users who have access The screenshot below outlines the simple setup process to fine tune collaboration and access to individual reports Change Logs Lytics records a log of all changes made to a Report in the Logs tab This record lets users keep track of who updated a report s components Downloading Reports Each component in Lytics provides the option to download the associated data in a CSV format The Download icon is located in the bottom right of each component Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/reports-managing#content",
    "title": "https://docs.lytics.com/docs/reports-managing#content",
    "chunk_text": "Reports come fully equipped to manage your Reports across your team Editing and Deleting Reports Users can quickly Edit and Delete reports at the top of the Report page The Edit option allows you to rename the Report name and description Sharing Your Reports Creating Audience Reports in Lytics can be a collaborative process By default Reports within Lytics are shared across all users with the Reporting role To prohibit users from accessing Reports globally the Reporting role can be disabled for specific users In addition to the global role a report creator can further restrict access to their reports by setting the report as private and adding the specific list of users who have access The screenshot below outlines the simple setup process to fine tune collaboration and access to individual reports Change Logs Lytics records a log of all changes made to a Report in the Logs tab This record lets users keep track of who updated a report s components Downloading Reports Each component in Lytics provides the option to download the associated data in a CSV format The Download icon is located in the bottom right of each component Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/dashboard-report",
    "title": "https://docs.lytics.com/docs/dashboard-report",
    "chunk_text": "Once data is flowing into your account Lytics will automatically generate a Dashboard Report on the homepage of the Decision Engine app While the dashboard Report is fully customizable the out of the box Report consists of 4 Report Components that incorporate some of Lytics Behavioral Audiences Size Component of the All Lytics New and Lytics Highly Engaged audiences Dataflow Component of the 5 most used audiences ie the audiences that appear in the most Jobs Composition Component of Lytics Content Affinity Overlap Component of the All Lytics New and Lytics Highly Engaged audiences To modify or edit the Dashboard Report simply click on the Edit Dashboard button located on the top right corner of the page Clicking this button will redirect you to the Report page where you can add or delete Components and edit existing Components Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/dashboard-report#content",
    "title": "https://docs.lytics.com/docs/dashboard-report#content",
    "chunk_text": "Once data is flowing into your account Lytics will automatically generate a Dashboard Report on the homepage of the Decision Engine app While the dashboard Report is fully customizable the out of the box Report consists of 4 Report Components that incorporate some of Lytics Behavioral Audiences Size Component of the All Lytics New and Lytics Highly Engaged audiences Dataflow Component of the 5 most used audiences ie the audiences that appear in the most Jobs Composition Component of Lytics Content Affinity Overlap Component of the All Lytics New and Lytics Highly Engaged audiences To modify or edit the Dashboard Report simply click on the Edit Dashboard button located on the top right corner of the page Clicking this button will redirect you to the Report page where you can add or delete Components and edit existing Components Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-affinity-engine",
    "title": "Resources",
    "chunk_text": "The Lytics Content Engine enables you to tap into one of the most powerful dynamics in digital marketing the connection between your customers and the content or products they interact with When a customer reads an article on your site or purchases a product what can their actions reveal about their preferences With Lytics you can enhance each customer s activity with meaningful insights drawing inferences from different types of behavior By linking a user s actions to broader patterns you gain a deeper more actionable understanding of their interests This enriched data is ready to use right away allowing you to build precise audiences drive personalized recommendations or export to external tools For a deeper dive into Lytics Content explore the following resources Resources Topics Affinities Discover how Topics and Affinities can help you enhance customer profiles Classification Learn how Lytics gathers classifies and processes your content Enrichment Find out how to manually add content to Lytics and customize the Classification process to refine your Topics and Content Taxonomy Recommendations Use Lytics powerful APIs to drive personalized Content Recommendations on your site and through email Documents Search and view your Documents Content Collections Organize your content into Collections to optimize your Content Recommendations Interest Engines Learn about Interest Engines Collaborative Filters and how to customize them for advanced targeting Updated 5 months ago Engines",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-affinity-engine#content",
    "title": "Resources",
    "chunk_text": "The Lytics Content Engine enables you to tap into one of the most powerful dynamics in digital marketing the connection between your customers and the content or products they interact with When a customer reads an article on your site or purchases a product what can their actions reveal about their preferences With Lytics you can enhance each customer s activity with meaningful insights drawing inferences from different types of behavior By linking a user s actions to broader patterns you gain a deeper more actionable understanding of their interests This enriched data is ready to use right away allowing you to build precise audiences drive personalized recommendations or export to external tools For a deeper dive into Lytics Content explore the following resources Resources Topics Affinities Discover how Topics and Affinities can help you enhance customer profiles Classification Learn how Lytics gathers classifies and processes your content Enrichment Find out how to manually add content to Lytics and customize the Classification process to refine your Topics and Content Taxonomy Recommendations Use Lytics powerful APIs to drive personalized Content Recommendations on your site and through email Documents Search and view your Documents Content Collections Organize your content into Collections to optimize your Content Recommendations Interest Engines Learn about Interest Engines Collaborative Filters and how to customize them for advanced targeting Updated 5 months ago Engines",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/affinities",
    "title": "Topics",
    "chunk_text": "Topics Topics are the building blocks of the Affinity Engine Simply put a Topic is an attribute tied to the documents your users interact with By default these documents are the URLs on your site but they can also be customized to include items from a product catalog Each document is associated with a set of Topics that reflect the content it contains Every user profile automatically includes the URLs they ve visited Thanks to the connection between URLs and their associated Topics Lytics can algorithmically determine which Topics a user is interested in based on their behavior This process forms the foundation of Lytics content recommendations and helps you build audiences around content affinity Since topic affinities are a product of user behavior conclusions can only be drawn about topic affinities relative to other topics and other users For these reasons attempting to calculate topic aversion would be an unsafe extrapolation To view your Topics navigate to the Interest Engine page click on the Standard tile and select the Topics tab Affinities An Affinity combines one or more Topics into a targetable group While Topics provide detailed insights they can often be too specific for broader marketing strategies That s where Affinities come in they allow you to group related Topics into a more actionable unit For example imagine you re a car dealership looking to target customers interested in luxury cars You could create a Luxury Car Affinity that includes brands like BMW Audi and Mercedes This Affinity lets you build an audience of users with an interest in any luxury car brand which you can then export to ad networks or other marketing platforms for targeted campaigns To view your Affinities navigate to the Interest Engine page click on the Standard tile and select the Affinities tab Resources Topics Explore how to use Topics within the Lytics UI Affinities Learn how to create edit and use Affinities in the Lytics UI Using Topics Affinities Discover how you can use Topics Affinities effectively Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/affinities#content",
    "title": "Topics",
    "chunk_text": "Topics Topics are the building blocks of the Affinity Engine Simply put a Topic is an attribute tied to the documents your users interact with By default these documents are the URLs on your site but they can also be customized to include items from a product catalog Each document is associated with a set of Topics that reflect the content it contains Every user profile automatically includes the URLs they ve visited Thanks to the connection between URLs and their associated Topics Lytics can algorithmically determine which Topics a user is interested in based on their behavior This process forms the foundation of Lytics content recommendations and helps you build audiences around content affinity Since topic affinities are a product of user behavior conclusions can only be drawn about topic affinities relative to other topics and other users For these reasons attempting to calculate topic aversion would be an unsafe extrapolation To view your Topics navigate to the Interest Engine page click on the Standard tile and select the Topics tab Affinities An Affinity combines one or more Topics into a targetable group While Topics provide detailed insights they can often be too specific for broader marketing strategies That s where Affinities come in they allow you to group related Topics into a more actionable unit For example imagine you re a car dealership looking to target customers interested in luxury cars You could create a Luxury Car Affinity that includes brands like BMW Audi and Mercedes This Affinity lets you build an audience of users with an interest in any luxury car brand which you can then export to ad networks or other marketing platforms for targeted campaigns To view your Affinities navigate to the Interest Engine page click on the Standard tile and select the Affinities tab Resources Topics Explore how to use Topics within the Lytics UI Affinities Learn how to create edit and use Affinities in the Lytics UI Using Topics Affinities Discover how you can use Topics Affinities effectively Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/topics",
    "title": "Viewing Topics",
    "chunk_text": "Viewing Topics To view Topics in your account click on the Standard Interest Engine and select the Topics tab The table above displays the top 500 Topics associated with the Standard Interest Engine Each row indicates the number of documents tied to that Topic as well as the number of users who have a Topic score for it For the Standard Interest Engine Topics are generated using Lytics Natural Language Processing NLP tools as well as meta tags from webpages To learn more about how Topics are enriched visit our Enrichment documentation Blocking Topics In some cases Lytics NLP tools may identify irrelevant Topics To address this you can block unwanted Topics by selecting the checkbox next to each one Once blocked the Topic will appear in the Blocked Topics table and will no longer show up on user profiles or in documents Topic Summary When you click on a Topic in the Topics table you ll be taken to the Topic Summary page which provides detailed insights about the selected Topic Header Displays the number of documents associated with the Topic the number of users with a score for the Topic and the average level of Affinity across all users Chart Visualizes the distribution of Topic scores across your user base New Audience This button lets you create a new Audience based on this specific Topic by redirecting you to the Audience Builder Recent Content Lists documents associated with the Topic Clicking on a document will take you to its detailed page Content Map and Related Topics The Topic Summary page also displays Related Topics which are identified based on their frequent co occurrence with the selected Topic These related Topics appear in the bottom right corner of the page and are also visible in the Content Map view The Topic Taxonomy or Content Map is built by analyzing documents and the Topics they contain revealing patterns of co occurrence and Topic prevalence You can use the slider at the bottom of the Content Map to highlight strong connections Topics that frequently appear together In the example below we can see that the Furniture topic is highlighted as well as each of its related Topics such as House and Faux Fur Bean Bag Segmentation With Topics When you click the New Audience button you ll be redirected to the Audience Builder The Topic score distribution chart can help you decide on an appropriate threshold when creating segments To include all users who have shown any interest in a Topic use the Exists operator Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/topics#content",
    "title": "Viewing Topics",
    "chunk_text": "Viewing Topics To view Topics in your account click on the Standard Interest Engine and select the Topics tab The table above displays the top 500 Topics associated with the Standard Interest Engine Each row indicates the number of documents tied to that Topic as well as the number of users who have a Topic score for it For the Standard Interest Engine Topics are generated using Lytics Natural Language Processing NLP tools as well as meta tags from webpages To learn more about how Topics are enriched visit our Enrichment documentation Blocking Topics In some cases Lytics NLP tools may identify irrelevant Topics To address this you can block unwanted Topics by selecting the checkbox next to each one Once blocked the Topic will appear in the Blocked Topics table and will no longer show up on user profiles or in documents Topic Summary When you click on a Topic in the Topics table you ll be taken to the Topic Summary page which provides detailed insights about the selected Topic Header Displays the number of documents associated with the Topic the number of users with a score for the Topic and the average level of Affinity across all users Chart Visualizes the distribution of Topic scores across your user base New Audience This button lets you create a new Audience based on this specific Topic by redirecting you to the Audience Builder Recent Content Lists documents associated with the Topic Clicking on a document will take you to its detailed page Content Map and Related Topics The Topic Summary page also displays Related Topics which are identified based on their frequent co occurrence with the selected Topic These related Topics appear in the bottom right corner of the page and are also visible in the Content Map view The Topic Taxonomy or Content Map is built by analyzing documents and the Topics they contain revealing patterns of co occurrence and Topic prevalence You can use the slider at the bottom of the Content Map to highlight strong connections Topics that frequently appear together In the example below we can see that the Furniture topic is highlighted as well as each of its related Topics such as House and Faux Fur Bean Bag Segmentation With Topics When you click the New Audience button you ll be redirected to the Audience Builder The Topic score distribution chart can help you decide on an appropriate threshold when creating segments To include all users who have shown any interest in a Topic use the Exists operator Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/affinities-1",
    "title": "Viewing Affinities",
    "chunk_text": "Viewing Affinities To view your Affinities select Interest Engines under Content in the Lytics navigation bar At the bottom of the page you ll find a table displaying the Affinities in your account You can filter the list by Interest Engine or search for a specific Affinity This table presents the Name Description Topics Last Modified Date and Interest Engine associated with each Affinity To view the Affinities tied to a particular Interest Engine simply navigate to the Interest Engine page Creating Affinities Affinities allow you to group related Topics into a targetable unit making it easier to reach your customers based on their interest groups This document will walk you through how to use the Affinity Builder step by step Once an Affinity is created you can use it to build Audiences and content collections To create an Affinity navigate to the Interest Engines page under Content select the Standard tile and click on Create New Add a Name for your Affinity This will be displayed in the Affinity tab of the audience builder Add a Description for more context The name and description fields are required Assign Topics to your Affinity There are a few ways to explore and add Topics Use the filter to quickly find Common Topics Lytics surfaces the Topics that are most prevalent in your taxonomy based on the number of documents with that Topic The default limit for Common Topics is 500 Click on a row to see related Topics Select the checkbox next to a Topic to add it to your Affinity Use the Search to find any Topic in your account The search option gives you access to any Topic in your taxonomy even if it s not included in your list of Common Topics This means you don t need to allow or block certain Topics to make the ones you care about available in the UI As you select Topics they will be added to the Assigned Topics list on the right In this example we created an Affinity named Concert Affinity that included Topics such as Concerts Live Music and Performances There are two ways you can remove selected Topics from your Affinity Hover over the Topic in the Assigned Topics list and click Remove Topic Unselect the checkbox next to the Topic within the table view Once an Affinity has been created you can add or remove Topics at a later time and edit the name or description Affinity Summary Each Affinity has a summary page that provides an overview of how many users are interested in this group of Topics and how much of your brand s content or product inventory is represented After creating an Affinity or when clicking any row in the Affinity list you ll be directed to this summary page At the top of the Affinity Summary page you ll find the following details Owner The Lytics user who created the Affinity Created The date the Affinity was first created Updated The date the Affinity was last modified Chart After creating an Affinity it may take a few days for the chart to fully populate as Lytics evaluates users interest in the selected Topics To the left of the chart you ll find key metrics Total Documents The number of documents that include one or more Topics from this Affinity Users with Affinity The number of users who have shown interest in one or more Topics in this Affinity On the chart the X axis shows affinity scores on a scale from 0 100 where 0 represents no interest and 100 represents the highest interest The Y axis displays the number of users You can click on individual bars to see how many users fall within specific affinity ranges This data helps your marketing team identify which users to target based on their interest levels For example you can focus on users with medium to high affinity for certain Topics in an ad campaign increasing the likelihood of relevance and conversions Details This section outlines how your Affinity is configured Topics The set of related Topics selected for this Affinity Configuration ID The method of calculation for the Affinity default will be listed unless you have a custom setup configured by the Lytics Data Science Team Slug Automatically created based on the name of your Affinity Lowercase letters are used with underscores between words Sample Documents At the bottom of the summary page you will see a paginated list of sample documents for this Affinity Your content must be classified before it will appear in this list Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/affinities-1#content",
    "title": "Viewing Affinities",
    "chunk_text": "Viewing Affinities To view your Affinities select Interest Engines under Content in the Lytics navigation bar At the bottom of the page you ll find a table displaying the Affinities in your account You can filter the list by Interest Engine or search for a specific Affinity This table presents the Name Description Topics Last Modified Date and Interest Engine associated with each Affinity To view the Affinities tied to a particular Interest Engine simply navigate to the Interest Engine page Creating Affinities Affinities allow you to group related Topics into a targetable unit making it easier to reach your customers based on their interest groups This document will walk you through how to use the Affinity Builder step by step Once an Affinity is created you can use it to build Audiences and content collections To create an Affinity navigate to the Interest Engines page under Content select the Standard tile and click on Create New Add a Name for your Affinity This will be displayed in the Affinity tab of the audience builder Add a Description for more context The name and description fields are required Assign Topics to your Affinity There are a few ways to explore and add Topics Use the filter to quickly find Common Topics Lytics surfaces the Topics that are most prevalent in your taxonomy based on the number of documents with that Topic The default limit for Common Topics is 500 Click on a row to see related Topics Select the checkbox next to a Topic to add it to your Affinity Use the Search to find any Topic in your account The search option gives you access to any Topic in your taxonomy even if it s not included in your list of Common Topics This means you don t need to allow or block certain Topics to make the ones you care about available in the UI As you select Topics they will be added to the Assigned Topics list on the right In this example we created an Affinity named Concert Affinity that included Topics such as Concerts Live Music and Performances There are two ways you can remove selected Topics from your Affinity Hover over the Topic in the Assigned Topics list and click Remove Topic Unselect the checkbox next to the Topic within the table view Once an Affinity has been created you can add or remove Topics at a later time and edit the name or description Affinity Summary Each Affinity has a summary page that provides an overview of how many users are interested in this group of Topics and how much of your brand s content or product inventory is represented After creating an Affinity or when clicking any row in the Affinity list you ll be directed to this summary page At the top of the Affinity Summary page you ll find the following details Owner The Lytics user who created the Affinity Created The date the Affinity was first created Updated The date the Affinity was last modified Chart After creating an Affinity it may take a few days for the chart to fully populate as Lytics evaluates users interest in the selected Topics To the left of the chart you ll find key metrics Total Documents The number of documents that include one or more Topics from this Affinity Users with Affinity The number of users who have shown interest in one or more Topics in this Affinity On the chart the X axis shows affinity scores on a scale from 0 100 where 0 represents no interest and 100 represents the highest interest The Y axis displays the number of users You can click on individual bars to see how many users fall within specific affinity ranges This data helps your marketing team identify which users to target based on their interest levels For example you can focus on users with medium to high affinity for certain Topics in an ad campaign increasing the likelihood of relevance and conversions Details This section outlines how your Affinity is configured Topics The set of related Topics selected for this Affinity Configuration ID The method of calculation for the Affinity default will be listed unless you have a custom setup configured by the Lytics Data Science Team Slug Automatically created based on the name of your Affinity Lowercase letters are used with underscores between words Sample Documents At the bottom of the summary page you will see a paginated list of sample documents for this Affinity Your content must be classified before it will appear in this list Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/using-topics-affinities",
    "title": "Leveraging Affinities",
    "chunk_text": "Leveraging Affinities The Affinity Engine enriches user profiles based on behavior but its true value lies in how you act on that data In Lytics Affinity Engine insights can be applied in three key ways segmentation recommendation and Lookalike Models Segmentation Lytics integrates Affinity Engine scores directly into user profiles allowing you to use these scores in the audience builder to segment users based on their Affinities This unlocks a variety of strategic use cases For example if you re a shoe retailer launching a new line of boots you can create an audience of users with an interest in boots ensuring that your ad spend targets the right users instead of those with little to no interest Beyond targeting Affinities can help you track trends over time You may notice that interest in boots spikes during the winter or perhaps it begins to rise in the fall as customers start exploring options before the colder months Affinities provide valuable insights as user interests shift over time making them a powerful tool for trend analysis Recommendation and Personalization Lytics Recommendation system blends AI with marketing strategy to help you easily suggest relevant content and products to your users By setting up personalized Recommendations you can deliver more engaging user experiences which in turn boosts time on site and overall engagement Lytics makes it easy to get up and running with Content Recommendations Upon configuration our Recommendation system Leverages over 500 behavioral signals to deliver highly relevant recommendations Operates autonomously with models that retrain and optimize on a weekly basis to keep recommendations fresh Works effectively right out of the box for new users requiring little to no prior data to provide valuable content suggestions Scales rapidly to meet the demands of large volumes and high user traffic To get started navigate to the Personalize page under Using Profiles or consult the Content Recommendation API documentation Lookalike Models Affinity Engine scores are also highly valuable when building Lookalike Models These scores offer a standardized way to compare users creating data consistency across profiles which is crucial for machine learning models This consistency allows affinity scores to often emerge as key factors in Lookalike Models If your team is working on predictive audiences leveraging Affinities can significantly enhance the accuracy and effectiveness of your models Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/using-topics-affinities#content",
    "title": "Leveraging Affinities",
    "chunk_text": "Leveraging Affinities The Affinity Engine enriches user profiles based on behavior but its true value lies in how you act on that data In Lytics Affinity Engine insights can be applied in three key ways segmentation recommendation and Lookalike Models Segmentation Lytics integrates Affinity Engine scores directly into user profiles allowing you to use these scores in the audience builder to segment users based on their Affinities This unlocks a variety of strategic use cases For example if you re a shoe retailer launching a new line of boots you can create an audience of users with an interest in boots ensuring that your ad spend targets the right users instead of those with little to no interest Beyond targeting Affinities can help you track trends over time You may notice that interest in boots spikes during the winter or perhaps it begins to rise in the fall as customers start exploring options before the colder months Affinities provide valuable insights as user interests shift over time making them a powerful tool for trend analysis Recommendation and Personalization Lytics Recommendation system blends AI with marketing strategy to help you easily suggest relevant content and products to your users By setting up personalized Recommendations you can deliver more engaging user experiences which in turn boosts time on site and overall engagement Lytics makes it easy to get up and running with Content Recommendations Upon configuration our Recommendation system Leverages over 500 behavioral signals to deliver highly relevant recommendations Operates autonomously with models that retrain and optimize on a weekly basis to keep recommendations fresh Works effectively right out of the box for new users requiring little to no prior data to provide valuable content suggestions Scales rapidly to meet the demands of large volumes and high user traffic To get started navigate to the Personalize page under Using Profiles or consult the Content Recommendation API documentation Lookalike Models Affinity Engine scores are also highly valuable when building Lookalike Models These scores offer a standardized way to compare users creating data consistency across profiles which is crucial for machine learning models This consistency allows affinity scores to often emerge as key factors in Lookalike Models If your team is working on predictive audiences leveraging Affinities can significantly enhance the accuracy and effectiveness of your models Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/classification",
    "title": "https://docs.lytics.com/docs/classification",
    "chunk_text": "The Classification page offers insight into how your content is being scraped indexed and categorized by the Lytics Content Affinity Engine You can access this page under the Content menu and it includes two main sections the Classification Dashboard and Content Classification Classification Dashboard The Classification Dashboard displays the Classification Activity Content Flow and the Content Dashboard components Learn more about each component below Classification Activity The Classification Activity section shows how many documents the Lytics Content Engine is classifying By default Lytics will classify up to 20 000 documents per month which includes new documents as well as periodic reclassification of existing ones This section helps you track whether you ve reached your monthly quota and ensure the Content Engine is functioning as expected The Lytics Content Engine runs multiple workflows in the background including the content classification workflow which updates hourly As long as you haven t exceeded your monthly quota you can expect hourly updates to the classification activity If your account has hit the content classification quota in previous weeks you may notice a lack of data in the chart for the current week Adjust the date range to see when content was last classified Content Flow Visualization The Content Flow chart visualizes how your documents are ingested processed and enriched with Topics by the Lytics Content Engine It also highlights any errors or problematic URLs such as URLs that are blocked by robots txt directives Account Settings or URLs that encounter non 200 status codes Each state in the Flow diagram is described in detail below Valid URLs URLs that are properly formatted and can be fetched by Lytics This step checks for invalid characters symbols and protocols Allowed By Settings URLs permitted by the Domain Allowlist Path Allowlist and other account settings that control if the URL can be scraped Denied By Settings URLs not included in the Domain Allowlist setting Path Blocklist URLs blocked from being scraped based on the Path Blocklist setting Allowed By Directives URLs that are allowed to be scraped according to robots txt directives Blocked By Directives URLs that are blocked or disallowed according to robots txt directives 200 HTTP Status URLs that return a 200 status code indicating they were successfully fetched 404 HTTP Status URLs that return a 404 status code indicating the URL was not found Other HTTP Status URLs that return a status code that is not 200 404 or 401 This means the URL was not successfully fetched Has Content URLs that have content to be scraped This means the URL was successfully fetched and contains content Enriched Content that has been successfully enriched with metadata and Topics Enrichment Error Content that encountered an error during enrichment meaning it was not successfully enriched and may lack metadata or Topics Content Dashboard The Content Dashboard displays various attributes of your Content including site name author URL path and Topic information The Classification Dashboard is intended to provide a high level understanding of your Content and can be used as a starting point for your Content oriented use cases Manual Content Classification The Manual Content Classification module allows you to manually add a URL to Lytics or preview how a specific document will be classified This feature is useful for troubleshooting any setup issues on your page before it s added to the Lytics content corpus To use it simply enter the URL of the document you want to preview and click Classify You ll be able to see the extracted Topics as well as any metadata that Lytics scrapes from the document Adding and Removing Topics When previewing a document you can manually Add or Remove topics from the Classification To add a Topic click the Add Topic button select the desired Relevance score between 0 and 1 and then click Add topic to Document To remove a Topic simply click the X next to the Topic tile Once you re satisfied with the results of the classification click Complete Classification to add the Documentto the content corpus The document and its associated Topics will then be available for use in personalization efforts such as recommendations or content affinity URL Normalization As Lytics ingests web based content it attempts to resolve duplicate URLs and create links between documents much like a search engine would As such Lytics does things like respect robots txt directives resolve canonical URLs when present etc Lytics attempts to sanitize URLs as much as possible before ingesting them into the Content Affinity Engine Sanitization includes removing all URL parameters and cleaning URL syntax This happens via an LQL function called urlmain Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/classification#content",
    "title": "https://docs.lytics.com/docs/classification#content",
    "chunk_text": "The Classification page offers insight into how your content is being scraped indexed and categorized by the Lytics Content Affinity Engine You can access this page under the Content menu and it includes two main sections the Classification Dashboard and Content Classification Classification Dashboard The Classification Dashboard displays the Classification Activity Content Flow and the Content Dashboard components Learn more about each component below Classification Activity The Classification Activity section shows how many documents the Lytics Content Engine is classifying By default Lytics will classify up to 20 000 documents per month which includes new documents as well as periodic reclassification of existing ones This section helps you track whether you ve reached your monthly quota and ensure the Content Engine is functioning as expected The Lytics Content Engine runs multiple workflows in the background including the content classification workflow which updates hourly As long as you haven t exceeded your monthly quota you can expect hourly updates to the classification activity If your account has hit the content classification quota in previous weeks you may notice a lack of data in the chart for the current week Adjust the date range to see when content was last classified Content Flow Visualization The Content Flow chart visualizes how your documents are ingested processed and enriched with Topics by the Lytics Content Engine It also highlights any errors or problematic URLs such as URLs that are blocked by robots txt directives Account Settings or URLs that encounter non 200 status codes Each state in the Flow diagram is described in detail below Valid URLs URLs that are properly formatted and can be fetched by Lytics This step checks for invalid characters symbols and protocols Allowed By Settings URLs permitted by the Domain Allowlist Path Allowlist and other account settings that control if the URL can be scraped Denied By Settings URLs not included in the Domain Allowlist setting Path Blocklist URLs blocked from being scraped based on the Path Blocklist setting Allowed By Directives URLs that are allowed to be scraped according to robots txt directives Blocked By Directives URLs that are blocked or disallowed according to robots txt directives 200 HTTP Status URLs that return a 200 status code indicating they were successfully fetched 404 HTTP Status URLs that return a 404 status code indicating the URL was not found Other HTTP Status URLs that return a status code that is not 200 404 or 401 This means the URL was not successfully fetched Has Content URLs that have content to be scraped This means the URL was successfully fetched and contains content Enriched Content that has been successfully enriched with metadata and Topics Enrichment Error Content that encountered an error during enrichment meaning it was not successfully enriched and may lack metadata or Topics Content Dashboard The Content Dashboard displays various attributes of your Content including site name author URL path and Topic information The Classification Dashboard is intended to provide a high level understanding of your Content and can be used as a starting point for your Content oriented use cases Manual Content Classification The Manual Content Classification module allows you to manually add a URL to Lytics or preview how a specific document will be classified This feature is useful for troubleshooting any setup issues on your page before it s added to the Lytics content corpus To use it simply enter the URL of the document you want to preview and click Classify You ll be able to see the extracted Topics as well as any metadata that Lytics scrapes from the document Adding and Removing Topics When previewing a document you can manually Add or Remove topics from the Classification To add a Topic click the Add Topic button select the desired Relevance score between 0 and 1 and then click Add topic to Document To remove a Topic simply click the X next to the Topic tile Once you re satisfied with the results of the classification click Complete Classification to add the Documentto the content corpus The document and its associated Topics will then be available for use in personalization efforts such as recommendations or content affinity URL Normalization As Lytics ingests web based content it attempts to resolve duplicate URLs and create links between documents much like a search engine would As such Lytics does things like respect robots txt directives resolve canonical URLs when present etc Lytics attempts to sanitize URLs as much as possible before ingesting them into the Content Affinity Engine Sanitization includes removing all URL parameters and cleaning URL syntax This happens via an LQL function called urlmain Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/enrichment",
    "title": "Content Enrichment",
    "chunk_text": "Content Enrichment To better understand how users are engaging with content Lytics first needs to understand that content itself One way Lytics does this is by analyzing the URLs that are passed to Lytics to determine the topics that best describe the URL When Lytics receives data about actions taken by a customer it is called an event Each event has fields that store pieces of information describing the event including the URL By associating topics with URLs Lytics is also able to understand which topics a user has engaged with In doing so the Lytics Content Affinity Engine can find relevant content for users as well as find relevant users for content When Lytics receives an event with a URL in it specifically when an event with a field named url comes in on any data stream Lytics determines whether the URL is new or not A new URL is one that Lytics has not previously handled Lytics then creates a new event and writes that event to the data stream lytics_content_enrich called the content enrichment stream An LQL query named lytics_content handles events written to the content enrichment stream This results in a new entity being created in the content table Lytics listens for events with new URLs on the content enrichment stream When a new event is available Lytics runs the URL enrichment process Data enrichment is a common practice in Lytics It refers to the ability to add data onto inbound data to improve its quality This process is also used in user profile enrichment Enrichers Enrichment is handled by components called enrichers Each enricher performs a specific task A common task for an enricher is to associate topics with a URL but there are other tasks that enrichers can perform Whatever its specific purpose the result of an enricher running is that additional data may be added to the inbound data event After the enrichers run another new event is written to the content enrichment process This time the new event is not enriched because the URL is not new But the event includes all of the data that was previously added during the enrichment process so when the query lytics_content runs it is able to map that new data to the corresponding entity in the content table The specific enrichers that Lytics uses depends on how your account is configured The account setting enrich_content_sources controls which enrichers are used Your Lytics representative can help you change the enrichers that are enabled on your account Meta Enricher The meta enricher is always used by Lytics for content enrichment The meta enrichment process begins with Lytics sending a request for the URL The response allows Lytics to collect some information to improve the efficiency of the overall enrichment process Examples of information collected are Status code This is data returned from the web server that handled the request It tells Lytics whether the URL is valid and accessible on the server This is important because Lytics is able to generate content recommendations and you don t want Lytics to include URLs that will result in a 404 or other errors Meta tags Lytics can read data from certain meta tags to associate topics with a URL This logic runs during the meta enrichment process Canonical URL The content on a web page may be accessible using multiple URLs For example a product online may appear in multiple categories The canonical URL is used to associate the multiple product pages with one another This is an important value to ensure Lytics doesn t process the same content multiple times just because the URL is different Natural Language Processing The following Natural Language Processing NLP services are available in Lytics for content enrichment Each link takes you to the Language support page for that service if applicable The Setting column denotes the account setting change needed to enable the service which must be enabled by Lytics Support Service Setting Notes Google NLP google_nlp The default enricher turned on for all new accounts Google NLP entity google_nlp_entity If used this would force in only things like Barack Obama and Frank Sinatra as topics instead of general topics like Politics and Music Google Vision google Analyze images to predict topics Diffbot diffbot for topics diffbot_meta for meta data It predicts both content topics and content type It was set as the default in most accounts created prior 2020 It has more loose associations between topics and content than Google NLP By turning this on you ll bring in more topics but they may not feel intuitive TextRazor textrazor Predicts topics is very verbose and may also bring in topics that do not feel intuitive Topic Extraction Since Lytics collects and stores every event without any aggregation automatic topic extraction becomes a possibility For every URL seen Lytics uses a bot called lyticsbot to fetch the web page at that URL The content metadata and images of the URL is analyzed and boiled down to a set of Topics Lytics Content Authorization If some of your content is premium and requires a login to access then you ll need to create a new authorization so Lytics can access this content To do this Access Vault by using the product switcher at the top left or following this link From the left hand menu select Security and then Authorizations Choose Create New to begin the creation of anew authorization method When prompted to select a provider select Lytics Content Next you ll need to choose an authentication method Lytics currently supports basic authentication or cookies Follow the configuration guidance for your selected authorization and then save Once you have saved your authorization Lytics will automatically recognize that it is available and leverag eit during subsequent enrichment runs lyticsbot Directive Configurations When lyticsbot scrapes your content you can identify it with some HTTP headers that will be present on every request namely User Agent lyticsbot Lytics Id YOUR_ACCOUNT_ID This will allow you to identify requests from Lytics to scrape that content to enhance your topic graph For some websites it is desirable to allow lyticsbot to crawl everything as fast as possible However some web administrators would like more flexibility and control over how fast and where the bot attempts to pull content from The bot will follow a set of directives that would be located at the root of the website for instance https www lytics com robots txt Below you can see three common robots txt configurations Disallow lyticsbot from attempting to crawl any links that reside in the admin directory Text User agent lyticsbot Disallow admin Add a crawl delay to set the amount of time in seconds in between crawl attempts effectively allow the bot to only crawl 8 640 pages a day Text User agent lyticsbot Crawl delay 10 Combine the disallow and crawl delay settings Text User agent lyticsbot Disallow admin Disallow private Crawl delay 10 You must specify the lyticsbot user agent A wild card will not work in this case Providing Custom Topics Lytics will automatically extract topics from the main content at a URL but sometimes domain specific topics are also desired to track In this case Lytics supports a special meta tag for annotating custom topics Provide a comma separated list of topics in a lytics topics meta element in your HTML source Here is an example from a Lytics blog post HTML html head title Omeda and Lytics Team Up To Offer All In One Audience Engagement Platform title meta name lytics topics content Customer Data Platform Lytics News head html Additionally your Lytics account can be configured to also scrape other meta tags to feed into your topic graph by setting the account s content_customprops setting to the names of the meta tags you d also like to include For example if you wanted your Lytics topic graph to include topics from your article tag meta tags you could update your account settings with the following API request Bash curl XPUT https api lytics io api account ACCOUNTID H Content type application json H Authorization LIOKEY d settings content_customprops article tag Now after adding the article tag topic any values from article tag meta tags will also appear in the topic graph which means they ll be eligible for content affinities targeting and personalization and inform content recommendations Lytics will track these custom topics in addition to the automatically extracted topics Do not specify generic topics there is no need Viewing Topics Assigned to a Document Each document is assigned a URL as a unique identifier You can use the Lytics Content API to retrieve a document and view the topics assigned to it Bash Get the information about the URL for the Lytics website home page curl s XGET https api lytics io api content doc urls www lytics com H Authorization LIOKEY This will return a JSON object of the requested document JSON data total 1 urls url www lytics com https false title description topics CDP Customer Data topic_relevances CDP 1 Customer Data 1 primary_image author created 2018 10 24T23 10 06Z id 7169839995045099096 stream updated 2018 10 24T23 14 09Z fetched 2018 10 24T23 14 09Z message success status 200 You can see the topics assigned to the requested content and the relevancy range of those topics from 0 to 1 JSON topics CDP Customer Data topic_relevances CDP 1 Customer Data 1 Manually Assigning Topics In most cases topic extraction automatically assigns the expected topic to your content If however you find that to not be the case or you would like to expand the topics assigned to content Lytics allows you to manually assign topics to your content Content is stored in an entity called a document Each document is a collection of fields each storing a specific piece of information about that content Each document may have multiple fields that are used to store the topics for that particular entity The process of manually assigning topics involves updating one of those fields Assigning Topics Manually Manually assigning topics can be done in several ways Data Import Data Import The data in either CSV or JSON format can be sent to Lytics using any of the methods available for importing data including CSV file or JSON file integrations and the Lytics Bulk Upload API Just be sure that you send the data to the correct data stream lytics_content_enrich The uploaded data must be formatted in the following ways CSV JSON url topic_Portland topic_Oregon https www lytics com 1 96 url https www lytics com topic_Portland 1 topic_Oregon 96 When data is sent to the data stream lytics_content_enrich the LQL function urlmain is applied to the value You can see this in the query lytics_content The result is that and everything before it is removed This is important to understand because if you ever need to find a URL you should exclude and the protocol before it Lytics Content Corpus API Content Corpus API The content corpus endpoint can be used to associate topics with a URL The corpus API does not allow you to specify the relevance Topics will be assigned a relevance 1 The following command demonstrates how to use this API to set topics on content Bash curl s XPOST https api lytics io api content corpus H Authorization LIOKEY H Content Type application json d url www lytics com topics Portland Oregon Lytics Topic Curation API Topic Curation API The topic curation endpoint can be used to add topics to content However this approach is a bit more complicated because you must know an identifier for the content you want to add new topics to By default the following fields are identifiers on content table contentid This value only applies to email content fbid This value only applies to Facebook content hashedurl Lytics does not use the URL for the content as an identifier The URL is a string value that can be quite long For performance reasons it is better to create a hash of the URL and use that hashed value as the identifier A hash is just a way of converting a string into a number How to Generate a Hash for a URL There are many hash functions available but Lytics uses a specific one when it hashes URLs sip hash The following command demonstrates how to use the Lytics query test evaluation endpoint to generate a sip hash for a URL In this example the value that is used is https www lytics com Bash curl s XPOST https api lytics io api query _test value what 20you 20want 20to 20hash H Authorization LIOKEY H content type test text plain d SELECT hash sip value AS hashed FROM test INTO test BY hashed ALIAS test The result of this command will be something like the following The value of the field hashed is the hashed value JSON data _created 2018 11 05T22 00 15 688307117Z _modified 2018 11 05T22 00 15 688307117Z hashed 7394646926640356587 message success status 200 If you are using the Visual Studio Code Extension for Lytics there is a command that you can use to generate a sip hash without having to write any API calls Setting Topics Using Hashed URL Above you determined the sip hash for https www lytics com is 7394646926640356587 The following command will associate the topic CDP with a relevance of 1 0 with this hashed URL Bash curl s XPOST https api lytics io api content doc hashedurl 7394646926640356587 topic CDP relevance 1 H Authorization LIOKEY H content type application json Removing Topics Manually When a topic is associated with a document a new field is created on the entity The field stores a value from zero no relevance to one highest relevance In Lytics you cannot delete fields from documents So technically there is no way to remove a topic from being associated with a content entity Instead what you do is set the relevance to zero Since zero indicates no relevance it effectively removes the topic from the document Removing a topic is not the same as blocking a topic Blocking a topic acknowledges that a topic may be relevant but is too generic to be useful For example at Lytics we block the topic data because that topic is relevant on almost all of our content and for that reason it is not useful at all Topics can be removed from content using one of the following approaches Data Import Data Import As described above CSV or JSON data can be sent to Lytics The following examples demonstrate how to remove a topic from content by setting the relevance for the topic to zero CSV JSON url topic_Portland https www lytics com 0 url https www lytics com topic_Portland 0 Topic Curation API Topic Curation API The topic remove endpoint allows you to remove a topic associated with content This API sets the relevance for the topics to zero It does not actually delete any the topic from the content Above you determined the sip hash for https www lytics com is 7394646926640356587 The following command will remove the topic CDP from this hashed URL Bash curl s XDELETE https api lytics io api content doc hashedurl 7394646926640356587 topic CDP H Authorization LIOKEY H content type application json Updated 10 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/enrichment#content",
    "title": "Content Enrichment",
    "chunk_text": "Content Enrichment To better understand how users are engaging with content Lytics first needs to understand that content itself One way Lytics does this is by analyzing the URLs that are passed to Lytics to determine the topics that best describe the URL When Lytics receives data about actions taken by a customer it is called an event Each event has fields that store pieces of information describing the event including the URL By associating topics with URLs Lytics is also able to understand which topics a user has engaged with In doing so the Lytics Content Affinity Engine can find relevant content for users as well as find relevant users for content When Lytics receives an event with a URL in it specifically when an event with a field named url comes in on any data stream Lytics determines whether the URL is new or not A new URL is one that Lytics has not previously handled Lytics then creates a new event and writes that event to the data stream lytics_content_enrich called the content enrichment stream An LQL query named lytics_content handles events written to the content enrichment stream This results in a new entity being created in the content table Lytics listens for events with new URLs on the content enrichment stream When a new event is available Lytics runs the URL enrichment process Data enrichment is a common practice in Lytics It refers to the ability to add data onto inbound data to improve its quality This process is also used in user profile enrichment Enrichers Enrichment is handled by components called enrichers Each enricher performs a specific task A common task for an enricher is to associate topics with a URL but there are other tasks that enrichers can perform Whatever its specific purpose the result of an enricher running is that additional data may be added to the inbound data event After the enrichers run another new event is written to the content enrichment process This time the new event is not enriched because the URL is not new But the event includes all of the data that was previously added during the enrichment process so when the query lytics_content runs it is able to map that new data to the corresponding entity in the content table The specific enrichers that Lytics uses depends on how your account is configured The account setting enrich_content_sources controls which enrichers are used Your Lytics representative can help you change the enrichers that are enabled on your account Meta Enricher The meta enricher is always used by Lytics for content enrichment The meta enrichment process begins with Lytics sending a request for the URL The response allows Lytics to collect some information to improve the efficiency of the overall enrichment process Examples of information collected are Status code This is data returned from the web server that handled the request It tells Lytics whether the URL is valid and accessible on the server This is important because Lytics is able to generate content recommendations and you don t want Lytics to include URLs that will result in a 404 or other errors Meta tags Lytics can read data from certain meta tags to associate topics with a URL This logic runs during the meta enrichment process Canonical URL The content on a web page may be accessible using multiple URLs For example a product online may appear in multiple categories The canonical URL is used to associate the multiple product pages with one another This is an important value to ensure Lytics doesn t process the same content multiple times just because the URL is different Natural Language Processing The following Natural Language Processing NLP services are available in Lytics for content enrichment Each link takes you to the Language support page for that service if applicable The Setting column denotes the account setting change needed to enable the service which must be enabled by Lytics Support Service Setting Notes Google NLP google_nlp The default enricher turned on for all new accounts Google NLP entity google_nlp_entity If used this would force in only things like Barack Obama and Frank Sinatra as topics instead of general topics like Politics and Music Google Vision google Analyze images to predict topics Diffbot diffbot for topics diffbot_meta for meta data It predicts both content topics and content type It was set as the default in most accounts created prior 2020 It has more loose associations between topics and content than Google NLP By turning this on you ll bring in more topics but they may not feel intuitive TextRazor textrazor Predicts topics is very verbose and may also bring in topics that do not feel intuitive Topic Extraction Since Lytics collects and stores every event without any aggregation automatic topic extraction becomes a possibility For every URL seen Lytics uses a bot called lyticsbot to fetch the web page at that URL The content metadata and images of the URL is analyzed and boiled down to a set of Topics Lytics Content Authorization If some of your content is premium and requires a login to access then you ll need to create a new authorization so Lytics can access this content To do this Access Vault by using the product switcher at the top left or following this link From the left hand menu select Security and then Authorizations Choose Create New to begin the creation of anew authorization method When prompted to select a provider select Lytics Content Next you ll need to choose an authentication method Lytics currently supports basic authentication or cookies Follow the configuration guidance for your selected authorization and then save Once you have saved your authorization Lytics will automatically recognize that it is available and leverag eit during subsequent enrichment runs lyticsbot Directive Configurations When lyticsbot scrapes your content you can identify it with some HTTP headers that will be present on every request namely User Agent lyticsbot Lytics Id YOUR_ACCOUNT_ID This will allow you to identify requests from Lytics to scrape that content to enhance your topic graph For some websites it is desirable to allow lyticsbot to crawl everything as fast as possible However some web administrators would like more flexibility and control over how fast and where the bot attempts to pull content from The bot will follow a set of directives that would be located at the root of the website for instance https www lytics com robots txt Below you can see three common robots txt configurations Disallow lyticsbot from attempting to crawl any links that reside in the admin directory Text User agent lyticsbot Disallow admin Add a crawl delay to set the amount of time in seconds in between crawl attempts effectively allow the bot to only crawl 8 640 pages a day Text User agent lyticsbot Crawl delay 10 Combine the disallow and crawl delay settings Text User agent lyticsbot Disallow admin Disallow private Crawl delay 10 You must specify the lyticsbot user agent A wild card will not work in this case Providing Custom Topics Lytics will automatically extract topics from the main content at a URL but sometimes domain specific topics are also desired to track In this case Lytics supports a special meta tag for annotating custom topics Provide a comma separated list of topics in a lytics topics meta element in your HTML source Here is an example from a Lytics blog post HTML html head title Omeda and Lytics Team Up To Offer All In One Audience Engagement Platform title meta name lytics topics content Customer Data Platform Lytics News head html Additionally your Lytics account can be configured to also scrape other meta tags to feed into your topic graph by setting the account s content_customprops setting to the names of the meta tags you d also like to include For example if you wanted your Lytics topic graph to include topics from your article tag meta tags you could update your account settings with the following API request Bash curl XPUT https api lytics io api account ACCOUNTID H Content type application json H Authorization LIOKEY d settings content_customprops article tag Now after adding the article tag topic any values from article tag meta tags will also appear in the topic graph which means they ll be eligible for content affinities targeting and personalization and inform content recommendations Lytics will track these custom topics in addition to the automatically extracted topics Do not specify generic topics there is no need Viewing Topics Assigned to a Document Each document is assigned a URL as a unique identifier You can use the Lytics Content API to retrieve a document and view the topics assigned to it Bash Get the information about the URL for the Lytics website home page curl s XGET https api lytics io api content doc urls www lytics com H Authorization LIOKEY This will return a JSON object of the requested document JSON data total 1 urls url www lytics com https false title description topics CDP Customer Data topic_relevances CDP 1 Customer Data 1 primary_image author created 2018 10 24T23 10 06Z id 7169839995045099096 stream updated 2018 10 24T23 14 09Z fetched 2018 10 24T23 14 09Z message success status 200 You can see the topics assigned to the requested content and the relevancy range of those topics from 0 to 1 JSON topics CDP Customer Data topic_relevances CDP 1 Customer Data 1 Manually Assigning Topics In most cases topic extraction automatically assigns the expected topic to your content If however you find that to not be the case or you would like to expand the topics assigned to content Lytics allows you to manually assign topics to your content Content is stored in an entity called a document Each document is a collection of fields each storing a specific piece of information about that content Each document may have multiple fields that are used to store the topics for that particular entity The process of manually assigning topics involves updating one of those fields Assigning Topics Manually Manually assigning topics can be done in several ways Data Import Data Import The data in either CSV or JSON format can be sent to Lytics using any of the methods available for importing data including CSV file or JSON file integrations and the Lytics Bulk Upload API Just be sure that you send the data to the correct data stream lytics_content_enrich The uploaded data must be formatted in the following ways CSV JSON url topic_Portland topic_Oregon https www lytics com 1 96 url https www lytics com topic_Portland 1 topic_Oregon 96 When data is sent to the data stream lytics_content_enrich the LQL function urlmain is applied to the value You can see this in the query lytics_content The result is that and everything before it is removed This is important to understand because if you ever need to find a URL you should exclude and the protocol before it Lytics Content Corpus API Content Corpus API The content corpus endpoint can be used to associate topics with a URL The corpus API does not allow you to specify the relevance Topics will be assigned a relevance 1 The following command demonstrates how to use this API to set topics on content Bash curl s XPOST https api lytics io api content corpus H Authorization LIOKEY H Content Type application json d url www lytics com topics Portland Oregon Lytics Topic Curation API Topic Curation API The topic curation endpoint can be used to add topics to content However this approach is a bit more complicated because you must know an identifier for the content you want to add new topics to By default the following fields are identifiers on content table contentid This value only applies to email content fbid This value only applies to Facebook content hashedurl Lytics does not use the URL for the content as an identifier The URL is a string value that can be quite long For performance reasons it is better to create a hash of the URL and use that hashed value as the identifier A hash is just a way of converting a string into a number How to Generate a Hash for a URL There are many hash functions available but Lytics uses a specific one when it hashes URLs sip hash The following command demonstrates how to use the Lytics query test evaluation endpoint to generate a sip hash for a URL In this example the value that is used is https www lytics com Bash curl s XPOST https api lytics io api query _test value what 20you 20want 20to 20hash H Authorization LIOKEY H content type test text plain d SELECT hash sip value AS hashed FROM test INTO test BY hashed ALIAS test The result of this command will be something like the following The value of the field hashed is the hashed value JSON data _created 2018 11 05T22 00 15 688307117Z _modified 2018 11 05T22 00 15 688307117Z hashed 7394646926640356587 message success status 200 If you are using the Visual Studio Code Extension for Lytics there is a command that you can use to generate a sip hash without having to write any API calls Setting Topics Using Hashed URL Above you determined the sip hash for https www lytics com is 7394646926640356587 The following command will associate the topic CDP with a relevance of 1 0 with this hashed URL Bash curl s XPOST https api lytics io api content doc hashedurl 7394646926640356587 topic CDP relevance 1 H Authorization LIOKEY H content type application json Removing Topics Manually When a topic is associated with a document a new field is created on the entity The field stores a value from zero no relevance to one highest relevance In Lytics you cannot delete fields from documents So technically there is no way to remove a topic from being associated with a content entity Instead what you do is set the relevance to zero Since zero indicates no relevance it effectively removes the topic from the document Removing a topic is not the same as blocking a topic Blocking a topic acknowledges that a topic may be relevant but is too generic to be useful For example at Lytics we block the topic data because that topic is relevant on almost all of our content and for that reason it is not useful at all Topics can be removed from content using one of the following approaches Data Import Data Import As described above CSV or JSON data can be sent to Lytics The following examples demonstrate how to remove a topic from content by setting the relevance for the topic to zero CSV JSON url topic_Portland https www lytics com 0 url https www lytics com topic_Portland 0 Topic Curation API Topic Curation API The topic remove endpoint allows you to remove a topic associated with content This API sets the relevance for the topics to zero It does not actually delete any the topic from the content Above you determined the sip hash for https www lytics com is 7394646926640356587 The following command will remove the topic CDP from this hashed URL Bash curl s XDELETE https api lytics io api content doc hashedurl 7394646926640356587 topic CDP H Authorization LIOKEY H content type application json Updated 10 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/recommendations",
    "title": "Content Recommendations",
    "chunk_text": "Content Recommendations Content Recommendations are a powerful tool that can be used to increase user engagement by presenting users with relevant content that resonates with them By utilizing the Lytics topic taxonomy and powerful Machine Learning algorithms Lytics can make data driven Content Recommendations within milliseconds Powered by over 500 features and the flexibility to customize your recommendations Lytics Content Recommendation API removes the heavy lifting when it comes to content personalization via web email etc Out of the box Lytics Content Recommendations can be leveraged in 3 ways Content Recommendations in the Lytics UI The Lytics UI offers multiple ways to test validate and get started with Content Recommendations Both the Interest Engine page and the Content Collection page provide options for fetching recommendations for individual users Recommendations via the Interest Engine Page To access Recommendations from the Interest Engine page navigate to the Interest Engine page under the Content navigation menu select an Interest Engine and click on the Recommend tab After entering a user ID and clicking Recommend Lytics will generate recommendations tailored to that specific user Recommendations via the Collections Page To access Collection specific recommendations navigate to a Collection under the Collections page in the Content menu and select the Recommendations tab This page provides options for creating Recommendations Experiences links to the Content Recommendation API code snippets and a search bar to fetch Collection specific Recommendations for a user Recommend content with Lytics Personalization You can create personalized customizable recommendation experiences on any site where the Lytics JavaScript tag is installed Recommend content with Pathfora JS Pathfora JS is capable of taking a content collection and fetching and displaying the recommended content for the current user Read more about it in the Pathfora JS Docs Recommend content with Lytics APIs The Lytics content recommendation API takes a handful of parameters including the user the recommendation is for and an optional content collection to recommend from Using content collections in recommendations Content collections are commonly used in content recommendations By selecting a content collection as the source of your content recommendation you re limiting which content the recommendation engine can select from This is desirable for most use cases because by default Lytics will scrape any and all pages of your website that users are visiting Without a content collection defined the recommendation engine will return what is most relevant to the user regardless of the context For example in a marketing context you wouldn t want to promote your careers page even if it is the most relevant piece of content to the user in question Size of the collection is also an important factor when using a collection for recommendation The more content the recommendations engine has access to the better more personalized recommendations it can serve If you can try to make sure your content collection is of a decent size and at the minimum fits the following requirements Documents are valid return a 200 status from an HTTP get request Documents have been enriched by Lytics Documents have topics associated with them If none of the documents in your collection fit these conditions the recommendation engine may have issues returning recommendations as it doesn t have enough information to make a recommendation If you would like assistance setting up these filters in your collection or to set up a collection with content published less than 1 week in the past contact Lytics Support Content collections in Lytics Experiences When setting up a recommended content Experience through the Lytics UI you will be asked to select an existing content collection or build a new collection to use in the experience Using collections in custom content recommendations If you re using the Lytics API to recommend content you can use the contentsegment query parameter to define the content collection you want to use The value of this parameter should be the ID of the content collection You can locate the ID of the collection from the URL on the summary page The ID will come after collections in the URL and will end before the beginning of the query parameters Affinity Alignment Score When building a recommendation based Experience you have access to the affinity alignment score automatically calculated by Lytics The alignment score measures the similarity between the selected Content Collection and the Audience This similarity is based upon the vector similarity of the most prevalent topics in the Collection and the most prevalent topics in the Audience If the Collection and the Audience share many of the same topics the alignment score will be high Conversely if the Collection and the Audience share few or no topics then the alignment score will be low For successful Content Recommendations we recommend pairing Collections and Audiences with moderate to high alignment If there is low alignment Content Recommendations may have low conversion rates and may be irrelevant to users in the selected Audience Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/recommendations#content",
    "title": "Content Recommendations",
    "chunk_text": "Content Recommendations Content Recommendations are a powerful tool that can be used to increase user engagement by presenting users with relevant content that resonates with them By utilizing the Lytics topic taxonomy and powerful Machine Learning algorithms Lytics can make data driven Content Recommendations within milliseconds Powered by over 500 features and the flexibility to customize your recommendations Lytics Content Recommendation API removes the heavy lifting when it comes to content personalization via web email etc Out of the box Lytics Content Recommendations can be leveraged in 3 ways Content Recommendations in the Lytics UI The Lytics UI offers multiple ways to test validate and get started with Content Recommendations Both the Interest Engine page and the Content Collection page provide options for fetching recommendations for individual users Recommendations via the Interest Engine Page To access Recommendations from the Interest Engine page navigate to the Interest Engine page under the Content navigation menu select an Interest Engine and click on the Recommend tab After entering a user ID and clicking Recommend Lytics will generate recommendations tailored to that specific user Recommendations via the Collections Page To access Collection specific recommendations navigate to a Collection under the Collections page in the Content menu and select the Recommendations tab This page provides options for creating Recommendations Experiences links to the Content Recommendation API code snippets and a search bar to fetch Collection specific Recommendations for a user Recommend content with Lytics Personalization You can create personalized customizable recommendation experiences on any site where the Lytics JavaScript tag is installed Recommend content with Pathfora JS Pathfora JS is capable of taking a content collection and fetching and displaying the recommended content for the current user Read more about it in the Pathfora JS Docs Recommend content with Lytics APIs The Lytics content recommendation API takes a handful of parameters including the user the recommendation is for and an optional content collection to recommend from Using content collections in recommendations Content collections are commonly used in content recommendations By selecting a content collection as the source of your content recommendation you re limiting which content the recommendation engine can select from This is desirable for most use cases because by default Lytics will scrape any and all pages of your website that users are visiting Without a content collection defined the recommendation engine will return what is most relevant to the user regardless of the context For example in a marketing context you wouldn t want to promote your careers page even if it is the most relevant piece of content to the user in question Size of the collection is also an important factor when using a collection for recommendation The more content the recommendations engine has access to the better more personalized recommendations it can serve If you can try to make sure your content collection is of a decent size and at the minimum fits the following requirements Documents are valid return a 200 status from an HTTP get request Documents have been enriched by Lytics Documents have topics associated with them If none of the documents in your collection fit these conditions the recommendation engine may have issues returning recommendations as it doesn t have enough information to make a recommendation If you would like assistance setting up these filters in your collection or to set up a collection with content published less than 1 week in the past contact Lytics Support Content collections in Lytics Experiences When setting up a recommended content Experience through the Lytics UI you will be asked to select an existing content collection or build a new collection to use in the experience Using collections in custom content recommendations If you re using the Lytics API to recommend content you can use the contentsegment query parameter to define the content collection you want to use The value of this parameter should be the ID of the content collection You can locate the ID of the collection from the URL on the summary page The ID will come after collections in the URL and will end before the beginning of the query parameters Affinity Alignment Score When building a recommendation based Experience you have access to the affinity alignment score automatically calculated by Lytics The alignment score measures the similarity between the selected Content Collection and the Audience This similarity is based upon the vector similarity of the most prevalent topics in the Collection and the most prevalent topics in the Audience If the Collection and the Audience share many of the same topics the alignment score will be high Conversely if the Collection and the Audience share few or no topics then the alignment score will be low For successful Content Recommendations we recommend pairing Collections and Audiences with moderate to high alignment If there is low alignment Content Recommendations may have low conversion rates and may be irrelevant to users in the selected Audience Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/documents",
    "title": "What is a Document?",
    "chunk_text": "What is a Document Lytics considers every piece of content as a document and calls the collection of every document a corpus Lytics automatically processes every web page for an account s site where each web page is a document In the Lytics app documents are surfaced in association with topics and in content recommendations Keep in mind that the Lytics Content Affinity Engine isn t limited to your website content All sorts of content can be sent to Lytics including product catalogs to power Product Recommendations Finding Documents To search for a document in Lytics go to the Search page under the Content menu Enter a URL or search term then click Search to find the relevant documents Clicking on a row will lead you to the Document Summary page which contains more details about the Document Document Summary Details Tab On an individual document page you are able to see all the fields associated to that particular document within the Details tab Collections Tab To see if this document is used in any Content Collections you can view the Collections tab If you make adjustments to any of your documents such as updating a blog post or refreshing a product landing page you can request Lytics to manually re classify the document This will ensure the Lytics content corpus has the most up to date information to serve in any of your content or product recommendations Adding New Documents By default Lytics observes new URLs in all data streams to identify content with which the user is registering activity New URLs are enriched as they re observed in incoming data that is Lytics can crawl a domain but proactively indexing a domain and looking for new content is not part of the Content Affinity Engine s workflow To add new documents to your corpus You can send new documents directly to our Content Corpus API The Corpus API respects three parameters url An optional URL for a new document While most documents are identified with a URL documents aren t constrained to be web accessible In the event that you have custom content that is not web accessible you ll need to supply the content via the text parameter text An optional string of content for a document This is only really necessary in the event that the new document is not web accessible topics An optional list of topics relevant to the document When Lytics tries to enrich the new document the resulting topics will be appended to this list In the event that you only want your own custom topics added to a document you ll need to contact your account representative at Lytics Support to remove all external enrichment settings You can also use the manual classification module to preview the enrichment of a URL and then add it to the content corpus Customizing Document Properties Adding custom properties to a document allows you to create advanced content collections based on those custom properties Imagine creating recommendations from a pool of custom categories promoting pages with custom seasonality components for particular holidays adding a custom SKU hierarchy to better reflect your product catalog within Lytics etc The Lytics crawler can detect custom document properties from custom meta tags any meta tag with a name property prefixed with lytics will be ingested and appended onto a document For example a meta tag with the name lytics sku will update the sku field on that document HTML meta name lytics sku content SKU123 meta name lytics category content electronics meta name lytics genre content action meta name lytics subgenre content spy fiction When Lytics scrapes new documents it will append those properties on the newly generated content entity within Lytics When adding a field that isn t currently represented within the content schema the content query will need to be updated with the new property Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/documents#content",
    "title": "What is a Document?",
    "chunk_text": "What is a Document Lytics considers every piece of content as a document and calls the collection of every document a corpus Lytics automatically processes every web page for an account s site where each web page is a document In the Lytics app documents are surfaced in association with topics and in content recommendations Keep in mind that the Lytics Content Affinity Engine isn t limited to your website content All sorts of content can be sent to Lytics including product catalogs to power Product Recommendations Finding Documents To search for a document in Lytics go to the Search page under the Content menu Enter a URL or search term then click Search to find the relevant documents Clicking on a row will lead you to the Document Summary page which contains more details about the Document Document Summary Details Tab On an individual document page you are able to see all the fields associated to that particular document within the Details tab Collections Tab To see if this document is used in any Content Collections you can view the Collections tab If you make adjustments to any of your documents such as updating a blog post or refreshing a product landing page you can request Lytics to manually re classify the document This will ensure the Lytics content corpus has the most up to date information to serve in any of your content or product recommendations Adding New Documents By default Lytics observes new URLs in all data streams to identify content with which the user is registering activity New URLs are enriched as they re observed in incoming data that is Lytics can crawl a domain but proactively indexing a domain and looking for new content is not part of the Content Affinity Engine s workflow To add new documents to your corpus You can send new documents directly to our Content Corpus API The Corpus API respects three parameters url An optional URL for a new document While most documents are identified with a URL documents aren t constrained to be web accessible In the event that you have custom content that is not web accessible you ll need to supply the content via the text parameter text An optional string of content for a document This is only really necessary in the event that the new document is not web accessible topics An optional list of topics relevant to the document When Lytics tries to enrich the new document the resulting topics will be appended to this list In the event that you only want your own custom topics added to a document you ll need to contact your account representative at Lytics Support to remove all external enrichment settings You can also use the manual classification module to preview the enrichment of a URL and then add it to the content corpus Customizing Document Properties Adding custom properties to a document allows you to create advanced content collections based on those custom properties Imagine creating recommendations from a pool of custom categories promoting pages with custom seasonality components for particular holidays adding a custom SKU hierarchy to better reflect your product catalog within Lytics etc The Lytics crawler can detect custom document properties from custom meta tags any meta tag with a name property prefixed with lytics will be ingested and appended onto a document For example a meta tag with the name lytics sku will update the sku field on that document HTML meta name lytics sku content SKU123 meta name lytics category content electronics meta name lytics genre content action meta name lytics subgenre content spy fiction When Lytics scrapes new documents it will append those properties on the newly generated content entity within Lytics When adding a field that isn t currently represented within the content schema the content query will need to be updated with the new property Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-collections",
    "title": "Introduction",
    "chunk_text": "Introduction Content Collections in Lytics allow you to programmatically organize filter and segment the documents that have been scraped enriched and analyzed by the Lytics Content Affinity Engine While Audiences focus on segmenting users based on their behaviors interests and affinities Collections are designed to segment and curate content based on its attributes topics and metadata By creating content collections you can gain a macro level view of your content allowing for easier management and curation Collections serve as powerful tools to not only monitor the types of content being gathered but also to define which content should be used in various applications like personalized recommendations campaigns and targeted experiences Building a content collection is a crucial step in setting up content recommendation workflows It enables you to fine tune which pieces of content will be recommended to users based on their interests and behaviors ensuring that your personalization strategies align with the most relevant and enriched documents in your content library Resources Creating Content Collections Create your first Content Collection Viewing Using Managing Collections Learn more about Content Collections Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-collections#content",
    "title": "Introduction",
    "chunk_text": "Introduction Content Collections in Lytics allow you to programmatically organize filter and segment the documents that have been scraped enriched and analyzed by the Lytics Content Affinity Engine While Audiences focus on segmenting users based on their behaviors interests and affinities Collections are designed to segment and curate content based on its attributes topics and metadata By creating content collections you can gain a macro level view of your content allowing for easier management and curation Collections serve as powerful tools to not only monitor the types of content being gathered but also to define which content should be used in various applications like personalized recommendations campaigns and targeted experiences Building a content collection is a crucial step in setting up content recommendation workflows It enables you to fine tune which pieces of content will be recommended to users based on their interests and behaviors ensuring that your personalization strategies align with the most relevant and enriched documents in your content library Resources Creating Content Collections Create your first Content Collection Viewing Using Managing Collections Learn more about Content Collections Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/creating-content-collections",
    "title": "Building a Content Collection",
    "chunk_text": "Building a Content Collection You can build a content collection in Lytics by navigating to Content Collections from the dashboard Then click the New Collection button above the list of current collections in your account Collections can either be dynamic or locked In the collection builder you can toggle this between these two options Dynamic content collections Dynamic collections are rule based so individual pieces of content may enter or exit the collection over time Dynamic collections are built by selecting and setting content filters which determine what content is present in the collection at any given time Preview content currently in the collection by hovering over a content card and clicking Preview this content For example you can create a collection that includes all articles published in the last 7 days This setting is ideal for making sure your content collection remains fresh Locked content collections A locked content collection is a static collection of documents that you hand select using the collection builder Content filters can be used as a searching mechanism to help find the specific documents you would like to add to your custom collection You can add content items to the collection by hovering over a content card and clicking Select this content Selected content items are indicted by cards with a blue border Once you save the collection documents are not added or removed until you edit and save the collection again Content Filters There are a number of filters available when navigating the content collection builder These filters can be combined in such a way that narrow down the documents in the collection using AND logic Filter content by title description or URL This filter acts as a catch all text search for the title description and URL of the document It can be a full or partial match to any of these fields and the input is case sensitive You can enter multiple values for this filter type and the results are not mutually exclusive That is if you have entered the search terms Dog and Cat each of the documents returned should contain Dog or Cat but not necessarily both OR logic Perhaps the most common use of this field is to filter by a URL path For example say you re looking to build a dynamic collection of all blog posts from your website and the URL of your blog posts match the following pattern http yourdomain com blog name of your post To build this collection you can enter blog into this filter Content type The type of a document is derived by the Lytics Content Affinity Engine while analyzing and indexing the document A document maybe be classified as any of the following Article Discussion Email FAQ Image Job Other Person Post Product Profile Video These checkbox filters allow you to view content of only the selected type s For example if you want to build a dynamic collection of videos to recommend to users you might select the Video content type Published date This filter allows you to limit documents based on their date of publication You may filter documents published after a date relative to the current time or after a static date in time Relative dates may be set by increments of days weeks months or years Using a relative date filter allows you ensure that the content in your collection is evergreen For example you may want to only recommend content that was published in the last week If you launched a new product recently you may want to build a collection of content relevant to that launch Using the static date filter set to the day before the launch combined with other filters could help achieve this Features The features filter allows you to select whether or not the content should have a description and or a thumbnail image Both the image and description fields are extracted from HTML meta tags during the scraping process of the content affinity engine Enabling these settings may be especially useful if you are looking to implement content recommendations into a space on your website and you wish to include more than just a title and link to the content Author The author filter allows you to include only articles written by the author s selected If you have a long list of authors you can use the search bar to find the author s you are looking for Affinities The Affinities filter lists all the curated Affinities in your account Since Affinities are a group of related topics this option can save you time when building collections for a campaign targeting users interested in several related subjects or products Topics The Topics filter lists all the topics present in your account You can select one or multiple to filter the content by and use the search bar to find specific topics Building a collection filtered by topic can be especially helpful when running a topic specific campaign Advanced Collection Editor The filters above cover many common use cases However in some cases a more advanced set of filtering criteria is required This is achievable via the Advanced Editor which is accessible from the triple dot menu on a collection summary or from the collection editor view From the Advanced Editor you can leverage the inclusion of other content collections or a custom rule just as you would with custom rules in the core Audience Builder These custom rules surface the full set of fields associated with your content during the classification process Word count language in addition to all filters referenced above are accessible through this advanced editor Currently the Advanced Editor is only accessible for existing collections If you are looking to create a net new collection simply create a new collection with a basic filter and save From there you can access the Advanced Editor Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/creating-content-collections#content",
    "title": "Building a Content Collection",
    "chunk_text": "Building a Content Collection You can build a content collection in Lytics by navigating to Content Collections from the dashboard Then click the New Collection button above the list of current collections in your account Collections can either be dynamic or locked In the collection builder you can toggle this between these two options Dynamic content collections Dynamic collections are rule based so individual pieces of content may enter or exit the collection over time Dynamic collections are built by selecting and setting content filters which determine what content is present in the collection at any given time Preview content currently in the collection by hovering over a content card and clicking Preview this content For example you can create a collection that includes all articles published in the last 7 days This setting is ideal for making sure your content collection remains fresh Locked content collections A locked content collection is a static collection of documents that you hand select using the collection builder Content filters can be used as a searching mechanism to help find the specific documents you would like to add to your custom collection You can add content items to the collection by hovering over a content card and clicking Select this content Selected content items are indicted by cards with a blue border Once you save the collection documents are not added or removed until you edit and save the collection again Content Filters There are a number of filters available when navigating the content collection builder These filters can be combined in such a way that narrow down the documents in the collection using AND logic Filter content by title description or URL This filter acts as a catch all text search for the title description and URL of the document It can be a full or partial match to any of these fields and the input is case sensitive You can enter multiple values for this filter type and the results are not mutually exclusive That is if you have entered the search terms Dog and Cat each of the documents returned should contain Dog or Cat but not necessarily both OR logic Perhaps the most common use of this field is to filter by a URL path For example say you re looking to build a dynamic collection of all blog posts from your website and the URL of your blog posts match the following pattern http yourdomain com blog name of your post To build this collection you can enter blog into this filter Content type The type of a document is derived by the Lytics Content Affinity Engine while analyzing and indexing the document A document maybe be classified as any of the following Article Discussion Email FAQ Image Job Other Person Post Product Profile Video These checkbox filters allow you to view content of only the selected type s For example if you want to build a dynamic collection of videos to recommend to users you might select the Video content type Published date This filter allows you to limit documents based on their date of publication You may filter documents published after a date relative to the current time or after a static date in time Relative dates may be set by increments of days weeks months or years Using a relative date filter allows you ensure that the content in your collection is evergreen For example you may want to only recommend content that was published in the last week If you launched a new product recently you may want to build a collection of content relevant to that launch Using the static date filter set to the day before the launch combined with other filters could help achieve this Features The features filter allows you to select whether or not the content should have a description and or a thumbnail image Both the image and description fields are extracted from HTML meta tags during the scraping process of the content affinity engine Enabling these settings may be especially useful if you are looking to implement content recommendations into a space on your website and you wish to include more than just a title and link to the content Author The author filter allows you to include only articles written by the author s selected If you have a long list of authors you can use the search bar to find the author s you are looking for Affinities The Affinities filter lists all the curated Affinities in your account Since Affinities are a group of related topics this option can save you time when building collections for a campaign targeting users interested in several related subjects or products Topics The Topics filter lists all the topics present in your account You can select one or multiple to filter the content by and use the search bar to find specific topics Building a collection filtered by topic can be especially helpful when running a topic specific campaign Advanced Collection Editor The filters above cover many common use cases However in some cases a more advanced set of filtering criteria is required This is achievable via the Advanced Editor which is accessible from the triple dot menu on a collection summary or from the collection editor view From the Advanced Editor you can leverage the inclusion of other content collections or a custom rule just as you would with custom rules in the core Audience Builder These custom rules surface the full set of fields associated with your content during the classification process Word count language in addition to all filters referenced above are accessible through this advanced editor Currently the Advanced Editor is only accessible for existing collections If you are looking to create a net new collection simply create a new collection with a basic filter and save From there you can access the Advanced Editor Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/viewing-content-collections",
    "title": "https://docs.lytics.com/docs/viewing-content-collections",
    "chunk_text": "Collections List On the Collections page located in the Content menu you ll find a list of the Collections available in your account By default Lytics automatically generates three key Collections Documents With Images This collections includes all documents with a primary_image field typically sourced from meta tags with an og image property All Documents Includes every document that Lytics has collected from your content sources Default Recommendation Collection Features documents that have both images and Topics and is designed for use in onsite Recommendation Experiences Collection Summary Page When you click on a Collection from the list you ll be taken to the Collection Summary page which includes the following details Collection Definition This section outlines the Segment definition along with an AI translated human readable version of the criteria Experiences Using this Collection A list of all active Experiences that utilize the Collection Collection Report A Size Report Component displays the number of documents in the Collection over time Composition Report Components provides detailed breakdowns of the Collection s Topics Authors URL Paths and HTTP Status codes Documents Tab The Documents tab displays a subset of up to 100 documents from the Content Collections Each document card includes the following details primary_image title description Additionally each card provides links to the document s URL and its Identity view Recommendations Tab The Recommendations tab offers a variety of tools and resources to help you create test and implement content recommendations within Lytics This section is designed to streamline the process of using Lytics powerful Recommendation engine enabling you to generate personalized content experiences for your users Create a New Recommendation Experience This section provides a direct link to create a new Recommendation Experience An Experience in Lytics allows you to serve personalized content such as articles products or promotions to users based on their individual affinities and behaviors You can use the intuitive interface to quickly set up and customize these Experiences ensuring that your users see relevant content that drives engagement Documentation for the Content Recommendation For those looking to dive deeper into programmatic access Lytics provides a comprehensive guide to the Content Recommendation API This API allows developers to fetch content recommendations on demand enabling integrations with third party systems or custom user interfaces The documentation provides detailed information on how to authenticate structure API calls and interpret the responses Code Snippets for Multiple Languages Lytics simplifies the process of integrating content recommendations into your system by providing ready made code snippets These snippets are available in several popular programming languages including Bash JavaScript Python and Go Whether you re a seasoned developer or just getting started these code snippets will help you quickly integrate the Lytics Content Recommendation API into your project You can copy and paste the provided code to get up and running in minutes Recommendation Playground The Recommendations tab also features a playground where you can test and preview recommendations for individual users By entering a user s unique identifier such as their user ID you can see real time results of what Lytics would recommend for that specific user This feature is particularly useful for validation and testing purposes After clicking the Recommend button Lytics will return a list of personalized content suggestions for the user Each recommendation will be displayed in a table showing URL The link to the recommended content Image A thumbnail or visual representation of the content Title The title of the recommended content ID The unique identifier for the recommended content item This playground offers a hands on way to understand how Lytics recommendations align with user interests providing a deeper level of insight and confidence before rolling out personalized content to your audience Managing Content Collections When working with Content Collections in Lytics you have several management options available via the menu located next to the Collection title at the top of the page These options allow you to efficiently duplicate edit delete or refresh re enrich your collections ensuring that they remain relevant and aligned with your evolving content strategy Duplicate Selecting Duplicate creates a copy of the existing collection and takes you directly to the Collection Builder Here you can modify the parameters of the duplicated collection to fine tune the content being gathered This is especially useful if you want to create a new Collection that is similar to an existing one but with slight adjustments such as targeting a different subset of content or users Duplicating saves time by allowing you to leverage your previous work instead of starting from scratch Edit Clicking Edit opens the Content Collection Builder for the selected collection enabling you to change the criteria or settings that define the collection Whether you need to update filters or adjust the logic behind what documents are included editing lets you easily refine the collection over time As your content strategy shifts or new types of content are added to your site this option ensures that your collections remain up to date and aligned with your goals Delete The Delete option permanently removes the collection from your account freeing up resources and clearing clutter from the interface However there are some restrictions You cannot delete a collection if it is being used in any legacy Personalize campaigns Experiences or workflows Before deleting you ll need to first remove the collection from any campaigns or processes that rely on it A warning message will notify you if the collection is in use elsewhere preventing accidental deletions and ensuring you don t disrupt any live campaigns or workflows Warning Be cautious when deleting collections that may be tied to essential processes Always ensure that they re no longer in active use to avoid unintended disruptions in personalization or recommendations Re Enrich The Re Enrich option allows you to force Lytics to rescan and re process all documents within a collection This is particularly useful when you ve made significant updates to your content such as changing meta tags adding new metadata or updating page structures Re enriching ensures that Lytics captures the most current data and classifications for the documents in the collection This process will refresh the topics keywords and metadata that power recommendations and user affinity models helping to keep your content classification accurate and relevant for personalization Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/viewing-content-collections#content",
    "title": "https://docs.lytics.com/docs/viewing-content-collections#content",
    "chunk_text": "Collections List On the Collections page located in the Content menu you ll find a list of the Collections available in your account By default Lytics automatically generates three key Collections Documents With Images This collections includes all documents with a primary_image field typically sourced from meta tags with an og image property All Documents Includes every document that Lytics has collected from your content sources Default Recommendation Collection Features documents that have both images and Topics and is designed for use in onsite Recommendation Experiences Collection Summary Page When you click on a Collection from the list you ll be taken to the Collection Summary page which includes the following details Collection Definition This section outlines the Segment definition along with an AI translated human readable version of the criteria Experiences Using this Collection A list of all active Experiences that utilize the Collection Collection Report A Size Report Component displays the number of documents in the Collection over time Composition Report Components provides detailed breakdowns of the Collection s Topics Authors URL Paths and HTTP Status codes Documents Tab The Documents tab displays a subset of up to 100 documents from the Content Collections Each document card includes the following details primary_image title description Additionally each card provides links to the document s URL and its Identity view Recommendations Tab The Recommendations tab offers a variety of tools and resources to help you create test and implement content recommendations within Lytics This section is designed to streamline the process of using Lytics powerful Recommendation engine enabling you to generate personalized content experiences for your users Create a New Recommendation Experience This section provides a direct link to create a new Recommendation Experience An Experience in Lytics allows you to serve personalized content such as articles products or promotions to users based on their individual affinities and behaviors You can use the intuitive interface to quickly set up and customize these Experiences ensuring that your users see relevant content that drives engagement Documentation for the Content Recommendation For those looking to dive deeper into programmatic access Lytics provides a comprehensive guide to the Content Recommendation API This API allows developers to fetch content recommendations on demand enabling integrations with third party systems or custom user interfaces The documentation provides detailed information on how to authenticate structure API calls and interpret the responses Code Snippets for Multiple Languages Lytics simplifies the process of integrating content recommendations into your system by providing ready made code snippets These snippets are available in several popular programming languages including Bash JavaScript Python and Go Whether you re a seasoned developer or just getting started these code snippets will help you quickly integrate the Lytics Content Recommendation API into your project You can copy and paste the provided code to get up and running in minutes Recommendation Playground The Recommendations tab also features a playground where you can test and preview recommendations for individual users By entering a user s unique identifier such as their user ID you can see real time results of what Lytics would recommend for that specific user This feature is particularly useful for validation and testing purposes After clicking the Recommend button Lytics will return a list of personalized content suggestions for the user Each recommendation will be displayed in a table showing URL The link to the recommended content Image A thumbnail or visual representation of the content Title The title of the recommended content ID The unique identifier for the recommended content item This playground offers a hands on way to understand how Lytics recommendations align with user interests providing a deeper level of insight and confidence before rolling out personalized content to your audience Managing Content Collections When working with Content Collections in Lytics you have several management options available via the menu located next to the Collection title at the top of the page These options allow you to efficiently duplicate edit delete or refresh re enrich your collections ensuring that they remain relevant and aligned with your evolving content strategy Duplicate Selecting Duplicate creates a copy of the existing collection and takes you directly to the Collection Builder Here you can modify the parameters of the duplicated collection to fine tune the content being gathered This is especially useful if you want to create a new Collection that is similar to an existing one but with slight adjustments such as targeting a different subset of content or users Duplicating saves time by allowing you to leverage your previous work instead of starting from scratch Edit Clicking Edit opens the Content Collection Builder for the selected collection enabling you to change the criteria or settings that define the collection Whether you need to update filters or adjust the logic behind what documents are included editing lets you easily refine the collection over time As your content strategy shifts or new types of content are added to your site this option ensures that your collections remain up to date and aligned with your goals Delete The Delete option permanently removes the collection from your account freeing up resources and clearing clutter from the interface However there are some restrictions You cannot delete a collection if it is being used in any legacy Personalize campaigns Experiences or workflows Before deleting you ll need to first remove the collection from any campaigns or processes that rely on it A warning message will notify you if the collection is in use elsewhere preventing accidental deletions and ensuring you don t disrupt any live campaigns or workflows Warning Be cautious when deleting collections that may be tied to essential processes Always ensure that they re no longer in active use to avoid unintended disruptions in personalization or recommendations Re Enrich The Re Enrich option allows you to force Lytics to rescan and re process all documents within a collection This is particularly useful when you ve made significant updates to your content such as changing meta tags adding new metadata or updating page structures Re enriching ensures that Lytics captures the most current data and classifications for the documents in the collection This process will refresh the topics keywords and metadata that power recommendations and user affinity models helping to keep your content classification accurate and relevant for personalization Updated 5 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/engines",
    "title": "https://docs.lytics.com/docs/engines",
    "chunk_text": "Lytics Interest Engines allow you to analyze interpret and incorporate user interests into your marketing activities While Lytics Interest Engine is primarily used with webpages Lytics provides 3 kinds of Interest Engines for various use cases and tactics The Default engine which examines web data using NLP Natural language processing to generate Topics think keywords categories and subjects This is the standard Interest Engine and requires no out of the box configuration Custom Affinity Engines allow you to link custom fields associated with your content to your users When incorporating data from Shopify or offline systems that contain product data Custom Affinity Engines allow you to associate features attributes from your inventory with your users For example consider a database of articles with genre data With a Custom Affinity Engine you can track which genres each of your users has interacted with Collaborative Filters empower you to recommend items based on what other users do This is analogous to users also bought or users also read recommendations that are often surfaced on Amazon or other websites Using a Collaborative Filter algorithm Lytics analyzes user behavior and exposes Recommendations via the Recommendation API How to use Interest Engines Interest Engines are a rather foreign concept and you may be confused about how this can help improve your marketing initiatives Keep in mind that the end goal is to gain a better understanding of your users With Lytics Interest Engine there are two commonly used techniques to best utilize this powerful data Topics Affinities With the Default engine and Custom Affinity Engines you can use the Lytics UI to view the Topic Taxonomy This visualization displays how your Topics co occur and relate to each other The Topic Taxonomy view can be useful to visualize similar Topics which can be useful in creating Affinities User Segmentation Lytics Interest Engines output a new field on the user profile that captures the interests that a user has exhibited Using this data you can create high powered audiences to target users with specific interests using Lytics Audience Builder Recommendations Using Lytics Recommendation API you can enable personalized recommendations for your users based on their activities For instance you can recommend URLs based on a user s browsing history or recommend products based on a user s purchase history To get started with Recommendations check out the Recommendation documentation or navigate to the Experiences tab How to Create Interest Engines To create a new Interest Engine navigate to the Engines page in the Content navigation dropdown and click on the New Interest Engine button When clicked this displays a modal that allows you to select between Custom Affinity Engine Shopify Engine Collaborative Filter Each option will present you with a wizard to configure the Engine Please contact Lytics Support if you experience any issues creating your new Interest Engine Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/engines#content",
    "title": "https://docs.lytics.com/docs/engines#content",
    "chunk_text": "Lytics Interest Engines allow you to analyze interpret and incorporate user interests into your marketing activities While Lytics Interest Engine is primarily used with webpages Lytics provides 3 kinds of Interest Engines for various use cases and tactics The Default engine which examines web data using NLP Natural language processing to generate Topics think keywords categories and subjects This is the standard Interest Engine and requires no out of the box configuration Custom Affinity Engines allow you to link custom fields associated with your content to your users When incorporating data from Shopify or offline systems that contain product data Custom Affinity Engines allow you to associate features attributes from your inventory with your users For example consider a database of articles with genre data With a Custom Affinity Engine you can track which genres each of your users has interacted with Collaborative Filters empower you to recommend items based on what other users do This is analogous to users also bought or users also read recommendations that are often surfaced on Amazon or other websites Using a Collaborative Filter algorithm Lytics analyzes user behavior and exposes Recommendations via the Recommendation API How to use Interest Engines Interest Engines are a rather foreign concept and you may be confused about how this can help improve your marketing initiatives Keep in mind that the end goal is to gain a better understanding of your users With Lytics Interest Engine there are two commonly used techniques to best utilize this powerful data Topics Affinities With the Default engine and Custom Affinity Engines you can use the Lytics UI to view the Topic Taxonomy This visualization displays how your Topics co occur and relate to each other The Topic Taxonomy view can be useful to visualize similar Topics which can be useful in creating Affinities User Segmentation Lytics Interest Engines output a new field on the user profile that captures the interests that a user has exhibited Using this data you can create high powered audiences to target users with specific interests using Lytics Audience Builder Recommendations Using Lytics Recommendation API you can enable personalized recommendations for your users based on their activities For instance you can recommend URLs based on a user s browsing history or recommend products based on a user s purchase history To get started with Recommendations check out the Recommendation documentation or navigate to the Experiences tab How to Create Interest Engines To create a new Interest Engine navigate to the Engines page in the Content navigation dropdown and click on the New Interest Engine button When clicked this displays a modal that allows you to select between Custom Affinity Engine Shopify Engine Collaborative Filter Each option will present you with a wizard to configure the Engine Please contact Lytics Support if you experience any issues creating your new Interest Engine Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/default-interest-engine",
    "title": "https://docs.lytics.com/docs/default-interest-engine",
    "chunk_text": "The Default Interest Engine works by analyzing web data collected via the Lytics Javascript Tag Out of the box Lytics ingests and keeps track of all new URLs that we receive For each URL we use a variety of NLP Natural Language Processing tools to extract Topics For more information about the Topic Enrichment process please refer to the Enrichment documentation The Header displays information about how the Default Interest Engine is configured Though these values are uneditable additional customization can be achieved with Custom Interest Engines For the Default Engine web pages are saved in the content table with a unique identifier known as a hashedurl simply a hash function applied to a parsed URL For items in the content table Topics or features are saved in the global field On the user side we keep track of the URLs a user has browsed in the hashedurls field and we output Topics that a user has interacted with to the lytics_content field The UI for Default Interest Engine shows the Summary Topics and Affinities In the Summary section we display a Topic Taxonomy a force directed graph that maps how Topics interact with each other The table next to the Taxonomy displays statistics about your Users and Topics Expanding the rows in the table will display sample items and users and the associated Topics Topics Affinities Topics Affinities can be viewed under their respective tabs The Topics view shows all of the Topics associated with the Default Interest Engine Clicking on a Topic will present more information a specific Topic Similarly the Affinities tab displays all the Affinities associated with the Default Interest Engine Using the Default Interest Engine Since the Default Interest Engine is designed to work quickly out of the box for new accounts you can quickly take advantage of all of the offerings provided Interest based user segmentation Leverage Topics via the lytics_content field and Affinities via the lytics_rollup field to create powerful interest based audiences Recommendations As Lytics gathers all information about your webpages through the Javascript tag Lytics can power dynamic Recommendations based on user interests Export to other tools The NLP based Topics and user interests saved in the lytics_content field provide powerful insights that can be useful in downstream dashboard and analysis tools This data can also be exported to email tools for powerful email personalization Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/default-interest-engine#content",
    "title": "https://docs.lytics.com/docs/default-interest-engine#content",
    "chunk_text": "The Default Interest Engine works by analyzing web data collected via the Lytics Javascript Tag Out of the box Lytics ingests and keeps track of all new URLs that we receive For each URL we use a variety of NLP Natural Language Processing tools to extract Topics For more information about the Topic Enrichment process please refer to the Enrichment documentation The Header displays information about how the Default Interest Engine is configured Though these values are uneditable additional customization can be achieved with Custom Interest Engines For the Default Engine web pages are saved in the content table with a unique identifier known as a hashedurl simply a hash function applied to a parsed URL For items in the content table Topics or features are saved in the global field On the user side we keep track of the URLs a user has browsed in the hashedurls field and we output Topics that a user has interacted with to the lytics_content field The UI for Default Interest Engine shows the Summary Topics and Affinities In the Summary section we display a Topic Taxonomy a force directed graph that maps how Topics interact with each other The table next to the Taxonomy displays statistics about your Users and Topics Expanding the rows in the table will display sample items and users and the associated Topics Topics Affinities Topics Affinities can be viewed under their respective tabs The Topics view shows all of the Topics associated with the Default Interest Engine Clicking on a Topic will present more information a specific Topic Similarly the Affinities tab displays all the Affinities associated with the Default Interest Engine Using the Default Interest Engine Since the Default Interest Engine is designed to work quickly out of the box for new accounts you can quickly take advantage of all of the offerings provided Interest based user segmentation Leverage Topics via the lytics_content field and Affinities via the lytics_rollup field to create powerful interest based audiences Recommendations As Lytics gathers all information about your webpages through the Javascript tag Lytics can power dynamic Recommendations based on user interests Export to other tools The NLP based Topics and user interests saved in the lytics_content field provide powerful insights that can be useful in downstream dashboard and analysis tools This data can also be exported to email tools for powerful email personalization Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/custom-interest-engines",
    "title": "https://docs.lytics.com/docs/custom-interest-engines",
    "chunk_text": "If you have your own set of attributes features or Topics for your inventory then you may consider creating a Custom Interest Engine These Engines allow you to configure any field on the content table to be a Topic that gets outputted onto user profiles Consider the following examples of Custom Interest Engines Shopify Data When importing Shopify data Lytics captures all attributes and fields associated with your items Suppose each item has a shopify_product_tags field with values such as wool cotton polyester etc If we create a Custom Interest Engine using the shopify_product_tags field Lytics will output a shopify_affinities_tag_ field to the user profiles that capture which tags a user has interacted with or purchased You can then use this data to target users with a high interest in specific tags In the screenshot below we can see the popular Topics or tags consumed by your users Genre or Category Data In some cases your CMS may allow you to append additional meta data to your web pages If such data exists a Custom Interest Engine will allow you to capture data such as genre or category and output it to user profiles Offline Data If you have a rich collection of offline product data a Custom Interest Engine can be used to enrich your user profiles Consider a supermarket with a corpus of discount coupons that exist in an internal database each with an ID metadata and category information Once the data has been imported a Custom Interest Engine can be used to link and enrich user profiles based on which coupons they have used Creating a New Custom Interest Engine To create a new Custom Interest Engine click on the New Interest Engine button on the Interest Engines page Once the modal opens up clicking on the Affinity Customization tile will open a wizard The first step requires selecting the unique identifier and features or Topics from your inventory ie the content table In the screenshot below we are using the Shopify example from earlier and using the shopify_product_id and shopify_product_tags fields Once the Inventory and Features have been identified the next step requires mapping the data to your user profiles The Inventory Field refers to the field on the user table that contains a set of shopify_product_ids ie a set of unique identifiers from the content table In this case the shopify_product_ids field is an array of IDs that a user has purchased Next configure the name of the output field this field will contain the shopify_product_tags that a user has expressed interest in based on their shopify_product_ids Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/custom-interest-engines#content",
    "title": "https://docs.lytics.com/docs/custom-interest-engines#content",
    "chunk_text": "If you have your own set of attributes features or Topics for your inventory then you may consider creating a Custom Interest Engine These Engines allow you to configure any field on the content table to be a Topic that gets outputted onto user profiles Consider the following examples of Custom Interest Engines Shopify Data When importing Shopify data Lytics captures all attributes and fields associated with your items Suppose each item has a shopify_product_tags field with values such as wool cotton polyester etc If we create a Custom Interest Engine using the shopify_product_tags field Lytics will output a shopify_affinities_tag_ field to the user profiles that capture which tags a user has interacted with or purchased You can then use this data to target users with a high interest in specific tags In the screenshot below we can see the popular Topics or tags consumed by your users Genre or Category Data In some cases your CMS may allow you to append additional meta data to your web pages If such data exists a Custom Interest Engine will allow you to capture data such as genre or category and output it to user profiles Offline Data If you have a rich collection of offline product data a Custom Interest Engine can be used to enrich your user profiles Consider a supermarket with a corpus of discount coupons that exist in an internal database each with an ID metadata and category information Once the data has been imported a Custom Interest Engine can be used to link and enrich user profiles based on which coupons they have used Creating a New Custom Interest Engine To create a new Custom Interest Engine click on the New Interest Engine button on the Interest Engines page Once the modal opens up clicking on the Affinity Customization tile will open a wizard The first step requires selecting the unique identifier and features or Topics from your inventory ie the content table In the screenshot below we are using the Shopify example from earlier and using the shopify_product_id and shopify_product_tags fields Once the Inventory and Features have been identified the next step requires mapping the data to your user profiles The Inventory Field refers to the field on the user table that contains a set of shopify_product_ids ie a set of unique identifiers from the content table In this case the shopify_product_ids field is an array of IDs that a user has purchased Next configure the name of the output field this field will contain the shopify_product_tags that a user has expressed interest in based on their shopify_product_ids Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/collaborative-filters",
    "title": "https://docs.lytics.com/docs/collaborative-filters",
    "chunk_text": "To successfully utilize Lytics Default and Custom Affinity Engines it is necessary to have a robust set of Topics or features However in some cases it becomes difficult to add Topics to your items which may prevent you from executing Interest based use cases To address some of the limitations of content based filtering Collaborative Filtering uses similarities between users and items simultaneously to provide recommendations This allows for serendipitous recommendations that is collaborative filtering models can recommend an item to user A based on the interests of a similar user B For example consider the screenshot above which shows a Collaborative Filter Engine based on Shopify purchase data By creating a Collaborative Filter Engine based on user purchase data we can drive users also bought type recommendations In this case The Identifier on content table is shopify_product_id This refers to the unique identifier for the items in your inventory the content table The Inventory from user profiles is shopify_product_ids This refers to the field on the user profiles that contain a user s purchase history The bar chart shows the most popular shopify_product_id IDs across your users How to Use Collaborative Filter Engines The primary way to leverage Collaborative Filter Engines is through Recommendations While Lytics Recommendation API and Experience toolkit allow you to deploy Recommendation campaigns onsite or via email the Collaborative Filter UI allows you to experiment and test out Lytics Recommendations In the Recommend tab you can fetch Recommendations for any user Simply select the identifier field _uids in this case and click on the Recommend button This will request Recommendations for the selected user using the Lytics Recommendation API The Recommended items are displayed below The Item Recommendation input allows you to fetch similar items for any given item In the example below we are finding items similar to the item with shopify_product_id 631195017394 This can be used to find similar products based on user behavior Creating a New Collaborative Filter Engine To create a new Collaborative Filter Engine click on the New Interest Engine button and click on Collaborative Filter This will open a wizard with the following options When creating a Collaborative Filter Engine there are 4 fields Name required the name of the new Collaborative Filter Description optional a description for your Collaborative Filter Inventory ID required the identifier associated with the items in your inventory ie an identifier from the content table Inventory Field required the field on the user table that contains a user s activity ie purchase history browsing history etc This field must be a set or map type and must contain IDs referenced in the Inventory ID field Once you create your new Collaborative Filter wizard Lytics will train a Collaborative Filter model within minutes Once the model has finished training the UI will be available to use as well as Lytics Recommendation API Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/collaborative-filters#content",
    "title": "https://docs.lytics.com/docs/collaborative-filters#content",
    "chunk_text": "To successfully utilize Lytics Default and Custom Affinity Engines it is necessary to have a robust set of Topics or features However in some cases it becomes difficult to add Topics to your items which may prevent you from executing Interest based use cases To address some of the limitations of content based filtering Collaborative Filtering uses similarities between users and items simultaneously to provide recommendations This allows for serendipitous recommendations that is collaborative filtering models can recommend an item to user A based on the interests of a similar user B For example consider the screenshot above which shows a Collaborative Filter Engine based on Shopify purchase data By creating a Collaborative Filter Engine based on user purchase data we can drive users also bought type recommendations In this case The Identifier on content table is shopify_product_id This refers to the unique identifier for the items in your inventory the content table The Inventory from user profiles is shopify_product_ids This refers to the field on the user profiles that contain a user s purchase history The bar chart shows the most popular shopify_product_id IDs across your users How to Use Collaborative Filter Engines The primary way to leverage Collaborative Filter Engines is through Recommendations While Lytics Recommendation API and Experience toolkit allow you to deploy Recommendation campaigns onsite or via email the Collaborative Filter UI allows you to experiment and test out Lytics Recommendations In the Recommend tab you can fetch Recommendations for any user Simply select the identifier field _uids in this case and click on the Recommend button This will request Recommendations for the selected user using the Lytics Recommendation API The Recommended items are displayed below The Item Recommendation input allows you to fetch similar items for any given item In the example below we are finding items similar to the item with shopify_product_id 631195017394 This can be used to find similar products based on user behavior Creating a New Collaborative Filter Engine To create a new Collaborative Filter Engine click on the New Interest Engine button and click on Collaborative Filter This will open a wizard with the following options When creating a Collaborative Filter Engine there are 4 fields Name required the name of the new Collaborative Filter Description optional a description for your Collaborative Filter Inventory ID required the identifier associated with the items in your inventory ie an identifier from the content table Inventory Field required the field on the user table that contains a user s activity ie purchase history browsing history etc This field must be a set or map type and must contain IDs referenced in the Inventory ID field Once you create your new Collaborative Filter wizard Lytics will train a Collaborative Filter model within minutes Once the model has finished training the UI will be available to use as well as Lytics Recommendation API Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/ml-modeling",
    "title": "https://docs.lytics.com/docs/ml-modeling",
    "chunk_text": "Lytics Lookalike Models allow marketers to leverage Machine Learning to easily create powerful propensity models and lookalike audiences Powered by modern machine learning techniques and our comprehensive model building pipeline Lytics Lookalike Models make it easy for marketers to incorporate predictive data into their marketing initiatives with minimal effort Lytics Lookalike Models are propensity models that can be used to predict the likelihood that a user customer will perform a certain action These models can be used to identify repeat customers users likely to churn etc By leveraging the predictions outputted by Lytics Lookalike Models you can create Lookalike Audiences to accelerate your marketing use cases Machine Learning at Your Fingertips Creating a Lookalike Model is as simple as selecting a Target and Source audience to drive users from the source to the target think unknown known 1 time purchaser repeat purchaser etc Once configured Lytics will train a model based on the data accessible on user profiles and output meaningful insights and predictions to help you grow your target audience Some common use cases for Lookalike Models include Unknown to Known among my unknown users find users who are likely to sign up for an email Expand Reach among my users who ve purchased one item find users who are likely to become repeat purchasers Churn Prevention find customers who are at risk of churning Built by Data Scientists for Marketers Lytics Lookalike Models incorporate modern techniques to ensure your models outperform traditional marketing methods When building models Lytics applies feature reduction techniques and trains a set of Random Forests and Logistic Regression models followed by a suite of model tuning and cross validation to determine the best configuration and hyper parameters Unlike traditional statistical modeling approaches Lytics Lookalike Models update user scores in real time so you can start targeting users not only when the model is built but also as their behavior changes or new users are added This means that a prediction for a user will update after every event ie page click email open which helps ensure that you are targeting the best users Rather than using a static list predictive Audiences Lookalike Audiences built from Lookalike Models provide a dynamic pool of users that will respond best when they are ready for ads or other marketing messages You can also adjust your targeting criteria to make the best tradeoffs between reach and accuracy to maximize your marketing budgets Lytics also provides robust APIs for Lookalike Models so your engineering team can quickly create and test models via the Lytics API Resources Getting Started Building Lookalike Models Evaluating Lookalike Models Creating Predictive Audiences Improving your Lookalike Models Python Notebook Updated about 1 month ago Building Lookalike Models",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/ml-modeling#content",
    "title": "https://docs.lytics.com/docs/ml-modeling#content",
    "chunk_text": "Lytics Lookalike Models allow marketers to leverage Machine Learning to easily create powerful propensity models and lookalike audiences Powered by modern machine learning techniques and our comprehensive model building pipeline Lytics Lookalike Models make it easy for marketers to incorporate predictive data into their marketing initiatives with minimal effort Lytics Lookalike Models are propensity models that can be used to predict the likelihood that a user customer will perform a certain action These models can be used to identify repeat customers users likely to churn etc By leveraging the predictions outputted by Lytics Lookalike Models you can create Lookalike Audiences to accelerate your marketing use cases Machine Learning at Your Fingertips Creating a Lookalike Model is as simple as selecting a Target and Source audience to drive users from the source to the target think unknown known 1 time purchaser repeat purchaser etc Once configured Lytics will train a model based on the data accessible on user profiles and output meaningful insights and predictions to help you grow your target audience Some common use cases for Lookalike Models include Unknown to Known among my unknown users find users who are likely to sign up for an email Expand Reach among my users who ve purchased one item find users who are likely to become repeat purchasers Churn Prevention find customers who are at risk of churning Built by Data Scientists for Marketers Lytics Lookalike Models incorporate modern techniques to ensure your models outperform traditional marketing methods When building models Lytics applies feature reduction techniques and trains a set of Random Forests and Logistic Regression models followed by a suite of model tuning and cross validation to determine the best configuration and hyper parameters Unlike traditional statistical modeling approaches Lytics Lookalike Models update user scores in real time so you can start targeting users not only when the model is built but also as their behavior changes or new users are added This means that a prediction for a user will update after every event ie page click email open which helps ensure that you are targeting the best users Rather than using a static list predictive Audiences Lookalike Audiences built from Lookalike Models provide a dynamic pool of users that will respond best when they are ready for ads or other marketing messages You can also adjust your targeting criteria to make the best tradeoffs between reach and accuracy to maximize your marketing budgets Lytics also provides robust APIs for Lookalike Models so your engineering team can quickly create and test models via the Lytics API Resources Getting Started Building Lookalike Models Evaluating Lookalike Models Creating Predictive Audiences Improving your Lookalike Models Python Notebook Updated about 1 month ago Building Lookalike Models",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/getting-started-1",
    "title": "Why Use Lookalike Models?",
    "chunk_text": "Why Use Lookalike Models To demonstrate how Lookalike Models can bring your marketing team s segmentation strategy to the next level we ve outlined how you could segment users by hand compared to how a Lookalike Model would accomplish this task For our example use case the goal is to identify users who are likely to buy a travel package for the summer How a marketer may create segmentation rules by hand Users buy travel packages months in advance so identify users who are visiting in winter and spring Users who receive promotions are more likely to buy expensive items Users who have already bought a package are likely to buy it again Targeting users that match these three rules will certainly improve the efficacy of a campaign but why stop at these Are there more factors that can be used to refine this group of users How Lytics Lookalike Models would do it instead What do users who have bought travel packages in the past look like i e what features do they have in common Analyze all the information known about these users who have bought travel packages Determine which features are significant and which values of these features are significant e g visiting the website is important specifically three to five times Analyze all the information known about users who have not bought travel packages Determine which users share common features with past summer travel package purchasers Take the most similar users to use in targeting The key difference here is that a marketer may use a handful of criteria using logical heuristics to define a segment of users while Lookalike Models will look at hundreds of factors including potential non obvious impactful criteria to define an audience of users for the same purpose Choosing Your Source Target Audiences In traditional supervised machine learning we collect samples of data with one field represented as the Target This is what we look to model or classify Some examples of real world classifiers are predicting whether an email is spam or not predicting if the weather tomorrow will be cloudy or sunny classifying a news article as happy or sad or classifying an image as a dog or not a dog We do this same thing in Lytics Lookalike Modeling but you get to choose what the target we want to predict is This works by providing two audiences a Target and Source Target The target audience is the group of users you want to model and predict i e the users you want to find more of Most of the time this audience will represent users that have done something favorable that is worth repeating by finding more users highly likely to repeat this favorable event For example users who provided their email on a newsletter signup high LTV users users who purchased a product etc Getting the target audience in order is step 1 before creating the model This audience defines the basis of the model or the model s objective Aside from positive events you can also model users you might want to suppress like users who have churned If the data is in Lytics you can model it Source The source audience is the group of users to find lookalikes for i e the users you want to target in campaigns after creating the model For example if we chose users with email as the target then targeting unknown users would make sense as the source You could also make the source audience users who have viewed a certain line of products users who have been active within the last 90 days etc The source should be adjacent to the target More information on choosing the right source and target audiences can be found here Automated Machine Learning Once a Source and Target audience are chosen Lytics handles all the heavy lifting of building optimizing and deploying the model For each model Lytics automates the 1 feature selection 2 model training and validation and 3 scalable real time prediction which allows you to spend less time wrangling data to build models and more time to create better experiences for your customers Feature Selection Feature selection is the process of identifying which features or fields to include in a machine learning model While all user profile data is accessible for use in building Lookalike Models manually identifying which features to include can be a tedious and time consuming process if there are hundreds or thousands of fields Lytics provides an option called Auto Tune which uses intelligent feature engineering to select the most predictive features across all the available features Model Training When training models Lytics utilizes three model types Random Forests Gradient Boosting Machines and Logistic Regression Under the hood Lytics trains dozens of models using different parameters and hyper parameters to optimize the model building process Real Time Prediction Lytics Lookalike Models update user scores in real time so you can start targeting users immediately once the model is building but also as their behavior changes or new users are added Rather than using a static list Predictive Audiences built from Lookalike Models provide a dynamic pool of users that will respond best when they are ready for ads or other marketing messages You can also adjust your targeting criteria to make the best tradeoffs between reach and accuracy to maximize your marketing budgets Getting Started To create your first Lookalike Model please refer to the Building Lookalike Models document You may also choose to use the Lytics Lookalike Model API to create a model An example of creating a Model via the API is provided below HTTP export LIOKEY YOUR API KEY export SOURCE_ID YOUR SOURCE ID export TARGET_ID YOUR TARGET ID echo source SOURCE_ID target TARGET_ID name My Lookalike Model config auto_tune true build_only true collect 5000 re_run true use_content true use_scores true http POST https api lytics io api ml key LIOKEY For a more detailed step by step walkthrough of creating analyzing and deploying the model to export the best users to BigQuery check out this python notebook For more detailed documentation on the API go here For guidance on navigating Lookalike Modeling in the UI and more detailed tips and information continue to the next page Updated about 1 month ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/getting-started-1#content",
    "title": "Why Use Lookalike Models?",
    "chunk_text": "Why Use Lookalike Models To demonstrate how Lookalike Models can bring your marketing team s segmentation strategy to the next level we ve outlined how you could segment users by hand compared to how a Lookalike Model would accomplish this task For our example use case the goal is to identify users who are likely to buy a travel package for the summer How a marketer may create segmentation rules by hand Users buy travel packages months in advance so identify users who are visiting in winter and spring Users who receive promotions are more likely to buy expensive items Users who have already bought a package are likely to buy it again Targeting users that match these three rules will certainly improve the efficacy of a campaign but why stop at these Are there more factors that can be used to refine this group of users How Lytics Lookalike Models would do it instead What do users who have bought travel packages in the past look like i e what features do they have in common Analyze all the information known about these users who have bought travel packages Determine which features are significant and which values of these features are significant e g visiting the website is important specifically three to five times Analyze all the information known about users who have not bought travel packages Determine which users share common features with past summer travel package purchasers Take the most similar users to use in targeting The key difference here is that a marketer may use a handful of criteria using logical heuristics to define a segment of users while Lookalike Models will look at hundreds of factors including potential non obvious impactful criteria to define an audience of users for the same purpose Choosing Your Source Target Audiences In traditional supervised machine learning we collect samples of data with one field represented as the Target This is what we look to model or classify Some examples of real world classifiers are predicting whether an email is spam or not predicting if the weather tomorrow will be cloudy or sunny classifying a news article as happy or sad or classifying an image as a dog or not a dog We do this same thing in Lytics Lookalike Modeling but you get to choose what the target we want to predict is This works by providing two audiences a Target and Source Target The target audience is the group of users you want to model and predict i e the users you want to find more of Most of the time this audience will represent users that have done something favorable that is worth repeating by finding more users highly likely to repeat this favorable event For example users who provided their email on a newsletter signup high LTV users users who purchased a product etc Getting the target audience in order is step 1 before creating the model This audience defines the basis of the model or the model s objective Aside from positive events you can also model users you might want to suppress like users who have churned If the data is in Lytics you can model it Source The source audience is the group of users to find lookalikes for i e the users you want to target in campaigns after creating the model For example if we chose users with email as the target then targeting unknown users would make sense as the source You could also make the source audience users who have viewed a certain line of products users who have been active within the last 90 days etc The source should be adjacent to the target More information on choosing the right source and target audiences can be found here Automated Machine Learning Once a Source and Target audience are chosen Lytics handles all the heavy lifting of building optimizing and deploying the model For each model Lytics automates the 1 feature selection 2 model training and validation and 3 scalable real time prediction which allows you to spend less time wrangling data to build models and more time to create better experiences for your customers Feature Selection Feature selection is the process of identifying which features or fields to include in a machine learning model While all user profile data is accessible for use in building Lookalike Models manually identifying which features to include can be a tedious and time consuming process if there are hundreds or thousands of fields Lytics provides an option called Auto Tune which uses intelligent feature engineering to select the most predictive features across all the available features Model Training When training models Lytics utilizes three model types Random Forests Gradient Boosting Machines and Logistic Regression Under the hood Lytics trains dozens of models using different parameters and hyper parameters to optimize the model building process Real Time Prediction Lytics Lookalike Models update user scores in real time so you can start targeting users immediately once the model is building but also as their behavior changes or new users are added Rather than using a static list Predictive Audiences built from Lookalike Models provide a dynamic pool of users that will respond best when they are ready for ads or other marketing messages You can also adjust your targeting criteria to make the best tradeoffs between reach and accuracy to maximize your marketing budgets Getting Started To create your first Lookalike Model please refer to the Building Lookalike Models document You may also choose to use the Lytics Lookalike Model API to create a model An example of creating a Model via the API is provided below HTTP export LIOKEY YOUR API KEY export SOURCE_ID YOUR SOURCE ID export TARGET_ID YOUR TARGET ID echo source SOURCE_ID target TARGET_ID name My Lookalike Model config auto_tune true build_only true collect 5000 re_run true use_content true use_scores true http POST https api lytics io api ml key LIOKEY For a more detailed step by step walkthrough of creating analyzing and deploying the model to export the best users to BigQuery check out this python notebook For more detailed documentation on the API go here For guidance on navigating Lookalike Modeling in the UI and more detailed tips and information continue to the next page Updated about 1 month ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/building-lookalike-models",
    "title": "https://docs.lytics.com/docs/building-lookalike-models",
    "chunk_text": "The Lookalike Model Builder provides an interface to quickly build custom machine learning models and predictive Lookalike Audiences based on your data In the Lytics UI the Model Builder is located under the Lookalike Models tab within the Using Profiles section To get started click Create New This opens up the Lookalike Model builder Basic Configuration For most use cases building a model by setting the basic configuration parameters is sufficient The only required parameters are the selection of a source and target audience which are very important for building a usable model If you select audiences that are too dissimilar the model may be unable to find lookalikes in the source audience Learn more about selecting the right audiences for your use case The size of each audience is also important When building a Lookalike Model your source and target audience must have a minimum of 25 users and a maximum of 20 million users If your selected audience exceeds the maximum size you can add filters to refine it For example if the source audience is Unknown users you could add a filter for Active in the last 30 days to ensure you aren t targeting unknown users with stale cookie identifiers The basic model parameters are defined below Parameter Description Example Source Audience Select an existing audience as the source to find lookalikes from users_who_signed_up_for_email Target Audience Select an existing audience as the target users you want to find more of users_who_made_an_online_purchase Custom Model Name If no custom model name is provided the default name will be Source_Segment_Slugname Target_Segment_Slugname Cannot contain the characters period semicolon forward slash or back slash my_model_name Auto Tune Use an automated intelligent feature selection process and make a best attempt at building the healthiest model Checked Model Training Only Build a model without scoring users Useful for testing and debugging purposes Checked Advanced Configuration For additional model configuration select the Advanced Options For manually built models without Auto Tune one or more features must be selected for the model build such as Use Scores Use Content Additional Fields Parameter Description Example Use Scores Leverage Lytics Behavioral Scores as features for the model Checked Use Content Leverage Lytics Content Affinity as features for the model Checked Additional Fields Select fields in the user schema as features for the model visit_count Blocked Fields Select fields in the user schema to omit from the model email_view Continuously Re train Retrains the model every week with a new training sample If this option is not selected the model will never re train Unchecked Sample Size The sample size of users for the model training set Allowable range 100 50000 users 5000 Updated about 1 month ago Evaluating Lookalike Models",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/building-lookalike-models#content",
    "title": "https://docs.lytics.com/docs/building-lookalike-models#content",
    "chunk_text": "The Lookalike Model Builder provides an interface to quickly build custom machine learning models and predictive Lookalike Audiences based on your data In the Lytics UI the Model Builder is located under the Lookalike Models tab within the Using Profiles section To get started click Create New This opens up the Lookalike Model builder Basic Configuration For most use cases building a model by setting the basic configuration parameters is sufficient The only required parameters are the selection of a source and target audience which are very important for building a usable model If you select audiences that are too dissimilar the model may be unable to find lookalikes in the source audience Learn more about selecting the right audiences for your use case The size of each audience is also important When building a Lookalike Model your source and target audience must have a minimum of 25 users and a maximum of 20 million users If your selected audience exceeds the maximum size you can add filters to refine it For example if the source audience is Unknown users you could add a filter for Active in the last 30 days to ensure you aren t targeting unknown users with stale cookie identifiers The basic model parameters are defined below Parameter Description Example Source Audience Select an existing audience as the source to find lookalikes from users_who_signed_up_for_email Target Audience Select an existing audience as the target users you want to find more of users_who_made_an_online_purchase Custom Model Name If no custom model name is provided the default name will be Source_Segment_Slugname Target_Segment_Slugname Cannot contain the characters period semicolon forward slash or back slash my_model_name Auto Tune Use an automated intelligent feature selection process and make a best attempt at building the healthiest model Checked Model Training Only Build a model without scoring users Useful for testing and debugging purposes Checked Advanced Configuration For additional model configuration select the Advanced Options For manually built models without Auto Tune one or more features must be selected for the model build such as Use Scores Use Content Additional Fields Parameter Description Example Use Scores Leverage Lytics Behavioral Scores as features for the model Checked Use Content Leverage Lytics Content Affinity as features for the model Checked Additional Fields Select fields in the user schema as features for the model visit_count Blocked Fields Select fields in the user schema to omit from the model email_view Continuously Re train Retrains the model every week with a new training sample If this option is not selected the model will never re train Unchecked Sample Size The sample size of users for the model training set Allowable range 100 50000 users 5000 Updated about 1 month ago Evaluating Lookalike Models",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/evaluating-lookalike-models",
    "title": "Lookalike Model View",
    "chunk_text": "Lookalike Model View The Lookalike Model summary view is divided into four distinct tabs each offering valuable insights about your model The initial Summary tab provides an overview of the model including its configuration key features and associated audiences The Audiences tab lists all Audiences that incorporate your Lookalike Model The Configuration tab outlines the settings and parameters used to construct the Lookalike Model The Diagnostics tab presents statistical metrics such as R squared and AUC scores offering a detailed evaluation of model performance Model Summary The model summary dashboard highlights the essential metrics of your model including Accuracy Reach and the features it leverages It also enables you to create impactful predictive audiences using Lytics predefined options or custom definitions tailored to your needs The Summary section at the top of the image above features three key tiles The left tile displays the number of audiences utilizing this model along with the sizes of the Source and Target audiences involved The middle tile highlights the model s Confidence Accuracy and Reach metrics Lytics determines model Confidence based on the model s ability to make accurate predictions predictions from unhealthy models should not be trusted Models are considered unhealthy if the accuracy is low with an R 2 value less than 0 1 or if the model is overfit with an R 2 value greater than 0 975 Accuracy 0 10 measures how precisely the Lookalike Model s predictions align with actual outcomes during training Models with higher accuracy are ideal for narrowly targeting top lookalike candidates making them well suited for the later stages of your marketing funnel Reach 0 10 reflects the relative size of the audience addressable by the Lookalike Model Models with higher reach are better for broadly targeting larger user groups making them more effective for earlier funnel stages The right tile shows the total number of features and provides a breakdown of their types Model Exploration The Model Exploration section provides detailed insights into your model and visualizes how users in your Source audience are categorized based on their likelihood to convert to the Target audience The left side of the image above displays the audience sizes for the Source Target and Lytics predefined audiences Unlikely users in the Source audience who have a similarity score under the 25th percentile Somewhat Likely users in the Source audience who have a similarity score above the 50th percentile Likely users in the Source audience who have a similarity score above the 75th percentile Highly Likely users in the Source audience who have a similarity score above the 90th percentile Clicking any predefined audience updates the Venn diagram on the right providing a dynamic visualization of audience overlap Advanced Model Exploration The Advanced Model Exploration feature provides a deeper dive into the relationship between the Source and Target audiences When open it displays a detailed chart that highlights the overlap in predictions between the two audiences A slider bar within this feature lets you dynamically adjust the similarity score threshold As you move the slider the chart updates in real time to show only users in the Source audience whose similarity score meets or exceeds the selected threshold This interactive tool not only offers a clear visualization of how your model performs but also enables you to refine the threshold to better suit your predictive Lookalike Audience By fine tuning this setting you can precisely target the users most likely to convert enhancing the effectiveness of your predictive audiences Creating new Lookalike Audiences The Create new Lookalike Audience button located above the Venn Diagram provides a convenient way to build predictive audiences directly within the Lookalike Model interface Clicking the button opens a modal with two editing options Quick Editor Use the streamlined inline audience builder to quickly create a new audience without leaving the current page Advanced Editor Select this option to open the standard Audience Builder in a new tab offering full access to advanced configuration tools and features Feature Importance and Correlation The Feature Importance and Correlation charts highlight the key features influencing user conversions from the Source to the Target audience The Importance chart ranks these features by their relative importance as determined by the model from most to least significant The Correlation chart ranks features by their correlation to the Target audience By analyzing this data you can gain valuable insights into the characteristics shared between your Source and Target audiences These insights can help you refine your audience building strategy including the option to incorporate specific high impact features into new audience definitions for improved targeting Lookalike Audiences Once your model becomes Active you can start creating Lookalike Audiences predictive audiences that utilize your Lookalike Model The Audiences tab serves as a centralized hub displaying all your existing Lookalike Audiences and providing the option to create new ones directly from the interface Model Configuration The Configuration tab displays the settings used when creating the model Model Diagnostics The Diagnostics tab provides an advanced view into a Lookalike Model s performance and can help provide assurance that the model has a robust statistical foundation This information is helpful for technical users looking to gain extra insight into the data science behind this Lookalike Model R 2 A measure of how successfully a model is able to predict its desired outcome It can be interpreted as the percentage of variability in outcome for which the model accounts A perfect model would have an R 2 value of 1 and an ineffective model would have a value of zero Mean Square Error A measure of how closely a model s predictions matches actual outcomes The scale of MSE has no inherent interpretability When comparing two similar models a lower MSE would indicate a better fit False Positive Rate The percentage of false positives in a model that is percentage of users in the source audience that the model misclassified as users in the target audience While the false positive rate shouldn t be too high a large false positive rate tends to yield a model with higher reach False Negative Rate The percentage of false negatives in a model that is percentage of users in the target audience that the model misclassified as users in the source audience A lower false positive rate means that a model succeeds in correctly identifying the latent characteristics of the target audience Overall Error Rate The total percentage of misclassifications that occurred during model training Accuracy A measure derived from a model s R 2 value rounded to the nearest decile Reach A measure derived from a model s specificity value typically ranging from 0 to 10 A larger value of reach indicates a larger proportion of the source audience that behave similarly to the target audience AUC A measure of the area under a receiver operating characteristic curve or Area Under the Curve ROC curves are used to determine the optimal decision threshold for a given model Decision Threshold The optimal model prediction value to use as a cutoff when constructing an audience definition This threshold is calculated assuming that a false positive should have the same penalty as a false negative Activating Lookalike Models When you re ready to start using your model you can Activate it to calculate and assign similarity scores to your user profiles Once activated the process may take up to an hour to fully calculate and save the scores Deactivating a model stops the scoring process meaning that neither new users nor existing users will be scored by the model moving forward However any users who already have scores will retain those values even after the model is deactivated Updated about 1 month ago Creating Predictive Audiences",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/evaluating-lookalike-models#content",
    "title": "Lookalike Model View",
    "chunk_text": "Lookalike Model View The Lookalike Model summary view is divided into four distinct tabs each offering valuable insights about your model The initial Summary tab provides an overview of the model including its configuration key features and associated audiences The Audiences tab lists all Audiences that incorporate your Lookalike Model The Configuration tab outlines the settings and parameters used to construct the Lookalike Model The Diagnostics tab presents statistical metrics such as R squared and AUC scores offering a detailed evaluation of model performance Model Summary The model summary dashboard highlights the essential metrics of your model including Accuracy Reach and the features it leverages It also enables you to create impactful predictive audiences using Lytics predefined options or custom definitions tailored to your needs The Summary section at the top of the image above features three key tiles The left tile displays the number of audiences utilizing this model along with the sizes of the Source and Target audiences involved The middle tile highlights the model s Confidence Accuracy and Reach metrics Lytics determines model Confidence based on the model s ability to make accurate predictions predictions from unhealthy models should not be trusted Models are considered unhealthy if the accuracy is low with an R 2 value less than 0 1 or if the model is overfit with an R 2 value greater than 0 975 Accuracy 0 10 measures how precisely the Lookalike Model s predictions align with actual outcomes during training Models with higher accuracy are ideal for narrowly targeting top lookalike candidates making them well suited for the later stages of your marketing funnel Reach 0 10 reflects the relative size of the audience addressable by the Lookalike Model Models with higher reach are better for broadly targeting larger user groups making them more effective for earlier funnel stages The right tile shows the total number of features and provides a breakdown of their types Model Exploration The Model Exploration section provides detailed insights into your model and visualizes how users in your Source audience are categorized based on their likelihood to convert to the Target audience The left side of the image above displays the audience sizes for the Source Target and Lytics predefined audiences Unlikely users in the Source audience who have a similarity score under the 25th percentile Somewhat Likely users in the Source audience who have a similarity score above the 50th percentile Likely users in the Source audience who have a similarity score above the 75th percentile Highly Likely users in the Source audience who have a similarity score above the 90th percentile Clicking any predefined audience updates the Venn diagram on the right providing a dynamic visualization of audience overlap Advanced Model Exploration The Advanced Model Exploration feature provides a deeper dive into the relationship between the Source and Target audiences When open it displays a detailed chart that highlights the overlap in predictions between the two audiences A slider bar within this feature lets you dynamically adjust the similarity score threshold As you move the slider the chart updates in real time to show only users in the Source audience whose similarity score meets or exceeds the selected threshold This interactive tool not only offers a clear visualization of how your model performs but also enables you to refine the threshold to better suit your predictive Lookalike Audience By fine tuning this setting you can precisely target the users most likely to convert enhancing the effectiveness of your predictive audiences Creating new Lookalike Audiences The Create new Lookalike Audience button located above the Venn Diagram provides a convenient way to build predictive audiences directly within the Lookalike Model interface Clicking the button opens a modal with two editing options Quick Editor Use the streamlined inline audience builder to quickly create a new audience without leaving the current page Advanced Editor Select this option to open the standard Audience Builder in a new tab offering full access to advanced configuration tools and features Feature Importance and Correlation The Feature Importance and Correlation charts highlight the key features influencing user conversions from the Source to the Target audience The Importance chart ranks these features by their relative importance as determined by the model from most to least significant The Correlation chart ranks features by their correlation to the Target audience By analyzing this data you can gain valuable insights into the characteristics shared between your Source and Target audiences These insights can help you refine your audience building strategy including the option to incorporate specific high impact features into new audience definitions for improved targeting Lookalike Audiences Once your model becomes Active you can start creating Lookalike Audiences predictive audiences that utilize your Lookalike Model The Audiences tab serves as a centralized hub displaying all your existing Lookalike Audiences and providing the option to create new ones directly from the interface Model Configuration The Configuration tab displays the settings used when creating the model Model Diagnostics The Diagnostics tab provides an advanced view into a Lookalike Model s performance and can help provide assurance that the model has a robust statistical foundation This information is helpful for technical users looking to gain extra insight into the data science behind this Lookalike Model R 2 A measure of how successfully a model is able to predict its desired outcome It can be interpreted as the percentage of variability in outcome for which the model accounts A perfect model would have an R 2 value of 1 and an ineffective model would have a value of zero Mean Square Error A measure of how closely a model s predictions matches actual outcomes The scale of MSE has no inherent interpretability When comparing two similar models a lower MSE would indicate a better fit False Positive Rate The percentage of false positives in a model that is percentage of users in the source audience that the model misclassified as users in the target audience While the false positive rate shouldn t be too high a large false positive rate tends to yield a model with higher reach False Negative Rate The percentage of false negatives in a model that is percentage of users in the target audience that the model misclassified as users in the source audience A lower false positive rate means that a model succeeds in correctly identifying the latent characteristics of the target audience Overall Error Rate The total percentage of misclassifications that occurred during model training Accuracy A measure derived from a model s R 2 value rounded to the nearest decile Reach A measure derived from a model s specificity value typically ranging from 0 to 10 A larger value of reach indicates a larger proportion of the source audience that behave similarly to the target audience AUC A measure of the area under a receiver operating characteristic curve or Area Under the Curve ROC curves are used to determine the optimal decision threshold for a given model Decision Threshold The optimal model prediction value to use as a cutoff when constructing an audience definition This threshold is calculated assuming that a false positive should have the same penalty as a false negative Activating Lookalike Models When you re ready to start using your model you can Activate it to calculate and assign similarity scores to your user profiles Once activated the process may take up to an hour to fully calculate and save the scores Deactivating a model stops the scoring process meaning that neither new users nor existing users will be scored by the model moving forward However any users who already have scores will retain those values even after the model is deactivated Updated about 1 month ago Creating Predictive Audiences",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/creating-predictive-audiences",
    "title": "https://docs.lytics.com/docs/creating-predictive-audiences",
    "chunk_text": "Once your Lookalike Model is built and users are scored ensure the Model Training Only option is unchecked or press Activate in the top left of the Model Summary page you can begin creating Lookalike Audiences with varying decision thresholds or percentiles based on model predictions To create a new Audience click the Create New Lookalike Audience button on the modal page This opens a dialog where you can choose between the Quick Editor and the Advanced Editor When setting up the new Audience you will use either the Lookalike Model Predictions field or the Lookalike Model Percentiles field explained further below Model predictions are expressed as probabilities on a 0 1 scale with values closer to 0 indicating a low likelihood of resembling users in the target audience and values closer to 1 signifying a higher likelihood You can adjust the threshold as you like or add additional rules before saving the audience See Improving Lookalike Models for tips on adjusting the Decision Threshold Any audiences built using the audience prediction score for your model will display in the model usage module Using Lookalike Model Percentiles Another option to build a Predictive Audience is by using the Lookalike Model Percentiles field Similar to the Lookalike Model Predictions field the Lookalike Models are keys for the Lookalike Model Percentiles field The percentile for a model represents the value at which a percentage of the predictions fall below For example the 80th percentile represents the prediction score at which 80 of all other scores fall below or more simply put the top 20 of users Percentiles help account for the shape of a model s prediction distribution as it can sometimes be hard to determine who the best users are based solely on the prediction scores if the distribution is skewed is any direction Updated about 1 month ago Lookalike Model Dashboard",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/creating-predictive-audiences#content",
    "title": "https://docs.lytics.com/docs/creating-predictive-audiences#content",
    "chunk_text": "Once your Lookalike Model is built and users are scored ensure the Model Training Only option is unchecked or press Activate in the top left of the Model Summary page you can begin creating Lookalike Audiences with varying decision thresholds or percentiles based on model predictions To create a new Audience click the Create New Lookalike Audience button on the modal page This opens a dialog where you can choose between the Quick Editor and the Advanced Editor When setting up the new Audience you will use either the Lookalike Model Predictions field or the Lookalike Model Percentiles field explained further below Model predictions are expressed as probabilities on a 0 1 scale with values closer to 0 indicating a low likelihood of resembling users in the target audience and values closer to 1 signifying a higher likelihood You can adjust the threshold as you like or add additional rules before saving the audience See Improving Lookalike Models for tips on adjusting the Decision Threshold Any audiences built using the audience prediction score for your model will display in the model usage module Using Lookalike Model Percentiles Another option to build a Predictive Audience is by using the Lookalike Model Percentiles field Similar to the Lookalike Model Predictions field the Lookalike Models are keys for the Lookalike Model Percentiles field The percentile for a model represents the value at which a percentage of the predictions fall below For example the 80th percentile represents the prediction score at which 80 of all other scores fall below or more simply put the top 20 of users Percentiles help account for the shape of a model s prediction distribution as it can sometimes be hard to determine who the best users are based solely on the prediction scores if the distribution is skewed is any direction Updated about 1 month ago Lookalike Model Dashboard",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/improving-lookalike-models",
    "title": "Interpreting Model Messages",
    "chunk_text": "Interpreting Model Messages Building effective Lookalike Models can be an iterative process To help with these iterations Lytics provides diagnostic messages that identify ways to improve your model performance In general these model messages can help you both select the best source and target audiences for your model and create the best predictive Audience from your model Selecting the Right Source and Target Audience Most of the time Lookalike Models are built to drive users toward conversion This flow should be reflected in how you consider selecting the right source and target audiences to build your model Source Audience the group of users to reach with your marketing messages such as unknown users Target Audience the group of users that represents the desired outcome for users in the source audience such as users with email addresses When defining your source and target audiences try selecting audiences that are at adjacent stages in your customer lifecycle rather than at divergent ends of your funnel like Brand New Visitors and Multi purchase Premium Customers The diagram below represents audience similarity on a spectrum of model performance Consider the following examples of audiences with different levels of similarity Overlapping Audiences Bad audience multi year subscriber audience with high loyalty unknown audience audience with no purchases Divergent Audiences Bad unknown audience audience with newsletter signup and single purchase anonymous audience audience with multiple purchases Adjacent Audiences Good unknown audience audience with email known audience of single purchases known audience with multiple purchases If you ve selected divergent or overlapping audiences in your model you will see diagnostic messages to guide you to select audiences that are more adjacent Adjusting the Decision Threshold Most Predictive Audiences are built by identifying users in the source audience who have a high model score This high score is called the Decision Threshold and in most cases is around 0 5 To adjust the reach of the audience you re building you might consider using a different decision threshold Use a lower decision threshold to reach more users in the source audience Use a higher decision threshold to be more accurate but reach less users in the source audience Diagnostic messages may suggest creating audiences using different decision thresholds but you are always free to make the decision threshold whatever makes the most sense to generate a Predictive Audience of the right size Improving Unhealthy Models Most of the time diagnostic messages for unhealthy models will suggest building a model with different source or target audiences Occasionally you might see a diagnostic message suggesting that a model should be built with different features The model could not find sufficient signal in the features provided Try either using Auto Tune or providing additional features In these cases the underlying model didn t have enough of a signal in the data provided to be able to predict target behavior Imagine that you re an online retailer trying to build Lookalike Models for multi purchasers but you build a model that doesn t have any purchase data Or you want to build an email churn model but you don t have any email data in your model In these cases regardless of how your source and target audiences are constructed your model would be missing the underlying signal required to make a successful model You could either manually select additional fields to include in the Model Builder or you can use the Auto Tune option on the model to have the machine attempt to automatically identify the best field candidates to include in the model Accuracy vs Reach All Lookalike Models try to balance a trade off between accuracy and reach which are two of the most important indicators of how your model will perform Accuracy the precision of a Lookalike Model s predictions Reach the relative size of a Lookalike Model s addressable audience As a general principle you cannot optimize for both accuracy and reach Deciding which one to focus on will depend on your marketing use case Optimize for Accuracy Optimizing your Lookalike Model for accuracy is typically used for targeting later stages of your funnel This enables you to be more precise with the trade off of reaching fewer users By identifying users who are most likely to convert you can optimize their high touch experiences to drive engagement improve conversion rates and increase customer lifetime value In the example above the model has a high accuracy score of 9 and a low reach score of 1 The shape of the model predictions graph has little overlap between the source and target audience which indicates less similarity between the users of those audiences However for the select users that fall into the area of overlap they have a higher likelihood of converting Optimize for Reach Optimizing your Lookalike Model for reach is most applicable for targeting users in earlier stages of your funnel This will allow you to reach more users with the trade off of being less precise You can think of this as casting an intelligently wide net By identifying users who are least likely to convert you can focus your marketing resources on the users who are likely to convert improving conversion rates and maximizing your budget spend In the example above the model has a low accuracy score of 2 and a high reach score of 8 The shape of the model predictions graph has a good amount of overlap between the source and target audience which indicates more similarity between the users of those audiences Therefore you will be able to reach more users in the source audience but they have a lower likelihood of converting compared to a model with higher accuracy Balancing the trade off When balancing the trade off between accuracy and reach consider the sum of accuracy and reach to determine a model s fitness to be used See the table below for a quick estimation of your model s fitness to be used Accuracy Reach Model Strength 0 7 Poor 8 9 Fair 10 Good 11 Excellent In the first two screenshots shared each model had a sum score of 10 for accuracy and reach 9 and 1 2 and 8 respectively Therefore both models would be considered good but they are optimized for different use cases For a comparison see the model below that has a moderate accuracy score of 5 and a moderate reach score of 5 Updated about 1 month ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/improving-lookalike-models#content",
    "title": "Interpreting Model Messages",
    "chunk_text": "Interpreting Model Messages Building effective Lookalike Models can be an iterative process To help with these iterations Lytics provides diagnostic messages that identify ways to improve your model performance In general these model messages can help you both select the best source and target audiences for your model and create the best predictive Audience from your model Selecting the Right Source and Target Audience Most of the time Lookalike Models are built to drive users toward conversion This flow should be reflected in how you consider selecting the right source and target audiences to build your model Source Audience the group of users to reach with your marketing messages such as unknown users Target Audience the group of users that represents the desired outcome for users in the source audience such as users with email addresses When defining your source and target audiences try selecting audiences that are at adjacent stages in your customer lifecycle rather than at divergent ends of your funnel like Brand New Visitors and Multi purchase Premium Customers The diagram below represents audience similarity on a spectrum of model performance Consider the following examples of audiences with different levels of similarity Overlapping Audiences Bad audience multi year subscriber audience with high loyalty unknown audience audience with no purchases Divergent Audiences Bad unknown audience audience with newsletter signup and single purchase anonymous audience audience with multiple purchases Adjacent Audiences Good unknown audience audience with email known audience of single purchases known audience with multiple purchases If you ve selected divergent or overlapping audiences in your model you will see diagnostic messages to guide you to select audiences that are more adjacent Adjusting the Decision Threshold Most Predictive Audiences are built by identifying users in the source audience who have a high model score This high score is called the Decision Threshold and in most cases is around 0 5 To adjust the reach of the audience you re building you might consider using a different decision threshold Use a lower decision threshold to reach more users in the source audience Use a higher decision threshold to be more accurate but reach less users in the source audience Diagnostic messages may suggest creating audiences using different decision thresholds but you are always free to make the decision threshold whatever makes the most sense to generate a Predictive Audience of the right size Improving Unhealthy Models Most of the time diagnostic messages for unhealthy models will suggest building a model with different source or target audiences Occasionally you might see a diagnostic message suggesting that a model should be built with different features The model could not find sufficient signal in the features provided Try either using Auto Tune or providing additional features In these cases the underlying model didn t have enough of a signal in the data provided to be able to predict target behavior Imagine that you re an online retailer trying to build Lookalike Models for multi purchasers but you build a model that doesn t have any purchase data Or you want to build an email churn model but you don t have any email data in your model In these cases regardless of how your source and target audiences are constructed your model would be missing the underlying signal required to make a successful model You could either manually select additional fields to include in the Model Builder or you can use the Auto Tune option on the model to have the machine attempt to automatically identify the best field candidates to include in the model Accuracy vs Reach All Lookalike Models try to balance a trade off between accuracy and reach which are two of the most important indicators of how your model will perform Accuracy the precision of a Lookalike Model s predictions Reach the relative size of a Lookalike Model s addressable audience As a general principle you cannot optimize for both accuracy and reach Deciding which one to focus on will depend on your marketing use case Optimize for Accuracy Optimizing your Lookalike Model for accuracy is typically used for targeting later stages of your funnel This enables you to be more precise with the trade off of reaching fewer users By identifying users who are most likely to convert you can optimize their high touch experiences to drive engagement improve conversion rates and increase customer lifetime value In the example above the model has a high accuracy score of 9 and a low reach score of 1 The shape of the model predictions graph has little overlap between the source and target audience which indicates less similarity between the users of those audiences However for the select users that fall into the area of overlap they have a higher likelihood of converting Optimize for Reach Optimizing your Lookalike Model for reach is most applicable for targeting users in earlier stages of your funnel This will allow you to reach more users with the trade off of being less precise You can think of this as casting an intelligently wide net By identifying users who are least likely to convert you can focus your marketing resources on the users who are likely to convert improving conversion rates and maximizing your budget spend In the example above the model has a low accuracy score of 2 and a high reach score of 8 The shape of the model predictions graph has a good amount of overlap between the source and target audience which indicates more similarity between the users of those audiences Therefore you will be able to reach more users in the source audience but they have a lower likelihood of converting compared to a model with higher accuracy Balancing the trade off When balancing the trade off between accuracy and reach consider the sum of accuracy and reach to determine a model s fitness to be used See the table below for a quick estimation of your model s fitness to be used Accuracy Reach Model Strength 0 7 Poor 8 9 Fair 10 Good 11 Excellent In the first two screenshots shared each model had a sum score of 10 for accuracy and reach 9 and 1 2 and 8 respectively Therefore both models would be considered good but they are optimized for different use cases For a comparison see the model below that has a moderate accuracy score of 5 and a moderate reach score of 5 Updated about 1 month ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/destinations",
    "title": "Introduction",
    "chunk_text": "Introduction Destinations are where the rubber meets the road They provide push button ease for delivering the highly targeted audiences constructed from rich behavioral insights to all of your marketing delivery tools This section will cover the tools and interface for managing data sync with your preferred Destination The landscape in which your consumers interact is broad To ensure Lytics makes it easy to both collect and deliver essential data insights and audiences we have a variety of integration options The Basics Data Destination integrations are managed primarily by Decision Engine but may also be available in Conductor to streamline the delivery of raw events and profiles to your warehouse Creating a Destination is simple Adding a Destination New Source integrations are added from the Decision Engine interface by first navigating to the Jobs option under the Data section in the main navigation From there you ll click Create New Job at the top of the list and enter the wizard to guide you through the creation process Configuring a Job Select a Provider Each Destination is first categorized by the provider making it easy to narrow down the channel you d like to integrate with To select a provider click the tile representing your desired provider such as Google Select Job Type With the provider selected we ll surface the various ways you can integrate with that particular provider This will vary significantly by the provider Select Authorization Method Each provider and job type may require additional authorization to finalize the connection On the select authorization step you can either select an existing authorization or create a new one When creating a new authorization you will be asked to provide the required credentials such as key and secret to proceed Configure Destination The final step lets you provide the specific configuration details for your chosen provider and job type Again the options supported by each provider will vary greatly and provider specific integration details should be leveraged to determine the optimal approach Monitoring a Destination Once you have one or more Destination jobs running they will be accessible from the Jobs list view as pictured below This view provides quick access to essential details Name Name of job such as Export of High Value Users to Facebook Authorization Name of the associated authorization Provider Third party tool that you are connecting with Lytics Type Indicates whether the job is an import export or enrichment Status Current state of a job such as running paused completed etc Created Date the job was initially created Job Status Detailed states are provided to understand better what is happening in the background during a job s lifecycle These states will vary by job but include Job Status Description Running The job is actively running Sleeping The job is not actively running but is scheduled to run again after a given period A job is sleeping either because the job runs on a periodic cadence with scheduled sleep in between job runs or the job has encountered an error and is sleeping before retrying the request Failed The job has encountered consecutive errors over 10 hours and is removed from running again Check the logs to see if there are any fixable issues Failed works can be resumed which will schedule it to run again Failed jobs will be automatically purged after 90 days Paused A user has paused the job The work can be scheduled to run again by resuming the job Paused works will be automatically purged after 90 days Completed The job has completed all its scheduled tasks and will not be rerun These will be purged from the job history after 90 days For more information on job states or troubleshooting failed jobs see job processing Job Summary Clicking on any of the items in the Source list will navigate to its dedicated summary view for greater detail This summary provides all the relevant information about each job you ve created in Lytics and an entry point to alter the configuration or status At the top of the Job Summary page you ll find the following quick access information Status Indicates the current state of a job See the table below for descriptions of each status Provider Third party tool that you are connecting with Lytics such as Facebook Google Mailchimp etc Type Indicates whether the job is an import export or enrichment Job Name Name of the job such as Import Users Activity or Export Audiences Authorization Name of the authorization such as Main Salesforce auth Created By Lytics user who created the authorization Last Updated Date the job was most recently edited You can edit the name and description of an existing job from its summary page to improve the organization and clarity of your account s list of jobs Configuration The details section displays your job s current configuration This includes details such as the authorization used where data is coming from which data is being pulled in etc Logs The Logs section records the history of events for this job details about the work completed and the time each job was run The logs are helpful to ensure your work is running as expected and for troubleshooting if any issues arise Below are descriptions of the job events you may see in the logs Job Events Description Started The job has started running for the first time Synced The job has completed a unit of work successfully and will continue to run Error The job has encountered an error and will retry automatically Sleeping The job is currently sleeping due to external restrictions such as hitting a provider s API limits Failed The job has encountered consecutive errors over 10 hours and is removed from running again Completed The job has completed all its scheduled tasks and will not be rerun Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/destinations#content",
    "title": "Introduction",
    "chunk_text": "Introduction Destinations are where the rubber meets the road They provide push button ease for delivering the highly targeted audiences constructed from rich behavioral insights to all of your marketing delivery tools This section will cover the tools and interface for managing data sync with your preferred Destination The landscape in which your consumers interact is broad To ensure Lytics makes it easy to both collect and deliver essential data insights and audiences we have a variety of integration options The Basics Data Destination integrations are managed primarily by Decision Engine but may also be available in Conductor to streamline the delivery of raw events and profiles to your warehouse Creating a Destination is simple Adding a Destination New Source integrations are added from the Decision Engine interface by first navigating to the Jobs option under the Data section in the main navigation From there you ll click Create New Job at the top of the list and enter the wizard to guide you through the creation process Configuring a Job Select a Provider Each Destination is first categorized by the provider making it easy to narrow down the channel you d like to integrate with To select a provider click the tile representing your desired provider such as Google Select Job Type With the provider selected we ll surface the various ways you can integrate with that particular provider This will vary significantly by the provider Select Authorization Method Each provider and job type may require additional authorization to finalize the connection On the select authorization step you can either select an existing authorization or create a new one When creating a new authorization you will be asked to provide the required credentials such as key and secret to proceed Configure Destination The final step lets you provide the specific configuration details for your chosen provider and job type Again the options supported by each provider will vary greatly and provider specific integration details should be leveraged to determine the optimal approach Monitoring a Destination Once you have one or more Destination jobs running they will be accessible from the Jobs list view as pictured below This view provides quick access to essential details Name Name of job such as Export of High Value Users to Facebook Authorization Name of the associated authorization Provider Third party tool that you are connecting with Lytics Type Indicates whether the job is an import export or enrichment Status Current state of a job such as running paused completed etc Created Date the job was initially created Job Status Detailed states are provided to understand better what is happening in the background during a job s lifecycle These states will vary by job but include Job Status Description Running The job is actively running Sleeping The job is not actively running but is scheduled to run again after a given period A job is sleeping either because the job runs on a periodic cadence with scheduled sleep in between job runs or the job has encountered an error and is sleeping before retrying the request Failed The job has encountered consecutive errors over 10 hours and is removed from running again Check the logs to see if there are any fixable issues Failed works can be resumed which will schedule it to run again Failed jobs will be automatically purged after 90 days Paused A user has paused the job The work can be scheduled to run again by resuming the job Paused works will be automatically purged after 90 days Completed The job has completed all its scheduled tasks and will not be rerun These will be purged from the job history after 90 days For more information on job states or troubleshooting failed jobs see job processing Job Summary Clicking on any of the items in the Source list will navigate to its dedicated summary view for greater detail This summary provides all the relevant information about each job you ve created in Lytics and an entry point to alter the configuration or status At the top of the Job Summary page you ll find the following quick access information Status Indicates the current state of a job See the table below for descriptions of each status Provider Third party tool that you are connecting with Lytics such as Facebook Google Mailchimp etc Type Indicates whether the job is an import export or enrichment Job Name Name of the job such as Import Users Activity or Export Audiences Authorization Name of the authorization such as Main Salesforce auth Created By Lytics user who created the authorization Last Updated Date the job was most recently edited You can edit the name and description of an existing job from its summary page to improve the organization and clarity of your account s list of jobs Configuration The details section displays your job s current configuration This includes details such as the authorization used where data is coming from which data is being pulled in etc Logs The Logs section records the history of events for this job details about the work completed and the time each job was run The logs are helpful to ensure your work is running as expected and for troubleshooting if any issues arise Below are descriptions of the job events you may see in the logs Job Events Description Started The job has started running for the first time Synced The job has completed a unit of work successfully and will continue to run Error The job has encountered an error and will retry automatically Sleeping The job is currently sleeping due to external restrictions such as hitting a provider s API limits Failed The job has encountered consecutive errors over 10 hours and is removed from running again Completed The job has completed all its scheduled tasks and will not be rerun Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/goals",
    "title": "Overview",
    "chunk_text": "Overview Lytics defines Goals as high level objectives that measure marketing success such as improving conversion rates decreasing churn and increasing customer lifetime value LTV The Lytics Goals Canvas provides a framework for moving your customers through their lifecycle and driving them towards your brand s top level marketing goals This approach allows you as a marketer to focus on defining your Goal and creating relevant Experiences that allow customers to take any path to get there The Lytics Goals Canvas is oriented around a few concepts Goals Experiences and Stages Goals Goals allow you to influence and measure the progress of your customers toward your business goals Goals can include Experiences and Stages that you define to drive customers towards specific conversion events Experiences Experiences are individual marketing tactics Each Experience has its own report view allowing you to track reach conversions such as clicks and conversion rates Stages Stages are the phases or steps that guide customers towards your Goal Your audience members will move from one Stage to the next as they qualify for the conversion events applied to each Stage Stages contain Experiences intended to encourage people to complete the conversion event such as registering their email or making a first purchase Goals Lytics Goals allow you to guide users through highly personalized experiences that increase customer lifetime value and drive progress towards your primary business goals You will use the Lytics Canvas to create edit and monitor your Goals Navigate to Goals and click New Goal in the top right of your screen to create a new one Choose an audience The first step in configuring a Goal is picking your starting audience Select this audience by clicking the Audience button blue circle on the left hand side of the Lytics Canvas You can choose an existing audience or you can build a new one by clicking New audience Lytics recommends keeping this starting audience as broad as possible as there will be ample opportunity to add filters and refine your targeting through Stages and Experiences You will be able to change this audience at any time although that may drastically affect target audiences and reporting metrics Stages Each Stage represents a significant step towards your Goal as defined by a conversion event A common conversion event is finding known users by collecting email addresses on a newsletter sign up or registration page Stages contain Experiences that give users opportunities to complete conversion events in various channels such as on your website through an email newsletter or Facebook ad A Goal can have one or more Stages based on the needs of your use case After defining the first conversion event you will see an option to Add a Stage Moving through Conversion Events Users move to the next Stage when they complete the selected conversion event Goals are always configured so that users move through your Stages from left to right as they complete conversion events Keep in mind that users don t always complete conversion events in the order anticipated which means they may end up skipping a Stage If you want to prevent this you can include additional logic in your conversion event definition And remember users can never be in more than one Stage per Goal at a time Experience Drawer The Experience drawer contains Experience templates and Experiences that aren t part of a Goal yet Add any of these to your Goal by dragging them into a Stage Open the drawer by clicking the icons labeled Experience template or Experience If you drag an Experience that is activated into your Goal you will need to pause it before being able to save your Goal You can do so from the Lytics Canvas by hovering over the Experience card and then clicking the Pause button Once you re ready to reactivate the Experience in the context of the Goal click Resume Prioritizing Goals Much like prioritizing Experiences within Stages you can also prioritize Goals Since membership is not mutually exclusive that is users can be moving towards multiple Goals at a time it is possible that a user will be eligible for two simultaneous Experiences from two different Goals When that happens Lytics will take into account Goal priority when determining which Experience will be delivered The higher on the Goal list the higher the priority Stages Stages are the individual steps that move customers towards your Goal Users in your overall audience will automatically enter the first Stage When a user completes the first conversion event they will move to the second Stage and so on through the last Stage within your Goal A user can only be in one Stage at a time Conversion events Conversion events within Lytics are behavior based audiences such as purchasers highly engaged users known users etc These determine which users are eligible for the Experiences within a Stage When a user fulfills conversion event applied to a Stage they move to the next Stage until they reach the last conversion event for that Goal If users have completed the conversion event applied to a Stage they will not be eligible for any of the Experiences in the Stage This prevents overlapping targeting such as continuing to show a Facebook ad to a user who has already converted on a particular campaign To assign a conversion event to a Stage click the Trophy icon to open a menu of available conversion events A red dot next to the Trophy icon indicates a Stage that still needs to be assigned a conversion event A conversion event is required to populate the metrics for a Stage Stage metrics Lytics tracks three key metrics to measure Stage performance Potential reach Converted and Conversion rate The table below defines these metrics and how often they are updated in the Lytics UI Metric Definition Updated Potential Reach Number of users eligible to be targeted in a Stage source audience Every 2 hours Converted Number of users who have completed the conversion event for a Stage target audience Every 2 hours Conversion Rate Proportion of users who completed the conversion event compared to the number of users who were reached Every 2 hours Adding and rearranging Experiences Experiences can be added to a Stage in several ways You can add an Experience directly to a Stage by clicking Add a new Experience along the bottom of a Stage You can drag an Experience template into a Stage which will create an Experience with boilerplate settings to use as a starting point You can also drag an existing Experience into a Stage either from another Stage or from the Experience drawer Note This will significantly change the audience for that Experience Prioritizing Experiences To ensure that your audience receives the right amount of messaging each user will only be eligible for one Experience per Stage at a time That means that no matter how many web modals you add to a Stage your audience members will only see one at a time Lytics won t just choose one at random though there is a sophisticated decision engine that determines which Experience will be delivered to the end user Part of the input into that engine is the order of Experiences within a Stage The closer to the top of a Stage an Experience is the more likely it is that it will be delivered to the end user Goal Canvas Audiences You can think of the Lytics Canvas as an intelligent audience builder When you create new Stages and add conversion events you are effectively building new audiences based on the desired flow of users towards achieving your Goal Unlike drip campaigns or more traditional journey builders Lytics doesn t require you to build complicated audiences Keep them simple and the Lytics Canvas will do the heavy lifting for you Selecting audiences for your Goals The following tips will assist you when building and selecting audiences for the conversion events and Experiences within your Goals Building block audiences When you re creating audiences to use in a Goal it s helpful to think about each audience as a building block rather than a complete definition of who you want to be targeting Below are examples of good building block audiences All users Users who have shared their email address Users who have purchased something Excluding users Building block audiences work best when they don t exclude anyone It can be tempting to try to exclude users from a building block audience for example excluding Known Users from All in order to target only anonymous users but the Lytics Canvas will do this for you automatically if one of your future conversion events is the audience Known Users NOTE If you do end up doing this yourself you can create a dead end path where users are unable to progress due to the definition of the automatically generated audiences which are explained in more detail below There is one important exception to this rule If you want to suppress a subset of your entire audience from your Goal you can exclude them from your overall audience This will work so long as the exclusion rule is not related to the downstream conversion events An overall audience is the first audience you select on the Lytics Canvas which is represented by the left most blue circle as shown below For example if you used the audience below as your overall audience you would exclude Realtors from the entire Goal This will not create a dead end if none of the subsequent Stages have conversion events dependent on the Realtors criteria All users excluding Realtors Filter audiences If you want to target with more granularity than a Stage audience allows you can add a filter on individual Experiences within a Stage This is a great point to target users based on behavior such as engagement level The audience you choose here will be added to your Stage audience with an AND statement Experience conversions A common pattern may be that you want any users who converted on the Experiences in your Stage to enter the next Stage Learn how to target users based on Experience interactions to build a conversion event like this How audiences are used in the Canvas Now that you ve learned how to select and build audiences take a deeper look into how the Lytics Canvas uses these audiences to help users flow towards your Goal Automatically generated audiences The Lytics Canvas automatically generates audiences based on your selected conversion events For example let s say you want to create a the first Stage to target users who haven t shared their email address and the second Stage will target known users who haven t purchased yet Even though you haven t explicitly created an audience for users who haven t shared their email or users who haven t purchased Lytics will create these audiences for you This example would look as follows in the UI The following graphic shows how the Lytics Canvas takes your simple building blocks and creates more refined audiences See the full size diagram Remember if you exclude converted users on a building block audience it can cause problems and prevent users from moving between Stages Let the Lytics Canvas do the work for you Mutually exclusivity Stage audiences are mutually exclusive meaning a user can only be in one Stage at a time This is a result of the automatic audience building done by the Lytics Canvas If a user in Unknown Users shares their email and now qualifies for Known users they will automatically move into that Stage without any manual intervention Goal Intelligence The Goal Intelligence Report provides a holistic view of how your existing campaigns are contributing towards the marketing goal you selected during the onboarding process This report will help you answer questions about how effectively your marketing campaigns are driving conversions how many engaged customers you have and whether you are producing the right content for your users The Goal Intelligence Report contains modules that focus on answering a specific marketing question Each module is described below along with definitions for the associated metrics and how often they are updated Goal Progress The Goal Progres module contains three top level metrics for the campaigns you ve imported into Lytics Use this summary to measure how your campaigns are working together to achieve your goal Name Description Updated Users Have Not Completed Goal Number of users who are currently eligible to convert on your goal Every 2 hours Users Have Completed Goal Number of users who have converted on your goal Every 2 hours Completion Rate Percentage equal to number of converted users number of all users who have ever been eligible for converting on the goal Every 2 hours Experience Performance The Experience Performance module gives a summary view of all the campaigns you imported into Lytics including the conversion rate of each campaign and how much this conversion is impacting your marketing goal Use these metrics to prompt discovery into your campaign performance Select an Experience from the list to view its specific Intelligence Report to surface additional actions and recommendations Name Description Updated Conversion Rate Percentage equal to number of users who have converted on the Experience number of all users who have ever been eligible for receiving the Experience Every 2 hours Goal Attribution Percentage equal to attributed conversions for an Experience number of users that engaged with the Experience Weekly Connected Customers The Connected Customers module shows what percentage of your users are actively engaged on multiple channels Lytics defines Connected Customers as users who are identified on two or more channels and who are consistently engaged with your brand as measured by the Lytics Momentum Score Connected Customers are valuable to your business Use this KPI to create a stronger base of users who are more likely to convert on current and future campaigns Name Description Updated Percentage for Account Percentage equal to the number of current Connected Customers the number of all users in your account Every 2 hours Connected Customers Graph Size of the Connected Customer audience over the past week Every 2 hours Content Classification The Content Classification module shows a list of the topics documents and relevance scores for the content used across your connected channels Lytics automatically analyzes the topics within your website content and determines user level affinities for those topics which can help you decide what content to produce Use these metrics to ensure you are creating the right content to engage your target audience Name Description Updated Topic Relevance Percentage of the audience that has an affinity for this topic Weekly Documents Number of documents present in the account for the topic Every 12 hours Content Recommendation The Content Recommendation module surfaces content that is likely to resonate with your users based on their past behavior Lytics analyzes the content on your website through the Lytics JavaScript Tag The relevancy percentage is calculated by determining the total number of users with various content affinities and comparing this to the total number of users within the audience that visited your site Create and deliver content that aligns with your users interests to drive engagement and conversions Name Description Updated Topic Relevance Percentage of the audience that has an affinity for this topic Weekly Content Recommendations Suggestions for content to serve to users in the target audience for your Experience Weekly Connected Customers Connected Customers represent the number of active users who are engaged with your brand across multiple channels This is a Lytics proprietary KPI that offers a quick and comprehensive understanding of the performance of your account s identity resolution strategy Lytics defines a Connected Customer as a user who has Activity data collected from 2 or more channels including web email or mobile A positive and increasing Momentum Score which represents the rate at which users are interacting with your brand You can find the Connected Customer KPI in the Goal Intelligence Report These metrics come from a Lytics audience that is automatically generated under the hood using the criteria described above Why is this KPI important Connected Customers are valuable to your business This KPI helps you understand how many Connected Customers you have and the impact of your marketing programs on user engagement Lytics helps you gain more Connected Customers by refining your audience targeting and messaging strategies to improve engagement and ultimately increase the ROI for your marketing efforts What can I do with it Track your Connected Customers for a pulse on engagement levels across your active campaigns Use this KPI to create a stronger base of users who are more likely to convert on current and future campaigns You can also activate this Connected Customer audience in your downstream marketing tools such as Facebook Salesforce Marketing Cloud and more Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/goals#content",
    "title": "Overview",
    "chunk_text": "Overview Lytics defines Goals as high level objectives that measure marketing success such as improving conversion rates decreasing churn and increasing customer lifetime value LTV The Lytics Goals Canvas provides a framework for moving your customers through their lifecycle and driving them towards your brand s top level marketing goals This approach allows you as a marketer to focus on defining your Goal and creating relevant Experiences that allow customers to take any path to get there The Lytics Goals Canvas is oriented around a few concepts Goals Experiences and Stages Goals Goals allow you to influence and measure the progress of your customers toward your business goals Goals can include Experiences and Stages that you define to drive customers towards specific conversion events Experiences Experiences are individual marketing tactics Each Experience has its own report view allowing you to track reach conversions such as clicks and conversion rates Stages Stages are the phases or steps that guide customers towards your Goal Your audience members will move from one Stage to the next as they qualify for the conversion events applied to each Stage Stages contain Experiences intended to encourage people to complete the conversion event such as registering their email or making a first purchase Goals Lytics Goals allow you to guide users through highly personalized experiences that increase customer lifetime value and drive progress towards your primary business goals You will use the Lytics Canvas to create edit and monitor your Goals Navigate to Goals and click New Goal in the top right of your screen to create a new one Choose an audience The first step in configuring a Goal is picking your starting audience Select this audience by clicking the Audience button blue circle on the left hand side of the Lytics Canvas You can choose an existing audience or you can build a new one by clicking New audience Lytics recommends keeping this starting audience as broad as possible as there will be ample opportunity to add filters and refine your targeting through Stages and Experiences You will be able to change this audience at any time although that may drastically affect target audiences and reporting metrics Stages Each Stage represents a significant step towards your Goal as defined by a conversion event A common conversion event is finding known users by collecting email addresses on a newsletter sign up or registration page Stages contain Experiences that give users opportunities to complete conversion events in various channels such as on your website through an email newsletter or Facebook ad A Goal can have one or more Stages based on the needs of your use case After defining the first conversion event you will see an option to Add a Stage Moving through Conversion Events Users move to the next Stage when they complete the selected conversion event Goals are always configured so that users move through your Stages from left to right as they complete conversion events Keep in mind that users don t always complete conversion events in the order anticipated which means they may end up skipping a Stage If you want to prevent this you can include additional logic in your conversion event definition And remember users can never be in more than one Stage per Goal at a time Experience Drawer The Experience drawer contains Experience templates and Experiences that aren t part of a Goal yet Add any of these to your Goal by dragging them into a Stage Open the drawer by clicking the icons labeled Experience template or Experience If you drag an Experience that is activated into your Goal you will need to pause it before being able to save your Goal You can do so from the Lytics Canvas by hovering over the Experience card and then clicking the Pause button Once you re ready to reactivate the Experience in the context of the Goal click Resume Prioritizing Goals Much like prioritizing Experiences within Stages you can also prioritize Goals Since membership is not mutually exclusive that is users can be moving towards multiple Goals at a time it is possible that a user will be eligible for two simultaneous Experiences from two different Goals When that happens Lytics will take into account Goal priority when determining which Experience will be delivered The higher on the Goal list the higher the priority Stages Stages are the individual steps that move customers towards your Goal Users in your overall audience will automatically enter the first Stage When a user completes the first conversion event they will move to the second Stage and so on through the last Stage within your Goal A user can only be in one Stage at a time Conversion events Conversion events within Lytics are behavior based audiences such as purchasers highly engaged users known users etc These determine which users are eligible for the Experiences within a Stage When a user fulfills conversion event applied to a Stage they move to the next Stage until they reach the last conversion event for that Goal If users have completed the conversion event applied to a Stage they will not be eligible for any of the Experiences in the Stage This prevents overlapping targeting such as continuing to show a Facebook ad to a user who has already converted on a particular campaign To assign a conversion event to a Stage click the Trophy icon to open a menu of available conversion events A red dot next to the Trophy icon indicates a Stage that still needs to be assigned a conversion event A conversion event is required to populate the metrics for a Stage Stage metrics Lytics tracks three key metrics to measure Stage performance Potential reach Converted and Conversion rate The table below defines these metrics and how often they are updated in the Lytics UI Metric Definition Updated Potential Reach Number of users eligible to be targeted in a Stage source audience Every 2 hours Converted Number of users who have completed the conversion event for a Stage target audience Every 2 hours Conversion Rate Proportion of users who completed the conversion event compared to the number of users who were reached Every 2 hours Adding and rearranging Experiences Experiences can be added to a Stage in several ways You can add an Experience directly to a Stage by clicking Add a new Experience along the bottom of a Stage You can drag an Experience template into a Stage which will create an Experience with boilerplate settings to use as a starting point You can also drag an existing Experience into a Stage either from another Stage or from the Experience drawer Note This will significantly change the audience for that Experience Prioritizing Experiences To ensure that your audience receives the right amount of messaging each user will only be eligible for one Experience per Stage at a time That means that no matter how many web modals you add to a Stage your audience members will only see one at a time Lytics won t just choose one at random though there is a sophisticated decision engine that determines which Experience will be delivered to the end user Part of the input into that engine is the order of Experiences within a Stage The closer to the top of a Stage an Experience is the more likely it is that it will be delivered to the end user Goal Canvas Audiences You can think of the Lytics Canvas as an intelligent audience builder When you create new Stages and add conversion events you are effectively building new audiences based on the desired flow of users towards achieving your Goal Unlike drip campaigns or more traditional journey builders Lytics doesn t require you to build complicated audiences Keep them simple and the Lytics Canvas will do the heavy lifting for you Selecting audiences for your Goals The following tips will assist you when building and selecting audiences for the conversion events and Experiences within your Goals Building block audiences When you re creating audiences to use in a Goal it s helpful to think about each audience as a building block rather than a complete definition of who you want to be targeting Below are examples of good building block audiences All users Users who have shared their email address Users who have purchased something Excluding users Building block audiences work best when they don t exclude anyone It can be tempting to try to exclude users from a building block audience for example excluding Known Users from All in order to target only anonymous users but the Lytics Canvas will do this for you automatically if one of your future conversion events is the audience Known Users NOTE If you do end up doing this yourself you can create a dead end path where users are unable to progress due to the definition of the automatically generated audiences which are explained in more detail below There is one important exception to this rule If you want to suppress a subset of your entire audience from your Goal you can exclude them from your overall audience This will work so long as the exclusion rule is not related to the downstream conversion events An overall audience is the first audience you select on the Lytics Canvas which is represented by the left most blue circle as shown below For example if you used the audience below as your overall audience you would exclude Realtors from the entire Goal This will not create a dead end if none of the subsequent Stages have conversion events dependent on the Realtors criteria All users excluding Realtors Filter audiences If you want to target with more granularity than a Stage audience allows you can add a filter on individual Experiences within a Stage This is a great point to target users based on behavior such as engagement level The audience you choose here will be added to your Stage audience with an AND statement Experience conversions A common pattern may be that you want any users who converted on the Experiences in your Stage to enter the next Stage Learn how to target users based on Experience interactions to build a conversion event like this How audiences are used in the Canvas Now that you ve learned how to select and build audiences take a deeper look into how the Lytics Canvas uses these audiences to help users flow towards your Goal Automatically generated audiences The Lytics Canvas automatically generates audiences based on your selected conversion events For example let s say you want to create a the first Stage to target users who haven t shared their email address and the second Stage will target known users who haven t purchased yet Even though you haven t explicitly created an audience for users who haven t shared their email or users who haven t purchased Lytics will create these audiences for you This example would look as follows in the UI The following graphic shows how the Lytics Canvas takes your simple building blocks and creates more refined audiences See the full size diagram Remember if you exclude converted users on a building block audience it can cause problems and prevent users from moving between Stages Let the Lytics Canvas do the work for you Mutually exclusivity Stage audiences are mutually exclusive meaning a user can only be in one Stage at a time This is a result of the automatic audience building done by the Lytics Canvas If a user in Unknown Users shares their email and now qualifies for Known users they will automatically move into that Stage without any manual intervention Goal Intelligence The Goal Intelligence Report provides a holistic view of how your existing campaigns are contributing towards the marketing goal you selected during the onboarding process This report will help you answer questions about how effectively your marketing campaigns are driving conversions how many engaged customers you have and whether you are producing the right content for your users The Goal Intelligence Report contains modules that focus on answering a specific marketing question Each module is described below along with definitions for the associated metrics and how often they are updated Goal Progress The Goal Progres module contains three top level metrics for the campaigns you ve imported into Lytics Use this summary to measure how your campaigns are working together to achieve your goal Name Description Updated Users Have Not Completed Goal Number of users who are currently eligible to convert on your goal Every 2 hours Users Have Completed Goal Number of users who have converted on your goal Every 2 hours Completion Rate Percentage equal to number of converted users number of all users who have ever been eligible for converting on the goal Every 2 hours Experience Performance The Experience Performance module gives a summary view of all the campaigns you imported into Lytics including the conversion rate of each campaign and how much this conversion is impacting your marketing goal Use these metrics to prompt discovery into your campaign performance Select an Experience from the list to view its specific Intelligence Report to surface additional actions and recommendations Name Description Updated Conversion Rate Percentage equal to number of users who have converted on the Experience number of all users who have ever been eligible for receiving the Experience Every 2 hours Goal Attribution Percentage equal to attributed conversions for an Experience number of users that engaged with the Experience Weekly Connected Customers The Connected Customers module shows what percentage of your users are actively engaged on multiple channels Lytics defines Connected Customers as users who are identified on two or more channels and who are consistently engaged with your brand as measured by the Lytics Momentum Score Connected Customers are valuable to your business Use this KPI to create a stronger base of users who are more likely to convert on current and future campaigns Name Description Updated Percentage for Account Percentage equal to the number of current Connected Customers the number of all users in your account Every 2 hours Connected Customers Graph Size of the Connected Customer audience over the past week Every 2 hours Content Classification The Content Classification module shows a list of the topics documents and relevance scores for the content used across your connected channels Lytics automatically analyzes the topics within your website content and determines user level affinities for those topics which can help you decide what content to produce Use these metrics to ensure you are creating the right content to engage your target audience Name Description Updated Topic Relevance Percentage of the audience that has an affinity for this topic Weekly Documents Number of documents present in the account for the topic Every 12 hours Content Recommendation The Content Recommendation module surfaces content that is likely to resonate with your users based on their past behavior Lytics analyzes the content on your website through the Lytics JavaScript Tag The relevancy percentage is calculated by determining the total number of users with various content affinities and comparing this to the total number of users within the audience that visited your site Create and deliver content that aligns with your users interests to drive engagement and conversions Name Description Updated Topic Relevance Percentage of the audience that has an affinity for this topic Weekly Content Recommendations Suggestions for content to serve to users in the target audience for your Experience Weekly Connected Customers Connected Customers represent the number of active users who are engaged with your brand across multiple channels This is a Lytics proprietary KPI that offers a quick and comprehensive understanding of the performance of your account s identity resolution strategy Lytics defines a Connected Customer as a user who has Activity data collected from 2 or more channels including web email or mobile A positive and increasing Momentum Score which represents the rate at which users are interacting with your brand You can find the Connected Customer KPI in the Goal Intelligence Report These metrics come from a Lytics audience that is automatically generated under the hood using the criteria described above Why is this KPI important Connected Customers are valuable to your business This KPI helps you understand how many Connected Customers you have and the impact of your marketing programs on user engagement Lytics helps you gain more Connected Customers by refining your audience targeting and messaging strategies to improve engagement and ultimately increase the ROI for your marketing efforts What can I do with it Track your Connected Customers for a pulse on engagement levels across your active campaigns Use this KPI to create a stronger base of users who are more likely to convert on current and future campaigns You can also activate this Connected Customer audience in your downstream marketing tools such as Facebook Salesforce Marketing Cloud and more Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/experiences",
    "title": "Experiences Quick Start",
    "chunk_text": "Lytics Experiences have replaced the legacy Personalize functionality as such Personalize campaigns are no longer supported by Lytics If your account has not yet migrated from Personalize to Experiences you may access our legacy documentation here Experiences Quick Start Overview Experiences allow you to present tailored messaging to specific audiences These messages can be on your website using Lytics Experiences appear on a third party ad platform like Facebook or emails delivered through an email service provider like SendGrid Since you can control the audience being targeted you can deliver Experiences that make sense for some users but not others You can even recommend products or content based on each user s unique content affinities and behaviors Experiences allow you to treat your customers as individuals rather than over messaging them with generic offers and newsletters Common uses of Experiences include Present an email capture form to anonymous users but not to users who have already shared theirs Let only eligible users know about a targeted sale or promotion Keep your audience engaged by serving content recommendations tailored to their browsing behavior Limit Facebook ads to users who are likely to engage with them saving your advertising budget You can create and import new Experiences as well as browse existing Experiences including those that are associated with a Goal by navigating to the Experiences tab Add your first Experience The set up for each Experience is slightly different so whether you are creating an on site Lytics Experiences or connecting to one of our out of the box Integrations the simplest way to get started with experiences is to create a new Experience and allow our Experience Editor to navigate you through each of the steps Managing Experiences Experience List View Within the Experiences tab in the Lytics app you will find a list of all of your Experiences From this view you can Add Experiences Browse Experiences View the Status of your Experiences Navigate to Experience summary pages to work with individual Experiences See below for more information around each of these activities Adding Experiences Creating New Experiences Create a new Experience within the Experiences tab by clicking the Add Experiences button near the top of the page Selecting the New option will guide you through the Experience Editor steps for any Experience Lytics Out of the Box Integrations or Generic The New option allows you to select from the full list of providers Importing Experiences If you want to import external marketing initiatives from out of the box integrations that support Experiences you can do so within the Experiences tab as well Click the Add Experiences button near the top of the page and select the Import option to be guided through the Experience Editor steps for these supported integrations The Import option navigates you to directly to a list of the out of the box integration providers Browsing Experiences Search The easiest way to find an Experience is to use the Search box to the right of the Experience list As you enter your search term the Experiences list will display any matching Experiences Filter To the right of the Experience list you can filter Experiences based on their Channel The channel is associated with the Provider you selected when creating the experience Integration The Provider you selected when creating the Experience Status Life cycle and health of the Experience Type Whether or not the Experience is associated with a Goal Imported Experiences that haven t been activated yet will be tagged as Externally Managed Sort By default the list of Experiences is sorted by Name If you choose to sort by date Last modified instead your preferences will be saved for the next time you visit Experience Statuses An Experience status indicates what life cycle the Experience is in and the health of whether it is exporting a Lytics audience to a third party tool in real time Below is a complete list of Experience statuses Draft A complete or partially complete Experience that has not yet been activated Active An Experience that can be seen by your users and has not passes its end date Paused An Experience that was activated but has been paused To edit an Experience that has been running you must pause it first Scheduled An Experience that will be activated at a start date set in the future Externally Managed An imported Experience from a third party tool that hasn t been configured with a Lytics audience Complete the configuration by editing the Experience in the Experience editor Ended An Active Experience that has passed its end date Error An Experience that failed to export audience data to the appropriate tool Warning An Experience that encountered issues when attempting to export audience data to a third party tool It may recover on its own or proceed to an error status after a number of failed attempts to export data Experience Summary View Once you have created or imported Experiences they will be populated as a list within the Experiences tab Click on an Experiences from the list to enter the Experiences summary From this summary page you can See an overview of the Experience Activate pause or resume Experiences Edit an existing Experience Delete an existing Experience See below for more information about each of these activities Experience Overview Within the Experience summary you will find important information about your Experience The summary includes Experience Status Experience Performance Reporting Experience Intelligence Report for accounts with the Lytics View feature enabled Sample Audience Members a small sample of users in the target audience that are eligible for the experience Activity recent activity around changes made to the Experience Details an overview of the configuration of the Experience Activating Experiences From the Experience summary page you are able manage the activation of individual Experiences using the following buttons on the righthand side of the summary page Activate An Experience has not been previously activated and is currently marked with the Draft status can be activated Pause Campaigns currently marked as Active can be paused Resume Any previously activated Experiences that are currently paused can be resumed Editing Experiences Within the Experiences section of the Lytics app you can edit an existing Experience by clicking on the desired Experience This will navigate you to the Experience summary page Here you can click on the Edit button to enter the Experience Editor for this Experience You cannot edit an Experience while it is activated so you will not be able to enter the Experience editor at that point If you need to edit an Active Experience you can Pause it from the Experience summary page Once you have made and saved your edits you can then Resume the experience from the Experience summary page Deleting Experiences To delete an experience from Lytics click on the Experience you wish to delete from within the Experiences list You will be navigated to the Experience summary page where you can delete the experience from the options menu You will be asked to confirm that you wish to delete the experience click the Delete permanently button to complete the deletion Experience Editor The Experience editor is used to create save edit and activate marketing Experiences Combined with audiences created in the audience builder sophisticated Experiences can be built to deliver the right message to your users at the right time To enter the Experience editor you can either add an experience or edit an experience The available steps of the Experience editor are dictated by the Experience provider you select Experience Providers Lytics Lytics Experiences allow you to create personalized campaigns on your website to capture leads recommend content drive traffic etc without having to connect Lytics to an additional tool The Lytics Javascript tag must be installed on your website for you to take advantage of this feature Out of the Box Integrations Experiences added to Lytics from these providers allow you to monitor performance and activate audiences from the Lytics UI however the management of external Experiences still happens inside your channel tools Facebook Google Ads Iterable Mailchimp Mapp Salesforce Marketing Cloud SendGrid The Trade Desk Generic These experiences simply offer the ability to include a placeholder Universal Experience within the Goals Canvas and export a Lytics audience with all of the nested Goal Stage filter logic to any tool you choose Lytics Experiences Use Lytics Experiences to personalize a website with modals slide outs sticky bars etc This does not require connecting to another tool Experience Editor Steps for Lytics Experiences Select a Provider and Tactic Select a Provider and Tactic If you are creating or importing a new Experience you will be given a choice of Experience providers providers are the tools that deliver your Experience The selection of Lytics as a provider will prompt you to select a tactic from a list of options The following tactics are available for Lytics Experiences Drive Traffic Increase traffic to a specific URL Capture Leads Convert unknown users to known users with a simple lead capture form Present a Message Communicate a simple message such as a global coupon or an announcement Recommend Content Use content collections to recommend articles products or any other type of content to your users Once you ve chosen your tactic the Experience editor will take you though each step Choose URL unique to the Lytics Drive Traffic tactic Choose URL Choosing a URL to promote is the first step in the Experience editor for a Drive Traffic Experience of the Lytics provider This step does not apply to Experiences of any other tactic or Provider This step allows you to enter the destination you want to link as a call to action in your Drive Traffic Experience The protocol is preset to https but can be changed to http Enter the rest of the URL into the input field Customize Form unique to the Lytics Capture Leads tactic Customize Form Specific to the Collect Leads tactic of Lytics Experiences this step is for selecting what information you collect on the form Here you will configure which form fields will be shown and thus what information you capture about your user Enable fields by selecting the checkbox next to the desired field Form labels have default text input that appears when the field is selected You can rename these labels to suit your use case Require fields with the Required checkbox at the right of the text field Choose Content unique to the Lytics Recommend Content tactic Choose Content The Recommend Content Experience type is used to surface content an article a blog post a product page to visitors Each recommendation is personalized to the individual This could be used to keep visitors engaged by surfacing what to read next or assist casual perusers by prompting a starting point Furthermore the Experience can be configured to only a set of pages or a subset of your total audience This allows you to limit the recommendations from showing up on auxiliary pages like the home page company page or checkout page It can also only be shown to users with high usage This way low usage visitors can be targeted with a more aggressive campaign Choosing content is the first step for a Recommend Content Experience Lytics provides a variety of filters and options for tailoring what content can be recommended and how the recommendation algorithm should rank the content Choosing a content collection A content collection allows you to limit the scope of documents that can be recommended by your Experience If you re creating a summer seasonal experience for example you wouldn t want articles that are out of season A content collection is how you define which articles are appropriate to recommend Use the Select a content collection dropdown to choose an existing collection or to create a new one Clicking on New content collection will take you to the collection builder The state of your Experience will be saved and after creating your new collection you will automatically be returned to the Experience editor Choosing recommendation settings The Lytics content recommendation engine allows you to configure the way in which the Experience will recommend content The recommendation settings work within the limits set by the content collection If your content collection includes articles published six to twelve months ago and you choose the Recently Published method then the Experience will begin recommending six month old articles which are the most recently published articles within the collection Recommendation method The recommendation methods control how the recommendation engine ranks the content Highest Affinity Choose the content that a user is most likely to be interested in This is the default setting Freshness Choose the content that was most recently published or updated Last Interaction Choose the content based on what a user has engaged with most recently New content only The Only recommend content the user has not seen checkbox controls whether previously viewed content will be included among the recommendations Leave this setting checked to ensure that a user won t be recommended content they have viewed in the past Shuffle content The Shuffle content on each page load checkbox controls whether a user should be recommended different content if they encounter the Experience again e g after reloading Check this setting to vary the content that is recommended on subsequent requests or leave it unchecked to show the single best recommendation Design Design The design step is present in the editor for all Experiences of the Lytics provider It lets you customize the appearance and content of the widget displayed to your users on your website This step offers layout and position options as well as a custom CSS option Choosing a layout First choose your Experience s layout There are five different layout options and their availability depends on the tactic you selected Modal A full screen takeover Experience that can be closed by clicking outside the modal clicking the close button of the modal or taking the intended call to action Slideout A small widget that occupies a corner of the screen It does not interrupt the user s current task Bar A short widget that takes the full width of the screen and sits at the top of the page Sticky Bar A bar that scrolls with the page Gate A modal that cannot be closed unless the call to action is fulfilled Campaign type layout compatibility Layout Drive Traffic Collect Leads Present a Message Recommend Content Modal Slideout Bar Sticky Bar Gate Adding content Different content fields are supported by different Experience layouts or tactics Layout Modal Slideout Bar Sticky Bar Gate Headline Message Tactic Drive Traffic Capture Leads Present a Message Recommend Content Call to action Image URL Including an image for your Experience is optional the image will be shown above or beside the messaging of the Experience Any image you include must be hosted publicly as this input takes a URL but not an upload Setting position Experience widgets can be displayed in different positions depending on their layout The available positions will show up as a darker gray while the active position is blue Layout Modal Slideout Bar Sticky Bar Gate Top left Top center Top right Center left Center center Center right Bottom left Bottom center Bottom right Theming the Experience There are three ways to theme your Experience Choose a theme Lytics provides Light and Dark themes you can select Build a custom theme There are eight color options available to build a theme in the Experience editor Background The color of the background color of the Experience Headline The text color of the headline message Body Text The text color of the body text Close Button The color of the shape used as a close button Submit Button Text The color of the text in the submit call to action button Submit Button The background color of the submit call to action button Cancel Button Text The color of the text in the cancel dismiss button Cancel Button The background color of the cancel dismiss button Use Custom CSS Use your own custom CSS to match the Experience s styling with your site s design Experiences are built using the Pathfora SDK Read about using custom CSS with Pathfora Target Target The audience step in the Experience editor allows you to configure the target audience for your Experience Use the dropdown to select from among your pre built audiences Click New audience at the bottom of the dropdown menu if you need to build a new one and you will be directed to the audience builder Standalone Experiences This step is required for standalone Experiences such as a one off email campaign or a seasonal ad promotion Once you have selected an audience Potential Reach displays how many people will be eligible to receive this Experience Experiences part of a Goal This step is optional if your Experience is part of a Goal on the Lytics Canvas Here you can add additional filtering to your Experience Any audience you choose will be combined with the Stage audience resulting in a more targeted Experience with a smaller audience You can also leave this blank if you don t want additional targeting The Potential reach displays how many people will be eligible to receive this Experience The Stage coverage metric displays what percentage of the stage will be eligible to receive this Experience Adjusting your Target If your Experience is not providing the desired results you can pause your Experience and target a new audience Just keep in mind that the metrics are for the Experience and won t explicitly indicate changes you made You can also make changes directly to the target audience and the potential reach of the Experience will be adjusted automatically Finding the Right Fit for Your Content When creating a new Recommend Content Experience you will see a content alignment score in the Target Audience step of the Experience Editor Lytics calculates the alignment percentage by comparing the affinities of your target audience to the affinities in your selected content collection Use the alignment score information to ensure you are recommending content or products that are relevant for your customers which can help improve engagement and conversion rates of your marketing campaigns For a quick demonstration of using the affinity alignment score while building a content recommendation watch this video Display Display The display step is present in the editor for all Experiences of the Lytics provider Use the Display Step to set where and when the Experience will show up for your users Set rules for which URL s an Experience can be displayed on the triggers for displaying it the frequency with which it appears and the date range during which the Experience is available to show Prior to activating your Experience ensure that the display URL is included in your URL Allowlist for Orchestrate account setting Appears on Appears on rules are an optional tool used to specify which webpages within your site the Experience will or will not be shown on This can be a fixed list of pages or expressions that match many pages There are four URL matching strategies offered and rules can be used in combination URL Contains The text specified must be included in the URL Simple Match A fuzzy match that removes the URL protocol and query string before matching Exact Match The URL must match what is typed exactly including protocol and query parameters Regular Expression A regular expression sometimes referred to as Regex to be executed client side with JavaScript for complex matching requirements Each of these URL matching strategies can be used to create a rule determining when the Experience is shown with Show on selected or to specify the cases where the Experience should not be displayed with Hide on Appears on use cases Consider the following use cases and some suggested solutions using the appears on rules Only show the Experience on the home page Only show the Experience on the home page Solution Show on a Simple Match for www lytics com Displays for https www lytics com http www lytics com http www lytics com ad_campaign 1ed387faed Does not display for http www lytics com blog https activate getlytics com Show the Experience on the blog but nowhere else Show the Experience on the blog but nowhere else Solution Show on URL Contains blog Displays for http www lytics com blog http www lytics com blog some post in the past https www lytics com blog tag customer data platform referrer thegreatgoogle Does not display for https www lytics com http www lytics com careers Gate a specific resource Gate a specific resource Solution Show on an Exact Match for https www lytics com resources id a763efd12c Displays for https www lytics com resources id a763efd12c Does not display for http www lytics com resources id a763efd12c https www lytics com resources id a763efd12c something that will 404 Show a referral thank you message on integration pages Show a referral thank you message on integration pages Solution Show on a match for the Regular Expression integrations ref our_partner Displays for http www lytics com integrations campaignmonitor ref our_partner http www lytics com integrations campaignmonitor session 125929 ref our_partner http www lytics com integrations adroll ref our_partner https www lytics com integrations segment ref our_partner qp true Does not display for http www lytics com integrations campaignmonitor ref some_stranger http www lytics com integrations ref our_partner http www lytics com blog adroll session 125929 ref our_partner Show the Experience anywhere on the site except the careers pages Show the Experience anywhere on the site except the careers pages Solution Use two rules in combination Show on URL Contains lytics com Hide on URL Contains careers Displays for http www lytics com blog https www lytics com Does not display for http www lytics com careers http www lytics com careers content writer Advanced Display Options The Advanced Display Options allow you to respond to the user s interaction with your site using the state of their active web session to determine when an Experience is displayed These are all optional and can be used in combination Display triggers Show after x page views Do not show the Experience until the requisite number of pages have been visited Show after x seconds Do not show the Experience until the requisite number of seconds in the session have elapsed Show after x page scroll Do not show the Experience until the user has scrolled a certain percent of the way down the page Show on exit intent Do not show the Experience until the user is about to abandon the site When using triggers in combination note that the conditions function as an ALL conditions met not ANY condition met If you set an Experience to Show after 5 page views and to Show after 70 page scroll when your user scrolls to 70 of the third page the Experience will not show because only one of the two conditions have been met Display frequency Show up to x times per user ever After the specified number of times displaying the Experience suppress its display forever for the current user Show up to x times per user per session After the specified number of times displaying the Experience suppress its display for the current user This count resets when the user ends their current session If you set an Experience to Show up to 5 times per user ever and Show up to 2 times per user per session and a user is shown the Experience twice each on their first two sessions for their third session they will be shown the Experience for the final time If you set an Experience s frequency to Show up to 2 times per user per session and a trigger of Show after 5 page views your user will see the Experience upon reaching the sixth page again on reaching the seventh page and not again during their session When user clicks CTA Hide after x clicks Hide the Experience after the user has clicked the call to action the specified number of times Hide for x time How long an Experience should remain hidden in seconds hours days weeks Hide permanently Instead of hiding an Experience for a set amount of time never show it again for the current user When user clicks cancel or close These are the same options as above but applied to when the user has seen the Experience but not clicked the CTA Pathfora Overrides Pathfora is a very powerful client side personalization SDK In addition it is open sourced Because anyone is invited to contribute to Pathfora providing clear controls for all features is impossible As a result we provide a technical but friendly interface for using overrides Overrides allow you to leverage the full power of pathfora for functionality such as custom load and callback handlers and advanced customization and styling In the coming weeks we ll extend our documentation to outline several common patterns for leveraging overrides For those looking for initial information don t hesitate to contact your primary account contacts For others that are already leveraging overrides directly via our APIs you will also see a representation and area for managing those overrides directly within the Advanced Settings in the Experience wizard as pictured below Date Range Set the date range for when the Experience will be shown to your users The start date will be populated with the current day so that your Experience will start immediately without you needing to set anything You can set a start date in the future and Activate the Experience ahead of time it will have a scheduled status and then switch automatically to active on the start date The end date is not required If you do not set an end date the Experience will run indefinitely as long as it is active End dates cannot be in the past nor can they precede the start date The date range is inclusive so if you set a start date of 3 21 2022 and an end date of 3 23 2022 the experience will run for 3 days On 3 24 2022 the Experience will switch from active status to ended on its own and users will no longer see it Review Review The review step is the final step for all Experiences of the Lytics provider It provides an at a glance view of everything you ve chosen for your Lytics Experience Though there is nothing you need to do on this step it does give you an opportunity to check that all your selections are listed as you expect before you activate the Experience Previewing Use the Preview button in the top right of the screen to see how your experience will look when it s active on your site Simply enter the URL you want to see the preview on in the modal that appears and you ll be directed to your site but with the experience running as it will once it becomes activated From this preview state you can get a better idea of how when the experience is triggered and see what your users will see The URL you enter must match the appears on conditions you set in the display step The target audience however is ignored for previewing ease Save and Exit Save and Exit When you first enter the Experience editor you will see a Save button in the top right corner which allows you to save your progress at any time If you have made it to the final step within the Experience Editor Review for Lytics Experiences the Next Step button will now be a Save and Exit button Click on this button to save and exit your Experience If you have previously saved your Experience and made no other changes this will simply allow you to exit the Experience Editor After the Experience has been saved once the button will become a Save button that is only enabled when you make further changes Name your Experience If you have not yet named the Experience at the time you save you will be prompted to do so at this time and the Experience s tactic will be suggested as a default When creating a new Experience within Lytics name it including the purpose and any categorization e g Drive sales Holiday When working with existing Experiences from your third party tools name the imported experiences on Lytics with the same similar names as in the external tool Discard Changes Unsaved Experiences At any point you may discard your unsaved Experience by clicking on the Close button X in the top left corner of the Experience Editor and then clicking Confirm when asked Are you sure you want to discard unsaved changes You may also select the Delete option from the more options menu in the top right corner of the Experience Editor and click Delete permanently when prompted Both methods will remove you from the Experience Editor without saving Previously Saved Experiences If you have previously saved the Experience and have returned to make edits you may discard all changes you ve made since your last save by clicking on the Close button X in the top left corner of the Experience Editor and clicking Confirm when prompted or by selecting the Discard Changes option from the more options menu in the top right column The former will discard changes and exit the Experience Editor The latter method will allow you discard changes but stay within the Experience Editor where you can make new edits Permanently Delete You may permanently delete previously saved experiences from within the Experience Editor by selecting the Delete option from the more options menu in the top right column and clicking Delete permanently when prompted Activating your new Lytics Experience Prior to activating your Experience ensure that the display URL is included in your URL Allowlist for Orchestrate account setting Once you have completed the steps in the Experience Editor and saved your Experience you can Activate it from the Experience summary page You will be directed to this page once you exit the Experience Editor Out of the Box Integration Experiences You can import existing marketing initiatives currently managed by your channel providers which enables you to quickly gain insights about the campaigns you re already running You can then take action by connecting these Experiences to your Lytics audiences To import an experience click the Add Experience button in the Manage Experience page You can select either the New or Import options in order to import experiences from our out of the box integrations Both options will direct you to the same flow You can monitor out of the box Integration experiences and activate audiences for them within Lytics but the management of external Experiences still happens inside your channel tools Pausing or deleting imported Experiences in Lytics simply stops the audience syncing process It does not pause or delete the campaign in your channel tool Experience Editor Steps for Out of the Box Integration Experiences Select a Provider and Tactic Select a Provider and Tactic From the provided list you will choose a provider from the list of out of the box integrations Each provider has a single tactic selection associated to it You will need then need to configure the experience based on that selected provider Below you will find an overview of the steps for navigating the Experience Editor for out of the box integrations For more detailed information for specific integrations use the links below to navigate to the the integration documentation for your selected provider Facebook Tactic Import Ad Set Google Ads Tactic Import Ad Group Iterable Tactic Import Campaign Mailchimp Tactic Import Campaign or Automation Mapp Tactic Import Campaign Salesforce Marketing Cloud Tactic Import Journey SendGrid Tactic Import Campaign The Trade Desk Tactic Import Ad Group Choose Authorization Choose Authorization After selecting your provider you will be prompted to select or create an authorization to connect the integration Existing authorizations will be shown If you have multiple accounts within a particular channel you will choose which account to import from If you don t have an authorization you will be prompted to add one before continuing To create a new authorization click the Add new authorization button which will take you to a modal where you can enter the appropriate credentials For provider specific documentation on creating authorizations see the below documentation for your selected integration Facebook Google Ads Iterable Mailchimp Mapp Salesforce Marketing Cloud SendGrid The Trade Desk Import Import After you have selected your Authorization you will then select the campaigns you want to import into Lytics you may select up to 10 at a time The total number of Experiences you can bring into Lytics is only limited by the amount in your connected provider However to have meaningful and accurate reporting it s recommended to only import Experiences that will add value to the use cases you are activating within Lytics Completed campaigns that have already ended will not show on the list of importable Experiences Those that are saved as drafts paused or currently running those will be available to import Target Target Once you have imported an Experience you will activate it by adding a Lytics audience This lets you enrich your existing campaigns with Lytics behavioral audiences content affinities and Delivery Optimization The Target step in the Experience editor allows you to configure the target audience for your Experience Use the dropdown to select from among your pre built audiences Click New audience at the bottom of the dropdown menu if you need to build a new one and you will be directed to the audience builder Configure Integration Configure Integration The Configure step in the Experience Editor allows you to configure how the audience for your Experience will be exported to the third party tool you are using In order to successfully activate and export an Experience to your provider tool you will need to correctly configure the Experience See below for links to the configuration documentation for each supported integration Facebook Google Ads Iterable Mailchimp Mapp Salesforce Marketing Cloud SendGrid The Trade Desk Configure Delivery Configure Delivery Delivery Optimization takes the guesswork out of deciding who to send what message and when For the third party Experience providers built in to the Lytics Canvas you can use this option to automatically determine when to deliver messages to individual users on those channels This step in the Experience editor allows you to toggle Delivery Optimization On or Off If you do nothing it will remain off You can turn it on to help prevent over messaging and let you focus on creating great Experiences rather than manually building delivery logic rules that are complicated to manage and execute How does Delivery Optimization work Lytics uses data science to determine the optimal delivery time of an Experience for individual audience members The delivery time is based on when an audience member last interacted with your brand via the channel of the Experience as well as their behavior when that interaction happened Experience decisioning also uses the Experience s performance measured by click through rate CTR to estimate engagement likelihood The actual delivery of an Experience is always controlled by the downstream tool where there could be additional logic necessary to deliver the Experience Lytics Delivery Optimization simply controls when the user data is triggered to send to your third party tool Consider the Experience tactic when determining if you want to turn Delivery Optimization on For Experiences using real time delivery such as Iterable triggered emails Delivery Optimization can help improve user engagement by reaching each user at the ideal time In other circumstances such as sending a one time blast email through SendGrid for a sale promotion you ll likely want to leave Delivery Optimization off and simply push a list of all current users into the audience so that you can send the campaign as soon as you re ready If Delivery Optimization was enabled you may not see users exported to SendGrid until they need to receive a message the most optimal time Save and Exit Save and Exit When you first enter the Experience editor you will see a Save button in the top right corner which allows you to save your progress at any time If you have made it to the final step within the Experience Editor Configure Delivery for out of the box integrations the Next Step button will now be a Save and Exit button Click on this button to save and exit your Experience If you have previously saved your Experience and made no other changes this will simply allow you to exit the Experience Editor After the Experience has been saved once the button will become a Save button that is only enabled when you make further changes Name your Experience If you have not yet named the Experience at the time you save you will be prompted to do so at this time and the Experience s tactic will be suggested as a default When creating a new Experience within Lytics name it including the purpose and any categorization e g Drive sales Holiday When working with existing Experiences from your third party tools name the imported experiences on Lytics with the same similar names as in the external tool Discard Changes Unsaved Experiences At any point you may discard your unsaved Experience by clicking on the Close button X in the top left corner of the Experience Editor and then clicking Confirm when asked Are you sure you want to discard unsaved changes You may also select the Delete option from the more options menu in the top right corner of the Experience Editor and click Delete permanently when prompted Both methods will remove you from the Experience Editor without saving Previously Saved Experiences If you have previously saved the Experience and have returned to make edits you may discard all changes you ve made since your last save by clicking on the Close button X in the top left corner of the Experience Editor and clicking Confirm when prompted or by selecting the Discard Changes option from the more options menu in the top right column The former will discard changes and exit the Experience Editor The latter method will allow you discard changes but stay within the Experience Editor where you can make new edits Permanently Delete You may permanently delete previously saved experiences from within the Experience Editor by selecting the Delete option from the more options menu in the top right column and clicking Delete permanently when prompted Activating your new Out of the Box Integration Experience Once you have completed the steps in the Experience Editor and saved your Experience you can Activate it from the Experience summary page You will be directed to this page once you exit the Experience Editor UTM Tracking In addition to tracking default UTM variables when users visit your website Lytics supports two custom UTM parameters specific to tracking clicks from out of the box Integration Experiences When to use custom UTM parameters You may be recommended by the Lytics Experience Insights to add UTM parameters to an Experience The Lytics insights system will check the target URL of your eligible imported Experiences to see if it has these parameters configured and advise you on which Experiences are missing them For most email providers click information is collected automatically through webhooks or APIs but for ads this is the only way of recording user attribution Lytics highly recommends using these UTM parameters in your ad Experiences as it will not only allow you to build and target audiences of users who have converted on your ad in Lytics but it will also inform Lytics decisioning and insights as the platform builds a better understanding of which users respond to which Experiences Custom UTM parameters Use the following custom UTM parameters in any links coming from your external Experiences Name Value utm_lytics_experience The ID of the object from the third party tool e g ID of the ad set for a Facebook Experience utm_lytics_source Slug of the provider e g facebook for a Facebook ad set These variables allow us to link the website visit with a click from the Experience Thus recording what users clicked on what Experience Using these UTMs will only work if the website linked from your ad has the Lytics JavaScript Tag installed Adding the parameters The steps for adding these parameters may differ by provider but generally speaking you can add them directly to the target URL of your Experience for example https www lytics com utm_lytics_source facebook utm_lytics_experience 23847 Please refer to the providers that have specific docs on how to add these parameters Facebook User field The UTM parameter is recognized by Lytics and mapped to the user field Converted on Experience URL Param which is available in the audience builder so that you can create audiences of users who have clicked on your Experiences The key of this map field will contain the External ID of your Experience and the value will be the number of times the user clicked on the ad set If you find that the number of users in an audience utilizing this field does not match the conversion count you are seeing on your Experience summary page it is important to remember the source of these numbers is different Usually for ad providers metrics are aggregate numbers imported directly from the API of the ad tool If you added the tracking URL parameter to your ad after publishing you may see a smaller user count when utilizing the user field Generic Experiences Generic Experiences allow you to export your Lytics audience to any tool you choose Since you will not be able to monitor the performance of this Experience from Lytics it s primary use cases are to act as a placeholder for An Experience of an integration that is not built into the Lytics Goal Canvas An Experience of a custom implementation using webhooks or inline web personalization Generic Experiences allow you to produce audiences with all the nested targeting rules of a Stage within a Goal to make the audience mutually exclusive of the other Stages As such Generic Experiences should only be used for Experiences included in a Stage of a Goal Unlike out of the box integration Experiences Delivery Optimization and Experience reporting is not available for Generic Experiences so Generic Experiences should only be used for Experiences included in a Stage of a Goal Experience Editor Steps for Generic Experiences Select a Provider and Tactic Select a Provider and Tactic From the provided list you will choose a Generic as the provider Generic Experiences only support one tactic Universal Experience Create a general Experience to be used with any use case or integration supported by the Lytics platform Target Target The Target step in the Experience editor allows you to configure the target audience for your Experience Use the dropdown to select from among your pre built audiences Click New audience at the bottom of the dropdown menu if you need to build a new one and you will be directed to the audience builder Tutorial Tutorial This step offers a quick overview of the additional steps you will need to take to activate your Audience for this Experience Save and Name Name Save and Exit Upon saving and naming you Experience an audience will be generated If you are still within the Experience Editor the Tutorial screen will be updated to provide a link to the generated audience If you have exited the Experience Editor you can find this link by clicking the Help link in the Experience summary page Save your Experience When you first enter the Experience editor you will see a Save button in the top right corner which allows you to save your progress at any time If you have made it to the final step within the Experience Editor Tutorial for Generic Experiences the Next Step button will now be a Save and Exit button Click on this button to save and exit your Experience If you have previously saved your Experience and made no other changes this will simply allow you to exit the Experience Editor After the Experience has been saved once the button will become a Save button that is only enabled when you make further changes Name your Experience If you have not yet named the Experience at the time you save you will be prompted to do so at this time and the Experience s tactic will be suggested as a default When creating a new Experience within Lytics name it including the purpose and any categorization e g Drive sales Holiday When working with existing Experiences from your third party tools name the imported experiences on Lytics with the same similar names as in the external tool Discard Changes Unsaved Experiences At any point you may discard your unsaved Experience by clicking on the Close button X in the top left corner of the Experience Editor and then clicking Confirm when asked Are you sure you want to discard unsaved changes You may also select the Delete option from the more options menu in the top right corner of the Experience Editor and click Delete permanently when prompted Both methods will remove you from the Experience Editor without saving Previously Saved Experiences If you have previously saved the Experience and have returned to make edits you may discard all changes you ve made since your last save by clicking on the Close button X in the top left corner of the Experience Editor and clicking Confirm when prompted or by selecting the Discard Changes option from the more options menu in the top right column The former will discard changes and exit the Experience Editor The latter method will allow you discard changes but stay within the Experience Editor where you can make new edits Permanently Delete You may permanently delete previously saved experiences from within the Experience Editor by selecting the Delete option from the more options menu in the top right column and clicking Delete permanently when prompted Activating your new Generic Experience Once you have completed the steps in the Experience Editor and saved your Experience you will need to navigate to the created audience and export it to the integration of your choice Navigate to the created audience in the Experience summary page by clicking on Help and then the link found within the Finish setting up your Generic Experience section Export the audience from the Audience summary page Experience Reporting Experience Performance Reporting On the Experience summary page you will find Experience performance reporting This reporting contains three metrics for the campaigns you ve created or imported into Lytics Use these metrics to establish a baseline of your campaign performance and measure growth over time Name Description Updated Reached Number of unique users who have been reached by the Experience unique impressions for ads or unique opens for emails Every 2 hours Clicks Number of unique users who have clicked the Experience Every 2 hours Click Rate Percentage equal to number of unique users who have clicked on the Experience number of unique users who have been reached by Experience Every 2 hours Experience Intelligence Report In addition to the Experience Performance Reporting the Lytics View feature can be enabled in your account to give you additional information about your Experiences via an Experience Intelligence Report The Experience Intelligence Report once enabled will add the following modules to your Experience summary page as well as in the Goal Intelligence Report for Experiences within Goals Experience Insights Goal Attribution for Experiences used within Goals Content Recommendations Data Science Performance Simulation Your account must have Lytics View feature enabled in order to see this module Reach out to your Customer Success Manager to have this feature enabled Experience Insights The Insights module displays how many Insights have been generated for your account in the last week Lytics Experience Insights are the combination of a fact and an action The fact is a metric about your audience or campaign data and the action is a recommendation on how to improve engagement and conversions Leverage Insights while evaluating and planning your campaigns to make data driven iterations and achieve your goals more efficiently Name Description Updated Insights Insights combine a metric and a recommended action to improve customer engagement Weekly See Insights Introduction to learn more Goal Attribution The Goal Attribution module displays metrics around how conversions on your Experience relate to conversions on your Goal The percentage compares the total number of people reached by the Experience and those who converted For Facebook Ads with UTM parameters included Lytics will capture conversion data at the user level Use this metric to determine which campaigns to invest more or less in based on how they contribute toward your larger marketing Goal Name Description Updated Attribution Rate Percentage equal to attributed conversions for an Experience number of users that engaged with the Experience Weekly Attribution Graph Number of users who have converted on both your Experience and your Goal in the past week Weekly Content Recommendation The Content Recommendation module surfaces content that is likely to resonate with your users based on their past behavior Lytics analyzes and classifies the content on your website through the Lytics JavaScript Tag The relevancy percentage is calculated by determining the total number of users with various content affinities and comparing this to the total number of users within the audience that visited your site Create and deliver more content that aligns with your users interests to drive engagement and conversions Name Description Updated Topic Relevance Percentage of the audience that has an affinity for this topic Weekly Content Recommendations Suggestions for content to serve to users in the target audience for your Experience Weekly See Content Affinity Introduction and Content Recommendation to learn more Data Science Performance Simulation The Data Science Performance Simulator module displays simulated conversion rate metrics that compare how your campaign audience performed against Lytics out of the box behavioral audiences This gives a risk free preview of how effective your campaigns could be when leveraging behavioral scores and custom models powered by Lytics data science You can activate Lytics data science audiences and custom models in your campaigns by upgrading from the free trial Name Description Updated Conversion Rate Percentage equal to number of users who have clicked on the Experience number of all users who have ever been eligible to receive the Experience This is equivalent to the click rate from the Experience Performance module Every 2 hours Simulated Conversion Rate with Behavioral Scoring Percentage equal to number of users who have clicked on the Experience who are also in the Highly Engaged Lytics segment number of users who have been reached by the Experience who are also in the Highly Engaged Lytics segment Every 2 hours Simulated Conversion Rate with SegmentML Percentage equal to number of users who have clicked on the Experience who are also in the threshold Segment for the SegmentML model of the parent stage number of users who have been reached by the Experience who are also in the threshold Segment for the SegmentML model of the parent stage Every 2 hours See Data Science Introduction to learn more Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/experiences#content",
    "title": "Experiences Quick Start",
    "chunk_text": "Lytics Experiences have replaced the legacy Personalize functionality as such Personalize campaigns are no longer supported by Lytics If your account has not yet migrated from Personalize to Experiences you may access our legacy documentation here Experiences Quick Start Overview Experiences allow you to present tailored messaging to specific audiences These messages can be on your website using Lytics Experiences appear on a third party ad platform like Facebook or emails delivered through an email service provider like SendGrid Since you can control the audience being targeted you can deliver Experiences that make sense for some users but not others You can even recommend products or content based on each user s unique content affinities and behaviors Experiences allow you to treat your customers as individuals rather than over messaging them with generic offers and newsletters Common uses of Experiences include Present an email capture form to anonymous users but not to users who have already shared theirs Let only eligible users know about a targeted sale or promotion Keep your audience engaged by serving content recommendations tailored to their browsing behavior Limit Facebook ads to users who are likely to engage with them saving your advertising budget You can create and import new Experiences as well as browse existing Experiences including those that are associated with a Goal by navigating to the Experiences tab Add your first Experience The set up for each Experience is slightly different so whether you are creating an on site Lytics Experiences or connecting to one of our out of the box Integrations the simplest way to get started with experiences is to create a new Experience and allow our Experience Editor to navigate you through each of the steps Managing Experiences Experience List View Within the Experiences tab in the Lytics app you will find a list of all of your Experiences From this view you can Add Experiences Browse Experiences View the Status of your Experiences Navigate to Experience summary pages to work with individual Experiences See below for more information around each of these activities Adding Experiences Creating New Experiences Create a new Experience within the Experiences tab by clicking the Add Experiences button near the top of the page Selecting the New option will guide you through the Experience Editor steps for any Experience Lytics Out of the Box Integrations or Generic The New option allows you to select from the full list of providers Importing Experiences If you want to import external marketing initiatives from out of the box integrations that support Experiences you can do so within the Experiences tab as well Click the Add Experiences button near the top of the page and select the Import option to be guided through the Experience Editor steps for these supported integrations The Import option navigates you to directly to a list of the out of the box integration providers Browsing Experiences Search The easiest way to find an Experience is to use the Search box to the right of the Experience list As you enter your search term the Experiences list will display any matching Experiences Filter To the right of the Experience list you can filter Experiences based on their Channel The channel is associated with the Provider you selected when creating the experience Integration The Provider you selected when creating the Experience Status Life cycle and health of the Experience Type Whether or not the Experience is associated with a Goal Imported Experiences that haven t been activated yet will be tagged as Externally Managed Sort By default the list of Experiences is sorted by Name If you choose to sort by date Last modified instead your preferences will be saved for the next time you visit Experience Statuses An Experience status indicates what life cycle the Experience is in and the health of whether it is exporting a Lytics audience to a third party tool in real time Below is a complete list of Experience statuses Draft A complete or partially complete Experience that has not yet been activated Active An Experience that can be seen by your users and has not passes its end date Paused An Experience that was activated but has been paused To edit an Experience that has been running you must pause it first Scheduled An Experience that will be activated at a start date set in the future Externally Managed An imported Experience from a third party tool that hasn t been configured with a Lytics audience Complete the configuration by editing the Experience in the Experience editor Ended An Active Experience that has passed its end date Error An Experience that failed to export audience data to the appropriate tool Warning An Experience that encountered issues when attempting to export audience data to a third party tool It may recover on its own or proceed to an error status after a number of failed attempts to export data Experience Summary View Once you have created or imported Experiences they will be populated as a list within the Experiences tab Click on an Experiences from the list to enter the Experiences summary From this summary page you can See an overview of the Experience Activate pause or resume Experiences Edit an existing Experience Delete an existing Experience See below for more information about each of these activities Experience Overview Within the Experience summary you will find important information about your Experience The summary includes Experience Status Experience Performance Reporting Experience Intelligence Report for accounts with the Lytics View feature enabled Sample Audience Members a small sample of users in the target audience that are eligible for the experience Activity recent activity around changes made to the Experience Details an overview of the configuration of the Experience Activating Experiences From the Experience summary page you are able manage the activation of individual Experiences using the following buttons on the righthand side of the summary page Activate An Experience has not been previously activated and is currently marked with the Draft status can be activated Pause Campaigns currently marked as Active can be paused Resume Any previously activated Experiences that are currently paused can be resumed Editing Experiences Within the Experiences section of the Lytics app you can edit an existing Experience by clicking on the desired Experience This will navigate you to the Experience summary page Here you can click on the Edit button to enter the Experience Editor for this Experience You cannot edit an Experience while it is activated so you will not be able to enter the Experience editor at that point If you need to edit an Active Experience you can Pause it from the Experience summary page Once you have made and saved your edits you can then Resume the experience from the Experience summary page Deleting Experiences To delete an experience from Lytics click on the Experience you wish to delete from within the Experiences list You will be navigated to the Experience summary page where you can delete the experience from the options menu You will be asked to confirm that you wish to delete the experience click the Delete permanently button to complete the deletion Experience Editor The Experience editor is used to create save edit and activate marketing Experiences Combined with audiences created in the audience builder sophisticated Experiences can be built to deliver the right message to your users at the right time To enter the Experience editor you can either add an experience or edit an experience The available steps of the Experience editor are dictated by the Experience provider you select Experience Providers Lytics Lytics Experiences allow you to create personalized campaigns on your website to capture leads recommend content drive traffic etc without having to connect Lytics to an additional tool The Lytics Javascript tag must be installed on your website for you to take advantage of this feature Out of the Box Integrations Experiences added to Lytics from these providers allow you to monitor performance and activate audiences from the Lytics UI however the management of external Experiences still happens inside your channel tools Facebook Google Ads Iterable Mailchimp Mapp Salesforce Marketing Cloud SendGrid The Trade Desk Generic These experiences simply offer the ability to include a placeholder Universal Experience within the Goals Canvas and export a Lytics audience with all of the nested Goal Stage filter logic to any tool you choose Lytics Experiences Use Lytics Experiences to personalize a website with modals slide outs sticky bars etc This does not require connecting to another tool Experience Editor Steps for Lytics Experiences Select a Provider and Tactic Select a Provider and Tactic If you are creating or importing a new Experience you will be given a choice of Experience providers providers are the tools that deliver your Experience The selection of Lytics as a provider will prompt you to select a tactic from a list of options The following tactics are available for Lytics Experiences Drive Traffic Increase traffic to a specific URL Capture Leads Convert unknown users to known users with a simple lead capture form Present a Message Communicate a simple message such as a global coupon or an announcement Recommend Content Use content collections to recommend articles products or any other type of content to your users Once you ve chosen your tactic the Experience editor will take you though each step Choose URL unique to the Lytics Drive Traffic tactic Choose URL Choosing a URL to promote is the first step in the Experience editor for a Drive Traffic Experience of the Lytics provider This step does not apply to Experiences of any other tactic or Provider This step allows you to enter the destination you want to link as a call to action in your Drive Traffic Experience The protocol is preset to https but can be changed to http Enter the rest of the URL into the input field Customize Form unique to the Lytics Capture Leads tactic Customize Form Specific to the Collect Leads tactic of Lytics Experiences this step is for selecting what information you collect on the form Here you will configure which form fields will be shown and thus what information you capture about your user Enable fields by selecting the checkbox next to the desired field Form labels have default text input that appears when the field is selected You can rename these labels to suit your use case Require fields with the Required checkbox at the right of the text field Choose Content unique to the Lytics Recommend Content tactic Choose Content The Recommend Content Experience type is used to surface content an article a blog post a product page to visitors Each recommendation is personalized to the individual This could be used to keep visitors engaged by surfacing what to read next or assist casual perusers by prompting a starting point Furthermore the Experience can be configured to only a set of pages or a subset of your total audience This allows you to limit the recommendations from showing up on auxiliary pages like the home page company page or checkout page It can also only be shown to users with high usage This way low usage visitors can be targeted with a more aggressive campaign Choosing content is the first step for a Recommend Content Experience Lytics provides a variety of filters and options for tailoring what content can be recommended and how the recommendation algorithm should rank the content Choosing a content collection A content collection allows you to limit the scope of documents that can be recommended by your Experience If you re creating a summer seasonal experience for example you wouldn t want articles that are out of season A content collection is how you define which articles are appropriate to recommend Use the Select a content collection dropdown to choose an existing collection or to create a new one Clicking on New content collection will take you to the collection builder The state of your Experience will be saved and after creating your new collection you will automatically be returned to the Experience editor Choosing recommendation settings The Lytics content recommendation engine allows you to configure the way in which the Experience will recommend content The recommendation settings work within the limits set by the content collection If your content collection includes articles published six to twelve months ago and you choose the Recently Published method then the Experience will begin recommending six month old articles which are the most recently published articles within the collection Recommendation method The recommendation methods control how the recommendation engine ranks the content Highest Affinity Choose the content that a user is most likely to be interested in This is the default setting Freshness Choose the content that was most recently published or updated Last Interaction Choose the content based on what a user has engaged with most recently New content only The Only recommend content the user has not seen checkbox controls whether previously viewed content will be included among the recommendations Leave this setting checked to ensure that a user won t be recommended content they have viewed in the past Shuffle content The Shuffle content on each page load checkbox controls whether a user should be recommended different content if they encounter the Experience again e g after reloading Check this setting to vary the content that is recommended on subsequent requests or leave it unchecked to show the single best recommendation Design Design The design step is present in the editor for all Experiences of the Lytics provider It lets you customize the appearance and content of the widget displayed to your users on your website This step offers layout and position options as well as a custom CSS option Choosing a layout First choose your Experience s layout There are five different layout options and their availability depends on the tactic you selected Modal A full screen takeover Experience that can be closed by clicking outside the modal clicking the close button of the modal or taking the intended call to action Slideout A small widget that occupies a corner of the screen It does not interrupt the user s current task Bar A short widget that takes the full width of the screen and sits at the top of the page Sticky Bar A bar that scrolls with the page Gate A modal that cannot be closed unless the call to action is fulfilled Campaign type layout compatibility Layout Drive Traffic Collect Leads Present a Message Recommend Content Modal Slideout Bar Sticky Bar Gate Adding content Different content fields are supported by different Experience layouts or tactics Layout Modal Slideout Bar Sticky Bar Gate Headline Message Tactic Drive Traffic Capture Leads Present a Message Recommend Content Call to action Image URL Including an image for your Experience is optional the image will be shown above or beside the messaging of the Experience Any image you include must be hosted publicly as this input takes a URL but not an upload Setting position Experience widgets can be displayed in different positions depending on their layout The available positions will show up as a darker gray while the active position is blue Layout Modal Slideout Bar Sticky Bar Gate Top left Top center Top right Center left Center center Center right Bottom left Bottom center Bottom right Theming the Experience There are three ways to theme your Experience Choose a theme Lytics provides Light and Dark themes you can select Build a custom theme There are eight color options available to build a theme in the Experience editor Background The color of the background color of the Experience Headline The text color of the headline message Body Text The text color of the body text Close Button The color of the shape used as a close button Submit Button Text The color of the text in the submit call to action button Submit Button The background color of the submit call to action button Cancel Button Text The color of the text in the cancel dismiss button Cancel Button The background color of the cancel dismiss button Use Custom CSS Use your own custom CSS to match the Experience s styling with your site s design Experiences are built using the Pathfora SDK Read about using custom CSS with Pathfora Target Target The audience step in the Experience editor allows you to configure the target audience for your Experience Use the dropdown to select from among your pre built audiences Click New audience at the bottom of the dropdown menu if you need to build a new one and you will be directed to the audience builder Standalone Experiences This step is required for standalone Experiences such as a one off email campaign or a seasonal ad promotion Once you have selected an audience Potential Reach displays how many people will be eligible to receive this Experience Experiences part of a Goal This step is optional if your Experience is part of a Goal on the Lytics Canvas Here you can add additional filtering to your Experience Any audience you choose will be combined with the Stage audience resulting in a more targeted Experience with a smaller audience You can also leave this blank if you don t want additional targeting The Potential reach displays how many people will be eligible to receive this Experience The Stage coverage metric displays what percentage of the stage will be eligible to receive this Experience Adjusting your Target If your Experience is not providing the desired results you can pause your Experience and target a new audience Just keep in mind that the metrics are for the Experience and won t explicitly indicate changes you made You can also make changes directly to the target audience and the potential reach of the Experience will be adjusted automatically Finding the Right Fit for Your Content When creating a new Recommend Content Experience you will see a content alignment score in the Target Audience step of the Experience Editor Lytics calculates the alignment percentage by comparing the affinities of your target audience to the affinities in your selected content collection Use the alignment score information to ensure you are recommending content or products that are relevant for your customers which can help improve engagement and conversion rates of your marketing campaigns For a quick demonstration of using the affinity alignment score while building a content recommendation watch this video Display Display The display step is present in the editor for all Experiences of the Lytics provider Use the Display Step to set where and when the Experience will show up for your users Set rules for which URL s an Experience can be displayed on the triggers for displaying it the frequency with which it appears and the date range during which the Experience is available to show Prior to activating your Experience ensure that the display URL is included in your URL Allowlist for Orchestrate account setting Appears on Appears on rules are an optional tool used to specify which webpages within your site the Experience will or will not be shown on This can be a fixed list of pages or expressions that match many pages There are four URL matching strategies offered and rules can be used in combination URL Contains The text specified must be included in the URL Simple Match A fuzzy match that removes the URL protocol and query string before matching Exact Match The URL must match what is typed exactly including protocol and query parameters Regular Expression A regular expression sometimes referred to as Regex to be executed client side with JavaScript for complex matching requirements Each of these URL matching strategies can be used to create a rule determining when the Experience is shown with Show on selected or to specify the cases where the Experience should not be displayed with Hide on Appears on use cases Consider the following use cases and some suggested solutions using the appears on rules Only show the Experience on the home page Only show the Experience on the home page Solution Show on a Simple Match for www lytics com Displays for https www lytics com http www lytics com http www lytics com ad_campaign 1ed387faed Does not display for http www lytics com blog https activate getlytics com Show the Experience on the blog but nowhere else Show the Experience on the blog but nowhere else Solution Show on URL Contains blog Displays for http www lytics com blog http www lytics com blog some post in the past https www lytics com blog tag customer data platform referrer thegreatgoogle Does not display for https www lytics com http www lytics com careers Gate a specific resource Gate a specific resource Solution Show on an Exact Match for https www lytics com resources id a763efd12c Displays for https www lytics com resources id a763efd12c Does not display for http www lytics com resources id a763efd12c https www lytics com resources id a763efd12c something that will 404 Show a referral thank you message on integration pages Show a referral thank you message on integration pages Solution Show on a match for the Regular Expression integrations ref our_partner Displays for http www lytics com integrations campaignmonitor ref our_partner http www lytics com integrations campaignmonitor session 125929 ref our_partner http www lytics com integrations adroll ref our_partner https www lytics com integrations segment ref our_partner qp true Does not display for http www lytics com integrations campaignmonitor ref some_stranger http www lytics com integrations ref our_partner http www lytics com blog adroll session 125929 ref our_partner Show the Experience anywhere on the site except the careers pages Show the Experience anywhere on the site except the careers pages Solution Use two rules in combination Show on URL Contains lytics com Hide on URL Contains careers Displays for http www lytics com blog https www lytics com Does not display for http www lytics com careers http www lytics com careers content writer Advanced Display Options The Advanced Display Options allow you to respond to the user s interaction with your site using the state of their active web session to determine when an Experience is displayed These are all optional and can be used in combination Display triggers Show after x page views Do not show the Experience until the requisite number of pages have been visited Show after x seconds Do not show the Experience until the requisite number of seconds in the session have elapsed Show after x page scroll Do not show the Experience until the user has scrolled a certain percent of the way down the page Show on exit intent Do not show the Experience until the user is about to abandon the site When using triggers in combination note that the conditions function as an ALL conditions met not ANY condition met If you set an Experience to Show after 5 page views and to Show after 70 page scroll when your user scrolls to 70 of the third page the Experience will not show because only one of the two conditions have been met Display frequency Show up to x times per user ever After the specified number of times displaying the Experience suppress its display forever for the current user Show up to x times per user per session After the specified number of times displaying the Experience suppress its display for the current user This count resets when the user ends their current session If you set an Experience to Show up to 5 times per user ever and Show up to 2 times per user per session and a user is shown the Experience twice each on their first two sessions for their third session they will be shown the Experience for the final time If you set an Experience s frequency to Show up to 2 times per user per session and a trigger of Show after 5 page views your user will see the Experience upon reaching the sixth page again on reaching the seventh page and not again during their session When user clicks CTA Hide after x clicks Hide the Experience after the user has clicked the call to action the specified number of times Hide for x time How long an Experience should remain hidden in seconds hours days weeks Hide permanently Instead of hiding an Experience for a set amount of time never show it again for the current user When user clicks cancel or close These are the same options as above but applied to when the user has seen the Experience but not clicked the CTA Pathfora Overrides Pathfora is a very powerful client side personalization SDK In addition it is open sourced Because anyone is invited to contribute to Pathfora providing clear controls for all features is impossible As a result we provide a technical but friendly interface for using overrides Overrides allow you to leverage the full power of pathfora for functionality such as custom load and callback handlers and advanced customization and styling In the coming weeks we ll extend our documentation to outline several common patterns for leveraging overrides For those looking for initial information don t hesitate to contact your primary account contacts For others that are already leveraging overrides directly via our APIs you will also see a representation and area for managing those overrides directly within the Advanced Settings in the Experience wizard as pictured below Date Range Set the date range for when the Experience will be shown to your users The start date will be populated with the current day so that your Experience will start immediately without you needing to set anything You can set a start date in the future and Activate the Experience ahead of time it will have a scheduled status and then switch automatically to active on the start date The end date is not required If you do not set an end date the Experience will run indefinitely as long as it is active End dates cannot be in the past nor can they precede the start date The date range is inclusive so if you set a start date of 3 21 2022 and an end date of 3 23 2022 the experience will run for 3 days On 3 24 2022 the Experience will switch from active status to ended on its own and users will no longer see it Review Review The review step is the final step for all Experiences of the Lytics provider It provides an at a glance view of everything you ve chosen for your Lytics Experience Though there is nothing you need to do on this step it does give you an opportunity to check that all your selections are listed as you expect before you activate the Experience Previewing Use the Preview button in the top right of the screen to see how your experience will look when it s active on your site Simply enter the URL you want to see the preview on in the modal that appears and you ll be directed to your site but with the experience running as it will once it becomes activated From this preview state you can get a better idea of how when the experience is triggered and see what your users will see The URL you enter must match the appears on conditions you set in the display step The target audience however is ignored for previewing ease Save and Exit Save and Exit When you first enter the Experience editor you will see a Save button in the top right corner which allows you to save your progress at any time If you have made it to the final step within the Experience Editor Review for Lytics Experiences the Next Step button will now be a Save and Exit button Click on this button to save and exit your Experience If you have previously saved your Experience and made no other changes this will simply allow you to exit the Experience Editor After the Experience has been saved once the button will become a Save button that is only enabled when you make further changes Name your Experience If you have not yet named the Experience at the time you save you will be prompted to do so at this time and the Experience s tactic will be suggested as a default When creating a new Experience within Lytics name it including the purpose and any categorization e g Drive sales Holiday When working with existing Experiences from your third party tools name the imported experiences on Lytics with the same similar names as in the external tool Discard Changes Unsaved Experiences At any point you may discard your unsaved Experience by clicking on the Close button X in the top left corner of the Experience Editor and then clicking Confirm when asked Are you sure you want to discard unsaved changes You may also select the Delete option from the more options menu in the top right corner of the Experience Editor and click Delete permanently when prompted Both methods will remove you from the Experience Editor without saving Previously Saved Experiences If you have previously saved the Experience and have returned to make edits you may discard all changes you ve made since your last save by clicking on the Close button X in the top left corner of the Experience Editor and clicking Confirm when prompted or by selecting the Discard Changes option from the more options menu in the top right column The former will discard changes and exit the Experience Editor The latter method will allow you discard changes but stay within the Experience Editor where you can make new edits Permanently Delete You may permanently delete previously saved experiences from within the Experience Editor by selecting the Delete option from the more options menu in the top right column and clicking Delete permanently when prompted Activating your new Lytics Experience Prior to activating your Experience ensure that the display URL is included in your URL Allowlist for Orchestrate account setting Once you have completed the steps in the Experience Editor and saved your Experience you can Activate it from the Experience summary page You will be directed to this page once you exit the Experience Editor Out of the Box Integration Experiences You can import existing marketing initiatives currently managed by your channel providers which enables you to quickly gain insights about the campaigns you re already running You can then take action by connecting these Experiences to your Lytics audiences To import an experience click the Add Experience button in the Manage Experience page You can select either the New or Import options in order to import experiences from our out of the box integrations Both options will direct you to the same flow You can monitor out of the box Integration experiences and activate audiences for them within Lytics but the management of external Experiences still happens inside your channel tools Pausing or deleting imported Experiences in Lytics simply stops the audience syncing process It does not pause or delete the campaign in your channel tool Experience Editor Steps for Out of the Box Integration Experiences Select a Provider and Tactic Select a Provider and Tactic From the provided list you will choose a provider from the list of out of the box integrations Each provider has a single tactic selection associated to it You will need then need to configure the experience based on that selected provider Below you will find an overview of the steps for navigating the Experience Editor for out of the box integrations For more detailed information for specific integrations use the links below to navigate to the the integration documentation for your selected provider Facebook Tactic Import Ad Set Google Ads Tactic Import Ad Group Iterable Tactic Import Campaign Mailchimp Tactic Import Campaign or Automation Mapp Tactic Import Campaign Salesforce Marketing Cloud Tactic Import Journey SendGrid Tactic Import Campaign The Trade Desk Tactic Import Ad Group Choose Authorization Choose Authorization After selecting your provider you will be prompted to select or create an authorization to connect the integration Existing authorizations will be shown If you have multiple accounts within a particular channel you will choose which account to import from If you don t have an authorization you will be prompted to add one before continuing To create a new authorization click the Add new authorization button which will take you to a modal where you can enter the appropriate credentials For provider specific documentation on creating authorizations see the below documentation for your selected integration Facebook Google Ads Iterable Mailchimp Mapp Salesforce Marketing Cloud SendGrid The Trade Desk Import Import After you have selected your Authorization you will then select the campaigns you want to import into Lytics you may select up to 10 at a time The total number of Experiences you can bring into Lytics is only limited by the amount in your connected provider However to have meaningful and accurate reporting it s recommended to only import Experiences that will add value to the use cases you are activating within Lytics Completed campaigns that have already ended will not show on the list of importable Experiences Those that are saved as drafts paused or currently running those will be available to import Target Target Once you have imported an Experience you will activate it by adding a Lytics audience This lets you enrich your existing campaigns with Lytics behavioral audiences content affinities and Delivery Optimization The Target step in the Experience editor allows you to configure the target audience for your Experience Use the dropdown to select from among your pre built audiences Click New audience at the bottom of the dropdown menu if you need to build a new one and you will be directed to the audience builder Configure Integration Configure Integration The Configure step in the Experience Editor allows you to configure how the audience for your Experience will be exported to the third party tool you are using In order to successfully activate and export an Experience to your provider tool you will need to correctly configure the Experience See below for links to the configuration documentation for each supported integration Facebook Google Ads Iterable Mailchimp Mapp Salesforce Marketing Cloud SendGrid The Trade Desk Configure Delivery Configure Delivery Delivery Optimization takes the guesswork out of deciding who to send what message and when For the third party Experience providers built in to the Lytics Canvas you can use this option to automatically determine when to deliver messages to individual users on those channels This step in the Experience editor allows you to toggle Delivery Optimization On or Off If you do nothing it will remain off You can turn it on to help prevent over messaging and let you focus on creating great Experiences rather than manually building delivery logic rules that are complicated to manage and execute How does Delivery Optimization work Lytics uses data science to determine the optimal delivery time of an Experience for individual audience members The delivery time is based on when an audience member last interacted with your brand via the channel of the Experience as well as their behavior when that interaction happened Experience decisioning also uses the Experience s performance measured by click through rate CTR to estimate engagement likelihood The actual delivery of an Experience is always controlled by the downstream tool where there could be additional logic necessary to deliver the Experience Lytics Delivery Optimization simply controls when the user data is triggered to send to your third party tool Consider the Experience tactic when determining if you want to turn Delivery Optimization on For Experiences using real time delivery such as Iterable triggered emails Delivery Optimization can help improve user engagement by reaching each user at the ideal time In other circumstances such as sending a one time blast email through SendGrid for a sale promotion you ll likely want to leave Delivery Optimization off and simply push a list of all current users into the audience so that you can send the campaign as soon as you re ready If Delivery Optimization was enabled you may not see users exported to SendGrid until they need to receive a message the most optimal time Save and Exit Save and Exit When you first enter the Experience editor you will see a Save button in the top right corner which allows you to save your progress at any time If you have made it to the final step within the Experience Editor Configure Delivery for out of the box integrations the Next Step button will now be a Save and Exit button Click on this button to save and exit your Experience If you have previously saved your Experience and made no other changes this will simply allow you to exit the Experience Editor After the Experience has been saved once the button will become a Save button that is only enabled when you make further changes Name your Experience If you have not yet named the Experience at the time you save you will be prompted to do so at this time and the Experience s tactic will be suggested as a default When creating a new Experience within Lytics name it including the purpose and any categorization e g Drive sales Holiday When working with existing Experiences from your third party tools name the imported experiences on Lytics with the same similar names as in the external tool Discard Changes Unsaved Experiences At any point you may discard your unsaved Experience by clicking on the Close button X in the top left corner of the Experience Editor and then clicking Confirm when asked Are you sure you want to discard unsaved changes You may also select the Delete option from the more options menu in the top right corner of the Experience Editor and click Delete permanently when prompted Both methods will remove you from the Experience Editor without saving Previously Saved Experiences If you have previously saved the Experience and have returned to make edits you may discard all changes you ve made since your last save by clicking on the Close button X in the top left corner of the Experience Editor and clicking Confirm when prompted or by selecting the Discard Changes option from the more options menu in the top right column The former will discard changes and exit the Experience Editor The latter method will allow you discard changes but stay within the Experience Editor where you can make new edits Permanently Delete You may permanently delete previously saved experiences from within the Experience Editor by selecting the Delete option from the more options menu in the top right column and clicking Delete permanently when prompted Activating your new Out of the Box Integration Experience Once you have completed the steps in the Experience Editor and saved your Experience you can Activate it from the Experience summary page You will be directed to this page once you exit the Experience Editor UTM Tracking In addition to tracking default UTM variables when users visit your website Lytics supports two custom UTM parameters specific to tracking clicks from out of the box Integration Experiences When to use custom UTM parameters You may be recommended by the Lytics Experience Insights to add UTM parameters to an Experience The Lytics insights system will check the target URL of your eligible imported Experiences to see if it has these parameters configured and advise you on which Experiences are missing them For most email providers click information is collected automatically through webhooks or APIs but for ads this is the only way of recording user attribution Lytics highly recommends using these UTM parameters in your ad Experiences as it will not only allow you to build and target audiences of users who have converted on your ad in Lytics but it will also inform Lytics decisioning and insights as the platform builds a better understanding of which users respond to which Experiences Custom UTM parameters Use the following custom UTM parameters in any links coming from your external Experiences Name Value utm_lytics_experience The ID of the object from the third party tool e g ID of the ad set for a Facebook Experience utm_lytics_source Slug of the provider e g facebook for a Facebook ad set These variables allow us to link the website visit with a click from the Experience Thus recording what users clicked on what Experience Using these UTMs will only work if the website linked from your ad has the Lytics JavaScript Tag installed Adding the parameters The steps for adding these parameters may differ by provider but generally speaking you can add them directly to the target URL of your Experience for example https www lytics com utm_lytics_source facebook utm_lytics_experience 23847 Please refer to the providers that have specific docs on how to add these parameters Facebook User field The UTM parameter is recognized by Lytics and mapped to the user field Converted on Experience URL Param which is available in the audience builder so that you can create audiences of users who have clicked on your Experiences The key of this map field will contain the External ID of your Experience and the value will be the number of times the user clicked on the ad set If you find that the number of users in an audience utilizing this field does not match the conversion count you are seeing on your Experience summary page it is important to remember the source of these numbers is different Usually for ad providers metrics are aggregate numbers imported directly from the API of the ad tool If you added the tracking URL parameter to your ad after publishing you may see a smaller user count when utilizing the user field Generic Experiences Generic Experiences allow you to export your Lytics audience to any tool you choose Since you will not be able to monitor the performance of this Experience from Lytics it s primary use cases are to act as a placeholder for An Experience of an integration that is not built into the Lytics Goal Canvas An Experience of a custom implementation using webhooks or inline web personalization Generic Experiences allow you to produce audiences with all the nested targeting rules of a Stage within a Goal to make the audience mutually exclusive of the other Stages As such Generic Experiences should only be used for Experiences included in a Stage of a Goal Unlike out of the box integration Experiences Delivery Optimization and Experience reporting is not available for Generic Experiences so Generic Experiences should only be used for Experiences included in a Stage of a Goal Experience Editor Steps for Generic Experiences Select a Provider and Tactic Select a Provider and Tactic From the provided list you will choose a Generic as the provider Generic Experiences only support one tactic Universal Experience Create a general Experience to be used with any use case or integration supported by the Lytics platform Target Target The Target step in the Experience editor allows you to configure the target audience for your Experience Use the dropdown to select from among your pre built audiences Click New audience at the bottom of the dropdown menu if you need to build a new one and you will be directed to the audience builder Tutorial Tutorial This step offers a quick overview of the additional steps you will need to take to activate your Audience for this Experience Save and Name Name Save and Exit Upon saving and naming you Experience an audience will be generated If you are still within the Experience Editor the Tutorial screen will be updated to provide a link to the generated audience If you have exited the Experience Editor you can find this link by clicking the Help link in the Experience summary page Save your Experience When you first enter the Experience editor you will see a Save button in the top right corner which allows you to save your progress at any time If you have made it to the final step within the Experience Editor Tutorial for Generic Experiences the Next Step button will now be a Save and Exit button Click on this button to save and exit your Experience If you have previously saved your Experience and made no other changes this will simply allow you to exit the Experience Editor After the Experience has been saved once the button will become a Save button that is only enabled when you make further changes Name your Experience If you have not yet named the Experience at the time you save you will be prompted to do so at this time and the Experience s tactic will be suggested as a default When creating a new Experience within Lytics name it including the purpose and any categorization e g Drive sales Holiday When working with existing Experiences from your third party tools name the imported experiences on Lytics with the same similar names as in the external tool Discard Changes Unsaved Experiences At any point you may discard your unsaved Experience by clicking on the Close button X in the top left corner of the Experience Editor and then clicking Confirm when asked Are you sure you want to discard unsaved changes You may also select the Delete option from the more options menu in the top right corner of the Experience Editor and click Delete permanently when prompted Both methods will remove you from the Experience Editor without saving Previously Saved Experiences If you have previously saved the Experience and have returned to make edits you may discard all changes you ve made since your last save by clicking on the Close button X in the top left corner of the Experience Editor and clicking Confirm when prompted or by selecting the Discard Changes option from the more options menu in the top right column The former will discard changes and exit the Experience Editor The latter method will allow you discard changes but stay within the Experience Editor where you can make new edits Permanently Delete You may permanently delete previously saved experiences from within the Experience Editor by selecting the Delete option from the more options menu in the top right column and clicking Delete permanently when prompted Activating your new Generic Experience Once you have completed the steps in the Experience Editor and saved your Experience you will need to navigate to the created audience and export it to the integration of your choice Navigate to the created audience in the Experience summary page by clicking on Help and then the link found within the Finish setting up your Generic Experience section Export the audience from the Audience summary page Experience Reporting Experience Performance Reporting On the Experience summary page you will find Experience performance reporting This reporting contains three metrics for the campaigns you ve created or imported into Lytics Use these metrics to establish a baseline of your campaign performance and measure growth over time Name Description Updated Reached Number of unique users who have been reached by the Experience unique impressions for ads or unique opens for emails Every 2 hours Clicks Number of unique users who have clicked the Experience Every 2 hours Click Rate Percentage equal to number of unique users who have clicked on the Experience number of unique users who have been reached by Experience Every 2 hours Experience Intelligence Report In addition to the Experience Performance Reporting the Lytics View feature can be enabled in your account to give you additional information about your Experiences via an Experience Intelligence Report The Experience Intelligence Report once enabled will add the following modules to your Experience summary page as well as in the Goal Intelligence Report for Experiences within Goals Experience Insights Goal Attribution for Experiences used within Goals Content Recommendations Data Science Performance Simulation Your account must have Lytics View feature enabled in order to see this module Reach out to your Customer Success Manager to have this feature enabled Experience Insights The Insights module displays how many Insights have been generated for your account in the last week Lytics Experience Insights are the combination of a fact and an action The fact is a metric about your audience or campaign data and the action is a recommendation on how to improve engagement and conversions Leverage Insights while evaluating and planning your campaigns to make data driven iterations and achieve your goals more efficiently Name Description Updated Insights Insights combine a metric and a recommended action to improve customer engagement Weekly See Insights Introduction to learn more Goal Attribution The Goal Attribution module displays metrics around how conversions on your Experience relate to conversions on your Goal The percentage compares the total number of people reached by the Experience and those who converted For Facebook Ads with UTM parameters included Lytics will capture conversion data at the user level Use this metric to determine which campaigns to invest more or less in based on how they contribute toward your larger marketing Goal Name Description Updated Attribution Rate Percentage equal to attributed conversions for an Experience number of users that engaged with the Experience Weekly Attribution Graph Number of users who have converted on both your Experience and your Goal in the past week Weekly Content Recommendation The Content Recommendation module surfaces content that is likely to resonate with your users based on their past behavior Lytics analyzes and classifies the content on your website through the Lytics JavaScript Tag The relevancy percentage is calculated by determining the total number of users with various content affinities and comparing this to the total number of users within the audience that visited your site Create and deliver more content that aligns with your users interests to drive engagement and conversions Name Description Updated Topic Relevance Percentage of the audience that has an affinity for this topic Weekly Content Recommendations Suggestions for content to serve to users in the target audience for your Experience Weekly See Content Affinity Introduction and Content Recommendation to learn more Data Science Performance Simulation The Data Science Performance Simulator module displays simulated conversion rate metrics that compare how your campaign audience performed against Lytics out of the box behavioral audiences This gives a risk free preview of how effective your campaigns could be when leveraging behavioral scores and custom models powered by Lytics data science You can activate Lytics data science audiences and custom models in your campaigns by upgrading from the free trial Name Description Updated Conversion Rate Percentage equal to number of users who have clicked on the Experience number of all users who have ever been eligible to receive the Experience This is equivalent to the click rate from the Experience Performance module Every 2 hours Simulated Conversion Rate with Behavioral Scoring Percentage equal to number of users who have clicked on the Experience who are also in the Highly Engaged Lytics segment number of users who have been reached by the Experience who are also in the Highly Engaged Lytics segment Every 2 hours Simulated Conversion Rate with SegmentML Percentage equal to number of users who have clicked on the Experience who are also in the threshold Segment for the SegmentML model of the parent stage number of users who have been reached by the Experience who are also in the threshold Segment for the SegmentML model of the parent stage Every 2 hours See Data Science Introduction to learn more Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/behavioral-scores-1",
    "title": "Overview",
    "chunk_text": "Overview Lytics uses data to create more data through a suite of data science techniques The purpose is to synthesize raw impenetrable data into something insightful that can be utilized effectively in campaigns This synthesis like all data in Lytics is applied at the user level While aggregated analysis may be helpful for looking at trends in customer behavior user level analysis can be utilized for one to one marketing Much like how the Lytics Content Affinity Engine allows for immediate targeting and execution using content affinity audiences Lytics descriptive and predictive modeling allows for immediate targeting and execution using behavioral analysis Behavioral Analysis Lytics constantly tracks events from many data sources web email Salesforce and custom sources as well Looking at this data directly is not useful it needs to be summarized Lytics allows for simple summaries by means of user fields and for use in audiences but there is more to be learned from all this behavioral data Behavioral analysis asks many questions and computes the answer Questions such as When did the user last visit When did they visit before that Is it unusual that they visited right now During their visit what were they up to Did they visit a lot of pages Did they stick around for a long time How does that compare to other users Are they going to come back Is this a good time to encourage more interaction After finding the answers to these questions for every user Lytics uses these answers to inform nine low level scores that get assigned to every user who has shown enough behavior for a confident assessment These scores are computed automatically they are kept up to date continuously and they are assigned relative to other users in the account Behavioral Scores There is a lot to learn looking at user level behavioral data Lytics evaluates behavioral data automatically in real time and reports nine scores for each user These scores each represent a distinct behavioral quality and can be composed to build rich audiences Please note users must have behavioral data to make confident measurements before they have scores If a user was added to Lytics via email upload for instance they would have no scores Score Description Quantity Measures a user s cumulative activity over their lifetime of brand engagement Frequency Measures how often a user is interacting with your brand over time Recency Measures how recently the user s general interaction has been Intensity Measures the depth of a user s typical interaction with your brand Momentum Measures the rate at which users are interacting with your brand Propensity Predicts how likely a user is to return with subsequent activity Consistency Measures the regularity of a user s engagement pattern Maturity Measures how long a user has registered interactions with your brand Volatility Measures how sporadic a user s behavior is while interacting with your brand Note If you are already a customer of Lytics you can see the following explanation of each score alongside your own data in the app on the Scoring page Quantity Quantity measures a user s cumulative activity over their lifetime of brand engagement The more activity the user registers the higher the score This score measures the user relative to all other users It is a common tactic to target a user based on the number of times the user has visited a website or has performed some other behavior This becomes increasingly difficult as marketers add more data sources to their stack and the user continues to engage over time Quantity takes into account a user s behavior on all data sources and measures that relative to how the most and least active users are engaging so a user s score will always be between 0 and 100 You can think of this as a test score What is the point of scoring between 0 and 100 This is how we can ensure that any audience created with a score will always stay relevant Perhaps 1 000 page visits seems like a lot for a user now but the number will only grow larger as your site grows older and the amount of content you have increases Another benefit of having a bounded score range is the ability to see the complete distribution of all users This is an example of how scores look like across an entire audience The x axis is the score ranging from 0 to 100 5 to 95 in the example for clarity and the y axis is the number of people who have that value as their score Frequency Frequency measures how consistent a user is interacting with your brand over time More frequent interactions means a higher score This score measures the user relative to all other users This serves as a measurement of user regularity Do they visit once a week Once a day Once a lifetime Since this score is relative to all your users you can easily target your most frequent users rather than something like users who visited in the last week which will vary wildly in size Again this score has a fixed range of 0 to 100 All the scores are like this It is how we can continuously update user profiles without having to update audience definitions Recency Recency measures how recently the user s general interaction has been More recent activity means a higher score This score measures the user s recent activity relative to the user s past activity Without scoring this would be achieved by looking at the last time a user visited Although better than nothing that approach is kind of crude Maybe an at risk user opened your email by accident It d be an expensive oversight to assume that the user had recent activity and didn t need any nurturing Intensity Intensity measures the depth of a user s typical interaction with your brand More sustained intense deep usage means a higher score This score measures the user relative to all other users The behavior a user exhibits during a single session is very telling of them as a consumer If they have high interaction in a session high intensity they are more likely to be a deeper researcher or more curious If they have low interaction in a session low intensity they are more likely to be casually browsing or engaged with a certain piece of content but not your overall brand Momentum Momentum measures the rate at which users are interacting with your brand Users who are interacting more than usual with your brand will have a higher score This score measures the user s recent activity relative to the user s past activity It s easy to confuse how momentum and recency differ but they are actually very different Universally speaking we ve found them to have a 5 correlation Recency measures absolute recency of activity but just because a user has recent activity doesn t mean they re not at risk of churning If a user maintains a constant rate of activity their momentum score will be 50 If they are more active than they used to be their momentum will be greater than 50 and might warrant a loyalty offer If they are less active than they used to be their momentum will be less than 50 and might warrant a win back campaign Propensity Propensity predicts how likely a user is to return with subsequent activity Users exhibiting positive interaction patterns are more likely to return and have higher scores This score measures the user relative to all other users There are many reasons why users churn changing interests competition from competitors bad experience etc but from a data perspective attrition of any kind starts to look similar Propensity employs an ensemble of statistical models to identify any patterns it can find for detecting how and when attrition starts to occur With time it s able to find more patterns in your data and become increasingly accurate in identifying when users start to exhibit those behaviors Consistency Consistency measures the regularity or stability of a user s engagement pattern Users who engage with your brand at a regular cadence will have higher scores For example a user that registers behavior every 7 days will have high consistency and would have the same consistency as a user who registers behavior every 30 days As users behavior starts to vary sometimes every 7 days sometimes every 30 the users consistency score will decrease Consistency scores can be paired with propensity scores to build more accurate Lookalike Models to predict customer churn and target users with win back programs before they bounce Learn more about how to reduce churn using Lytics Lookalike Models Maturity Maturity is a normalized measure of how long a user has registered behavior This indicates how old a customer is relative to your other users A user who has registered behavior over 5 years will likely have high maturity A user who registered behavior over 3 years but hasn t registered any in 2 years will have less maturity A user who registered behavior over the most recent 3 years will have the same maturity as the user previously mentioned As an example you could target users with high maturity scores inviting them into a loyalty rewards program via ads emails and in app notifications You may also want to consider suppressing engaged users who are likely to make their next purchase without additional advertising Low maturity users on the other hand could be served more onboarding or educational content to nurture them into high value long term users Volatility Volatility measures how stable vs sporadic a user is interacting with your brand It represents the stability of the volume of data that a user is generating and serves as a slightly more nuanced version of the intensity score Consider a user where 100 of their daily sessions are considered intense Their intensity score would be 100 but the score doesn t yield any information regarding the volatility of a typical session Utilizing Scores Each Lytics score is accessible as a Custom Rule in the Audience Builder They can be added to any audience definition as an intelligent filter when the size of the audience is larger than desired For example when crafting an audience to be used to buy ads against the size of the audience is critical The size can be arbitrarily shrunk by taking 10 of the matching users or it can be intelligently shrunk by creating a threshold with a Lytics score such as Propensity or Momentum This way the best fit users remain Interfacing with scores directly can be difficult They are low level building blocks that require expertise to use to their fullest To make these scores more readily usable Lytics offers out of the box Behavioral Audiences that use scoring under the hood Customizing Data Sources Lytics scores work best on behavioral data that is data that was generated by a user like a web view or email open rather than on list imports or other non behavioral data Every supported 3rd party integration is already configured to include only behavioral data in user scores By default any custom integration is assumed to be non behavioral If you re using a custom integration that you want to contribute to behavioral scores contact your account manager to update the setting Behavioral Audiences Since using Lytics behavioral scores directly requires a level of understanding of the data science at play Lytics also offers out of the box behavioral audiences These audiences are essentially blends of scores that can be used alone or as a rule in a custom audience For example Casual Visitors describes users who come and go without showing much activity per session The definition using Lytics scores is Users with an intensity score less than 25 Now instead of needing to know exactly what intensity means in this context or what the significance of the number 25 is the audience Casual Visitors can be used as a building block In this example audience the Casual Visitors characteristic is being used to filter the users who have a high affinity for Computing Note that the number of people who have a high affinity for Computing is 276 046 but the number of people who have a high affinity for Computing and qualify as a Casual Visitor is 185 747 Reducing the size of an audience is a great way to make a campaign more efficient Additionally splitting an audience based on behavioral properties is a great way to introduce different modes of communication for different archetypes of users For instance Casual Visitors may not stick around long enough to answer their own questions try engaging them with a slideout on early page visits The opposite of Casual Visitors Deeply Engaged Visitors are probably determined to find that information on their own and would find a popup to be annoying Splitting the audience keeps both archetypes engaged without accidentally detering anyone The Full Set of Out of the box Behavioral Audiences Frequent Users Users who interact with your brand a lot Definition Frequency Score 65 Infrequent Users Users who interact with your brand occasionally Definition Frequency Score 35 Deeply Engaged Users Users who show a lot of activity when they do interact with your brand Definition Intensity Score 75 Moderately Frequent Users Users who occasionally interact with your brand Definition score frequency 34 and score_frequency 76 Casual Visitors Users who show little activity when they do interact with your brand Definition Intensity Score 25 Likely To Re engage Users likely to come back based on their past activity patterns Definition Propensity Score 75 Unlikely To Re engage Users not likely to come back based on their past activity patterns Definition Propensity Score 35 At Risk Users Users whose interaction behavior is changing for the worse Definition Momentum Score 10 and Momentum Score 30 Binge Users Users who show a lot of activity when they do interact with your brand Definition Frequency Score 20 and Intensity Score 50 Perusers Users who visit often but rarely interact deeply with your brand Definition Frequency Score 70 and Intensity Score 20 Lytics Behavioral Audiences The follow out of the box audiences are prefixed with Lytics and can be found in the Audiences list Lytics New Users who were created within the past 7 days Definition _ created now 7d Lytics Disengaged Users who show minimal or no activity for a prolonged period of time Definition Frequency 5 and Intensity 0 and Momentum 0 and Quantity 3 and _created now 7d Lytics Previously Engaged Users who are currently disengaged with your brand but had been previously Definition Momentum 10 and NOT Lytics Disengaged and NOT Lytics New Lytics Highly Engaged Users who engage most frequently and consistently of your users Definition Quantity 50 and Frequency 50 and Intensity 25 and Momentum 40 and NOT Lytics New and NOT Lytics Previously Engaged Lytics Currently Engaged Users who are currently engaging with your brand Definition Momentum 10 and NOT Lytics Highly Engaged and NOT Lytics Disengaged Taking it further Remember that each of these out of the box behavioral audiences can be recreated with the audience builder using Lytics scores user fields Mastering Lytics scores will open up the possibility of new combinations of score thresholds that result in new behavioral audiences to be used as building blocks in campaigns Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/behavioral-scores-1#content",
    "title": "Overview",
    "chunk_text": "Overview Lytics uses data to create more data through a suite of data science techniques The purpose is to synthesize raw impenetrable data into something insightful that can be utilized effectively in campaigns This synthesis like all data in Lytics is applied at the user level While aggregated analysis may be helpful for looking at trends in customer behavior user level analysis can be utilized for one to one marketing Much like how the Lytics Content Affinity Engine allows for immediate targeting and execution using content affinity audiences Lytics descriptive and predictive modeling allows for immediate targeting and execution using behavioral analysis Behavioral Analysis Lytics constantly tracks events from many data sources web email Salesforce and custom sources as well Looking at this data directly is not useful it needs to be summarized Lytics allows for simple summaries by means of user fields and for use in audiences but there is more to be learned from all this behavioral data Behavioral analysis asks many questions and computes the answer Questions such as When did the user last visit When did they visit before that Is it unusual that they visited right now During their visit what were they up to Did they visit a lot of pages Did they stick around for a long time How does that compare to other users Are they going to come back Is this a good time to encourage more interaction After finding the answers to these questions for every user Lytics uses these answers to inform nine low level scores that get assigned to every user who has shown enough behavior for a confident assessment These scores are computed automatically they are kept up to date continuously and they are assigned relative to other users in the account Behavioral Scores There is a lot to learn looking at user level behavioral data Lytics evaluates behavioral data automatically in real time and reports nine scores for each user These scores each represent a distinct behavioral quality and can be composed to build rich audiences Please note users must have behavioral data to make confident measurements before they have scores If a user was added to Lytics via email upload for instance they would have no scores Score Description Quantity Measures a user s cumulative activity over their lifetime of brand engagement Frequency Measures how often a user is interacting with your brand over time Recency Measures how recently the user s general interaction has been Intensity Measures the depth of a user s typical interaction with your brand Momentum Measures the rate at which users are interacting with your brand Propensity Predicts how likely a user is to return with subsequent activity Consistency Measures the regularity of a user s engagement pattern Maturity Measures how long a user has registered interactions with your brand Volatility Measures how sporadic a user s behavior is while interacting with your brand Note If you are already a customer of Lytics you can see the following explanation of each score alongside your own data in the app on the Scoring page Quantity Quantity measures a user s cumulative activity over their lifetime of brand engagement The more activity the user registers the higher the score This score measures the user relative to all other users It is a common tactic to target a user based on the number of times the user has visited a website or has performed some other behavior This becomes increasingly difficult as marketers add more data sources to their stack and the user continues to engage over time Quantity takes into account a user s behavior on all data sources and measures that relative to how the most and least active users are engaging so a user s score will always be between 0 and 100 You can think of this as a test score What is the point of scoring between 0 and 100 This is how we can ensure that any audience created with a score will always stay relevant Perhaps 1 000 page visits seems like a lot for a user now but the number will only grow larger as your site grows older and the amount of content you have increases Another benefit of having a bounded score range is the ability to see the complete distribution of all users This is an example of how scores look like across an entire audience The x axis is the score ranging from 0 to 100 5 to 95 in the example for clarity and the y axis is the number of people who have that value as their score Frequency Frequency measures how consistent a user is interacting with your brand over time More frequent interactions means a higher score This score measures the user relative to all other users This serves as a measurement of user regularity Do they visit once a week Once a day Once a lifetime Since this score is relative to all your users you can easily target your most frequent users rather than something like users who visited in the last week which will vary wildly in size Again this score has a fixed range of 0 to 100 All the scores are like this It is how we can continuously update user profiles without having to update audience definitions Recency Recency measures how recently the user s general interaction has been More recent activity means a higher score This score measures the user s recent activity relative to the user s past activity Without scoring this would be achieved by looking at the last time a user visited Although better than nothing that approach is kind of crude Maybe an at risk user opened your email by accident It d be an expensive oversight to assume that the user had recent activity and didn t need any nurturing Intensity Intensity measures the depth of a user s typical interaction with your brand More sustained intense deep usage means a higher score This score measures the user relative to all other users The behavior a user exhibits during a single session is very telling of them as a consumer If they have high interaction in a session high intensity they are more likely to be a deeper researcher or more curious If they have low interaction in a session low intensity they are more likely to be casually browsing or engaged with a certain piece of content but not your overall brand Momentum Momentum measures the rate at which users are interacting with your brand Users who are interacting more than usual with your brand will have a higher score This score measures the user s recent activity relative to the user s past activity It s easy to confuse how momentum and recency differ but they are actually very different Universally speaking we ve found them to have a 5 correlation Recency measures absolute recency of activity but just because a user has recent activity doesn t mean they re not at risk of churning If a user maintains a constant rate of activity their momentum score will be 50 If they are more active than they used to be their momentum will be greater than 50 and might warrant a loyalty offer If they are less active than they used to be their momentum will be less than 50 and might warrant a win back campaign Propensity Propensity predicts how likely a user is to return with subsequent activity Users exhibiting positive interaction patterns are more likely to return and have higher scores This score measures the user relative to all other users There are many reasons why users churn changing interests competition from competitors bad experience etc but from a data perspective attrition of any kind starts to look similar Propensity employs an ensemble of statistical models to identify any patterns it can find for detecting how and when attrition starts to occur With time it s able to find more patterns in your data and become increasingly accurate in identifying when users start to exhibit those behaviors Consistency Consistency measures the regularity or stability of a user s engagement pattern Users who engage with your brand at a regular cadence will have higher scores For example a user that registers behavior every 7 days will have high consistency and would have the same consistency as a user who registers behavior every 30 days As users behavior starts to vary sometimes every 7 days sometimes every 30 the users consistency score will decrease Consistency scores can be paired with propensity scores to build more accurate Lookalike Models to predict customer churn and target users with win back programs before they bounce Learn more about how to reduce churn using Lytics Lookalike Models Maturity Maturity is a normalized measure of how long a user has registered behavior This indicates how old a customer is relative to your other users A user who has registered behavior over 5 years will likely have high maturity A user who registered behavior over 3 years but hasn t registered any in 2 years will have less maturity A user who registered behavior over the most recent 3 years will have the same maturity as the user previously mentioned As an example you could target users with high maturity scores inviting them into a loyalty rewards program via ads emails and in app notifications You may also want to consider suppressing engaged users who are likely to make their next purchase without additional advertising Low maturity users on the other hand could be served more onboarding or educational content to nurture them into high value long term users Volatility Volatility measures how stable vs sporadic a user is interacting with your brand It represents the stability of the volume of data that a user is generating and serves as a slightly more nuanced version of the intensity score Consider a user where 100 of their daily sessions are considered intense Their intensity score would be 100 but the score doesn t yield any information regarding the volatility of a typical session Utilizing Scores Each Lytics score is accessible as a Custom Rule in the Audience Builder They can be added to any audience definition as an intelligent filter when the size of the audience is larger than desired For example when crafting an audience to be used to buy ads against the size of the audience is critical The size can be arbitrarily shrunk by taking 10 of the matching users or it can be intelligently shrunk by creating a threshold with a Lytics score such as Propensity or Momentum This way the best fit users remain Interfacing with scores directly can be difficult They are low level building blocks that require expertise to use to their fullest To make these scores more readily usable Lytics offers out of the box Behavioral Audiences that use scoring under the hood Customizing Data Sources Lytics scores work best on behavioral data that is data that was generated by a user like a web view or email open rather than on list imports or other non behavioral data Every supported 3rd party integration is already configured to include only behavioral data in user scores By default any custom integration is assumed to be non behavioral If you re using a custom integration that you want to contribute to behavioral scores contact your account manager to update the setting Behavioral Audiences Since using Lytics behavioral scores directly requires a level of understanding of the data science at play Lytics also offers out of the box behavioral audiences These audiences are essentially blends of scores that can be used alone or as a rule in a custom audience For example Casual Visitors describes users who come and go without showing much activity per session The definition using Lytics scores is Users with an intensity score less than 25 Now instead of needing to know exactly what intensity means in this context or what the significance of the number 25 is the audience Casual Visitors can be used as a building block In this example audience the Casual Visitors characteristic is being used to filter the users who have a high affinity for Computing Note that the number of people who have a high affinity for Computing is 276 046 but the number of people who have a high affinity for Computing and qualify as a Casual Visitor is 185 747 Reducing the size of an audience is a great way to make a campaign more efficient Additionally splitting an audience based on behavioral properties is a great way to introduce different modes of communication for different archetypes of users For instance Casual Visitors may not stick around long enough to answer their own questions try engaging them with a slideout on early page visits The opposite of Casual Visitors Deeply Engaged Visitors are probably determined to find that information on their own and would find a popup to be annoying Splitting the audience keeps both archetypes engaged without accidentally detering anyone The Full Set of Out of the box Behavioral Audiences Frequent Users Users who interact with your brand a lot Definition Frequency Score 65 Infrequent Users Users who interact with your brand occasionally Definition Frequency Score 35 Deeply Engaged Users Users who show a lot of activity when they do interact with your brand Definition Intensity Score 75 Moderately Frequent Users Users who occasionally interact with your brand Definition score frequency 34 and score_frequency 76 Casual Visitors Users who show little activity when they do interact with your brand Definition Intensity Score 25 Likely To Re engage Users likely to come back based on their past activity patterns Definition Propensity Score 75 Unlikely To Re engage Users not likely to come back based on their past activity patterns Definition Propensity Score 35 At Risk Users Users whose interaction behavior is changing for the worse Definition Momentum Score 10 and Momentum Score 30 Binge Users Users who show a lot of activity when they do interact with your brand Definition Frequency Score 20 and Intensity Score 50 Perusers Users who visit often but rarely interact deeply with your brand Definition Frequency Score 70 and Intensity Score 20 Lytics Behavioral Audiences The follow out of the box audiences are prefixed with Lytics and can be found in the Audiences list Lytics New Users who were created within the past 7 days Definition _ created now 7d Lytics Disengaged Users who show minimal or no activity for a prolonged period of time Definition Frequency 5 and Intensity 0 and Momentum 0 and Quantity 3 and _created now 7d Lytics Previously Engaged Users who are currently disengaged with your brand but had been previously Definition Momentum 10 and NOT Lytics Disengaged and NOT Lytics New Lytics Highly Engaged Users who engage most frequently and consistently of your users Definition Quantity 50 and Frequency 50 and Intensity 25 and Momentum 40 and NOT Lytics New and NOT Lytics Previously Engaged Lytics Currently Engaged Users who are currently engaging with your brand Definition Momentum 10 and NOT Lytics Highly Engaged and NOT Lytics Disengaged Taking it further Remember that each of these out of the box behavioral audiences can be recreated with the audience builder using Lytics scores user fields Mastering Lytics scores will open up the possibility of new combinations of score thresholds that result in new behavioral audiences to be used as building blocks in campaigns Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/leveraging-user-profiles",
    "title": "https://docs.lytics.com/docs/leveraging-user-profiles",
    "chunk_text": "Welcome to the Leveraging User Profiles section where we will explore how to use Lytics user profiles to gain a deeper understanding of your customers and deliver personalized experiences This section will cover how to define and segment audiences personalize experiences and track user behavior using user profiles Whether you are a marketer developer or data analyst this section will provide you with the essential knowledge needed to leverage Lytics user profiles and gain insights into customer behaviors and preferences Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/leveraging-user-profiles#content",
    "title": "https://docs.lytics.com/docs/leveraging-user-profiles#content",
    "chunk_text": "Welcome to the Leveraging User Profiles section where we will explore how to use Lytics user profiles to gain a deeper understanding of your customers and deliver personalized experiences This section will cover how to define and segment audiences personalize experiences and track user behavior using user profiles Whether you are a marketer developer or data analyst this section will provide you with the essential knowledge needed to leverage Lytics user profiles and gain insights into customer behaviors and preferences Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/accessing-data-from-javascript",
    "title": "Accessing Data from JavaScript Tag",
    "chunk_text": "Accessing Data from JavaScript Tag Once user fields have been surfaced they can be used to personalize a user s experience For example a theoretical car buying site has surfaced some basic info about a user s last vehicle search results in the following data available in the browser JSON last_make audi last_model rx8 last_color onyx segments all potential_buyers high_momentum Populate a Form Create a JavaScript function that populates form fields JavaScript function data if data last_make input name make val data last_make if data last_model input name model val data last_model if data last_color input name color val data last_color Initialize the callback handler HTML script type text javascript script function l a a liosetup a liosetup a liosetup callback a liosetup callback a liosetup addEntityLoadedCallback function l o if function typeof a liosetup callback var i i push a liosetup callback a liosetup callback i a lio a lio loaded l a lio data o a liosetup callback unshift l a liosetup callback push l document window Create a callback This will execute an action via JavaScript once the visitor has been identified and the profile has been loaded using the function outlined above HTML script type text javascript window liosetup addEntityLoadedCallback function data if data last_make input name make val data last_make if data last_model input name model val data last_model if data last_color input name color val data last_color script Once the profile has loaded Lytics will call the JavaScript function and populate the form on the site Once all the above steps are completed the final code is as follows HTML doctype html html lang en head meta charset utf 8 title form value demo title script src https code jquery com jquery 1 10 2 js script script type text javascript Lytics JavaScript Tag window jstag function function t t return function return t apply this arguments this function n var n ready concat c call arguments return t function n push c call arguments this _q push n var i _q _c ts new Date getTime ver 2 0 0 c Array prototype slice return i init function t return i _c t t synchronous i loadtagmgr t this i loadtagmgr function t var n document createElement script n type text javascript n async 0 n src t url api tag t cid lio js var i document getElementsByTagName script 0 i parentNode insertBefore n i i ready n i send n send i mock n mock i identify n identify i pageView n pageView i bind t function t i _q push t c call arguments 1 i block t function i _c blockload 0 i unblock t function i _c blockload 1 i window jstag init cid yourcid url c lytics io min true loadid false script script type text javascript Lytics Callback Handler function l a a liosetup a liosetup a liosetup callback a liosetup callback a liosetup addEntityLoadedCallback function l o if function typeof a liosetup callback var i i push a liosetup callback a liosetup callback i a lio a lio loaded l a lio data o a liosetup callback unshift l a liosetup callback push l document window Custom Callback Function This particular callback simply checks that the three values are not empty strings and then uses jQuery to update the form window liosetup addEntityLoadedCallback function data if data last_make input name make val data last_make if data last_model input name model val data last_model if data last_color input name color val data last_color script head body h2 A Sample Form h2 form action method post label Make label input type text name make value br label Model label input type text name model value br label Color label input type text name color value form body html This is one basic example of leveraging the current visitor s profile information The personalization powered by Lytics builds from here Using a similar pattern you could surface new listings on the site s index page that match a user s last search or present other vehicles that user may be interested in Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/accessing-data-from-javascript#content",
    "title": "Accessing Data from JavaScript Tag",
    "chunk_text": "Accessing Data from JavaScript Tag Once user fields have been surfaced they can be used to personalize a user s experience For example a theoretical car buying site has surfaced some basic info about a user s last vehicle search results in the following data available in the browser JSON last_make audi last_model rx8 last_color onyx segments all potential_buyers high_momentum Populate a Form Create a JavaScript function that populates form fields JavaScript function data if data last_make input name make val data last_make if data last_model input name model val data last_model if data last_color input name color val data last_color Initialize the callback handler HTML script type text javascript script function l a a liosetup a liosetup a liosetup callback a liosetup callback a liosetup addEntityLoadedCallback function l o if function typeof a liosetup callback var i i push a liosetup callback a liosetup callback i a lio a lio loaded l a lio data o a liosetup callback unshift l a liosetup callback push l document window Create a callback This will execute an action via JavaScript once the visitor has been identified and the profile has been loaded using the function outlined above HTML script type text javascript window liosetup addEntityLoadedCallback function data if data last_make input name make val data last_make if data last_model input name model val data last_model if data last_color input name color val data last_color script Once the profile has loaded Lytics will call the JavaScript function and populate the form on the site Once all the above steps are completed the final code is as follows HTML doctype html html lang en head meta charset utf 8 title form value demo title script src https code jquery com jquery 1 10 2 js script script type text javascript Lytics JavaScript Tag window jstag function function t t return function return t apply this arguments this function n var n ready concat c call arguments return t function n push c call arguments this _q push n var i _q _c ts new Date getTime ver 2 0 0 c Array prototype slice return i init function t return i _c t t synchronous i loadtagmgr t this i loadtagmgr function t var n document createElement script n type text javascript n async 0 n src t url api tag t cid lio js var i document getElementsByTagName script 0 i parentNode insertBefore n i i ready n i send n send i mock n mock i identify n identify i pageView n pageView i bind t function t i _q push t c call arguments 1 i block t function i _c blockload 0 i unblock t function i _c blockload 1 i window jstag init cid yourcid url c lytics io min true loadid false script script type text javascript Lytics Callback Handler function l a a liosetup a liosetup a liosetup callback a liosetup callback a liosetup addEntityLoadedCallback function l o if function typeof a liosetup callback var i i push a liosetup callback a liosetup callback i a lio a lio loaded l a lio data o a liosetup callback unshift l a liosetup callback push l document window Custom Callback Function This particular callback simply checks that the three values are not empty strings and then uses jQuery to update the form window liosetup addEntityLoadedCallback function data if data last_make input name make val data last_make if data last_model input name model val data last_model if data last_color input name color val data last_color script head body h2 A Sample Form h2 form action method post label Make label input type text name make value br label Model label input type text name model value br label Color label input type text name color value form body html This is one basic example of leveraging the current visitor s profile information The personalization powered by Lytics builds from here Using a similar pattern you could surface new listings on the site s index page that match a user s last search or present other vehicles that user may be interested in Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/accessing-profiles-server-side",
    "title": "Accessing Data from Server Side",
    "chunk_text": "Accessing Data from Server Side By default Lytics returns a user s profile and any surfaced fields to the browser This however is not always sufficient when it comes to marketing use cases An alternative approach is to do the lookup based on the user cookie utilizing the server side language of your choice First read the browser s cookies to get the visitor s _uid in order to identify them make a request to the Personalization to get the visitors current profile and then surface the profile as a JavaScript object Identifying the Visitor Identifying the user can be done in a variety of ways By default Lytics sets a cookie seerid that is used to identify a user This is then surfaced in a user profile as _uid The _uid field is what the Lytics JavaScript tag uses for web based identity resolution That said if users are logged in or identified by another known key this can be used in place of seerid in the following examples Since we already have a cookie all we need to do is read those to get the user profile from the Lytics API PHP _COOKIE seerid Get Visitor s Profile Once you have an identifier make a GET request to our personalization API In this example the cookie value is used to build a call to the personalization API for three fields last_make last_model last_color If you are using a custom key value pair for identification replace the fieldname parameter with the field name of your identifier in Lytics and value with the value of that key PHP php fieldname _uid value _COOKIE seerid apitoken yourapitoken url https api lytics io api entity user fieldname value fields last_make last_model last_color key apitoken data json_decode file_get_contents url true profile data data Surface User Data in the Browser Next parse the response and either inject the variables directly into your template or surface the profile as a JavaScript object PHP php fieldname _uid value _COOKIE seerid apikey yourapitoken url https api lytics io api entity user fieldname value fields last_make last_model last_color key apitoken data json_decode file_get_contents url true profile data data html head script type text javascript window jstag function function t t return function return t apply this arguments this function n var n ready concat c call arguments return t function n push c call arguments this _q push n var i _q _c ts new Date getTime ver 2 0 0 c Array prototype slice return i init function t return i _c t t synchronous i loadtagmgr t this i loadtagmgr function t var n document createElement script n type text javascript n async 0 n src t url api tag t cid lio js var i document getElementsByTagName script 0 i parentNode insertBefore n i i ready n i send n send i mock n mock i identify n identify i pageView n pageView i bind t function t i _q push t c call arguments 1 i block t function i _c blockload 0 i unblock t function i _c blockload 1 i window jstag init cid yourcid url c lytics io min true loadid false var lyticsProfile php echo json_encode profile script head body Make php echo profile last_make br Model php echo profile last_model br Color php echo profile last_color body html Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/accessing-profiles-server-side#content",
    "title": "Accessing Data from Server Side",
    "chunk_text": "Accessing Data from Server Side By default Lytics returns a user s profile and any surfaced fields to the browser This however is not always sufficient when it comes to marketing use cases An alternative approach is to do the lookup based on the user cookie utilizing the server side language of your choice First read the browser s cookies to get the visitor s _uid in order to identify them make a request to the Personalization to get the visitors current profile and then surface the profile as a JavaScript object Identifying the Visitor Identifying the user can be done in a variety of ways By default Lytics sets a cookie seerid that is used to identify a user This is then surfaced in a user profile as _uid The _uid field is what the Lytics JavaScript tag uses for web based identity resolution That said if users are logged in or identified by another known key this can be used in place of seerid in the following examples Since we already have a cookie all we need to do is read those to get the user profile from the Lytics API PHP _COOKIE seerid Get Visitor s Profile Once you have an identifier make a GET request to our personalization API In this example the cookie value is used to build a call to the personalization API for three fields last_make last_model last_color If you are using a custom key value pair for identification replace the fieldname parameter with the field name of your identifier in Lytics and value with the value of that key PHP php fieldname _uid value _COOKIE seerid apitoken yourapitoken url https api lytics io api entity user fieldname value fields last_make last_model last_color key apitoken data json_decode file_get_contents url true profile data data Surface User Data in the Browser Next parse the response and either inject the variables directly into your template or surface the profile as a JavaScript object PHP php fieldname _uid value _COOKIE seerid apikey yourapitoken url https api lytics io api entity user fieldname value fields last_make last_model last_color key apitoken data json_decode file_get_contents url true profile data data html head script type text javascript window jstag function function t t return function return t apply this arguments this function n var n ready concat c call arguments return t function n push c call arguments this _q push n var i _q _c ts new Date getTime ver 2 0 0 c Array prototype slice return i init function t return i _c t t synchronous i loadtagmgr t this i loadtagmgr function t var n document createElement script n type text javascript n async 0 n src t url api tag t cid lio js var i document getElementsByTagName script 0 i parentNode insertBefore n i i ready n i send n send i mock n mock i identify n identify i pageView n pageView i bind t function t i _q push t c call arguments 1 i block t function i _c blockload 0 i unblock t function i _c blockload 1 i window jstag init cid yourcid url c lytics io min true loadid false var lyticsProfile php echo json_encode profile script head body Make php echo profile last_make br Model php echo profile last_model br Color php echo profile last_color body html Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/anonymous-visitors",
    "title": "Anonymous Visitors",
    "chunk_text": "Anonymous Visitors Lytics considers anonymous visitors to be users identified only by a _uid A _uid is a Lytics tracking value assigned to a cookie Since cookies can be cleared aren t shared across browsers or computers and aren t strictly associated with an individual they are unreliable For these reasons Lytics considers these visitors to be anonymous The User Profile of an Anonymous Visitor Anonymous visitors can still have rich behavioral data Every page they visited the number of times they visited the time they visited and behavior patterns for data science models A User Profile is nothing more than the set of known User Field values associated with the _uid of the Anonymous Visitor Identifying Anonymous Visitors Since all information about anonymous visitors relies on the continued use of a cookie it is in a marketer s best interest to convert these unknown users to known users Cookies are temporary but email addresses are not Note that when a user converts from anonymous to known all information we knew about them carries with them When their _uid becomes associated with an email address or any other By Field both Profiles the _uid profile and the email address profile merge through a process called Identity Resolution Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/anonymous-visitors#content",
    "title": "Anonymous Visitors",
    "chunk_text": "Anonymous Visitors Lytics considers anonymous visitors to be users identified only by a _uid A _uid is a Lytics tracking value assigned to a cookie Since cookies can be cleared aren t shared across browsers or computers and aren t strictly associated with an individual they are unreliable For these reasons Lytics considers these visitors to be anonymous The User Profile of an Anonymous Visitor Anonymous visitors can still have rich behavioral data Every page they visited the number of times they visited the time they visited and behavior patterns for data science models A User Profile is nothing more than the set of known User Field values associated with the _uid of the Anonymous Visitor Identifying Anonymous Visitors Since all information about anonymous visitors relies on the continued use of a cookie it is in a marketer s best interest to convert these unknown users to known users Cookies are temporary but email addresses are not Note that when a user converts from anonymous to known all information we knew about them carries with them When their _uid becomes associated with an email address or any other By Field both Profiles the _uid profile and the email address profile merge through a process called Identity Resolution Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/get-started-with-lytics-segments",
    "title": "Get Started with Lytics Segments",
    "chunk_text": "Get Started with Lytics Segments Lets take an in depth look at Lytics segments We ll cover how to define a segment with SegmentQL or SegmentAST as well as the Segment API endpoints to create read update delete scan and list the segments in your account Note that throughout this guide we use the term segment and audience interchangably Specifically the term audience refers to a segment on the user table In your Lytics account there is also a separate table and schema for content A segment on this table is often called a content collection Difficulty Beginner TLDR Checkout the Segment API documentation Other resources Lytics Go Client Lytics API library for the go programming language QLBridge a go SQL Runtime Engine Lytics Segment Scan with SQL Prerequisites httpie optional a more user friendly version of cURL that we ll be using in this guide for readability Lytics Command Line Tool optional we ll show you how to execute commands with our CLI for each endpoint that is supported A valid API token for your Lytics account learn about managing API tokens For ease of use we suggest adding as an environment variable in your command line Bash export LIOKEY API Token 1 Defining A Segment If you haven t yet take a minute to check out the audience builder in your account This can be accessed from the Audience tab in the Lytics UI and then by selecting to create a new audience The audience builder is a visual interface for what we will cover in the first section of this guide defining a segment A segment definition at its core is really just a conditional statement If the data we have collected on a user meets the conditions of the segment than they are considered a member We have two different syntaxes for these conditional segment definitions SegmentQL and SegmentAST SegmentQL SegmentQL is simple Query Language using filter statements Before we dive too deep into the syntax lets look at a segment built in the segment builder UI side by side with its SegmentQL definition FILTER OR AND cm_status active INCLUDE last_open_7_days last_active_ts now 7d FROM user ALIAS active_web_or_email In this example cm_status refers to the subscriber status in Campaign Monitor an email provider So a marketer might build this audience as a target for all users who are active across their email and web channels in the last 7 days For us developers this simple query language is probably quite intuitive Our UI exists for marketers to build audiences but you might find it quicker to write SegmentQL and create a segment through the API Just to cover all our bases lets take an in depth look at the anatomy of a filter statement FILTER phrase from alias phrase Notes AND phrase phrase OR phrase phrase NOT phrase EXISTS identifier identifier is a field name identifier IN literal literal identifier CONTAINS literal identifier INTERSECTS literal literal INTERSECTS contains one of identifier LIKE literal literal must be a string Can use a wildcard INCLUDE identifier identifier is a segment id slug to include existing segment identifier literal identifier literal identifier literal identifier literal identifier literal identifier literal identifier alphanumeric string often the name of a data field table or segment literal a string int float boolean or timestamp literal value from Notes FROM identifier identifier is the name of the table ie user content etc from is optional if creating a filter on the user table alias Notes ALIAS identifier identifier is the saved name of the segment alias is optional if you do not wish to save the segment Segment AST SegmentAST expressions look very similar to SegmentQL but instead of having its own filter syntax it is formatted in JSON It s perhaps less readable for a human but if you re writing a program which creates or updates segment definitions it might be easier to format the bodies of your requests using SegmentAST Lets look at the same example from above in SegmentAST JSON op or args op and args op args ident cm_status val active op include args ident last_open_7_days op args ident last_active_ts val now 7d Definitely not as easy to look at as SegmentQL but if you spend a second scanning the JSON that you ll see it s generally the same expressions Here is a breakdown of the key components key type Notes op string operator used to evaluate the args args array a list of objects containing the identifiers and literals operate on ident string identifier name val string literal value 2 Segment Validate API The segment validate endpoint accepts a plain text SegmentQL statement and ensures that the definition is valid This can be especially useful when creating a segment Before sending a request to build the segment via the API you might want to validate it first Shell echo FILTER AND utm_campaigns CONTAINS summer_froyo_promo EXISTS email scores momentum 40 http POST https api lytics io api segment validate access_token LIOKEY Note that this endpoint does not validate field names in your account It simply checks the syntax of the SegmentQL statement 3 Segment CRUD API Segment Create The segment create endpoint accepts plain text containing SegmentQL or a JSON body SegmentQL or AST Bash example 1 plain text echo FILTER lytics_content Yogurt 0 75 FROM user ALIAS affinity_for_yogurt http POST https api lytics io api segment Content type text plain access_token LIOKEY Bash example 2 json segmentQL echo name High Affinity for Yogurt segment_ql FILTER lytics_content Yogurt 0 75 slug_name affinity_for_yogurt is_public true description Segment containing all users highly interested in the topic Yogurt table user http POST https api lytics io api segment Content type application json access_token LIOKEY Bash example 3 json segmentAST echo name High Affinity for Yogurt slug_name affinity_for_yogurt is_public true description Segment containing all users highly interested in the topic Yogurt table user ast op args ident lytics_content Yogurt val 0 75 http POST https api lytics io api segment Content type application json access_token LIOKEY Segment Read You must know the segment ID or slug name to fetch the segment via the read endpoint Bash example 1 http GET https api lytics io api segment affinity_for_yogurt access_token LIOKEY Bash example 2 lytics cli lytics segments affinity_for_yogurt segment Segment Update You must know the ID or the slug of the segment to update Bash echo slug_name affinity_for_yogurt segment_ql FILTER lytics_content Yogurt 0 9 http PUT https api lytics io api segment affinity_for_yogurt access_token LIOKEY Segment Delete You must know the ID or the slug of the segment to delete Bash http DELETE https api lytics io api segment affinity_for_yogurt access_token LIOKEY 4 Segment List API For many of the CRUD operations we just talked about you need to know the ID or slug name of the segment It may help to have access to a list of all existing segments in your account to use as a reference The list endpoint will return a list of all segments for your account including id slug and the QL and or AST definition of the segment Bash example 1 list all audiences http GET https api lytics io api segment access_token LIOKEY Bash example 2 lytics cli lytics segment Bash example 3 list all content collections http GET https api lytics io api segment access_token LIOKEY table content 5 Segment Scan API The scan endpoint provides a list of all entities in a segment For audiences segments on the user table the entities returned are user profiles The scan endpoint can accept a number of different query parameters we won t cover all of them here but as always you can check out our docs for the full details on this API You can use this endpoint to scan an existing saved segment in which case you ll need the segment ID or slug You can also scan an ad hoc segment by passing SegmentQL to the endpoint Bash example 1 existing audience http GET https api lytics io api segment affinity_for_yogurt scan access_token LIOKEY ortfield last_purchase_ts Bash example 2 lytics cli lytics id affinity_for_yogurt segmentscan Bash example 3 ad hoc content collection echo FILTER OR global Yogurt 0 5 global Ice Cream 0 5 FROM content http GET https api lytics io api segment scan access_token LIOKEY limit 10 Bash example 4 ad hoc lytics cli lytics segmentscan FILTER aspects INTERSECTS article video FROM content If the total number of entities in the segment exceeds the limit provided in the request the default value is 20 then we will paginate the results In the JSON body there will be a token value with the key next To get the next page of results in the scan make a subsequent request with the query param start equal to the next token from the prior request The API will continue to return next tokens in each response until you ve fully scaned the segment What s next The endpoints we covered here will get you started with Lytics segments We do have a couple segment APIs that were not covered in this guide primarily around segment size The API for this is quite simple check out our docs if you re interested It also may help to look at the catalog schema and or the query API if you re unfamiliar with the fields in your Lytics account Keep in mind that everything you see in the Lytics web UI is built off of our APIs It is never necessary to use the UI to complete a task with Lytics If you have the time and resources you can build many different custom applications to interface with your Lytics account through our APIs We re excited to work with developers to tackle exciting new use cases If our docs aren t enough you can always reach out to us Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/get-started-with-lytics-segments#content",
    "title": "Get Started with Lytics Segments",
    "chunk_text": "Get Started with Lytics Segments Lets take an in depth look at Lytics segments We ll cover how to define a segment with SegmentQL or SegmentAST as well as the Segment API endpoints to create read update delete scan and list the segments in your account Note that throughout this guide we use the term segment and audience interchangably Specifically the term audience refers to a segment on the user table In your Lytics account there is also a separate table and schema for content A segment on this table is often called a content collection Difficulty Beginner TLDR Checkout the Segment API documentation Other resources Lytics Go Client Lytics API library for the go programming language QLBridge a go SQL Runtime Engine Lytics Segment Scan with SQL Prerequisites httpie optional a more user friendly version of cURL that we ll be using in this guide for readability Lytics Command Line Tool optional we ll show you how to execute commands with our CLI for each endpoint that is supported A valid API token for your Lytics account learn about managing API tokens For ease of use we suggest adding as an environment variable in your command line Bash export LIOKEY API Token 1 Defining A Segment If you haven t yet take a minute to check out the audience builder in your account This can be accessed from the Audience tab in the Lytics UI and then by selecting to create a new audience The audience builder is a visual interface for what we will cover in the first section of this guide defining a segment A segment definition at its core is really just a conditional statement If the data we have collected on a user meets the conditions of the segment than they are considered a member We have two different syntaxes for these conditional segment definitions SegmentQL and SegmentAST SegmentQL SegmentQL is simple Query Language using filter statements Before we dive too deep into the syntax lets look at a segment built in the segment builder UI side by side with its SegmentQL definition FILTER OR AND cm_status active INCLUDE last_open_7_days last_active_ts now 7d FROM user ALIAS active_web_or_email In this example cm_status refers to the subscriber status in Campaign Monitor an email provider So a marketer might build this audience as a target for all users who are active across their email and web channels in the last 7 days For us developers this simple query language is probably quite intuitive Our UI exists for marketers to build audiences but you might find it quicker to write SegmentQL and create a segment through the API Just to cover all our bases lets take an in depth look at the anatomy of a filter statement FILTER phrase from alias phrase Notes AND phrase phrase OR phrase phrase NOT phrase EXISTS identifier identifier is a field name identifier IN literal literal identifier CONTAINS literal identifier INTERSECTS literal literal INTERSECTS contains one of identifier LIKE literal literal must be a string Can use a wildcard INCLUDE identifier identifier is a segment id slug to include existing segment identifier literal identifier literal identifier literal identifier literal identifier literal identifier literal identifier alphanumeric string often the name of a data field table or segment literal a string int float boolean or timestamp literal value from Notes FROM identifier identifier is the name of the table ie user content etc from is optional if creating a filter on the user table alias Notes ALIAS identifier identifier is the saved name of the segment alias is optional if you do not wish to save the segment Segment AST SegmentAST expressions look very similar to SegmentQL but instead of having its own filter syntax it is formatted in JSON It s perhaps less readable for a human but if you re writing a program which creates or updates segment definitions it might be easier to format the bodies of your requests using SegmentAST Lets look at the same example from above in SegmentAST JSON op or args op and args op args ident cm_status val active op include args ident last_open_7_days op args ident last_active_ts val now 7d Definitely not as easy to look at as SegmentQL but if you spend a second scanning the JSON that you ll see it s generally the same expressions Here is a breakdown of the key components key type Notes op string operator used to evaluate the args args array a list of objects containing the identifiers and literals operate on ident string identifier name val string literal value 2 Segment Validate API The segment validate endpoint accepts a plain text SegmentQL statement and ensures that the definition is valid This can be especially useful when creating a segment Before sending a request to build the segment via the API you might want to validate it first Shell echo FILTER AND utm_campaigns CONTAINS summer_froyo_promo EXISTS email scores momentum 40 http POST https api lytics io api segment validate access_token LIOKEY Note that this endpoint does not validate field names in your account It simply checks the syntax of the SegmentQL statement 3 Segment CRUD API Segment Create The segment create endpoint accepts plain text containing SegmentQL or a JSON body SegmentQL or AST Bash example 1 plain text echo FILTER lytics_content Yogurt 0 75 FROM user ALIAS affinity_for_yogurt http POST https api lytics io api segment Content type text plain access_token LIOKEY Bash example 2 json segmentQL echo name High Affinity for Yogurt segment_ql FILTER lytics_content Yogurt 0 75 slug_name affinity_for_yogurt is_public true description Segment containing all users highly interested in the topic Yogurt table user http POST https api lytics io api segment Content type application json access_token LIOKEY Bash example 3 json segmentAST echo name High Affinity for Yogurt slug_name affinity_for_yogurt is_public true description Segment containing all users highly interested in the topic Yogurt table user ast op args ident lytics_content Yogurt val 0 75 http POST https api lytics io api segment Content type application json access_token LIOKEY Segment Read You must know the segment ID or slug name to fetch the segment via the read endpoint Bash example 1 http GET https api lytics io api segment affinity_for_yogurt access_token LIOKEY Bash example 2 lytics cli lytics segments affinity_for_yogurt segment Segment Update You must know the ID or the slug of the segment to update Bash echo slug_name affinity_for_yogurt segment_ql FILTER lytics_content Yogurt 0 9 http PUT https api lytics io api segment affinity_for_yogurt access_token LIOKEY Segment Delete You must know the ID or the slug of the segment to delete Bash http DELETE https api lytics io api segment affinity_for_yogurt access_token LIOKEY 4 Segment List API For many of the CRUD operations we just talked about you need to know the ID or slug name of the segment It may help to have access to a list of all existing segments in your account to use as a reference The list endpoint will return a list of all segments for your account including id slug and the QL and or AST definition of the segment Bash example 1 list all audiences http GET https api lytics io api segment access_token LIOKEY Bash example 2 lytics cli lytics segment Bash example 3 list all content collections http GET https api lytics io api segment access_token LIOKEY table content 5 Segment Scan API The scan endpoint provides a list of all entities in a segment For audiences segments on the user table the entities returned are user profiles The scan endpoint can accept a number of different query parameters we won t cover all of them here but as always you can check out our docs for the full details on this API You can use this endpoint to scan an existing saved segment in which case you ll need the segment ID or slug You can also scan an ad hoc segment by passing SegmentQL to the endpoint Bash example 1 existing audience http GET https api lytics io api segment affinity_for_yogurt scan access_token LIOKEY ortfield last_purchase_ts Bash example 2 lytics cli lytics id affinity_for_yogurt segmentscan Bash example 3 ad hoc content collection echo FILTER OR global Yogurt 0 5 global Ice Cream 0 5 FROM content http GET https api lytics io api segment scan access_token LIOKEY limit 10 Bash example 4 ad hoc lytics cli lytics segmentscan FILTER aspects INTERSECTS article video FROM content If the total number of entities in the segment exceeds the limit provided in the request the default value is 20 then we will paginate the results In the JSON body there will be a token value with the key next To get the next page of results in the scan make a subsequent request with the query param start equal to the next token from the prior request The API will continue to return next tokens in each response until you ve fully scaned the segment What s next The endpoints we covered here will get you started with Lytics segments We do have a couple segment APIs that were not covered in this guide primarily around segment size The API for this is quite simple check out our docs if you re interested It also may help to look at the catalog schema and or the query API if you re unfamiliar with the fields in your Lytics account Keep in mind that everything you see in the Lytics web UI is built off of our APIs It is never necessary to use the UI to complete a task with Lytics If you have the time and resources you can build many different custom applications to interface with your Lytics account through our APIs We re excited to work with developers to tackle exciting new use cases If our docs aren t enough you can always reach out to us Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/inline-content-recommendations",
    "title": "Inline Content Recommendations",
    "chunk_text": "Inline Content Recommendations Learn how to add seamless content recommendations to your website fueled by Lytics Content Affinity Engine all it takes is an API request and a little HTML Difficulty Beginner TLDR Here s some docs instead Other resources A blog post covering basically the same thing with a live example Lytics Segment API Docs for segment creation API and SegmentQL Prerequisites Lytics Javascript Tag installed on your website Pathfora SDK installed on your website If you re using Lytics for personalized modals this is already done for you Content classified in your Lytics account go to the content section of your Lytics account to check if we ve classified your content A valid API token for your Lytics account learn about managing API tokens For ease of use we suggest adding as an environment variable in your command line Shell export LIOKEY API Token 1 Build a Content Collection Before we go crazy adding recommendations to your website we should think about what kind of content we want to allow for recommendation Lets create a dynamic set of content that will be the target pool of documents for this content recommendation block To do this we can use the Lytics Segment API create endpoint Bash curl s XPOST https api lytics io api segment H Content type text plain H Authorization LIOKEY d FILTER AND path CONTAINS froyo flavors FROM content ALIAS froyo_content jq In the command above we made a POST request to create a new segment on the content table or as we call it a content collection We used Segment QL to define the filter on the content in your account In the example above we re only accepting urls that contain the path froyo flavors Simple enough right If you ve used the Audience builder you may notice that the logic for building a segment is essentially the same format Here s a more complex example FILTER AND AND operator on the following statements global CONTAINS strawberry require the topic strawberry global CONTAINS vanilla require the topic vanilla path CONTAINS posts url must contain the path posts published now 30d require published in the last 30 days FROM content entities from the content table ALIAS strawberry_vanilla saved name of the collection You re probably wondering where these field names are coming from These are the standard fields used in our content table Here s a list of relevant fields you might use in building a content collection fieldname type description global map string number a map of topics for the document and their relevance scores aspects string type of document eg article profile video etc primary_video string url of the primary video featured in the document primary_image string url of the primary usually meta image can be displayed in recommendation language string language of the documents wordct int word count for the document author string name of the author of the document product_description string description of the product if the document is of type product price string price of the product if the document is of type product description string title of the document long_description string meta description of the document url string url of the document path string list of paths within the url of the document published date date when the document was published fetched date date when the document was fetched and enriched by Lytics type string source channel of the document eg web email etc Also if you have access to your queries in the Data tab of the Lytics UI you can see how the raw data from the lytics_content_enrich stream is parsed 2 Set up an inline recommendation To add inline content recommendations to your website all we have to do is draft some simple HTML Pathfora will look for appropriately named data attributes and replace the contents of these elements with recommendations from our APIs First lets look at a simple quick example then we ll break down what these attributes mean HTML div data pfblock froyo_1 data pfrecommend froyo_content img data pftype image alt frozen yogurt recommendation h2 data pftype title h2 p data pftype description p p a data pftype url Read More a div Here s a quick rundown of the relevant data attributes attribute name value description data pfblock a unique name for a single recommended document there may be multiple documents per page data pfrecommend id or slug saved name ALIAS of the source content collection data pftype field of the document to set as the contents of that element ex url title description image author published image data pftype attributes will set the src value if applied to an img element as with the example above or if used on a div or some other type of element it will set the background image to be the primary image from the document Similarly the url data pftype attribute will set the href value to the url of the document if applied to an a tag but otheriwse will set the innerHTML of the element Multiple Recommendations You may have seen a section on blogs If you liked this you may also like with a list of three or more related articles This is a common use case for content recommendations We repeat the same HTML pattern to create multiple recommendations in a set just remember to change the data pfblock value If we have multiple recommendations using the same content collection then we will ensure that the same piece of content is not shown twice on one page Here s a more in depth example with a little CSS this can be easily styled to match your website HTML h1 Recommended Content h1 Recommendation 1 of 2 div class rec block data pfblock froyo_1 data pfrecommend froyo_content div class rec img data pftype image div h2 data pftype title h2 p class rec info by span data pftype author span on span data pftype published span p p data pftype description p p a data pftype url Read More a div Recommendation 2 of 2 div class rec block data pfblock froyo_2 data pfrecommend froyo_content div class rec img data pftype image div h2 data pftype title h2 p class rec info by span data pftype author span on span data pftype published span p p data pftype description p p a data pftype url Read More a div Additional Notes Our SDK may take a second to set the proper hide show settings for inline elements If you experience a flicker where elements are being rapidly shown then hidden and shown again you can add the following CSS line to your website to prevent this CSS data pftrigger data pfrecommend display none This exact CSS gets loaded by Pathfora but adding it to your CSS ensures that elements are hidden as the document is loaded Since this is primarily a developer use case we don t provide any native reporting of inline recommendations at the moment however it is super simple to link this up to send interaction data to Lytics or Google Analytics Check out our Lytics Javascript Tag documentation for more If you d like a pre baked version of inline recommendations we also have a version that s built from our personalize modules You can find the documentation for this here Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/inline-content-recommendations#content",
    "title": "Inline Content Recommendations",
    "chunk_text": "Inline Content Recommendations Learn how to add seamless content recommendations to your website fueled by Lytics Content Affinity Engine all it takes is an API request and a little HTML Difficulty Beginner TLDR Here s some docs instead Other resources A blog post covering basically the same thing with a live example Lytics Segment API Docs for segment creation API and SegmentQL Prerequisites Lytics Javascript Tag installed on your website Pathfora SDK installed on your website If you re using Lytics for personalized modals this is already done for you Content classified in your Lytics account go to the content section of your Lytics account to check if we ve classified your content A valid API token for your Lytics account learn about managing API tokens For ease of use we suggest adding as an environment variable in your command line Shell export LIOKEY API Token 1 Build a Content Collection Before we go crazy adding recommendations to your website we should think about what kind of content we want to allow for recommendation Lets create a dynamic set of content that will be the target pool of documents for this content recommendation block To do this we can use the Lytics Segment API create endpoint Bash curl s XPOST https api lytics io api segment H Content type text plain H Authorization LIOKEY d FILTER AND path CONTAINS froyo flavors FROM content ALIAS froyo_content jq In the command above we made a POST request to create a new segment on the content table or as we call it a content collection We used Segment QL to define the filter on the content in your account In the example above we re only accepting urls that contain the path froyo flavors Simple enough right If you ve used the Audience builder you may notice that the logic for building a segment is essentially the same format Here s a more complex example FILTER AND AND operator on the following statements global CONTAINS strawberry require the topic strawberry global CONTAINS vanilla require the topic vanilla path CONTAINS posts url must contain the path posts published now 30d require published in the last 30 days FROM content entities from the content table ALIAS strawberry_vanilla saved name of the collection You re probably wondering where these field names are coming from These are the standard fields used in our content table Here s a list of relevant fields you might use in building a content collection fieldname type description global map string number a map of topics for the document and their relevance scores aspects string type of document eg article profile video etc primary_video string url of the primary video featured in the document primary_image string url of the primary usually meta image can be displayed in recommendation language string language of the documents wordct int word count for the document author string name of the author of the document product_description string description of the product if the document is of type product price string price of the product if the document is of type product description string title of the document long_description string meta description of the document url string url of the document path string list of paths within the url of the document published date date when the document was published fetched date date when the document was fetched and enriched by Lytics type string source channel of the document eg web email etc Also if you have access to your queries in the Data tab of the Lytics UI you can see how the raw data from the lytics_content_enrich stream is parsed 2 Set up an inline recommendation To add inline content recommendations to your website all we have to do is draft some simple HTML Pathfora will look for appropriately named data attributes and replace the contents of these elements with recommendations from our APIs First lets look at a simple quick example then we ll break down what these attributes mean HTML div data pfblock froyo_1 data pfrecommend froyo_content img data pftype image alt frozen yogurt recommendation h2 data pftype title h2 p data pftype description p p a data pftype url Read More a div Here s a quick rundown of the relevant data attributes attribute name value description data pfblock a unique name for a single recommended document there may be multiple documents per page data pfrecommend id or slug saved name ALIAS of the source content collection data pftype field of the document to set as the contents of that element ex url title description image author published image data pftype attributes will set the src value if applied to an img element as with the example above or if used on a div or some other type of element it will set the background image to be the primary image from the document Similarly the url data pftype attribute will set the href value to the url of the document if applied to an a tag but otheriwse will set the innerHTML of the element Multiple Recommendations You may have seen a section on blogs If you liked this you may also like with a list of three or more related articles This is a common use case for content recommendations We repeat the same HTML pattern to create multiple recommendations in a set just remember to change the data pfblock value If we have multiple recommendations using the same content collection then we will ensure that the same piece of content is not shown twice on one page Here s a more in depth example with a little CSS this can be easily styled to match your website HTML h1 Recommended Content h1 Recommendation 1 of 2 div class rec block data pfblock froyo_1 data pfrecommend froyo_content div class rec img data pftype image div h2 data pftype title h2 p class rec info by span data pftype author span on span data pftype published span p p data pftype description p p a data pftype url Read More a div Recommendation 2 of 2 div class rec block data pfblock froyo_2 data pfrecommend froyo_content div class rec img data pftype image div h2 data pftype title h2 p class rec info by span data pftype author span on span data pftype published span p p data pftype description p p a data pftype url Read More a div Additional Notes Our SDK may take a second to set the proper hide show settings for inline elements If you experience a flicker where elements are being rapidly shown then hidden and shown again you can add the following CSS line to your website to prevent this CSS data pftrigger data pfrecommend display none This exact CSS gets loaded by Pathfora but adding it to your CSS ensures that elements are hidden as the document is loaded Since this is primarily a developer use case we don t provide any native reporting of inline recommendations at the moment however it is super simple to link this up to send interaction data to Lytics or Google Analytics Check out our Lytics Javascript Tag documentation for more If you d like a pre baked version of inline recommendations we also have a version that s built from our personalize modules You can find the documentation for this here Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-collection-onboarding",
    "title": "https://docs.lytics.com/docs/data-collection-onboarding",
    "chunk_text": "Welcome to the Data Collection and Onboarding section where we will explore the process of collecting and onboarding data into the Lytics platform This section covers how to ensure data quality and accuracy including how to integrate with various data sources and best practices for data management Whether you are a developer system administrator or data analyst this section will provide you with the essential knowledge needed to gain deeper insights into customer behavior and preferences within the Lytics platform Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-collection-onboarding#content",
    "title": "https://docs.lytics.com/docs/data-collection-onboarding#content",
    "chunk_text": "Welcome to the Data Collection and Onboarding section where we will explore the process of collecting and onboarding data into the Lytics platform This section covers how to ensure data quality and accuracy including how to integrate with various data sources and best practices for data management Whether you are a developer system administrator or data analyst this section will provide you with the essential knowledge needed to gain deeper insights into customer behavior and preferences within the Lytics platform Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/custom-data-ingestion",
    "title": "Custom Data Sources",
    "chunk_text": "Custom Data Sources Lytics can onboard and process data from custom data sources helping to build out further User Profiles with data specific to your company Custom data is often the most valuable for your marketing efforts as it allows you to personalize web experiences and build meaningful audiences using data unique to your users Onboarding process Unlike data collected from web activity and integrated marketing tools which automatically map data to Lytics user fields custom data sources require an evaluation planning and implementation process The Lytics team will assist in identifying use cases and the data fields needed to achieve them Our CE team will then produce a data dictionary that describes the structure format location and relationship of your data The data dictionary is used to write queries which map custom data fields to Lytics user fields as it is ingested Finally your custom data is uploaded to the Lytics and made available for use to build audiences personalize web experiences or export to marketing tools Uploading custom data Data can be uploaded to Lytics via CSV SFTP upload or our collection APIs Lytics can ingest both large bulk uploads of user data and smaller real time uploads of event data Before uploading data to Lytics ensure all necessary LQL queries are in place or it will not be mapped to Lytics user fields preventing identity resolution When considering large uploads to the Lytics platform be aware that this may cause an event backlog on your account This occurs as our platform queues incoming information as it processes the content of the upload Processing begins when the upload completes and can last considerably longer than the initial upload This can result in a delay in seeing information from other sources in your account as well as delays in any outbound trigger based workflows Custom Data Ingestion Getting your custom data ready to be properly ingested is crucial during your onboarding process with Lytics This document gives an overview of the formatting requirements for custom data sources sent to Lytics via batch CSV or JSON utilizing S3 or SFTP import workflows as well as batch or real time imports using our collection APIs File naming File compression Field formatting Headers Timestamps JSON formatting File naming When you have a recurring bulk import from S3 or SFTP for example you must consistently follow naming conventions to ensure your data is ingested and displayed correctly Keep file naming consistent by determining casing and spacing E g all lower case use underscores for spaces file_source_1_date Name each successive file with an identical root along with a time based suffix such as YYYYMMDD in filetitle 20191119 csv or a UNIX timestamp filetitle 1678297720 tab Lytics will import files that match the root filename and will use the modified timestamp of the file to determine the order to import files and to determine which new files to import for continuous imports File compression If needed files may be compressed using the zip format prior to ingestion The zip file will be decompressed and deleted after the content has been ingestied Field formatting Phone numbers should be standardized Lytics suggests normalizing phone numbers in a format such as 12223334444 Omit double quotes or escape quotes Omit newlines Keep all free form text in quotes if possible Avoid page breaks or special characters For more reference the basic rules for CSV files Headers Keep headers consistent across your organization and your vendors by determining casing and spacing Column headers have to match the sample file exactly When adding a new source review current mappings and headers to determine if any headers need to be mapped or consolidated into the same field in Lytics E g if the field mobile comes in from source A and the field cell comes in from source B it s likely these should be mapped to the same Lytics field which will require an LQL modification Timestamps Lytics is able to ingest data in a different order than the events described in that data transpired For this to work individual JSON or CSV records must have a timestamp associated with them For workflow based imports select the key column which contains the event timestamp when import workflows are configured For Collection API imports use the timestamp field URL parameter All imports require the following format YYYY MM DDTHH MM S If an explicit timestamp is not specified the data will be timestamped by Lytics upon ingestion When Lytics looks for new files it will choose first based on the file s last modified date If multiple files have the same last modified date the date stamp in the file name is used to select the next file to import JSON formatting JSON file formatting varies slightly depending on the method and nature of the data to import See examples for bulk and real time imports below Bulk Files imported via S3 SFTP or bulk collection should be newline delimited meaning each object represents a single record event and there is a newline separating them event register date 2014 04 05 event login date 2014 04 05 Real time Files sent to collection should be formatted as regular JSON where each record event is an object in an array of objects event register date 2014 04 05 event login date 2014 04 05 Lytics has a limited ability to parse nested data Objects may contain other objects and arrays but objects may not contain nested arrays of objects therein Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/custom-data-ingestion#content",
    "title": "Custom Data Sources",
    "chunk_text": "Custom Data Sources Lytics can onboard and process data from custom data sources helping to build out further User Profiles with data specific to your company Custom data is often the most valuable for your marketing efforts as it allows you to personalize web experiences and build meaningful audiences using data unique to your users Onboarding process Unlike data collected from web activity and integrated marketing tools which automatically map data to Lytics user fields custom data sources require an evaluation planning and implementation process The Lytics team will assist in identifying use cases and the data fields needed to achieve them Our CE team will then produce a data dictionary that describes the structure format location and relationship of your data The data dictionary is used to write queries which map custom data fields to Lytics user fields as it is ingested Finally your custom data is uploaded to the Lytics and made available for use to build audiences personalize web experiences or export to marketing tools Uploading custom data Data can be uploaded to Lytics via CSV SFTP upload or our collection APIs Lytics can ingest both large bulk uploads of user data and smaller real time uploads of event data Before uploading data to Lytics ensure all necessary LQL queries are in place or it will not be mapped to Lytics user fields preventing identity resolution When considering large uploads to the Lytics platform be aware that this may cause an event backlog on your account This occurs as our platform queues incoming information as it processes the content of the upload Processing begins when the upload completes and can last considerably longer than the initial upload This can result in a delay in seeing information from other sources in your account as well as delays in any outbound trigger based workflows Custom Data Ingestion Getting your custom data ready to be properly ingested is crucial during your onboarding process with Lytics This document gives an overview of the formatting requirements for custom data sources sent to Lytics via batch CSV or JSON utilizing S3 or SFTP import workflows as well as batch or real time imports using our collection APIs File naming File compression Field formatting Headers Timestamps JSON formatting File naming When you have a recurring bulk import from S3 or SFTP for example you must consistently follow naming conventions to ensure your data is ingested and displayed correctly Keep file naming consistent by determining casing and spacing E g all lower case use underscores for spaces file_source_1_date Name each successive file with an identical root along with a time based suffix such as YYYYMMDD in filetitle 20191119 csv or a UNIX timestamp filetitle 1678297720 tab Lytics will import files that match the root filename and will use the modified timestamp of the file to determine the order to import files and to determine which new files to import for continuous imports File compression If needed files may be compressed using the zip format prior to ingestion The zip file will be decompressed and deleted after the content has been ingestied Field formatting Phone numbers should be standardized Lytics suggests normalizing phone numbers in a format such as 12223334444 Omit double quotes or escape quotes Omit newlines Keep all free form text in quotes if possible Avoid page breaks or special characters For more reference the basic rules for CSV files Headers Keep headers consistent across your organization and your vendors by determining casing and spacing Column headers have to match the sample file exactly When adding a new source review current mappings and headers to determine if any headers need to be mapped or consolidated into the same field in Lytics E g if the field mobile comes in from source A and the field cell comes in from source B it s likely these should be mapped to the same Lytics field which will require an LQL modification Timestamps Lytics is able to ingest data in a different order than the events described in that data transpired For this to work individual JSON or CSV records must have a timestamp associated with them For workflow based imports select the key column which contains the event timestamp when import workflows are configured For Collection API imports use the timestamp field URL parameter All imports require the following format YYYY MM DDTHH MM S If an explicit timestamp is not specified the data will be timestamped by Lytics upon ingestion When Lytics looks for new files it will choose first based on the file s last modified date If multiple files have the same last modified date the date stamp in the file name is used to select the next file to import JSON formatting JSON file formatting varies slightly depending on the method and nature of the data to import See examples for bulk and real time imports below Bulk Files imported via S3 SFTP or bulk collection should be newline delimited meaning each object represents a single record event and there is a newline separating them event register date 2014 04 05 event login date 2014 04 05 Real time Files sent to collection should be formatted as regular JSON where each record event is an object in an array of objects event register date 2014 04 05 event login date 2014 04 05 Lytics has a limited ability to parse nested data Objects may contain other objects and arrays but objects may not contain nested arrays of objects therein Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/onboarding-web-data",
    "title": "Onboarding Web Data",
    "chunk_text": "Onboarding Web Data Lytics provides two ways to onboard data from your website email marketing and online advertising The Lytics JavaScript tag once installed on your website will send user activity data The Lytics pixel can be embedded in email or ads and configured to send user data back to Lytics on load Lytics JavaScript Tag The Lytics JavaScript tag sends page views and any custom events you have configured to the default stream unless configured otherwise This event data will be translated into user fields in the Lytics schema with predefined or custom mappings For example the following request would send a user s email address first name and last name to Lytics JavaScript jstag send email email protected first_name Forrest last_name Gump Using a tag manager Our tag can be installed manually or with a tag manager such as Google Tag Manager If the Lytics JavaScript tag is installed using a tag manager the jstag send command may not be the correct function to call Lytics Image Pixel When the Lytics JavaScript tag cannot be installed the Lytics Image Pixel can be used to onboard user data from any source that allows an image to be loaded such as email and online ads Building the pixel There are three key variables that need to be defined when sending information to Lytics using the Lytics Image Pixel The account ID the name of the receiving data stream and the event data in the form of query parameters For example this pixel will send the user s email address and Google Universal Tag Manager UTM medium and source variables to the default stream of account 24546133b65465413w9 HTML img src https c lytics io c 12324546133b65465413w9 email protected utm_medium email utm_source welcome This image tag can be inserted into any HTML document including advertisements and emails and will send the event data on load HTML html head body h1 Welcome to Hanks Roles h1 p Thanks for signing up for all the Tom Hanks news you handle p lytics pixel at bottom of email img src https c lytics io c 12324546133b65465413w9 email protected utm_medium email utm_source welcome body html Predefined user fields Lytics does not have a fixed schema any key value pair can be passed using the JavaScript tag or pixel However only data which has been mapped to user fields will be available for use in audiences Out of the box the Lytics JavaScript Tag and Image Pixel have the ability to onboard the following information when using the default data stream General Visit Data Name Identifier Time of Last Visit lastvist_ts Time of First Visit firstvisit_ts Total Number of Visits visitct All Channels Used channels Web Events By Hour hourly Web Events By Week weekly Domains Visited domains Domains Referred From refdomain Devices Used devices Has Accessed Mobile Web is_mobile Last Visit Country visit_country Last Visit City visit_city Last Visit State Province visit_region Timezone timezone User is a bot is_bot User Agent user_agent Hashed URLs Visited and Total View Count hashurls User Identity Name Identifier Web Cookie ID _uid User ID user_id Full Name name First Name first_name Last Name last_name Email email Title title Company company Phone Number phone Cell Number cell Age age Gender gender City city State state Zip zip Country country Origin origin User Status status Event Data Events regarding specific user actions such as a CTA click can also be sent to Lytics In addition to any of the parameters identified above you can append event specific data to the send request resulting in a few more fields on the profile Name Identifier Total Pageview Count pageviewct Event First Time Seen event_first_seen Event Last Time Seen event_last_seen Campaign Data Google UTM Google UTM campaign parameters are automatically pulled in and added to profiles as well For more details on Google UTM parameters and how to use them visit the Google help docs The following fields will be added to the profile when UTM parameters are received Name Identifier UTM Campaign Referred By utm_campaign UTM Source Referred By utm_source UTM Medium Referred By utm_medium UTM Content Referred By utm_content Last UTM Campaign Referred By utm_campaign_last Last UTM Source Referred By utm_source_last Last UTM Medium Referred By utm_medium_last Last UTM Contents Referred By utm_content_last Form Data In order to collect data entered on a form you will need to use jstag send when a user submits that form The fields below will be available as user fields if the form name is sent as form_name and any fields in the form need to start with formdata_ for example formdata_country Name Identifier Last Time Web Form Submitted last_form_submitted_by_date Web Forms Submitted form_submitted Web Form Data form_data Conversion Data As a convenience a standard conversion event has been defined in order to surface some useful conversion related aggregates such as most recent conversion value or the oldest conversion time When passing conversion events the event name must be conversion for the following mapping to occur Name Identifier Most Recent Conversion Time cvt_last_time Oldest Conversion Time cvt_first_time Most Recent Campaign Attributed to Conversion cvt_last_campaign All Campaigns Converted From cvt_campaigns Most Recent Variation Attributed to Conversion cvt_last_variation All Variations Converted From cvt_variations Most Recent Currency Used cvt_currency Most Recent Conversion Value cvt_value Conversion Values By Campaign cvt_history Updated 3 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/onboarding-web-data#content",
    "title": "Onboarding Web Data",
    "chunk_text": "Onboarding Web Data Lytics provides two ways to onboard data from your website email marketing and online advertising The Lytics JavaScript tag once installed on your website will send user activity data The Lytics pixel can be embedded in email or ads and configured to send user data back to Lytics on load Lytics JavaScript Tag The Lytics JavaScript tag sends page views and any custom events you have configured to the default stream unless configured otherwise This event data will be translated into user fields in the Lytics schema with predefined or custom mappings For example the following request would send a user s email address first name and last name to Lytics JavaScript jstag send email email protected first_name Forrest last_name Gump Using a tag manager Our tag can be installed manually or with a tag manager such as Google Tag Manager If the Lytics JavaScript tag is installed using a tag manager the jstag send command may not be the correct function to call Lytics Image Pixel When the Lytics JavaScript tag cannot be installed the Lytics Image Pixel can be used to onboard user data from any source that allows an image to be loaded such as email and online ads Building the pixel There are three key variables that need to be defined when sending information to Lytics using the Lytics Image Pixel The account ID the name of the receiving data stream and the event data in the form of query parameters For example this pixel will send the user s email address and Google Universal Tag Manager UTM medium and source variables to the default stream of account 24546133b65465413w9 HTML img src https c lytics io c 12324546133b65465413w9 email protected utm_medium email utm_source welcome This image tag can be inserted into any HTML document including advertisements and emails and will send the event data on load HTML html head body h1 Welcome to Hanks Roles h1 p Thanks for signing up for all the Tom Hanks news you handle p lytics pixel at bottom of email img src https c lytics io c 12324546133b65465413w9 email protected utm_medium email utm_source welcome body html Predefined user fields Lytics does not have a fixed schema any key value pair can be passed using the JavaScript tag or pixel However only data which has been mapped to user fields will be available for use in audiences Out of the box the Lytics JavaScript Tag and Image Pixel have the ability to onboard the following information when using the default data stream General Visit Data Name Identifier Time of Last Visit lastvist_ts Time of First Visit firstvisit_ts Total Number of Visits visitct All Channels Used channels Web Events By Hour hourly Web Events By Week weekly Domains Visited domains Domains Referred From refdomain Devices Used devices Has Accessed Mobile Web is_mobile Last Visit Country visit_country Last Visit City visit_city Last Visit State Province visit_region Timezone timezone User is a bot is_bot User Agent user_agent Hashed URLs Visited and Total View Count hashurls User Identity Name Identifier Web Cookie ID _uid User ID user_id Full Name name First Name first_name Last Name last_name Email email Title title Company company Phone Number phone Cell Number cell Age age Gender gender City city State state Zip zip Country country Origin origin User Status status Event Data Events regarding specific user actions such as a CTA click can also be sent to Lytics In addition to any of the parameters identified above you can append event specific data to the send request resulting in a few more fields on the profile Name Identifier Total Pageview Count pageviewct Event First Time Seen event_first_seen Event Last Time Seen event_last_seen Campaign Data Google UTM Google UTM campaign parameters are automatically pulled in and added to profiles as well For more details on Google UTM parameters and how to use them visit the Google help docs The following fields will be added to the profile when UTM parameters are received Name Identifier UTM Campaign Referred By utm_campaign UTM Source Referred By utm_source UTM Medium Referred By utm_medium UTM Content Referred By utm_content Last UTM Campaign Referred By utm_campaign_last Last UTM Source Referred By utm_source_last Last UTM Medium Referred By utm_medium_last Last UTM Contents Referred By utm_content_last Form Data In order to collect data entered on a form you will need to use jstag send when a user submits that form The fields below will be available as user fields if the form name is sent as form_name and any fields in the form need to start with formdata_ for example formdata_country Name Identifier Last Time Web Form Submitted last_form_submitted_by_date Web Forms Submitted form_submitted Web Form Data form_data Conversion Data As a convenience a standard conversion event has been defined in order to surface some useful conversion related aggregates such as most recent conversion value or the oldest conversion time When passing conversion events the event name must be conversion for the following mapping to occur Name Identifier Most Recent Conversion Time cvt_last_time Oldest Conversion Time cvt_first_time Most Recent Campaign Attributed to Conversion cvt_last_campaign All Campaigns Converted From cvt_campaigns Most Recent Variation Attributed to Conversion cvt_last_variation All Variations Converted From cvt_variations Most Recent Currency Used cvt_currency Most Recent Conversion Value cvt_value Conversion Values By Campaign cvt_history Updated 3 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/collect-mobile-data-with-firebase-gtm",
    "title": "Benefits",
    "chunk_text": "The following tutorial provides step by step guidance for setting up configuring and testing data collection from a mobile device in real time using Firebase Analytics FA Google Tag Manager GTM This is an excellent alternative for minimizing the number of SDKs that must be deployed from your mobile app by leveraging a robust and well tested analytics solution in Firebase Analytics using GA4 In this tutorial we ll cover the following steps Setting up Firebase and installing the SDK Setting up Google Tag Manager and installing the SDK Configuring the Lytics Image Pixel collection method Testing the implementation end to end Benefits Events are delivered to Lytics in real time Reduces the number of SDKs installed Leverages Google managed SDKs to streamline app approval Easy access to advanced testing and debugging tools Automatically passes events to Google Analytics or analysis or further delivery to BigQuery Install Firebase SDK This solution leverages Firebase Analytics which Google Analytics powers under the hood This means that in addition to getting data delivered to Lytics you ll also be able to leverage Google Analytics and its direct integrations to other Google products such as BigQuery as an automatic value add Google provides thorough documentation for getting a Firebase project set up and installed in your platform of choice Once you have completed the setup and made it to the Start logging events section of the documentation you are ready to move to the next step Feel free to log some sample events per the documentation either way we ll come back here further down in this tutorial Install Google Tag Manager SDK Next we ll leverage Google Tag Manager which offers seamless integration with Firebase Analytics to forward events collected by Firebase to Lytics Like Firebase Google has excellent documentation for getting a Google Tag Manager account set up and the iOS or Android SDKs configured Sending User Properties Events Now that we have configured Firebase and Google Tag Manager we are ready to start configuring and sending our events Firebase makes both setting user properties as well as passing interaction based events easy For more details on the power of Firebase you can revisit the Start Logging Events section of the getting started documentation Analytics logEvent did_something parameters _uid UUID uuidString lytics_test_key some value The above represents an example of a custom event named did_something For that event we also include two parameters _uid and lytics_test_key These parameters are entirely up to you and should be in support of your use case Keep a record of the parameters used as you will need to explicitly define those in Google Tag Manager to pass them to Lytics That said including an identifier of some for every event is essential to your identity resolution strategy In the above example we use _uid which is one of the default identifiers Consult your account manager or solutions team for the optimal approach here Regardless of the approach it is essential that the ID s passed persist There are various ways to generate and store a value on the device For this step it is best to consult your app development team One example would be to use Swift s UUID to generate a unique user identifier and store it using UserDefaults The method used to generate store and access this value has no impact on the results It is only essential to include that value in all events and have it persist for as long as possible On that note whenever possible it is a best practice to include multiple identifiers such as email or IDFA to maximize the match rate Configuring Google Tag Manager for Event Forwarding The final step in getting user details from your app to Lytics is configuring your Google Tag Manager Container We ll start by defining Variables for each of the parameters you pass in your events from your app Based on our example we ll define two variables _uid and lytics_test_key Step One From the Google Tag Manager dashboard navigate to Variables in the left hand menu Step Two Create a new variable one for each parameter using the New button In the new window that loads click Choose a variable type and select Event Parameter This is just an example you can use any variable type based on your needs Event Name may also prove helpful in adding more context to the event data delivered to Lytics Step Three Finish your variable configuration by selecting Custom Parameter followed by inputting one of the parameter names we defined above In our case we ll use _uid with a default value of an empty string Save your settings and move to the next parameter until you have created a variable for all parameters being passed to Lytics Step Four With your variables defined we ll move on to creating a new Tag within our container Select Tags from the left hand menu and New tag once the list of tags has loaded On the following window click Choose a tag type and select Custom Image Step Five With your tag type selected we ll configure the Image URL as well as the Triggering rules The Image URL will leverage the Lytics Image Pixel collection method To configure you ll need to know your Account ID For simplicity we ll break the full URL into two parts that will be joined together in actual execution Focusing first on the path everything from https up to the you will need to replace the YOUR AID portion of the path with your actual account ID and the STREAM portion of the path to your desired ingest stream https c lytics io c YOUR AID STREAM The query parameters will contain the field name you d like to pass to Lytics as well as a value that is populated by referencing the GTM variables _uid Lytics UID lytics_test_key Lytics Test Key Putting those two parts together results in the final value of the Image URL in our config https c lytics io c myaccountid123 mobileevents _uid Lytics UID lytics_test_key Lytics Test Key Last we ll configure the event that triggers our forward by selecting All Events Step Six With our tag defined the final step is publishing the Google Tag Manager container and storing the config that is generated in the proper directory of our App Once again Google provides instructions for doing so Test Debug Implementation With our implementation all configured the final step is to test and debug Each of the steps defined above supports testing and debugging We ve added quick links to those resources below Firebase Event Debugger Google Tag Manager Debugger Lytics Data Streams Once successfully tested you can do the final validation by reviewing your incoming data as part of the streams UI within your Lytics account Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/collect-mobile-data-with-firebase-gtm#content",
    "title": "Benefits",
    "chunk_text": "The following tutorial provides step by step guidance for setting up configuring and testing data collection from a mobile device in real time using Firebase Analytics FA Google Tag Manager GTM This is an excellent alternative for minimizing the number of SDKs that must be deployed from your mobile app by leveraging a robust and well tested analytics solution in Firebase Analytics using GA4 In this tutorial we ll cover the following steps Setting up Firebase and installing the SDK Setting up Google Tag Manager and installing the SDK Configuring the Lytics Image Pixel collection method Testing the implementation end to end Benefits Events are delivered to Lytics in real time Reduces the number of SDKs installed Leverages Google managed SDKs to streamline app approval Easy access to advanced testing and debugging tools Automatically passes events to Google Analytics or analysis or further delivery to BigQuery Install Firebase SDK This solution leverages Firebase Analytics which Google Analytics powers under the hood This means that in addition to getting data delivered to Lytics you ll also be able to leverage Google Analytics and its direct integrations to other Google products such as BigQuery as an automatic value add Google provides thorough documentation for getting a Firebase project set up and installed in your platform of choice Once you have completed the setup and made it to the Start logging events section of the documentation you are ready to move to the next step Feel free to log some sample events per the documentation either way we ll come back here further down in this tutorial Install Google Tag Manager SDK Next we ll leverage Google Tag Manager which offers seamless integration with Firebase Analytics to forward events collected by Firebase to Lytics Like Firebase Google has excellent documentation for getting a Google Tag Manager account set up and the iOS or Android SDKs configured Sending User Properties Events Now that we have configured Firebase and Google Tag Manager we are ready to start configuring and sending our events Firebase makes both setting user properties as well as passing interaction based events easy For more details on the power of Firebase you can revisit the Start Logging Events section of the getting started documentation Analytics logEvent did_something parameters _uid UUID uuidString lytics_test_key some value The above represents an example of a custom event named did_something For that event we also include two parameters _uid and lytics_test_key These parameters are entirely up to you and should be in support of your use case Keep a record of the parameters used as you will need to explicitly define those in Google Tag Manager to pass them to Lytics That said including an identifier of some for every event is essential to your identity resolution strategy In the above example we use _uid which is one of the default identifiers Consult your account manager or solutions team for the optimal approach here Regardless of the approach it is essential that the ID s passed persist There are various ways to generate and store a value on the device For this step it is best to consult your app development team One example would be to use Swift s UUID to generate a unique user identifier and store it using UserDefaults The method used to generate store and access this value has no impact on the results It is only essential to include that value in all events and have it persist for as long as possible On that note whenever possible it is a best practice to include multiple identifiers such as email or IDFA to maximize the match rate Configuring Google Tag Manager for Event Forwarding The final step in getting user details from your app to Lytics is configuring your Google Tag Manager Container We ll start by defining Variables for each of the parameters you pass in your events from your app Based on our example we ll define two variables _uid and lytics_test_key Step One From the Google Tag Manager dashboard navigate to Variables in the left hand menu Step Two Create a new variable one for each parameter using the New button In the new window that loads click Choose a variable type and select Event Parameter This is just an example you can use any variable type based on your needs Event Name may also prove helpful in adding more context to the event data delivered to Lytics Step Three Finish your variable configuration by selecting Custom Parameter followed by inputting one of the parameter names we defined above In our case we ll use _uid with a default value of an empty string Save your settings and move to the next parameter until you have created a variable for all parameters being passed to Lytics Step Four With your variables defined we ll move on to creating a new Tag within our container Select Tags from the left hand menu and New tag once the list of tags has loaded On the following window click Choose a tag type and select Custom Image Step Five With your tag type selected we ll configure the Image URL as well as the Triggering rules The Image URL will leverage the Lytics Image Pixel collection method To configure you ll need to know your Account ID For simplicity we ll break the full URL into two parts that will be joined together in actual execution Focusing first on the path everything from https up to the you will need to replace the YOUR AID portion of the path with your actual account ID and the STREAM portion of the path to your desired ingest stream https c lytics io c YOUR AID STREAM The query parameters will contain the field name you d like to pass to Lytics as well as a value that is populated by referencing the GTM variables _uid Lytics UID lytics_test_key Lytics Test Key Putting those two parts together results in the final value of the Image URL in our config https c lytics io c myaccountid123 mobileevents _uid Lytics UID lytics_test_key Lytics Test Key Last we ll configure the event that triggers our forward by selecting All Events Step Six With our tag defined the final step is publishing the Google Tag Manager container and storing the config that is generated in the proper directory of our App Once again Google provides instructions for doing so Test Debug Implementation With our implementation all configured the final step is to test and debug Each of the steps defined above supports testing and debugging We ve added quick links to those resources below Firebase Event Debugger Google Tag Manager Debugger Lytics Data Streams Once successfully tested you can do the final validation by reviewing your incoming data as part of the streams UI within your Lytics account Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-management",
    "title": "https://docs.lytics.com/docs/data-management",
    "chunk_text": "Welcome to the Data Management section where we will explore the various tools and techniques available within the Lytics platform for managing and organizing your customer data This section covers how to ensure data accuracy and completeness including data validation deduplication and transformation Whether you are a data analyst developer or system administrator this section will provide you with the essential knowledge needed to manage your customer data and gain valuable insights into customer behavior and preferences Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/data-management#content",
    "title": "https://docs.lytics.com/docs/data-management#content",
    "chunk_text": "Welcome to the Data Management section where we will explore the various tools and techniques available within the Lytics platform for managing and organizing your customer data This section covers how to ensure data accuracy and completeness including data validation deduplication and transformation Whether you are a data analyst developer or system administrator this section will provide you with the essential knowledge needed to manage your customer data and gain valuable insights into customer behavior and preferences Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/stitching-user-profiles",
    "title": "Stitching User Profiles",
    "chunk_text": "Stitching User Profiles This guide gives context on Lytics user profiles and helps illustrate the most common ways to combine or stitch profiles based on shared identifiers While it is geared for marketers you will likely need a developer on your team to implement some of these tactics The problem How do I know that an anonymous user browsing my website is the same user that just opened my email How can I make sure I am not over marketing to the same user because I can t tell who they are across all my data sources and tools How do I achieve 1 1 personalization without a single source of truth for my users How Lytics helps Lytics aims to solve these problems by creating a holistic customer view through data unification Lytics is based on user profiles meaning any and all data ingested needs to be tied to a user A user profile is generated and defined by an identifier For anonymous users this identifier can be the Lytics cookie placed after you install the Lytics JavaScript tag For known users this is most commonly an email but can also be various forms of user IDs across your data sources Richer profiles that include attributes from various data sources allow marketers to run their campaigns more efficiently resulting in better targeting and remarketing personalization cost per action CPA among other results Therefore profile stitching early on in your journey with Lytics will be important and impactful for your success with the platform But how does Lytics actually stitch your Customer Relationship Management CRM users to your web browsers to your email subscribers The answer is through common identifiers shared between tools Common identifiers A common identifier is used by Lytics to create a user profile but it s one that also exists in another source Some examples include User 1 Imported from email tool Identifier email address email protected User 2 Imported from CRM Identifier email address email protected user ID 0101010 User 3 Imported from data warehouse Identifier user ID 0101010 All of these users will merge into one profile in Lytics because they share identifiers This will happen automatically as soon as these data points are imported The import is the merge event Merging events But how would you merge an anonymous profile that ONLY has a cookie ID with a profile that has a known identifier like email This is one of the most common use cases for Lytics users and one that will set you up for success To do this you ll need to identify or create potential merge events Again more details can be found in the Profiles and Identity Resolution document but here we ll provide examples of common scenarios that you may consider when planning your strategy Lytics Modal Experiences You can build Email Capture Modal Experiences directly in Lytics that prompt users to sign up for an e newsletter or receive a coupon for example As soon as a user fills in their email Lytics will tie the anonymous cookie profile to the email they submitted If their email was already in our system under a different profile Lytics will merge the two profiles into one For information on building email capture Experiences see the Experience Editor documentation On site events forms Any of your website forms where a user submits an email are great places to create a merge event of a Lytics cookie to email By using the jstag send event or setting up a Google Tag Manager Trigger Lytics can attach an email to an anonymous profile Some types of commonly used forms include User log in Any sign ups events newsletters Registrations warranties products Gated content webinars whitepapers Note that you can submit other data using this method For example if users fill in their name profession address etc in the form you can send this as well and Lytics will append it to their profile Tip You can also send Lytics a form name and timestamp using this method which could be helpful if you d like to retarget people who submitted certain forms during a certain time period Keep in mind this will only work for forms living on your website For forms populated in an iframe or hosted in a different way you may need to use the Lytics pixel or an API call to capture this information See the document Sending Data to Lytics for more information on using the JavaScript tag and other methods Email click through identifier Many email service providers ESPs have a unique user ID within their system separate from email It s encouraged to pass this identifier hashed email or any other non PII identifier as a query string parameter within links you include in any email communication If you are familiar with UTM parameters this is similar Once you set this up in your ESP Lytics can associate this additional identifier as another merge rule So moving forward whenever a user clicks on an email link that drives them to your website with the Lytics tag Lytics will be able to stitch the email to a cookie Examples domain com news article_name your_esp_identifier_or_hashed_email_name value domain com news article_name esp_id 2ncihj894y2jnjknfjsd Tracking growth Next you can create an audience in Lytics to track the growth of profiles that have stitched a cookie to an email An example of what this could look like in the Lytics audience builder is shown below On the Audience Summary page you can view how your audience of unknown to known users has grown over time Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/stitching-user-profiles#content",
    "title": "Stitching User Profiles",
    "chunk_text": "Stitching User Profiles This guide gives context on Lytics user profiles and helps illustrate the most common ways to combine or stitch profiles based on shared identifiers While it is geared for marketers you will likely need a developer on your team to implement some of these tactics The problem How do I know that an anonymous user browsing my website is the same user that just opened my email How can I make sure I am not over marketing to the same user because I can t tell who they are across all my data sources and tools How do I achieve 1 1 personalization without a single source of truth for my users How Lytics helps Lytics aims to solve these problems by creating a holistic customer view through data unification Lytics is based on user profiles meaning any and all data ingested needs to be tied to a user A user profile is generated and defined by an identifier For anonymous users this identifier can be the Lytics cookie placed after you install the Lytics JavaScript tag For known users this is most commonly an email but can also be various forms of user IDs across your data sources Richer profiles that include attributes from various data sources allow marketers to run their campaigns more efficiently resulting in better targeting and remarketing personalization cost per action CPA among other results Therefore profile stitching early on in your journey with Lytics will be important and impactful for your success with the platform But how does Lytics actually stitch your Customer Relationship Management CRM users to your web browsers to your email subscribers The answer is through common identifiers shared between tools Common identifiers A common identifier is used by Lytics to create a user profile but it s one that also exists in another source Some examples include User 1 Imported from email tool Identifier email address email protected User 2 Imported from CRM Identifier email address email protected user ID 0101010 User 3 Imported from data warehouse Identifier user ID 0101010 All of these users will merge into one profile in Lytics because they share identifiers This will happen automatically as soon as these data points are imported The import is the merge event Merging events But how would you merge an anonymous profile that ONLY has a cookie ID with a profile that has a known identifier like email This is one of the most common use cases for Lytics users and one that will set you up for success To do this you ll need to identify or create potential merge events Again more details can be found in the Profiles and Identity Resolution document but here we ll provide examples of common scenarios that you may consider when planning your strategy Lytics Modal Experiences You can build Email Capture Modal Experiences directly in Lytics that prompt users to sign up for an e newsletter or receive a coupon for example As soon as a user fills in their email Lytics will tie the anonymous cookie profile to the email they submitted If their email was already in our system under a different profile Lytics will merge the two profiles into one For information on building email capture Experiences see the Experience Editor documentation On site events forms Any of your website forms where a user submits an email are great places to create a merge event of a Lytics cookie to email By using the jstag send event or setting up a Google Tag Manager Trigger Lytics can attach an email to an anonymous profile Some types of commonly used forms include User log in Any sign ups events newsletters Registrations warranties products Gated content webinars whitepapers Note that you can submit other data using this method For example if users fill in their name profession address etc in the form you can send this as well and Lytics will append it to their profile Tip You can also send Lytics a form name and timestamp using this method which could be helpful if you d like to retarget people who submitted certain forms during a certain time period Keep in mind this will only work for forms living on your website For forms populated in an iframe or hosted in a different way you may need to use the Lytics pixel or an API call to capture this information See the document Sending Data to Lytics for more information on using the JavaScript tag and other methods Email click through identifier Many email service providers ESPs have a unique user ID within their system separate from email It s encouraged to pass this identifier hashed email or any other non PII identifier as a query string parameter within links you include in any email communication If you are familiar with UTM parameters this is similar Once you set this up in your ESP Lytics can associate this additional identifier as another merge rule So moving forward whenever a user clicks on an email link that drives them to your website with the Lytics tag Lytics will be able to stitch the email to a cookie Examples domain com news article_name your_esp_identifier_or_hashed_email_name value domain com news article_name esp_id 2ncihj894y2jnjknfjsd Tracking growth Next you can create an audience in Lytics to track the growth of profiles that have stitched a cookie to an email An example of what this could look like in the Lytics audience builder is shown below On the Audience Summary page you can view how your audience of unknown to known users has grown over time Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/migrating-from-lql-to-conductor",
    "title": "Deep Dive: Migrating from Queries to Conductor Schema",
    "chunk_text": "Deep Dive Migrating from Queries to Conductor Schema TL DR Many things you liked about LQL are still here and many things you didn t like are out Migrating your schema management to Lytics Schema API within Conductor can simplify your workflows Intro Lytics profile pipeline processes your customer data in real time to perform data cleansing data transformation data deduplication and identity resolution Historically these functions were performed in an expressive SQL like scripting language called LQL After listening to how our customers used LQL and the operational scaffolding they developed to ensure reliability while enabling process scalability we introduced a new Schema API Conductor provides a UI based flow for interacting with Schema AP Longtime Lytics users who are comfortable with LQL have appreciated Brevity LQL combined both data definition DDL and data manipulation DML Readability LQL reads similarly to SQL which makes sense to a lot of database practitioners Longtime Lytics users who were uncomfortable with LQL didn t appreciate DRY violations A common development mantra states Don t Repeat Yourself DRY Repeating your code in multiple places introduces opportunities for inconsistency and many LQL statements mapping data into the same field could yield inconsistent or unexpected results Lack of versioning When you post LQL you re doing it live This can be problematic when there are large changesets that you want to stage together or if you want to understand what changed at a given time Learning curve Not every update needs to be complicated and requiring users to learn LQL to make even small changes became prohibitive for many of them Lytics new Schema API allows you to use LQL expressions within a JSON framework with native version control Analogs An LQL statement combines features of data definition and data manipulation In the Schema API data definition is expressed through fields and data manipulation is expressed through mappings Field Analog Properties LQL Schema API AS ID SHORTDESC ShortDesc LONGDESC LongDesc KIND Type MERGEOP MergeOp CAP Capacity KeepDays BY IsIdentifier Mapping Analog Properties LQL Schema API ID AS Field FROM Stream KIND Expr IF Guard Example Imagine we had the following simple LQL Select statement processing data from a purchases data stream This statement is designed to accumulate the total amount that a customer has been refunded over their lifetime SQL SELECT SUM order_total AS refunded IF eq type refund SHORTDESC Refund Amount LONGDESC Total USD refunded email email AS email SHORTDESC Email Address FROM orders INTO user BY email Instead of providing these definitions and transformations in a single statement we would first create the fields into which we would like to direct this data The definitions for the email and refunded fields would look like the following JSON id email shortdesc Email Address type string mergeop latest is_identifier true id refunded shortdesc Refund Amount longdesc Total USD refunded type number mergeop latest Once we ve defined the fields we would define the mappings for both which would look like the following JSON id abc123 field refunded stream orders expr SUM order_total guard eq type refund id def456 field email stream orders expr email email After creating fields and mappings for the desired schema changes simply publish your changes to see their effect immediately in your data processing How to Get Started Getting started is simple All of your queries have been automatically translated into appropriate fields and mapping objects It is recommended to immediately publish your default schema before making any changes to it After it has been published any changes can be published in batches to ensure better visibility on what changes go out While you re not required to immediately start using Lytics new Schema API the classic Query API will be deprecated starting February 1 2024 Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/migrating-from-lql-to-conductor#content",
    "title": "Deep Dive: Migrating from Queries to Conductor Schema",
    "chunk_text": "Deep Dive Migrating from Queries to Conductor Schema TL DR Many things you liked about LQL are still here and many things you didn t like are out Migrating your schema management to Lytics Schema API within Conductor can simplify your workflows Intro Lytics profile pipeline processes your customer data in real time to perform data cleansing data transformation data deduplication and identity resolution Historically these functions were performed in an expressive SQL like scripting language called LQL After listening to how our customers used LQL and the operational scaffolding they developed to ensure reliability while enabling process scalability we introduced a new Schema API Conductor provides a UI based flow for interacting with Schema AP Longtime Lytics users who are comfortable with LQL have appreciated Brevity LQL combined both data definition DDL and data manipulation DML Readability LQL reads similarly to SQL which makes sense to a lot of database practitioners Longtime Lytics users who were uncomfortable with LQL didn t appreciate DRY violations A common development mantra states Don t Repeat Yourself DRY Repeating your code in multiple places introduces opportunities for inconsistency and many LQL statements mapping data into the same field could yield inconsistent or unexpected results Lack of versioning When you post LQL you re doing it live This can be problematic when there are large changesets that you want to stage together or if you want to understand what changed at a given time Learning curve Not every update needs to be complicated and requiring users to learn LQL to make even small changes became prohibitive for many of them Lytics new Schema API allows you to use LQL expressions within a JSON framework with native version control Analogs An LQL statement combines features of data definition and data manipulation In the Schema API data definition is expressed through fields and data manipulation is expressed through mappings Field Analog Properties LQL Schema API AS ID SHORTDESC ShortDesc LONGDESC LongDesc KIND Type MERGEOP MergeOp CAP Capacity KeepDays BY IsIdentifier Mapping Analog Properties LQL Schema API ID AS Field FROM Stream KIND Expr IF Guard Example Imagine we had the following simple LQL Select statement processing data from a purchases data stream This statement is designed to accumulate the total amount that a customer has been refunded over their lifetime SQL SELECT SUM order_total AS refunded IF eq type refund SHORTDESC Refund Amount LONGDESC Total USD refunded email email AS email SHORTDESC Email Address FROM orders INTO user BY email Instead of providing these definitions and transformations in a single statement we would first create the fields into which we would like to direct this data The definitions for the email and refunded fields would look like the following JSON id email shortdesc Email Address type string mergeop latest is_identifier true id refunded shortdesc Refund Amount longdesc Total USD refunded type number mergeop latest Once we ve defined the fields we would define the mappings for both which would look like the following JSON id abc123 field refunded stream orders expr SUM order_total guard eq type refund id def456 field email stream orders expr email email After creating fields and mappings for the desired schema changes simply publish your changes to see their effect immediately in your data processing How to Get Started Getting started is simple All of your queries have been automatically translated into appropriate fields and mapping objects It is recommended to immediately publish your default schema before making any changes to it After it has been published any changes can be published in batches to ensure better visibility on what changes go out While you re not required to immediately start using Lytics new Schema API the classic Query API will be deprecated starting February 1 2024 Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lql-data-import-basics",
    "title": "LQL & Data Import Basics",
    "chunk_text": "LQL Data Import Basics Let s take an in depth look at Lytics Query Language LQL and custom data imports We ll cover a basic overview of LQL itself how data identities are resolved across streams how you can map custom data and finally a few of the different ways to import custom data into your account Difficulty Intermediate TLDR Checkout the data upload documentation and the query documentation Prerequisites httpie optional a more user friendly version of cURL that we ll be using in this guide for readability Lytics Command Line Tool optional we ll show you how to execute commands with our CLI for each endpoint that is supported A valid API token for your Lytics account learn about managing API tokens For ease of use we suggest adding as an environment variable in your command line Bash export LIOKEY API Token 1 Lytics Data Processing Review Due to the intermediate nature of this course it is important that you already possess a strong understanding of segmentation user fields and data streams For those new to the Lytics data pipeline we recommend reviewing the following documentation before proceeding with the rest of the steps Introduction Lytics Data Collection Introduction Lytics User Profiles User Fields Introduction Lytics Audiences 2 Sending Data from a Website JavaScript When the Lytics JavaScript tag is installed we will automatically begin collecting standard data This includes page view level information such as URL browser Lytics Cookie Id etc In addition to the standard page view event the Lytics tag empowers marketers to push more sophisticated data related to the end user s behavior or identity An example of such data to a custom stream called custom_data might look something like JavaScript jstag send custom_data userid 1234 email email protected first_name Jon last_name Snow title King in the North company House Stark phone 555 555 5555 age 21 gender m city Winterfell state Westeros status planning While visiting your site that has the Lytics JavaScript tag installed you can leverage Chrome s developer tools specifically the console to manually fire this send request and pass the payload above to Lytics Keep in mind all data sent from your browser will automatically be associated with your current cookie When testing and playing it is best practice to always use a fresh incognito browser Chrome tools has great documentation if they are new to you as well Check out our JavaScript tag data collection docs for more details on the power of the Lytics tag 3 What is LQL Lytics Query Language LQL is the transformation layer that makes passing arbitrary non schema specific data to Lytics For the most basic implementations it is simply the translation of raw event data to user field data the Lytics schema In more advanced implementations complex calculations can be performed on events across streams to create sums maps and more An example might be rolling all purchase_total values for individual conversions into a purchase_total_over_time field that holds the total revenue for that particular profile LQL is very powerful and we recommend working directly with our services team to get the most out of it We also have some great docs to give you some more detail on the pre built power As mentioned in our documentation LQL can be broken down into 6 key components SELECT Select data to be added to user profiles Including Maps Counts and other complex data types As an example from the above event we sent from the browser you might map status to the custom field current_status in order to unify data across streams In that case your select statement would be something like status AS current_status SHORTDESC Current Status of a User where status is the key name from the event stream and current_status is the field name that is used across multiple streams The SHORTDESC allows you to add more context around that particular field in order to simplify working with the data inside the Lytics admin FROM The stream to select from In our example case this would simply be FROM custom_data INTO This is USER for all user profiles technically you could create other types such as account INTO user WHERE Filters out entire records to not be included analyzed Bots Employees Test data In our example we might want to exclude anyone not from Winterfell WHERE city Winterfell BY What field are we going to identify this entity by This is among the most important aspects of LQL This defines which fields can be used as keys to merge data fragments together into a user profile For instance BY email OR userid Means that anytime an email address or userid matches regardless of its origin we can assume that is the same user thus merging all data associated with that key ALIAS The alias is primarily an internal value of how to reference this particular LQL statement When accessing LQL through the UI it would be referenced by this alias ALIAS custom_lql_example 4 Writing LQL Now that we know the basics of LQL we can put it all together in such a way that our sample data sent can be mapped into user fields Though this can be totally customized to your liking the end product might look something like Custom User Data Example SELECT userid AS user_id SHORTDESC Users ID email AS email SHORTDESC Email Address first_name AS first_name SHORTDESC First Name last_name AS last_name SHORTDESC Last Name set title AS title SHORTDESC Job Title set company AS company SHORTDESC Company Name phone AS phone SHORTDESC Phone Number age AS age SHORTDESC Age KIND INT gender AS gender SHORTDESC Gender city AS city SHORTDESC City state AS state SHORTDESC State status AS status SHORTDESC Current Status FROM custom_data INTO user BY email OR user_id ALIAS custom_data_example All that is left once we have completed writing is to save our LQL file This file name is completely up to you but should end with lql This will simplify the next step when we test our LQL before uploading it to our account 5 Testing LQL Install Lytics CLI Now that we have our LQL saved locally using the lql extension we are ready to test To test we will use the Lytics CLI tool The CLI tool and installation instructions can be found on Github Once we have installed the CLI tool lets verify it is working properly In the terminal of your choice run the following command s Bash lytics h If you are presented with a help menu you are good to go if an error comes back or something was not found we recommend going through the CLI tools docs again to get it properly configured Create a Sample CSV The Lytics CLI can test LQL in two ways First it will read some of the recent events from the target stream and show you the processed output This is valuable when it comes to altering existing LQL but may present challenges when you are writing net new LQL on data that has not been sent to Lytics yet For that use case we ll generate a CSV file to read from locally In addition though not demonstrated here Lytics watch can also use a JSON file locally in addition to the CSV CSV s can be created using a variety of tools When creating your own CSV from scratch just ensure that the first row in the CSV is used to define your field keys headers and then each following row represents an individual user s data _created _modified user_id email first_name last_name title company phone age gender city state status 2017 07 27T03 04 04 960952144Z 2017 07 27T03 04 04 960952144Z 1234 email protected Jon Snow King in the North House Stark 555 555 5555 21 m Winterfell Westeros planning When saving your CSV ensure the file name matches that of your lql with csv in place of lql For instance if your LQL file is named my_sample_file lql your CSV should be named my_sample_file csv and be located in the same directory The Lytics CLI will look for CSVs with the same file name as your LQL file Activate Lytics Watch Lytics watch will listen for changes to your LQL file When that happens it will take the CSV or recent data from your stream and process it using that newly altered LQL This translation is then output into your terminal in order to validate that all mappings are working properly JSON _created 2017 07 27T03 04 04 960952144Z _modified 2017 07 27T03 04 04 960952144Z user_id 1234 email email protected first_name Jon last_name Snow title King in the North company House Stark phone 555 555 5555 age 21 gender m city Winterfell state Westeros status planning 6 Uploading LQL to an Account NOTE Please be sure you are using the correct API token when performing the next operation To check which API you currently have set simply run the following in your terminal Shell echo LIOKEY The value output should match the API token pulled from your account If this is not the case please revisit the prerequisites section above for setting up you API token Query POST Request To upload the query you will make a simple POST request to our API Upon a successful upload you will get a response of 200 Lytics handles everything else from there Bash https POST https api lytics io api query access_token LIOKEY my_custom_lql_file_name lql 7 Importing a CSV Finally we can import our CSV using a standard cURL command Be sure to update your file and stream name in the example below Bash curl s H Authorization LIOKEY H Content type application csv data binary your_file_name csv https bulk lytics io collect bulk your_stream_name What s next We ve covered a basic example of getting custom data into Lytics This is very much just the beginning of how LQL can help improve your marketing teams efficiency We invite you to explore all of our technical docs and reach out to our services team for more in depth training on LQL and data management Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lql-data-import-basics#content",
    "title": "LQL & Data Import Basics",
    "chunk_text": "LQL Data Import Basics Let s take an in depth look at Lytics Query Language LQL and custom data imports We ll cover a basic overview of LQL itself how data identities are resolved across streams how you can map custom data and finally a few of the different ways to import custom data into your account Difficulty Intermediate TLDR Checkout the data upload documentation and the query documentation Prerequisites httpie optional a more user friendly version of cURL that we ll be using in this guide for readability Lytics Command Line Tool optional we ll show you how to execute commands with our CLI for each endpoint that is supported A valid API token for your Lytics account learn about managing API tokens For ease of use we suggest adding as an environment variable in your command line Bash export LIOKEY API Token 1 Lytics Data Processing Review Due to the intermediate nature of this course it is important that you already possess a strong understanding of segmentation user fields and data streams For those new to the Lytics data pipeline we recommend reviewing the following documentation before proceeding with the rest of the steps Introduction Lytics Data Collection Introduction Lytics User Profiles User Fields Introduction Lytics Audiences 2 Sending Data from a Website JavaScript When the Lytics JavaScript tag is installed we will automatically begin collecting standard data This includes page view level information such as URL browser Lytics Cookie Id etc In addition to the standard page view event the Lytics tag empowers marketers to push more sophisticated data related to the end user s behavior or identity An example of such data to a custom stream called custom_data might look something like JavaScript jstag send custom_data userid 1234 email email protected first_name Jon last_name Snow title King in the North company House Stark phone 555 555 5555 age 21 gender m city Winterfell state Westeros status planning While visiting your site that has the Lytics JavaScript tag installed you can leverage Chrome s developer tools specifically the console to manually fire this send request and pass the payload above to Lytics Keep in mind all data sent from your browser will automatically be associated with your current cookie When testing and playing it is best practice to always use a fresh incognito browser Chrome tools has great documentation if they are new to you as well Check out our JavaScript tag data collection docs for more details on the power of the Lytics tag 3 What is LQL Lytics Query Language LQL is the transformation layer that makes passing arbitrary non schema specific data to Lytics For the most basic implementations it is simply the translation of raw event data to user field data the Lytics schema In more advanced implementations complex calculations can be performed on events across streams to create sums maps and more An example might be rolling all purchase_total values for individual conversions into a purchase_total_over_time field that holds the total revenue for that particular profile LQL is very powerful and we recommend working directly with our services team to get the most out of it We also have some great docs to give you some more detail on the pre built power As mentioned in our documentation LQL can be broken down into 6 key components SELECT Select data to be added to user profiles Including Maps Counts and other complex data types As an example from the above event we sent from the browser you might map status to the custom field current_status in order to unify data across streams In that case your select statement would be something like status AS current_status SHORTDESC Current Status of a User where status is the key name from the event stream and current_status is the field name that is used across multiple streams The SHORTDESC allows you to add more context around that particular field in order to simplify working with the data inside the Lytics admin FROM The stream to select from In our example case this would simply be FROM custom_data INTO This is USER for all user profiles technically you could create other types such as account INTO user WHERE Filters out entire records to not be included analyzed Bots Employees Test data In our example we might want to exclude anyone not from Winterfell WHERE city Winterfell BY What field are we going to identify this entity by This is among the most important aspects of LQL This defines which fields can be used as keys to merge data fragments together into a user profile For instance BY email OR userid Means that anytime an email address or userid matches regardless of its origin we can assume that is the same user thus merging all data associated with that key ALIAS The alias is primarily an internal value of how to reference this particular LQL statement When accessing LQL through the UI it would be referenced by this alias ALIAS custom_lql_example 4 Writing LQL Now that we know the basics of LQL we can put it all together in such a way that our sample data sent can be mapped into user fields Though this can be totally customized to your liking the end product might look something like Custom User Data Example SELECT userid AS user_id SHORTDESC Users ID email AS email SHORTDESC Email Address first_name AS first_name SHORTDESC First Name last_name AS last_name SHORTDESC Last Name set title AS title SHORTDESC Job Title set company AS company SHORTDESC Company Name phone AS phone SHORTDESC Phone Number age AS age SHORTDESC Age KIND INT gender AS gender SHORTDESC Gender city AS city SHORTDESC City state AS state SHORTDESC State status AS status SHORTDESC Current Status FROM custom_data INTO user BY email OR user_id ALIAS custom_data_example All that is left once we have completed writing is to save our LQL file This file name is completely up to you but should end with lql This will simplify the next step when we test our LQL before uploading it to our account 5 Testing LQL Install Lytics CLI Now that we have our LQL saved locally using the lql extension we are ready to test To test we will use the Lytics CLI tool The CLI tool and installation instructions can be found on Github Once we have installed the CLI tool lets verify it is working properly In the terminal of your choice run the following command s Bash lytics h If you are presented with a help menu you are good to go if an error comes back or something was not found we recommend going through the CLI tools docs again to get it properly configured Create a Sample CSV The Lytics CLI can test LQL in two ways First it will read some of the recent events from the target stream and show you the processed output This is valuable when it comes to altering existing LQL but may present challenges when you are writing net new LQL on data that has not been sent to Lytics yet For that use case we ll generate a CSV file to read from locally In addition though not demonstrated here Lytics watch can also use a JSON file locally in addition to the CSV CSV s can be created using a variety of tools When creating your own CSV from scratch just ensure that the first row in the CSV is used to define your field keys headers and then each following row represents an individual user s data _created _modified user_id email first_name last_name title company phone age gender city state status 2017 07 27T03 04 04 960952144Z 2017 07 27T03 04 04 960952144Z 1234 email protected Jon Snow King in the North House Stark 555 555 5555 21 m Winterfell Westeros planning When saving your CSV ensure the file name matches that of your lql with csv in place of lql For instance if your LQL file is named my_sample_file lql your CSV should be named my_sample_file csv and be located in the same directory The Lytics CLI will look for CSVs with the same file name as your LQL file Activate Lytics Watch Lytics watch will listen for changes to your LQL file When that happens it will take the CSV or recent data from your stream and process it using that newly altered LQL This translation is then output into your terminal in order to validate that all mappings are working properly JSON _created 2017 07 27T03 04 04 960952144Z _modified 2017 07 27T03 04 04 960952144Z user_id 1234 email email protected first_name Jon last_name Snow title King in the North company House Stark phone 555 555 5555 age 21 gender m city Winterfell state Westeros status planning 6 Uploading LQL to an Account NOTE Please be sure you are using the correct API token when performing the next operation To check which API you currently have set simply run the following in your terminal Shell echo LIOKEY The value output should match the API token pulled from your account If this is not the case please revisit the prerequisites section above for setting up you API token Query POST Request To upload the query you will make a simple POST request to our API Upon a successful upload you will get a response of 200 Lytics handles everything else from there Bash https POST https api lytics io api query access_token LIOKEY my_custom_lql_file_name lql 7 Importing a CSV Finally we can import our CSV using a standard cURL command Be sure to update your file and stream name in the example below Bash curl s H Authorization LIOKEY H Content type application csv data binary your_file_name csv https bulk lytics io collect bulk your_stream_name What s next We ve covered a basic example of getting custom data into Lytics This is very much just the beginning of how LQL can help improve your marketing teams efficiency We invite you to explore all of our technical docs and reach out to our services team for more in depth training on LQL and data management Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/acquire-new-customers-with-lytics",
    "title": "https://docs.lytics.com/docs/acquire-new-customers-with-lytics",
    "chunk_text": "Customer acquisition is a core focus for all marketing departments Traditionally B2C marketers have relied upon specialist teams and agencies to drive strategy and spend money on ad placements However these teams often do not have access to key customer data and thus have to rely upon third party data and contextual guesswork Additionally these teams and agencies typically do not have access to personalize the customer experience on site There is a better way First party data can be extremely valuable for ad targeting on certain networks and marketers with the right tools can personalize their landing page experiences The following is the Lytics Playbook for acquiring new customers The framework There are two important concepts within acquisition marketing as it pertains to Lytics Driving traffic advertise to relevant audiences by using your first party data Generating leads deliver personalized experiences to new visitors to create leads How Lytics helps Lytics helps marketers to drive quality traffic by unleashing streams of powerful first party data to ad platforms such as Google Facebook and Yahoo which can leverage that data for building lookalike audiences How effective is this Most companies see their return on ad spend ROAS of campaigns on these platforms improve by 10 80 30 40 improvements are typical Using your first party data Lytics helps to improve the retargeting of your past visitors in two main ways by identifying their Affinities and calculating Behavioral Scores of who is most likely to return You can then use Lytics to target personalized experiences on site to encourage the right visitors to sign up for your lists Finally Lytics can help to identify the subscribers and visitors who could should be targeted with offers and content to drive a first purchase The playbook Step 1 Send all customers to ad platforms for suppression Why would you want to throw valuable acquisition dollars on a wasteful audience of existing customers The answer you don t But your teams are probably doing this today almost everyone is because they don t have a good source for this audience With Lytics you can send all customers to Facebook Google Verizon Yahoo and other platforms for suppression from lead generating advertising Effort Impact Developer Required Low Medium No Building the audience The key to building the right audience is to include all the customers and or free subscribers you don t want to spend money on If you are new to using Lytics see our Audiences documentation to get started The following examples skip the first few steps and jump right into building custom audiences For most companies an audience to suppress would resemble something like this Be sure to suppress active users on all your lists and products This will give the most comprehensive set of customers to limit from targeting Export a continuously updated file Export these audiences to the key ad platforms Google Ads Facebook and Yahoo Ads Build suppression in your ad campaigns And then create suppression lists in your ad campaigns See the respective help docs for more information on Facebook or Google Ads Step 2 Build lookalikes of your best customers If you re using lookalikes of your customer file as a targeting audience it s likely already the best performing audience in your ad campaigns Have you heard of the Pareto principle or the 80 20 Rule 80 of your revenue comes from 20 of your customers For most companies it s more like 90 10 If you can build lookalikes off your absolute best customers you ll help Google Facebook and Verizon Media to identify the absolute best audiences for your advertising Effort Impact Developer Required Low High No Building the audience In order to help train the big ad platforms as to who your best users are send the audience over that most resembles your goal audience For many companies this is likely to be people with a high lifetime value LTV or multiple purchases For example your audiences might look like this Note that there are several ways to determine high LTV so feel free to customize to your specific requirements The important concept is that you should be targeting lookalikes of your best customers not lookalikes of all customers Export a continuously updated file Export these audiences to the key ad platforms Google Ads Facebook and Yahoo Ads Build lookalikes in your campaigns Build a lookalike in Facebook or a similar audience lookalike in Google Ads Step 3 Setup data science based remarketing audiences The next step is to route audiences to the most impactful remarketing campaigns For example you may have certain creative stored in Google and Facebook that better address one content affinity over another Additionally you probably want to consider engagement based suppressions for remarketing over carpet bombing all of your site visitors Effort Impact Developer Required Low Medium No Building the audience Think through which content affinities best align to your creatives For example break out your core audiences based on content affinity At Lytics our customers tend to look like the following or the user might belong to this group You can and should use Any Affinity to start You ll note that users with any affinity for a topic show above average interest in that affinity To narrow your focus you might try limiting to High Affinity Also be thinking about the likelihood of a user to re engage Typically your time window of attention is very short Consider filtering for users with high Recency Descriptive Predictive Modeling of interactions may also play a role Your audience might look something like the following Exporting the audience Anonymous audiences are continuously exported from the Lytics JavaScript Tag to Facebook and Google Analytics tags Continue with step by step instructions to promote relevant content to users based on their interests Step 4 Collect emails As we mentioned at the start of this playbook acquisition marketers seldom have the ability to personalize web landing page experiences With Lytics they can The next step in upping your acquisition marketing game is to extend the lead generating efforts to your site with targeted email collection Effort Impact Developer Required Low medium Medium high No but useful for customizing the look and feel Building the audience Don t taint the user experience with untargeted email collection For known users suppress your email collection experiences Building email collection campaigns See the Experience editor doc for how to set up this type of campaign in Lytics The Pathfora SDK allows easy customization of the look and feel such as the example below Continue with step by step instructions on how to grow your email marketing list Step 5 Targeted offers Many prospective customers will need an additional nudge to make a first purchase The big advantage of using Lytics is the ability to target an offer consistently between site email and ads This consistent approach between channels frequently provides up to a 10 lift in conversion rates Effort Impact Developer Required Low medium Medium high No but useful for customizing the look and feel Building the audience Your audience can be limited to non customers for special incentives and may include engagement filters or price sensitivity e g if you re trying to sell to a known cheapskate This is a common starting audience As a final note keep in mind there are many other areas to cover including copy choices optimizations and common pitfalls to avoid These are beyond the scope of this playbook but should be taken into consideration while developing your marketing strategy to acquire new customers Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/acquire-new-customers-with-lytics#content",
    "title": "https://docs.lytics.com/docs/acquire-new-customers-with-lytics#content",
    "chunk_text": "Customer acquisition is a core focus for all marketing departments Traditionally B2C marketers have relied upon specialist teams and agencies to drive strategy and spend money on ad placements However these teams often do not have access to key customer data and thus have to rely upon third party data and contextual guesswork Additionally these teams and agencies typically do not have access to personalize the customer experience on site There is a better way First party data can be extremely valuable for ad targeting on certain networks and marketers with the right tools can personalize their landing page experiences The following is the Lytics Playbook for acquiring new customers The framework There are two important concepts within acquisition marketing as it pertains to Lytics Driving traffic advertise to relevant audiences by using your first party data Generating leads deliver personalized experiences to new visitors to create leads How Lytics helps Lytics helps marketers to drive quality traffic by unleashing streams of powerful first party data to ad platforms such as Google Facebook and Yahoo which can leverage that data for building lookalike audiences How effective is this Most companies see their return on ad spend ROAS of campaigns on these platforms improve by 10 80 30 40 improvements are typical Using your first party data Lytics helps to improve the retargeting of your past visitors in two main ways by identifying their Affinities and calculating Behavioral Scores of who is most likely to return You can then use Lytics to target personalized experiences on site to encourage the right visitors to sign up for your lists Finally Lytics can help to identify the subscribers and visitors who could should be targeted with offers and content to drive a first purchase The playbook Step 1 Send all customers to ad platforms for suppression Why would you want to throw valuable acquisition dollars on a wasteful audience of existing customers The answer you don t But your teams are probably doing this today almost everyone is because they don t have a good source for this audience With Lytics you can send all customers to Facebook Google Verizon Yahoo and other platforms for suppression from lead generating advertising Effort Impact Developer Required Low Medium No Building the audience The key to building the right audience is to include all the customers and or free subscribers you don t want to spend money on If you are new to using Lytics see our Audiences documentation to get started The following examples skip the first few steps and jump right into building custom audiences For most companies an audience to suppress would resemble something like this Be sure to suppress active users on all your lists and products This will give the most comprehensive set of customers to limit from targeting Export a continuously updated file Export these audiences to the key ad platforms Google Ads Facebook and Yahoo Ads Build suppression in your ad campaigns And then create suppression lists in your ad campaigns See the respective help docs for more information on Facebook or Google Ads Step 2 Build lookalikes of your best customers If you re using lookalikes of your customer file as a targeting audience it s likely already the best performing audience in your ad campaigns Have you heard of the Pareto principle or the 80 20 Rule 80 of your revenue comes from 20 of your customers For most companies it s more like 90 10 If you can build lookalikes off your absolute best customers you ll help Google Facebook and Verizon Media to identify the absolute best audiences for your advertising Effort Impact Developer Required Low High No Building the audience In order to help train the big ad platforms as to who your best users are send the audience over that most resembles your goal audience For many companies this is likely to be people with a high lifetime value LTV or multiple purchases For example your audiences might look like this Note that there are several ways to determine high LTV so feel free to customize to your specific requirements The important concept is that you should be targeting lookalikes of your best customers not lookalikes of all customers Export a continuously updated file Export these audiences to the key ad platforms Google Ads Facebook and Yahoo Ads Build lookalikes in your campaigns Build a lookalike in Facebook or a similar audience lookalike in Google Ads Step 3 Setup data science based remarketing audiences The next step is to route audiences to the most impactful remarketing campaigns For example you may have certain creative stored in Google and Facebook that better address one content affinity over another Additionally you probably want to consider engagement based suppressions for remarketing over carpet bombing all of your site visitors Effort Impact Developer Required Low Medium No Building the audience Think through which content affinities best align to your creatives For example break out your core audiences based on content affinity At Lytics our customers tend to look like the following or the user might belong to this group You can and should use Any Affinity to start You ll note that users with any affinity for a topic show above average interest in that affinity To narrow your focus you might try limiting to High Affinity Also be thinking about the likelihood of a user to re engage Typically your time window of attention is very short Consider filtering for users with high Recency Descriptive Predictive Modeling of interactions may also play a role Your audience might look something like the following Exporting the audience Anonymous audiences are continuously exported from the Lytics JavaScript Tag to Facebook and Google Analytics tags Continue with step by step instructions to promote relevant content to users based on their interests Step 4 Collect emails As we mentioned at the start of this playbook acquisition marketers seldom have the ability to personalize web landing page experiences With Lytics they can The next step in upping your acquisition marketing game is to extend the lead generating efforts to your site with targeted email collection Effort Impact Developer Required Low medium Medium high No but useful for customizing the look and feel Building the audience Don t taint the user experience with untargeted email collection For known users suppress your email collection experiences Building email collection campaigns See the Experience editor doc for how to set up this type of campaign in Lytics The Pathfora SDK allows easy customization of the look and feel such as the example below Continue with step by step instructions on how to grow your email marketing list Step 5 Targeted offers Many prospective customers will need an additional nudge to make a first purchase The big advantage of using Lytics is the ability to target an offer consistently between site email and ads This consistent approach between channels frequently provides up to a 10 lift in conversion rates Effort Impact Developer Required Low medium Medium high No but useful for customizing the look and feel Building the audience Your audience can be limited to non customers for special incentives and may include engagement filters or price sensitivity e g if you re trying to sell to a known cheapskate This is a common starting audience As a final note keep in mind there are many other areas to cover including copy choices optimizations and common pitfalls to avoid These are beyond the scope of this playbook but should be taken into consideration while developing your marketing strategy to acquire new customers Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/best-practices-for-personalizing-your-ad-or-search-landing-page",
    "title": "https://docs.lytics.com/docs/best-practices-for-personalizing-your-ad-or-search-landing-page",
    "chunk_text": "Today s most popular ad platforms such as Google and Facebook care a great deal about the overall user experience from the time they are shown an ad through their consumption of the landing page or associated content It is imperative that both the content and overall experience be considered when attempting to get the highest return from these platforms Personalized modals are no exception to this rule In fact when not approached strategically modals may negatively impact both conversion rates as well as overall impressions In the simplest of terms an auction occurs to determine which ad s are served to any given user Ads with bad experiences are penalized by either requiring a higher cost to serve or being eliminated entirely from the candidate pool to make room for ads with more potential Google Ad Rank Overview Additional Information About Google Ad Position and Ad Rank Facebook Ads Targeting Positioning Policy Facebook Low Quality or Disruptive Content Policy There is however a silver lining Gone are the days of blanket marketing initiatives which force an experience that may be optimal for the few while sacrificing the experience of the many With Lytics you gain an understanding of each individual s past behavior or lack thereof in real time This knowledge can and should be leveraged to deliver an experience that is relevant personalized and positive Which in turn is the best way to get the highest return from your ad and search initiatives The topic of ad and landing page optimization is broad We simply could not cover all important aspects here Rather we ve pulled together a handful of important considerations to keep in mind as you develop your marketing and personalization strategies In addition some may find the following content useful when attempting to triage a recent decline in impressions or other anomalies in performance 1 Targeting Though it may be obvious considering who you re targeting with modals is extremely important and often overlooked Put yourselves in the visitor s shoes If for example you are visiting a site for the very first time it is unlikely your experience will be positive if the vast majority of the site that you are visiting is covered with a giant offer modal as soon as the page loads Example of full page takeover on the second click of a user s first visit before they had a chance to explore the brand Example of half page takeover on user s first visit Added for comedic value First page view popup on article talking about discussion one of Google s many announcements to penalize such experiences Because Lytics allows you to target users based on profile details audience membership and behavior in real time perhaps you take a more subtle approach for new customers while being a bit more bold with visitors showing strong signs of conversion or history with your brand It is all too common on the web today to see companies take a spray and pray marketing approach where all visitors get blasted by intrusive data collection or offer modals at the beginning of their experience This is seen as a negative for nearly all search and ad providers many of which addressed this particular topic publicly Google Blog Post Addressing Mobile Popups 2 Modal Size Position To build on Targeting there may be cases where delivering a message at the beginning of a visit is important and actually improves the experience Consider the size and position of where that message is delivered Does it cover prime real estate requiring the user to alter their patterns in order to see the content they want Does it leverage a small slide out and offer a more efficient path to value while not restricting consumption There is no silver bullet here but testing various applications to determine the right balance can yield great results 3 Device The device being used is often not considered when attempting to locate the root cause of a negative change Keep in mind that modals and the site experience in general can be drastically different from device to device A modal that is not intrusive on desktop may cover the entire canvas on mobile Be sure to leverage your analytics tools to determine what devices are suffering from a drop off Follow up by altering the targeting and presentation based on device or consider shutting web personalization modals off entirely in the case of mobile Example of cookie acceptance modal on desktop small and not disruptive Example of cookie acceptance modal on mobile much larger and more disruptive 4 Time on Site Session Depth As we mentioned in our first example where the visitor received an offer immediately upon their first page view one thing to consider and test is when a modal is shown Lytics offers a variety of display options which allow you to only show the modal after a set amount of seconds after some amount of scrolling etc All of these levers can ensure a message is delivered after a visitor has made a connection and consumed enough content in order to make the modal experience positive 5 Inline Personalization The Lytics web personalization SDK is one method for delivering personalized communications on site It was designed to offer a light lift and quick time to value but may not meet the needs of every use case As such the Lytics JavaScript tag and various Personalization APIs can be leveraged in more custom applications to offer hyper targeting and personalized content in virtually any situation At the end of the day the user experience is everything and this should be a core focus of all marketing applications when looking to get the most out of ad and search related tools Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/best-practices-for-personalizing-your-ad-or-search-landing-page#content",
    "title": "https://docs.lytics.com/docs/best-practices-for-personalizing-your-ad-or-search-landing-page#content",
    "chunk_text": "Today s most popular ad platforms such as Google and Facebook care a great deal about the overall user experience from the time they are shown an ad through their consumption of the landing page or associated content It is imperative that both the content and overall experience be considered when attempting to get the highest return from these platforms Personalized modals are no exception to this rule In fact when not approached strategically modals may negatively impact both conversion rates as well as overall impressions In the simplest of terms an auction occurs to determine which ad s are served to any given user Ads with bad experiences are penalized by either requiring a higher cost to serve or being eliminated entirely from the candidate pool to make room for ads with more potential Google Ad Rank Overview Additional Information About Google Ad Position and Ad Rank Facebook Ads Targeting Positioning Policy Facebook Low Quality or Disruptive Content Policy There is however a silver lining Gone are the days of blanket marketing initiatives which force an experience that may be optimal for the few while sacrificing the experience of the many With Lytics you gain an understanding of each individual s past behavior or lack thereof in real time This knowledge can and should be leveraged to deliver an experience that is relevant personalized and positive Which in turn is the best way to get the highest return from your ad and search initiatives The topic of ad and landing page optimization is broad We simply could not cover all important aspects here Rather we ve pulled together a handful of important considerations to keep in mind as you develop your marketing and personalization strategies In addition some may find the following content useful when attempting to triage a recent decline in impressions or other anomalies in performance 1 Targeting Though it may be obvious considering who you re targeting with modals is extremely important and often overlooked Put yourselves in the visitor s shoes If for example you are visiting a site for the very first time it is unlikely your experience will be positive if the vast majority of the site that you are visiting is covered with a giant offer modal as soon as the page loads Example of full page takeover on the second click of a user s first visit before they had a chance to explore the brand Example of half page takeover on user s first visit Added for comedic value First page view popup on article talking about discussion one of Google s many announcements to penalize such experiences Because Lytics allows you to target users based on profile details audience membership and behavior in real time perhaps you take a more subtle approach for new customers while being a bit more bold with visitors showing strong signs of conversion or history with your brand It is all too common on the web today to see companies take a spray and pray marketing approach where all visitors get blasted by intrusive data collection or offer modals at the beginning of their experience This is seen as a negative for nearly all search and ad providers many of which addressed this particular topic publicly Google Blog Post Addressing Mobile Popups 2 Modal Size Position To build on Targeting there may be cases where delivering a message at the beginning of a visit is important and actually improves the experience Consider the size and position of where that message is delivered Does it cover prime real estate requiring the user to alter their patterns in order to see the content they want Does it leverage a small slide out and offer a more efficient path to value while not restricting consumption There is no silver bullet here but testing various applications to determine the right balance can yield great results 3 Device The device being used is often not considered when attempting to locate the root cause of a negative change Keep in mind that modals and the site experience in general can be drastically different from device to device A modal that is not intrusive on desktop may cover the entire canvas on mobile Be sure to leverage your analytics tools to determine what devices are suffering from a drop off Follow up by altering the targeting and presentation based on device or consider shutting web personalization modals off entirely in the case of mobile Example of cookie acceptance modal on desktop small and not disruptive Example of cookie acceptance modal on mobile much larger and more disruptive 4 Time on Site Session Depth As we mentioned in our first example where the visitor received an offer immediately upon their first page view one thing to consider and test is when a modal is shown Lytics offers a variety of display options which allow you to only show the modal after a set amount of seconds after some amount of scrolling etc All of these levers can ensure a message is delivered after a visitor has made a connection and consumed enough content in order to make the modal experience positive 5 Inline Personalization The Lytics web personalization SDK is one method for delivering personalized communications on site It was designed to offer a light lift and quick time to value but may not meet the needs of every use case As such the Lytics JavaScript tag and various Personalization APIs can be leveraged in more custom applications to offer hyper targeting and personalized content in virtually any situation At the end of the day the user experience is everything and this should be a core focus of all marketing applications when looking to get the most out of ad and search related tools Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/capture-more-information-from-qualified-leads",
    "title": "https://docs.lytics.com/docs/capture-more-information-from-qualified-leads",
    "chunk_text": "Converting a user from unknown to known is a key part of many marketing journeys You can use Lytics web Experiences to capture user information While email is a great starting point you may want to collect a bit more information from your user when they subscribe to your brand In this guide you will learn how to create a widget with a custom form component The example will offer users to subscribe to an newsletter email and will include an email input field as well as list of checkboxes that can be used to select which topics to subscribe to You can download the complete JavaScript configuration CSS and API override command for this example from the Github examples repository Currently in the Lytics UI you may only choose to include the following fields in your capture leads form Email Email input Name Text input Job Title Text input Company Text input Phone Number Text input Message Text area Country Select box However with the Pathfora SDK or using API overrides you can include any custom field of the following types Text input Email input Text area Select box Checkboxes Radio buttons JavaScript Configuration Begin with a configuration for a form widget Without defining any field customizations Pathfora will default to using legacy form elements However you will be using custom form elements in this guide JavaScript var customFormWidget window pathfora Form id custom form widget layout slideout position bottom left className custom form widget headline Sign up for our Newsletter okMessage Subscribe window pathfora initializeWidgets customFormWidget This config will generate a simple slideout with a form containing some default fields Once you have an idea of what form elements you want to include in your widget you may use the form builder drag and drop UI provided in the Pathfora documentation to construct the form you wish to display Each field can be marked as required and may have a label and name used for as the primary key for tracking the field in Lytics and other external systems Text fields may also include placeholder text and for fields with multiple options you may define the display text and value of each option Once you click Save the builder will output the formElements field that you can simply copy and paste into your widget config This UI is intended to help you save time when constructing configurations with custom forms JavaScript var customFormWidget window pathfora Form widget configuration formElements type text required true label Email Address name email type checkbox group required true label Which feeds would you like to subscribe to name subscription_feeds values label Beauty Perfumes value beauty label Electronics value electronics label Fashion value fashion Styling Tweaks You may style the form using custom CSS The example in this guide applies some small CSS changes to adjust the size and spacing of elements within the widget Remember you can download the code for this example to get the complete JavaScript CSS and API override This can act as a starting point for your own custom form widget Once you ve tested and are happy with the look and feel of your form slideout it s time for the most important step defining the Lytics audience that should receive this experience Defining the Lytics Audience The example widget in this guide will be targeted at an audience of anonymous users with a high intensity Remember to update your config with the audience slug you wish to serve the widget to Alternatively you may build your widget as a web personalize Experience with the Capture Leads tactic in the Lytics UI and apply the formElements setting with an API override Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/capture-more-information-from-qualified-leads#content",
    "title": "https://docs.lytics.com/docs/capture-more-information-from-qualified-leads#content",
    "chunk_text": "Converting a user from unknown to known is a key part of many marketing journeys You can use Lytics web Experiences to capture user information While email is a great starting point you may want to collect a bit more information from your user when they subscribe to your brand In this guide you will learn how to create a widget with a custom form component The example will offer users to subscribe to an newsletter email and will include an email input field as well as list of checkboxes that can be used to select which topics to subscribe to You can download the complete JavaScript configuration CSS and API override command for this example from the Github examples repository Currently in the Lytics UI you may only choose to include the following fields in your capture leads form Email Email input Name Text input Job Title Text input Company Text input Phone Number Text input Message Text area Country Select box However with the Pathfora SDK or using API overrides you can include any custom field of the following types Text input Email input Text area Select box Checkboxes Radio buttons JavaScript Configuration Begin with a configuration for a form widget Without defining any field customizations Pathfora will default to using legacy form elements However you will be using custom form elements in this guide JavaScript var customFormWidget window pathfora Form id custom form widget layout slideout position bottom left className custom form widget headline Sign up for our Newsletter okMessage Subscribe window pathfora initializeWidgets customFormWidget This config will generate a simple slideout with a form containing some default fields Once you have an idea of what form elements you want to include in your widget you may use the form builder drag and drop UI provided in the Pathfora documentation to construct the form you wish to display Each field can be marked as required and may have a label and name used for as the primary key for tracking the field in Lytics and other external systems Text fields may also include placeholder text and for fields with multiple options you may define the display text and value of each option Once you click Save the builder will output the formElements field that you can simply copy and paste into your widget config This UI is intended to help you save time when constructing configurations with custom forms JavaScript var customFormWidget window pathfora Form widget configuration formElements type text required true label Email Address name email type checkbox group required true label Which feeds would you like to subscribe to name subscription_feeds values label Beauty Perfumes value beauty label Electronics value electronics label Fashion value fashion Styling Tweaks You may style the form using custom CSS The example in this guide applies some small CSS changes to adjust the size and spacing of elements within the widget Remember you can download the code for this example to get the complete JavaScript CSS and API override This can act as a starting point for your own custom form widget Once you ve tested and are happy with the look and feel of your form slideout it s time for the most important step defining the Lytics audience that should receive this experience Defining the Lytics Audience The example widget in this guide will be targeted at an audience of anonymous users with a high intensity Remember to update your config with the audience slug you wish to serve the widget to Alternatively you may build your widget as a web personalize Experience with the Capture Leads tactic in the Lytics UI and apply the formElements setting with an API override Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-modularization-in-email-with-lytics-audiences",
    "title": "https://docs.lytics.com/docs/content-modularization-in-email-with-lytics-audiences",
    "chunk_text": "Running a complex nurture program can be difficult to manage especially if you re using countless static email templates Luckily most email service providers ESPs offer a templating language to allow for dynamic user data to be embedded in an email Dynamic templates are not only useful for transactional emails but you can build them to use valuable Lytics user data such as audience membership and other user profile fields to simplify your email marketing programs all while personalizing the emails to increase user engagement This guide will walk through how to modularize major components of an email based on Lytics audience membership using Lytics and a single Campaign Monitor template This technique is applicable to most ESPs that Lytics integrates with just be sure to refer to the your ESP s documentation for dynamic templating Before you begin You should have a generic HTML email template set up in your ESP This guide uses an email template promoting new products of a shoes retailer and personalizes it based on the types of shoes the user is interested in Think about what parts of the email you would like to change based on audience membership Build your audiences In Lytics you ll need a target audience the group of users to send the email to and one or more additional audiences that the email can be personalized for In this guide we have Promotional List as the target audience and two audiences built with content affinity Interested in Dress Shoes and Interested in Athletic Shoes which we will build out separate content pieces for Sync the audience to your email tool Once you have your audiences ready you will sync your target audience to an ESP This can be done with a Lytics export integration In this guide we will export to Campaign Monitor If you re using another ESP browse our list of integrations and the read the instructions for exporting an audience Select Promotional List as the target audience to sync For Campaign Monitor the other two audiences will be recorded in a custom field called LyticsAudiences This is the field we will use in the template to determine what to show and hide for the user Regardless of the provider you choose you should see the Lytics users in your email tool not long after you click the Start Export button Modify your email template In this example the header of the email will change based on audience membership For every element we want to personalize we need to have three versions of the content Users in the Interested in Dress Shoes audience Users in the Interested in Athletic Shoes audience Users in the Promotional List who have not shown interest in either shoe type generic promotion If a user is interested in both dress shoes and athletic shoes we can prioritize which to show based on the order of the conditionals we will set up in the template We will opt to promote dress shoes in this example for that case Follow these steps to personalize your email template in this manor Open your template in an HTML editor locate the text image or HTML element you want to change based on audience membership Use the custom LyticsAudience field and conditional logic to bind your HTML content in if else statements Take a look at the following example which the example template uses to change the text on the banner of the example email HTML custom headline if LyticsAudiences Interested in Dress Shoes Dress shoes for any occasion elseif LyticsAudiences Interested in Athletic Shoes Kick start your summer with new shoes else Shoes of all shapes and sizes you ll love endif Continue to edit your template to modularize the content of your email In our example we also switch out the image in the banner as well as the CTA link and text based on audience membership HTML custom image if LyticsAudiences Interested in Dress Shoes img src dress shoes png alt dress shoes elseif LyticsAudiences Interested in Athletic Shoes img src athletic shoes png alt athletic shoes else img src default shoes png alt shoes endif custom CTA if LyticsAudiences Interested in Dress Shoes a href https shoepalace com products dress shoes Shop Dress Shoes a elseif LyticsAudiences Interested in Athletic Shoes a href https shoepalace com products athletic shoes Shop Athletic Shoes a else a href https shoepalace com products shoes Shop New Shoes a endif In the next step you will be able to see the rendering of the templates in each of the three contexts Send your campaign to the target audience Create a new campaign in Campaign Monitor On the Content step upload the HTML template you ve created that includes your conditionals After you ve successfully uploaded you can preview the email and toggle between the LyticsAudience dynamic content options to view each of the expected outputs On the Recipients step be sure to select the audience you exported to Campaign Monitor from Lytics Continue on to the Delivery step You can send a test email to yourself and or schedule your campaign for delivery This guide has demonstrated how you can send three distinct personalized emails to users based on their interests in a single campaign Instead of sending a generic email to all your customers you can send an email that speaks to a user s interests This is just the tip of iceberg think of how you can personalize and modularize your email templates for more advanced use cases Conditionals can be used for any number of audiences and you can show and hide entire content sections in an email based on audience membership Your Lytics representative can help If you have any further questions or would like to talk through use cases reach out to the Lytics team Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/content-modularization-in-email-with-lytics-audiences#content",
    "title": "https://docs.lytics.com/docs/content-modularization-in-email-with-lytics-audiences#content",
    "chunk_text": "Running a complex nurture program can be difficult to manage especially if you re using countless static email templates Luckily most email service providers ESPs offer a templating language to allow for dynamic user data to be embedded in an email Dynamic templates are not only useful for transactional emails but you can build them to use valuable Lytics user data such as audience membership and other user profile fields to simplify your email marketing programs all while personalizing the emails to increase user engagement This guide will walk through how to modularize major components of an email based on Lytics audience membership using Lytics and a single Campaign Monitor template This technique is applicable to most ESPs that Lytics integrates with just be sure to refer to the your ESP s documentation for dynamic templating Before you begin You should have a generic HTML email template set up in your ESP This guide uses an email template promoting new products of a shoes retailer and personalizes it based on the types of shoes the user is interested in Think about what parts of the email you would like to change based on audience membership Build your audiences In Lytics you ll need a target audience the group of users to send the email to and one or more additional audiences that the email can be personalized for In this guide we have Promotional List as the target audience and two audiences built with content affinity Interested in Dress Shoes and Interested in Athletic Shoes which we will build out separate content pieces for Sync the audience to your email tool Once you have your audiences ready you will sync your target audience to an ESP This can be done with a Lytics export integration In this guide we will export to Campaign Monitor If you re using another ESP browse our list of integrations and the read the instructions for exporting an audience Select Promotional List as the target audience to sync For Campaign Monitor the other two audiences will be recorded in a custom field called LyticsAudiences This is the field we will use in the template to determine what to show and hide for the user Regardless of the provider you choose you should see the Lytics users in your email tool not long after you click the Start Export button Modify your email template In this example the header of the email will change based on audience membership For every element we want to personalize we need to have three versions of the content Users in the Interested in Dress Shoes audience Users in the Interested in Athletic Shoes audience Users in the Promotional List who have not shown interest in either shoe type generic promotion If a user is interested in both dress shoes and athletic shoes we can prioritize which to show based on the order of the conditionals we will set up in the template We will opt to promote dress shoes in this example for that case Follow these steps to personalize your email template in this manor Open your template in an HTML editor locate the text image or HTML element you want to change based on audience membership Use the custom LyticsAudience field and conditional logic to bind your HTML content in if else statements Take a look at the following example which the example template uses to change the text on the banner of the example email HTML custom headline if LyticsAudiences Interested in Dress Shoes Dress shoes for any occasion elseif LyticsAudiences Interested in Athletic Shoes Kick start your summer with new shoes else Shoes of all shapes and sizes you ll love endif Continue to edit your template to modularize the content of your email In our example we also switch out the image in the banner as well as the CTA link and text based on audience membership HTML custom image if LyticsAudiences Interested in Dress Shoes img src dress shoes png alt dress shoes elseif LyticsAudiences Interested in Athletic Shoes img src athletic shoes png alt athletic shoes else img src default shoes png alt shoes endif custom CTA if LyticsAudiences Interested in Dress Shoes a href https shoepalace com products dress shoes Shop Dress Shoes a elseif LyticsAudiences Interested in Athletic Shoes a href https shoepalace com products athletic shoes Shop Athletic Shoes a else a href https shoepalace com products shoes Shop New Shoes a endif In the next step you will be able to see the rendering of the templates in each of the three contexts Send your campaign to the target audience Create a new campaign in Campaign Monitor On the Content step upload the HTML template you ve created that includes your conditionals After you ve successfully uploaded you can preview the email and toggle between the LyticsAudience dynamic content options to view each of the expected outputs On the Recipients step be sure to select the audience you exported to Campaign Monitor from Lytics Continue on to the Delivery step You can send a test email to yourself and or schedule your campaign for delivery This guide has demonstrated how you can send three distinct personalized emails to users based on their interests in a single campaign Instead of sending a generic email to all your customers you can send an email that speaks to a user s interests This is just the tip of iceberg think of how you can personalize and modularize your email templates for more advanced use cases Conditionals can be used for any number of audiences and you can show and hide entire content sections in an email based on audience membership Your Lytics representative can help If you have any further questions or would like to talk through use cases reach out to the Lytics team Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/customize-your-web-experiences-with-branded-images",
    "title": "https://docs.lytics.com/docs/customize-your-web-experiences-with-branded-images",
    "chunk_text": "A well designed Experience can really capture a user s attention and often images are a key component to design Lytics web Experience allow for a single image to be included but out of the box there is not much flexibility that s where custom CSS can help In this guide you will learn how to create a widget with a stylized image component Images are a natively supported feature of the Pathfora SDK and Lytics web Experiences however the default styles for images are rigid This guide will explore a few different methods on how to customize images for your web Experiences You can download the complete JavaScript configuration and CSS for this example from the GitHub examples repository Custom Image Approach There are three ways you might approach adding an image to a web Experience or Pathfora widget Setting a background image with custom CSS Using the natively supported image feature with some custom CSS to adjust the size and placement of the image relative to the text of the widget Adding an image via inline HTML to the message or headline field This guide will discuss the implementation of options 2 and 3 Note that option 3 is only available for widgets built directly through the SDK Inline img elements can not be added in the Lytics Experience editor JavaScript Configuration Using the Default Image Feature To use the native image capability in Pathfora simply add the variant and image settings to a basic widget configuration to get started JavaScript var imageWidget window pathfora Message id image widget layout slideout position bottom right className image widget headline Save 10 msg 24 hour sale on all Apple mobile phone products image assets iphone modal png variant 2 okShow true okMessage Save Now cancelShow false window pathfora initializeWidgets imageWidget This config will generate a simple slideout with a headline message and CTA and a small circular image above the text Adding an image in this way is natively supported for web Experiences in the design step of the editor Using an Inline Image You could also present an image within the text content of the widget by adding an img HTML element in the headline or message of the widget JavaScript var imageWidget window pathfora Message widget configuration msg img src assets iphone mini png class pf widget img inline alt iPhone 24 hour sale on all Apple mobile phone products You may want to add a custom class name to this element to help style it with CSS later Note As mentioned above using HTML inline images in this manor is not compatible with web Experiences created through the Lytics UI not even with API overrides This approach only works if you are implementing widgets with the SDK directly The complete code example in this guide will contain both a large feature image using the native Pathfora setting and a small inline image Styling the Image Slideout With some additional CSS work you can style images of both types to fit the slideout Styling the Default Image Setting The image generated by the image setting in the config has the class name pf widget img In the CSS to select this element you will also need an additional level of specificity to ensure that your styles will override the default Pathfora styles for images The example below specifies the pf widget variant 2 class name in addition the the standard custom class name of your widget CSS pf widget pf widget variant 2 image widget pf widget img border radius 0 width 100 height auto top 0px left 0px margin 0px These styles make the image span the full width of the widget and position it at the top Next you can adjust the text to appear below the image by applying a margin to the headline Remember that CSS specificity may be important here as well CSS pf widget pf widget variant 2 image widget pf widget content pf widget headline margin top 190px Lastly we ll need to adjust the x button in the corner of the modal to display prominently above the image CSS pf widget pf widget variant 2 image widget pf widget img existing styles z index 0 pf widget image widget pf widget close color white z index 1 Styling an Inline Image Now to style the inline image select the custom class name you defined The example in this guide floats the image left of the text of the widget CSS pf widget image widget pf widget img inline float left width 25px margin right 20px pf widget image widget pf widget message text align left Remember you can download the code for this example to get the completed JavaScript and CSS This can act as a starting point for your own custom image widget Defining the Lytics Audience Once you ve tested and are happy with the look and feel of your image slideout it s time for the most important step defining the Lytics audience that should receive this Experience The example widget in this guide is targeted at an audience of users with a high momentum and some affinity for iPhones the featured product of the slideout Remember to update your config with the audience ID you wish to serve the widget to Alternatively as mentioned above the image feature is natively supported by the Lytics web Experiences You would simply need to add the CSS to your website to customize the image of your widget Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/customize-your-web-experiences-with-branded-images#content",
    "title": "https://docs.lytics.com/docs/customize-your-web-experiences-with-branded-images#content",
    "chunk_text": "A well designed Experience can really capture a user s attention and often images are a key component to design Lytics web Experience allow for a single image to be included but out of the box there is not much flexibility that s where custom CSS can help In this guide you will learn how to create a widget with a stylized image component Images are a natively supported feature of the Pathfora SDK and Lytics web Experiences however the default styles for images are rigid This guide will explore a few different methods on how to customize images for your web Experiences You can download the complete JavaScript configuration and CSS for this example from the GitHub examples repository Custom Image Approach There are three ways you might approach adding an image to a web Experience or Pathfora widget Setting a background image with custom CSS Using the natively supported image feature with some custom CSS to adjust the size and placement of the image relative to the text of the widget Adding an image via inline HTML to the message or headline field This guide will discuss the implementation of options 2 and 3 Note that option 3 is only available for widgets built directly through the SDK Inline img elements can not be added in the Lytics Experience editor JavaScript Configuration Using the Default Image Feature To use the native image capability in Pathfora simply add the variant and image settings to a basic widget configuration to get started JavaScript var imageWidget window pathfora Message id image widget layout slideout position bottom right className image widget headline Save 10 msg 24 hour sale on all Apple mobile phone products image assets iphone modal png variant 2 okShow true okMessage Save Now cancelShow false window pathfora initializeWidgets imageWidget This config will generate a simple slideout with a headline message and CTA and a small circular image above the text Adding an image in this way is natively supported for web Experiences in the design step of the editor Using an Inline Image You could also present an image within the text content of the widget by adding an img HTML element in the headline or message of the widget JavaScript var imageWidget window pathfora Message widget configuration msg img src assets iphone mini png class pf widget img inline alt iPhone 24 hour sale on all Apple mobile phone products You may want to add a custom class name to this element to help style it with CSS later Note As mentioned above using HTML inline images in this manor is not compatible with web Experiences created through the Lytics UI not even with API overrides This approach only works if you are implementing widgets with the SDK directly The complete code example in this guide will contain both a large feature image using the native Pathfora setting and a small inline image Styling the Image Slideout With some additional CSS work you can style images of both types to fit the slideout Styling the Default Image Setting The image generated by the image setting in the config has the class name pf widget img In the CSS to select this element you will also need an additional level of specificity to ensure that your styles will override the default Pathfora styles for images The example below specifies the pf widget variant 2 class name in addition the the standard custom class name of your widget CSS pf widget pf widget variant 2 image widget pf widget img border radius 0 width 100 height auto top 0px left 0px margin 0px These styles make the image span the full width of the widget and position it at the top Next you can adjust the text to appear below the image by applying a margin to the headline Remember that CSS specificity may be important here as well CSS pf widget pf widget variant 2 image widget pf widget content pf widget headline margin top 190px Lastly we ll need to adjust the x button in the corner of the modal to display prominently above the image CSS pf widget pf widget variant 2 image widget pf widget img existing styles z index 0 pf widget image widget pf widget close color white z index 1 Styling an Inline Image Now to style the inline image select the custom class name you defined The example in this guide floats the image left of the text of the widget CSS pf widget image widget pf widget img inline float left width 25px margin right 20px pf widget image widget pf widget message text align left Remember you can download the code for this example to get the completed JavaScript and CSS This can act as a starting point for your own custom image widget Defining the Lytics Audience Once you ve tested and are happy with the look and feel of your image slideout it s time for the most important step defining the Lytics audience that should receive this Experience The example widget in this guide is targeted at an audience of users with a high momentum and some affinity for iPhones the featured product of the slideout Remember to update your config with the audience ID you wish to serve the widget to Alternatively as mentioned above the image feature is natively supported by the Lytics web Experiences You would simply need to add the CSS to your website to customize the image of your widget Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/deliver-targeted-content",
    "title": "https://docs.lytics.com/docs/deliver-targeted-content",
    "chunk_text": "Lytics makes it possible to recommend content to a user based on their affinity for certain types of content linking them directly to the content they value increasing engagement Lytics content affinity engine automatically scans and categorizes the content that is associated with each page on your site producing a topic taxonomy Users who visit each page are then mapped against that semantic understanding of your site s content producing a user affinity score for each content topic within your site You can create a Recommend Content Experience by following these steps but the keys to creating an effective recommended content campaign are building an audience and content collection Build a Content Affinity Audience You can use the Content Affinity tab of the audience builder to build an audience of users who show interest in a particular group of Topics what Lytics calls an Affinity Then that audience can be used to target users with the desired Affinity in a personalized Experience From your Lytics dashboard select Audience Click Create New Audience Select the Content Affinity tab Select the Affinity you would like to target Any Affinity is selected by default You can adjust the affinity score range to refine the users who will be targeted or select one of the predefined ranges In the Name your audience field give your audience a descriptive name Select Enable API Access In the ID field enter an audience ID Click Save Audience with any affinity for articles about data science This audience can now be used in a Recommend Content or any other campaign to target users who have the desired level of interest for your chosen Affinity You can combine multiple rules and rulesets to create highly refined audiences You are also not limited to audiences based on content affinity see the Audiences section for other options Content Collections Content collections give you the ability to group content together that you can then recommend in your campaigns Collections can be a group of articles related by Affinities Topics recently published author hand picked by you or a combination of any of these criteria In addition these collections can be dynamic Content in a dynamic collection will be added to or removed automatically when they match or fail to match your criteria For more information see Content Collections Content collection grouping article related to data science on learn lytics com Build Your Campaign Next you ll need to navigate to the Experiences tab and pick the Recommend Content tactic for Lytics The first step will be to choose the content collection you want to feature Next select whether you want this to be based on a user s interests Highest Affinity content or product freshness Freshness or what a user has engaged with most recently Last Interaction Don t forget to give your Experience a name See our Experience editor documentation for step by step instructions Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/deliver-targeted-content#content",
    "title": "https://docs.lytics.com/docs/deliver-targeted-content#content",
    "chunk_text": "Lytics makes it possible to recommend content to a user based on their affinity for certain types of content linking them directly to the content they value increasing engagement Lytics content affinity engine automatically scans and categorizes the content that is associated with each page on your site producing a topic taxonomy Users who visit each page are then mapped against that semantic understanding of your site s content producing a user affinity score for each content topic within your site You can create a Recommend Content Experience by following these steps but the keys to creating an effective recommended content campaign are building an audience and content collection Build a Content Affinity Audience You can use the Content Affinity tab of the audience builder to build an audience of users who show interest in a particular group of Topics what Lytics calls an Affinity Then that audience can be used to target users with the desired Affinity in a personalized Experience From your Lytics dashboard select Audience Click Create New Audience Select the Content Affinity tab Select the Affinity you would like to target Any Affinity is selected by default You can adjust the affinity score range to refine the users who will be targeted or select one of the predefined ranges In the Name your audience field give your audience a descriptive name Select Enable API Access In the ID field enter an audience ID Click Save Audience with any affinity for articles about data science This audience can now be used in a Recommend Content or any other campaign to target users who have the desired level of interest for your chosen Affinity You can combine multiple rules and rulesets to create highly refined audiences You are also not limited to audiences based on content affinity see the Audiences section for other options Content Collections Content collections give you the ability to group content together that you can then recommend in your campaigns Collections can be a group of articles related by Affinities Topics recently published author hand picked by you or a combination of any of these criteria In addition these collections can be dynamic Content in a dynamic collection will be added to or removed automatically when they match or fail to match your criteria For more information see Content Collections Content collection grouping article related to data science on learn lytics com Build Your Campaign Next you ll need to navigate to the Experiences tab and pick the Recommend Content tactic for Lytics The first step will be to choose the content collection you want to feature Next select whether you want this to be based on a user s interests Highest Affinity content or product freshness Freshness or what a user has engaged with most recently Last Interaction Don t forget to give your Experience a name See our Experience editor documentation for step by step instructions Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/drive-email-capture-engagement-with-content",
    "title": "https://docs.lytics.com/docs/drive-email-capture-engagement-with-content",
    "chunk_text": "Content recommendations are a powerful direct method for driving engagement of anonymous users with the goal of capturing their email address Using Lytics you can create audiences to present personalized ad sets through marketing platforms like Google Ads and Facebook You can take the personalization one step further Lytics can power inline content that serve content based on each user s personal audience membership and content affinity Leveraging user behavior Lytics uses data science scores to move users into preconfigured audiences based on their behavior This use case relies on a user s frequency recency and intensity scores to identify those who are highly engaged with your content generally and through further refining individual content items topics or collections Building your target audience Users can be members of preconfigured audiences determined by a combination of characteristics Anonymous Deeply Engaged For this use case we want to combine the characteristic Email Capture Status Unknown email with the behavioral audience Lytics Deeply Engaged using the AND rule This new audience will target users without email addresses i e anonymous users who are deeply engaged with your content What content that user is engaged with will vary and each user can receive different ads or emails based off the content they engage with the most Using fields to refine your audience While all the users in your Anonymous Deeply Engaged audience are engaged with your content different behaviors have led to this outcome Some may have consistently engaged over a long time period while others may have consumed content over a relatively short period of time Using the frequency score you could present message or recommend content specific to longtime anonymous engaged users in effort to convert them to know users Similarly the recency score can be used to target new but engaged users with a specific experience to convert them Activating Your Audience Your Anonymous Deeply Engaged audience is a great target audience for site personalizations content recommendations and well timed email capture forms Delivering targeted content To deliver the content most relevant to a user s interest you can build additional audiences based on Anonymous Deeply Engaged with added content affinity filters See Building Audiences Content Affinity to learn how to add content affinity rules to new and existing audiences Driving email capture Your Anonymous Deeply Engaged audience is an excellent target to capture email address and convert users to a known status See our build Collect Leads Campaign documentation to learn how Individualized content recommendations Lytics offers a Content API that provides recommendations based on user content affinity Our Developer Academy article Inline Content Recommendations and our Content API documentation provide guidance on delivering content recommendations programmatically These documents are targeted for a more technical audience so please contact Lytics support if you need some guidance Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/drive-email-capture-engagement-with-content#content",
    "title": "https://docs.lytics.com/docs/drive-email-capture-engagement-with-content#content",
    "chunk_text": "Content recommendations are a powerful direct method for driving engagement of anonymous users with the goal of capturing their email address Using Lytics you can create audiences to present personalized ad sets through marketing platforms like Google Ads and Facebook You can take the personalization one step further Lytics can power inline content that serve content based on each user s personal audience membership and content affinity Leveraging user behavior Lytics uses data science scores to move users into preconfigured audiences based on their behavior This use case relies on a user s frequency recency and intensity scores to identify those who are highly engaged with your content generally and through further refining individual content items topics or collections Building your target audience Users can be members of preconfigured audiences determined by a combination of characteristics Anonymous Deeply Engaged For this use case we want to combine the characteristic Email Capture Status Unknown email with the behavioral audience Lytics Deeply Engaged using the AND rule This new audience will target users without email addresses i e anonymous users who are deeply engaged with your content What content that user is engaged with will vary and each user can receive different ads or emails based off the content they engage with the most Using fields to refine your audience While all the users in your Anonymous Deeply Engaged audience are engaged with your content different behaviors have led to this outcome Some may have consistently engaged over a long time period while others may have consumed content over a relatively short period of time Using the frequency score you could present message or recommend content specific to longtime anonymous engaged users in effort to convert them to know users Similarly the recency score can be used to target new but engaged users with a specific experience to convert them Activating Your Audience Your Anonymous Deeply Engaged audience is a great target audience for site personalizations content recommendations and well timed email capture forms Delivering targeted content To deliver the content most relevant to a user s interest you can build additional audiences based on Anonymous Deeply Engaged with added content affinity filters See Building Audiences Content Affinity to learn how to add content affinity rules to new and existing audiences Driving email capture Your Anonymous Deeply Engaged audience is an excellent target to capture email address and convert users to a known status See our build Collect Leads Campaign documentation to learn how Individualized content recommendations Lytics offers a Content API that provides recommendations based on user content affinity Our Developer Academy article Inline Content Recommendations and our Content API documentation provide guidance on delivering content recommendations programmatically These documents are targeted for a more technical audience so please contact Lytics support if you need some guidance Updated 12 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/drive-mobile-app-downloads-with-lytics",
    "title": "https://docs.lytics.com/docs/drive-mobile-app-downloads-with-lytics",
    "chunk_text": "A common marketing use case to improve mobile engagement is to create journeys that drive downloads of your brand s native mobile applications Lytics offers a powerful capability to build audiences of anyone who has previously browsed your sites using a mobile device since the Lytics JavaScript tag was placed This audience can be a useful target in Google and Facebook as well as other ad platforms for driving mobile app installations Building the audience From the Lytics dashboard select Audience and then Create New Audience Using a Custom Rule build an audience of users with Has Accessed Mobile Web as t true This audience will include anyone who has reached your site from a mobile device Note You do not need any identifying information for this audience Be sure to select the Enable API Access checkbox This lets Lytics target anonymous users who have visited from a mobile device Targeting the audience Now you can build campaigns in your chosen marketing platforms to effectively target this audience of mobile web users You can connect this audience to Google AdWords or if you are using Facebook follow these steps to target with Facebook ads Upon completion your advertising team or agency can build these mobile engagement campaigns in Google Ads or Facebook Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/drive-mobile-app-downloads-with-lytics#content",
    "title": "https://docs.lytics.com/docs/drive-mobile-app-downloads-with-lytics#content",
    "chunk_text": "A common marketing use case to improve mobile engagement is to create journeys that drive downloads of your brand s native mobile applications Lytics offers a powerful capability to build audiences of anyone who has previously browsed your sites using a mobile device since the Lytics JavaScript tag was placed This audience can be a useful target in Google and Facebook as well as other ad platforms for driving mobile app installations Building the audience From the Lytics dashboard select Audience and then Create New Audience Using a Custom Rule build an audience of users with Has Accessed Mobile Web as t true This audience will include anyone who has reached your site from a mobile device Note You do not need any identifying information for this audience Be sure to select the Enable API Access checkbox This lets Lytics target anonymous users who have visited from a mobile device Targeting the audience Now you can build campaigns in your chosen marketing platforms to effectively target this audience of mobile web users You can connect this audience to Google AdWords or if you are using Facebook follow these steps to target with Facebook ads Upon completion your advertising team or agency can build these mobile engagement campaigns in Google Ads or Facebook Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/engage-qualified-users-with-targeted-ads",
    "title": "https://docs.lytics.com/docs/engage-qualified-users-with-targeted-ads",
    "chunk_text": "Using Lytics audiences you can identify anonymous traffic with higher potential to engage and or convert A powerful marketing use case is to retarget these users with Facebook and Google Ads driving them to further interact with your brand Leveraging user data This use case will provide a few suggested audience definitions to support your retargeting effort These audiences will leverage the following building blocks Lytics preconfigured audiences such as characteristics and behavioral audiences Commerce user fields such as Lifetime Value LTV or Lead Status Lytics data science scores such as frequency recency and intensity Note The Lytics StartSmart data schema supports a standard set of commerce fields including the two used in this use case If you aren t using the StartSmart schema these fields may also be mapped to your account for example if you ve imported data from Salesforce you should have access to the field Salesforce Most Recent Lead Status Building your target audiences Using the building blocks mentioned above you can build one or more of these suggested audience to use in ad campaigns Anonymous Deeply Engaged This audience combines the characteristic Email Capture Status Unknown email with the behavioral audience Lytics Deeply Engaged using the AND rule The deeply engaged characteristic uses the intensity score and is a great way to qualify anonymous traffic for targeting Known High LTV Combine the Email Capture Status Known email with the User s Lifetime Value field using the AND rule to create a target audience of just your best customers This audience would be a great source audience to generate a lookalike audience Known Leads For B2B marketing you can substitute LTV with a field like Lead Status to build an audience of open leads for retargeting or for use in a lookalike audience Refining your audiences with user fields Want to further narrow your audience to only the most qualified users Try experimenting with additional rules using the frequency score to bring in more consistent users or the recency score to target users who recently interacted with your brand These qualifiers can help you create a further refined audience of users who are more likely to convert Activating your audience Once you ve built your audience s you can export them to your ads platform for use using Lytics build in integrations Retargeting anonymous users Anonymous users can be advertised to directly in Facebook You can access the Anonymous Deeply Engaged you built in Facebook with the Create Web Traffic Audiences workflow You can also target anonymous users in Google platforms such as Adwords through our JavaScript integration with Google Analytics Reach new qualified users with Lookalike audiences Known users can be targeted across both Facebook and Google as well as drive lookalike audiences You can export your Known High LTV and Known Leads audiences via Facebook custom audiences and Google Adwords remarketing lists To power lookalike audiences which will find users similar to your best customers read more on creating a lookalike audience in Facebook or using Google Customer Match Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/engage-qualified-users-with-targeted-ads#content",
    "title": "https://docs.lytics.com/docs/engage-qualified-users-with-targeted-ads#content",
    "chunk_text": "Using Lytics audiences you can identify anonymous traffic with higher potential to engage and or convert A powerful marketing use case is to retarget these users with Facebook and Google Ads driving them to further interact with your brand Leveraging user data This use case will provide a few suggested audience definitions to support your retargeting effort These audiences will leverage the following building blocks Lytics preconfigured audiences such as characteristics and behavioral audiences Commerce user fields such as Lifetime Value LTV or Lead Status Lytics data science scores such as frequency recency and intensity Note The Lytics StartSmart data schema supports a standard set of commerce fields including the two used in this use case If you aren t using the StartSmart schema these fields may also be mapped to your account for example if you ve imported data from Salesforce you should have access to the field Salesforce Most Recent Lead Status Building your target audiences Using the building blocks mentioned above you can build one or more of these suggested audience to use in ad campaigns Anonymous Deeply Engaged This audience combines the characteristic Email Capture Status Unknown email with the behavioral audience Lytics Deeply Engaged using the AND rule The deeply engaged characteristic uses the intensity score and is a great way to qualify anonymous traffic for targeting Known High LTV Combine the Email Capture Status Known email with the User s Lifetime Value field using the AND rule to create a target audience of just your best customers This audience would be a great source audience to generate a lookalike audience Known Leads For B2B marketing you can substitute LTV with a field like Lead Status to build an audience of open leads for retargeting or for use in a lookalike audience Refining your audiences with user fields Want to further narrow your audience to only the most qualified users Try experimenting with additional rules using the frequency score to bring in more consistent users or the recency score to target users who recently interacted with your brand These qualifiers can help you create a further refined audience of users who are more likely to convert Activating your audience Once you ve built your audience s you can export them to your ads platform for use using Lytics build in integrations Retargeting anonymous users Anonymous users can be advertised to directly in Facebook You can access the Anonymous Deeply Engaged you built in Facebook with the Create Web Traffic Audiences workflow You can also target anonymous users in Google platforms such as Adwords through our JavaScript integration with Google Analytics Reach new qualified users with Lookalike audiences Known users can be targeted across both Facebook and Google as well as drive lookalike audiences You can export your Known High LTV and Known Leads audiences via Facebook custom audiences and Google Adwords remarketing lists To power lookalike audiences which will find users similar to your best customers read more on creating a lookalike audience in Facebook or using Google Customer Match Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/enhance-personalized-messaging-with-user-profile-fields",
    "title": "https://docs.lytics.com/docs/enhance-personalized-messaging-with-user-profile-fields",
    "chunk_text": "Targeting Lytics audiences with web Experiences allows you to achieve a level of personalized messaging to a group of users based on their common behaviors or interests However you can further personalize your Experiences at a one to one level by including specific user profile fields in the messaging for your widgets In this guide you will create a bar widget containing a coupon code unique to the user using entity field templates This code must be a field on the Lytics user profile to display it in the widget This technique can be used to include any user field inline within a widget in the headline message or CTA link of an experience Another common example may be to greet the user by their first and or last name if the data is available in Lytics You can download the complete JavaScript configuration and API override command for this example from the Github examples repository User field templates are also natively supported by web personalize Experiences in the Lytics UI Javascript Configuration Begin with a generic widget configuration containing a static coupon code in the message field JavaScript var entityTemplateWidget window pathfora Message id entity template widget layout bar position bottom fixed className entity template widget msg Use code strong FREE2019 strong for free shipping on your next purchase okMessage Get Free Shipping cancelShow false window pathfora initializeWidgets entityTemplateWidget This config will generate a bar widget with a CTA You can use the confirmAction callback to redirect the user to a checkout page with the static coupon code applied via a query parameter JavaScript var entityTemplateWidget window pathfora Message widget configuration confirmAction callback function window location href https yourwebsite com checkout code FREE2019 To customize this coupon code per user you can access a field by the field name in this example offer_code from the current user s Lytics profile using the bracket notation Fields that you wish to use in the template of your widget must be surfaced first JavaScript var entityTemplateWidget window pathfora Message id entity template widget layout bar position bottom fixed className entity template widget msg Use code strong offer_code strong for free shipping on your next purchase okMessage Get Free Shipping cancelShow false confirmAction callback function window location href https yourwebsite com checkout code offer_code window pathfora initializeWidgets entityTemplateWidget You may use this bracket notation in the Choose URL step of the Experience editor So there is no need to make API overrides for this use case You may be wondering what happens when the current user does not have the field offer_code on their profile There are a couple ways to handle this Simply ensure that the targeting audience requires that the field in question exist You can define a fallback value This is a default static value to be shown if offer_code does not exist on the user profile use the following notation offer_code FREE2019 Alternately you may set the display condition showOnMissingFields via the JavaScript configuration if you are using the SDK or via an API override if you are using the Lytics UI Testing the Personalized Widget Testing widgets that contain user profile fields can be tricky If you are using the Pathfora SDK it may help to use the pathfora customData object to simulate the user field data during the development process JavaScript window pathfora customData offer_code FREE2984712312 Alternatively add the offer_code field to your current profile by sending an API request to the data stream which contains the raw data for the field with the appropriate identifier usually _uid You can use the jstag getid function in the developer console of your website which has the Lytics JStag loaded to get your _uid Here is an example API call to add the offer_code field via the default stream Shell curl XGET http c lytics io c lytics_account_id default offer_code FREE324234234 _uid uid_here This example makes a request to the Lytics collector API for your account If offer_code is mapped in the LQL for the stream default and _uid is a unique identifier for the stream it should add the value FREE324234234 to the user profile Once you see it show up in your user profile in the Lytics UI refresh your website to ensure that the widget is populated with the new field value Define the Lytics Audience The example widget in this guide will be targeted at an audience of high LTV customers who have the user profile field offer_code Remember to update your config with the audience ID you wish to serve the widget to if you are using the Pathfora SDK Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/enhance-personalized-messaging-with-user-profile-fields#content",
    "title": "https://docs.lytics.com/docs/enhance-personalized-messaging-with-user-profile-fields#content",
    "chunk_text": "Targeting Lytics audiences with web Experiences allows you to achieve a level of personalized messaging to a group of users based on their common behaviors or interests However you can further personalize your Experiences at a one to one level by including specific user profile fields in the messaging for your widgets In this guide you will create a bar widget containing a coupon code unique to the user using entity field templates This code must be a field on the Lytics user profile to display it in the widget This technique can be used to include any user field inline within a widget in the headline message or CTA link of an experience Another common example may be to greet the user by their first and or last name if the data is available in Lytics You can download the complete JavaScript configuration and API override command for this example from the Github examples repository User field templates are also natively supported by web personalize Experiences in the Lytics UI Javascript Configuration Begin with a generic widget configuration containing a static coupon code in the message field JavaScript var entityTemplateWidget window pathfora Message id entity template widget layout bar position bottom fixed className entity template widget msg Use code strong FREE2019 strong for free shipping on your next purchase okMessage Get Free Shipping cancelShow false window pathfora initializeWidgets entityTemplateWidget This config will generate a bar widget with a CTA You can use the confirmAction callback to redirect the user to a checkout page with the static coupon code applied via a query parameter JavaScript var entityTemplateWidget window pathfora Message widget configuration confirmAction callback function window location href https yourwebsite com checkout code FREE2019 To customize this coupon code per user you can access a field by the field name in this example offer_code from the current user s Lytics profile using the bracket notation Fields that you wish to use in the template of your widget must be surfaced first JavaScript var entityTemplateWidget window pathfora Message id entity template widget layout bar position bottom fixed className entity template widget msg Use code strong offer_code strong for free shipping on your next purchase okMessage Get Free Shipping cancelShow false confirmAction callback function window location href https yourwebsite com checkout code offer_code window pathfora initializeWidgets entityTemplateWidget You may use this bracket notation in the Choose URL step of the Experience editor So there is no need to make API overrides for this use case You may be wondering what happens when the current user does not have the field offer_code on their profile There are a couple ways to handle this Simply ensure that the targeting audience requires that the field in question exist You can define a fallback value This is a default static value to be shown if offer_code does not exist on the user profile use the following notation offer_code FREE2019 Alternately you may set the display condition showOnMissingFields via the JavaScript configuration if you are using the SDK or via an API override if you are using the Lytics UI Testing the Personalized Widget Testing widgets that contain user profile fields can be tricky If you are using the Pathfora SDK it may help to use the pathfora customData object to simulate the user field data during the development process JavaScript window pathfora customData offer_code FREE2984712312 Alternatively add the offer_code field to your current profile by sending an API request to the data stream which contains the raw data for the field with the appropriate identifier usually _uid You can use the jstag getid function in the developer console of your website which has the Lytics JStag loaded to get your _uid Here is an example API call to add the offer_code field via the default stream Shell curl XGET http c lytics io c lytics_account_id default offer_code FREE324234234 _uid uid_here This example makes a request to the Lytics collector API for your account If offer_code is mapped in the LQL for the stream default and _uid is a unique identifier for the stream it should add the value FREE324234234 to the user profile Once you see it show up in your user profile in the Lytics UI refresh your website to ensure that the widget is populated with the new field value Define the Lytics Audience The example widget in this guide will be targeted at an audience of high LTV customers who have the user profile field offer_code Remember to update your config with the audience ID you wish to serve the widget to if you are using the Pathfora SDK Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/grow-your-email-marketing-list",
    "title": "https://docs.lytics.com/docs/grow-your-email-marketing-list",
    "chunk_text": "Email newsletters are a valuable tool to share content product features or announcements with your customers Readers of these daily or weekly newsletters are often the most engaged and valuable customers your brand has A Lytics personalize collect lead campaign can assist in growing your email list by targeting valuable audiences made up of users likely to engage Create an Audience of High Activity Users Effective campaigns begin with an effective audience The goal here is to collect email addresses of visitors to your site that are not already signed for your email list The following audience combines multiple rules to target users with a quantity score of at least one whose email is not known Users with a quantity score less than 1 have little to no activity on your site and are not great candidates for engagement with an email mailing list You also don t want to present a message to users who already receiving your newsletter You are not limited to this criteria You can target any audience who you think would be valuable to engage with via email Create Collect Lead Campaign Once you have an audience of users you would like to target use it when building your collect lead campaign The key step is where when and how often you want your message displayed to your users You may only want to solict email addresses from a particular section of your site and only display the message after the user has spend at certain amount of time on your site Export Leads to Email Service Provider Once your new campaign collects email addresses you can use your campaign to build a new audience A user who enters an email address will be considered converted these users can be exported to to your ESP and added to your email list The specific export instructions for your ESP will vary see our Integrations section for instructions Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/grow-your-email-marketing-list#content",
    "title": "https://docs.lytics.com/docs/grow-your-email-marketing-list#content",
    "chunk_text": "Email newsletters are a valuable tool to share content product features or announcements with your customers Readers of these daily or weekly newsletters are often the most engaged and valuable customers your brand has A Lytics personalize collect lead campaign can assist in growing your email list by targeting valuable audiences made up of users likely to engage Create an Audience of High Activity Users Effective campaigns begin with an effective audience The goal here is to collect email addresses of visitors to your site that are not already signed for your email list The following audience combines multiple rules to target users with a quantity score of at least one whose email is not known Users with a quantity score less than 1 have little to no activity on your site and are not great candidates for engagement with an email mailing list You also don t want to present a message to users who already receiving your newsletter You are not limited to this criteria You can target any audience who you think would be valuable to engage with via email Create Collect Lead Campaign Once you have an audience of users you would like to target use it when building your collect lead campaign The key step is where when and how often you want your message displayed to your users You may only want to solict email addresses from a particular section of your site and only display the message after the user has spend at certain amount of time on your site Export Leads to Email Service Provider Once your new campaign collects email addresses you can use your campaign to build a new audience A user who enters an email address will be considered converted these users can be exported to to your ESP and added to your email list The specific export instructions for your ESP will vary see our Integrations section for instructions Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/import-an-audience-from-your-data-warehouse",
    "title": "https://docs.lytics.com/docs/import-an-audience-from-your-data-warehouse",
    "chunk_text": "In general audiences should be created in Lytics using the audiences builder then pushed to actioning platforms via built in integrations These audiences update in real time and can be automated to keep downstream tools in sync However in some cases there are more narrow and targeted audiences of users who you need to target for one off campaigns or pushes to downstream tools In these cases we recommend creating the audience in your data warehouse then pushing that group of users to Lytics Examples of audiences to build in Lytics Users who have visited the site in the last week Users who purchased a product within the last three days Users who opened an email and have not logged in yet Examples of one off audiences to push from an external querying tool Users who attended event A and purchased a product over 100 two quarters ago Users who visited a booth during conference A and on average ordered at least three products per month over the last two years Users who should receive a promotional offer based on a list provided by an outside agency Pushing a one off audience to Lytics In this example we ll use Google BigQuery as our data warehouse and querying tool Once notifying your account manager your Lytics instance will be configured to pull data from a table called lytics_custom_audience_push with the following schema customer_id string custom_audience_name string custom_audience_value string Instructions Create a table called lytics_custom_audience_push with the above schema Write your query The query output must have three columns the audience name the audience value and the customer id Under query settings set lytics_custom_audience_push as the destination table for your query results Lytics pulls data from lytics_custom_audience_push on a rolling basis so you should see the custom_audiences field in Lytics populate within roughly 6 hours max Example Let s say you need to push an audience of VIP users selected for targeting based on their purchase history and attendance at an event SQL SELECT user_id vip_users AS custom_audience_name true AS custom_audience_value FROM user_db u JOIN event_db e ON e id u event_id WHERE u purchase_avg 50 AND u purchase_num 5 AND e id IN 748 573 934 Your lytics_custom_audience_push table should look something like this After this query is pushed to the lytics_custom_audience_push table you can use it in the Lytics audience builder under the custom_audiences field Notes The lytics_custom_audience_push table is configured to accept strings as values If you need to push a different data type for the value let us know We can also configure a table and mappings for integers floats and timestamps One off audience pushes are typically used for one downstream campaign If you find yourself repeatedly targeting a one off audience talk to your Lytics account manager to have that audience reconfigured as a user attribute If you are using a different data warehouse you can send the table as a CSV to an SFTP server or S3 bucket for Lytics to pull Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/import-an-audience-from-your-data-warehouse#content",
    "title": "https://docs.lytics.com/docs/import-an-audience-from-your-data-warehouse#content",
    "chunk_text": "In general audiences should be created in Lytics using the audiences builder then pushed to actioning platforms via built in integrations These audiences update in real time and can be automated to keep downstream tools in sync However in some cases there are more narrow and targeted audiences of users who you need to target for one off campaigns or pushes to downstream tools In these cases we recommend creating the audience in your data warehouse then pushing that group of users to Lytics Examples of audiences to build in Lytics Users who have visited the site in the last week Users who purchased a product within the last three days Users who opened an email and have not logged in yet Examples of one off audiences to push from an external querying tool Users who attended event A and purchased a product over 100 two quarters ago Users who visited a booth during conference A and on average ordered at least three products per month over the last two years Users who should receive a promotional offer based on a list provided by an outside agency Pushing a one off audience to Lytics In this example we ll use Google BigQuery as our data warehouse and querying tool Once notifying your account manager your Lytics instance will be configured to pull data from a table called lytics_custom_audience_push with the following schema customer_id string custom_audience_name string custom_audience_value string Instructions Create a table called lytics_custom_audience_push with the above schema Write your query The query output must have three columns the audience name the audience value and the customer id Under query settings set lytics_custom_audience_push as the destination table for your query results Lytics pulls data from lytics_custom_audience_push on a rolling basis so you should see the custom_audiences field in Lytics populate within roughly 6 hours max Example Let s say you need to push an audience of VIP users selected for targeting based on their purchase history and attendance at an event SQL SELECT user_id vip_users AS custom_audience_name true AS custom_audience_value FROM user_db u JOIN event_db e ON e id u event_id WHERE u purchase_avg 50 AND u purchase_num 5 AND e id IN 748 573 934 Your lytics_custom_audience_push table should look something like this After this query is pushed to the lytics_custom_audience_push table you can use it in the Lytics audience builder under the custom_audiences field Notes The lytics_custom_audience_push table is configured to accept strings as values If you need to push a different data type for the value let us know We can also configure a table and mappings for integers floats and timestamps One off audience pushes are typically used for one downstream campaign If you find yourself repeatedly targeting a one off audience talk to your Lytics account manager to have that audience reconfigured as a user attribute If you are using a different data warehouse you can send the table as a CSV to an SFTP server or S3 bucket for Lytics to pull Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/improve-ad-campaign-metrics-with-predictive-targeting",
    "title": "https://docs.lytics.com/docs/improve-ad-campaign-metrics-with-predictive-targeting",
    "chunk_text": "Lytics predictive audiences can be leveraged in advertising tools to make intelligent targeting and bid strategy decisions within remarketing campaigns While Lytics can populate audiences in your ad tools as seed audiences for lookalike modeling this use case specifically uses Lytics data science scores against your own first party data to optimize remarketing efforts around users most likely to complete an action instead of anyone who may be eligible for a remarketing experience Build a Predictive Audience in Lytics Leverage Content Affinity in Audiences Custom Predictive Audiences Build a Predictive Audience in Lytics There are several ways to build your audience in Lytics that you can utilize in your ad platform for targeting To begin testing this strategy Lytics recommends defining and building the deterministic rule for who you d like to retarget in your ad strategy This most commonly looks like Has done event X but not Y Has web activity but is not a paying subscriber It s likely that you have rules like this already set up in your ad tools To improve the performance metrics of these campaigns you can use Lytics to decrease the overall audience size available for targeting but increase the likelihood of conversion against your business goal This will impact your ad KPIs by potentially decreasing the total number of unique impressions but increasing conversion rate and or decreasing cost per acquisition To do this layer in one of the Lytics out of the box behavioral audiences that use data science such as Engagement Deeply Engaged Users This rule set includes all deeply engaged users who haven t made a purchase By passing this audience directly into an ad channel your remarketing efforts will be more refined to only include users who are deeply engaged and more likely to convert than your total user base Leverage Content Affinity in Audiences Lytics can also create data science based audiences specific to a topic of interest for an individual user This logic is more robust than retargeting users around a site category that they have shown past interest in because it evaluates changes in topics in real time and assesses a user s interest in a topic in relation to all existing users within your account and their actions Read more about user level topic affinities here You can utilize a content affinity audience for remarketing as a single rule for an audience or as part of a rule set as demonstrated below This rule set includes users with a high affinity for Chicken and who have their membership on pause By using content affinity based audiences for remarketing in ad channels your ad copy and creative can be strategically paired to be more relevant to your customers based on what they have previously shown an interest in Custom Predictive Audiences The last strategy for predictive audiences within Lytics is to rely on our proprietary SegmentML product to do lookalike modeling across your own first party data Most advertisers are familiar with lookalike modeling within ad channels to extend your reach You can also mine your own first party data for more relevant lookalikes to offer your products and services to within an ad channel Your Lytics Account Manager or Services team can help you create predictive audiences within your account which can then be exported into downstream ad tools the same way as any other audience built within Lytics See the Integrations documentation for provider specific information This summary report shows the growth of a custom predictive audience over a week While these audiences may be smaller than the lookalikes you ll get back from Facebook or Google Ads directly because these users have interacted with your brand previously and are showing signals towards behaving like your seed audience they will have a higher conversion rate that can be influenced by additional ad campaigns with the right strategy and messaging Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/improve-ad-campaign-metrics-with-predictive-targeting#content",
    "title": "https://docs.lytics.com/docs/improve-ad-campaign-metrics-with-predictive-targeting#content",
    "chunk_text": "Lytics predictive audiences can be leveraged in advertising tools to make intelligent targeting and bid strategy decisions within remarketing campaigns While Lytics can populate audiences in your ad tools as seed audiences for lookalike modeling this use case specifically uses Lytics data science scores against your own first party data to optimize remarketing efforts around users most likely to complete an action instead of anyone who may be eligible for a remarketing experience Build a Predictive Audience in Lytics Leverage Content Affinity in Audiences Custom Predictive Audiences Build a Predictive Audience in Lytics There are several ways to build your audience in Lytics that you can utilize in your ad platform for targeting To begin testing this strategy Lytics recommends defining and building the deterministic rule for who you d like to retarget in your ad strategy This most commonly looks like Has done event X but not Y Has web activity but is not a paying subscriber It s likely that you have rules like this already set up in your ad tools To improve the performance metrics of these campaigns you can use Lytics to decrease the overall audience size available for targeting but increase the likelihood of conversion against your business goal This will impact your ad KPIs by potentially decreasing the total number of unique impressions but increasing conversion rate and or decreasing cost per acquisition To do this layer in one of the Lytics out of the box behavioral audiences that use data science such as Engagement Deeply Engaged Users This rule set includes all deeply engaged users who haven t made a purchase By passing this audience directly into an ad channel your remarketing efforts will be more refined to only include users who are deeply engaged and more likely to convert than your total user base Leverage Content Affinity in Audiences Lytics can also create data science based audiences specific to a topic of interest for an individual user This logic is more robust than retargeting users around a site category that they have shown past interest in because it evaluates changes in topics in real time and assesses a user s interest in a topic in relation to all existing users within your account and their actions Read more about user level topic affinities here You can utilize a content affinity audience for remarketing as a single rule for an audience or as part of a rule set as demonstrated below This rule set includes users with a high affinity for Chicken and who have their membership on pause By using content affinity based audiences for remarketing in ad channels your ad copy and creative can be strategically paired to be more relevant to your customers based on what they have previously shown an interest in Custom Predictive Audiences The last strategy for predictive audiences within Lytics is to rely on our proprietary SegmentML product to do lookalike modeling across your own first party data Most advertisers are familiar with lookalike modeling within ad channels to extend your reach You can also mine your own first party data for more relevant lookalikes to offer your products and services to within an ad channel Your Lytics Account Manager or Services team can help you create predictive audiences within your account which can then be exported into downstream ad tools the same way as any other audience built within Lytics See the Integrations documentation for provider specific information This summary report shows the growth of a custom predictive audience over a week While these audiences may be smaller than the lookalikes you ll get back from Facebook or Google Ads directly because these users have interacted with your brand previously and are showing signals towards behaving like your seed audience they will have a higher conversion rate that can be influenced by additional ad campaigns with the right strategy and messaging Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/increase-conversions-with-lytics-and-facebook-lookalike",
    "title": "https://docs.lytics.com/docs/increase-conversions-with-lytics-and-facebook-lookalike",
    "chunk_text": "With Lytics audiences and Facebook lookalike you can increase conversions by targeting new prospects that have similar characteristics to your high value customers This guide will cover how you can create a source audience of your top lifetime purchasers in Lytics and use it in a Facebook lookalike audience for a targeted ad campaign that reaches new users who are likely to become purchasers Build an Audience of High Value Purchasers in Lytics For purchase data this example uses an account that has been connected with Shopify data via Lytics Shopify import You may be importing your purchase data to Lytics via some other method such as the Javascript Tag CSV or one of our other commerce integrations When building your audience the custom rule you choose may differ for your account Follow the steps outlined in this guide to build source audiences in Lytics The steps that follow in this guide provide specific instructions on constructing a high value purchasers audience In the audience builder select Custom Rule If you have imported data via Shopify search for and select the field Lifetime Order Price This field contains the sum of all purchase amounts made by the user From the rule options Lifetime Order Pice must select be at least In the These values textbox enter a price threshold Click Add Condition Verify the user count of your audience Facebook expects the source audience to be anywhere from 1 000 to 50 000 users You may need to adjust the price threshold or add additional rules to generate an audience of the appropriate size and specificity NOTE If you re unable to generate an audience of appropriate size with the Lifetime Order Price field consider creating a source audience of recent purchasers or purchasers of specific products instead Click Create to save your audience Using your Lytics Audience in a Lookalike Ad Campaign Follow through with the steps below to use your high value purchasers audience for the source of a Facebook lookalike ads campaign Export to Facebook Create a Facebook Lookalike Audience Assign your Lookalike Audience to an Ad Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/increase-conversions-with-lytics-and-facebook-lookalike#content",
    "title": "https://docs.lytics.com/docs/increase-conversions-with-lytics-and-facebook-lookalike#content",
    "chunk_text": "With Lytics audiences and Facebook lookalike you can increase conversions by targeting new prospects that have similar characteristics to your high value customers This guide will cover how you can create a source audience of your top lifetime purchasers in Lytics and use it in a Facebook lookalike audience for a targeted ad campaign that reaches new users who are likely to become purchasers Build an Audience of High Value Purchasers in Lytics For purchase data this example uses an account that has been connected with Shopify data via Lytics Shopify import You may be importing your purchase data to Lytics via some other method such as the Javascript Tag CSV or one of our other commerce integrations When building your audience the custom rule you choose may differ for your account Follow the steps outlined in this guide to build source audiences in Lytics The steps that follow in this guide provide specific instructions on constructing a high value purchasers audience In the audience builder select Custom Rule If you have imported data via Shopify search for and select the field Lifetime Order Price This field contains the sum of all purchase amounts made by the user From the rule options Lifetime Order Pice must select be at least In the These values textbox enter a price threshold Click Add Condition Verify the user count of your audience Facebook expects the source audience to be anywhere from 1 000 to 50 000 users You may need to adjust the price threshold or add additional rules to generate an audience of the appropriate size and specificity NOTE If you re unable to generate an audience of appropriate size with the Lifetime Order Price field consider creating a source audience of recent purchasers or purchasers of specific products instead Click Create to save your audience Using your Lytics Audience in a Lookalike Ad Campaign Follow through with the steps below to use your high value purchasers audience for the source of a Facebook lookalike ads campaign Export to Facebook Create a Facebook Lookalike Audience Assign your Lookalike Audience to an Ad Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/keep-visitors-engaged-with-content-recommendation-experiences",
    "title": "https://docs.lytics.com/docs/keep-visitors-engaged-with-content-recommendation-experiences",
    "chunk_text": "Lytics content recommendations are a powerful tool for personalization They enable you to engage your visitors with the most relevant content based on their interests Lytics web personalize Experiences support content recommendations natively but with API overrides or the Pathfora SDK you can further customize the look and feel of recommendations in your widget In this guide you will build a recommendation modal to reel users back in when they are thinking about leaving your website You ll learn how to customize such a widget with custom CSS and additional display fields such as the name of the author and the publication date You can download the complete JavaScript configuration CSS and API override command for this example from the GitHub examples repository JavaScript Configuration Start with a basic message modal configuration The goal of this Experience is to entice users to stay on your website so you may want to use the showOnExitIntent display condition to only show the modal when the user is about to leave the page JavaScript var contentRecWidget window pathfora Message id content rec widget layout modal className content rec widget headline Wait Before you go msg We think you may like this Maybe check it out before you leave okShow false cancelShow false displayConditions showOnExitIntent true window pathfora initializeWidgets contentRecWidget Before you proceed you will need to create a content collection See the documentation on content collections to learn how to build a collection and the documentation on using content collections for recommendations for instructions on how to get the ID of the collection which you will need in the next step The collection in this example contains blog posts that have been published within the last year Now to set up the recommendations in the config Add the recommend and variant settings to your config Then add the collection ID and set the visited setting to false This setting ensures that Lytics recommendations only return content that the user has not already visited JavaScript var contentRecWidget window pathfora Message widget configuration variant 3 recommend visited false collection your_collection_id Now you will have a basic modal with content recommendations displaying on exit intent Since the example displays blog content you may also want to show the date that the article was published and the author name To do so you can add the display object to your configuration JavaScript var contentRecWidget window pathfora Message widget configuration variant 3 recommend visited false collection your_collection_id display date true author true You can even add some additional settings to style the date and extend the amount of text shown in the article description JavaScript var contentRecWidget window pathfora Message widget configuration variant 3 recommend visited false collection your_collection_id display date true author true dateOptions weekday long year numeric month long day numeric descriptionLimit 220 Check out the Pathfora content recommendations documentation to see the full list of settings you can apply to customize your content recommendation widget Styling the Recommendation Modal In this example we will make some small adjustments to soften the look of the content recommendations You can download the styles for this example from GitHub When writing your own custom styles remember that different users will see a different pieces of content based on interests Be careful when adjusting the size of things like the image in relation to the text Images from different articles may be of a different size and text descriptions may vary in length if not controlled by the descriptionLimit setting Be sure to test your modal with multiple different content items You can do this by adding the shuffle setting to your config which will change the content every time you see the modal You may also want to ensure that all content in your collection has similar image sizes if you do want to adjust its styles in the modal Define the Lytics Audience The example widget in this guide will be targeted at users in the Likely to Reengage characteristic Remember to update your config with the audience slug you wish to serve the widget to Alternatively you may build your widget as a web personalize Experience in the Lytics UI with the Recommend Content tactic and apply the recommend display setting with an API override See the Github Repository for the exact override command Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/keep-visitors-engaged-with-content-recommendation-experiences#content",
    "title": "https://docs.lytics.com/docs/keep-visitors-engaged-with-content-recommendation-experiences#content",
    "chunk_text": "Lytics content recommendations are a powerful tool for personalization They enable you to engage your visitors with the most relevant content based on their interests Lytics web personalize Experiences support content recommendations natively but with API overrides or the Pathfora SDK you can further customize the look and feel of recommendations in your widget In this guide you will build a recommendation modal to reel users back in when they are thinking about leaving your website You ll learn how to customize such a widget with custom CSS and additional display fields such as the name of the author and the publication date You can download the complete JavaScript configuration CSS and API override command for this example from the GitHub examples repository JavaScript Configuration Start with a basic message modal configuration The goal of this Experience is to entice users to stay on your website so you may want to use the showOnExitIntent display condition to only show the modal when the user is about to leave the page JavaScript var contentRecWidget window pathfora Message id content rec widget layout modal className content rec widget headline Wait Before you go msg We think you may like this Maybe check it out before you leave okShow false cancelShow false displayConditions showOnExitIntent true window pathfora initializeWidgets contentRecWidget Before you proceed you will need to create a content collection See the documentation on content collections to learn how to build a collection and the documentation on using content collections for recommendations for instructions on how to get the ID of the collection which you will need in the next step The collection in this example contains blog posts that have been published within the last year Now to set up the recommendations in the config Add the recommend and variant settings to your config Then add the collection ID and set the visited setting to false This setting ensures that Lytics recommendations only return content that the user has not already visited JavaScript var contentRecWidget window pathfora Message widget configuration variant 3 recommend visited false collection your_collection_id Now you will have a basic modal with content recommendations displaying on exit intent Since the example displays blog content you may also want to show the date that the article was published and the author name To do so you can add the display object to your configuration JavaScript var contentRecWidget window pathfora Message widget configuration variant 3 recommend visited false collection your_collection_id display date true author true You can even add some additional settings to style the date and extend the amount of text shown in the article description JavaScript var contentRecWidget window pathfora Message widget configuration variant 3 recommend visited false collection your_collection_id display date true author true dateOptions weekday long year numeric month long day numeric descriptionLimit 220 Check out the Pathfora content recommendations documentation to see the full list of settings you can apply to customize your content recommendation widget Styling the Recommendation Modal In this example we will make some small adjustments to soften the look of the content recommendations You can download the styles for this example from GitHub When writing your own custom styles remember that different users will see a different pieces of content based on interests Be careful when adjusting the size of things like the image in relation to the text Images from different articles may be of a different size and text descriptions may vary in length if not controlled by the descriptionLimit setting Be sure to test your modal with multiple different content items You can do this by adding the shuffle setting to your config which will change the content every time you see the modal You may also want to ensure that all content in your collection has similar image sizes if you do want to adjust its styles in the modal Define the Lytics Audience The example widget in this guide will be targeted at users in the Likely to Reengage characteristic Remember to update your config with the audience slug you wish to serve the widget to Alternatively you may build your widget as a web personalize Experience in the Lytics UI with the Recommend Content tactic and apply the recommend display setting with an API override See the Github Repository for the exact override command Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/leverage-lookalike-models-and-predictive-audiences",
    "title": "https://docs.lytics.com/docs/leverage-lookalike-models-and-predictive-audiences",
    "chunk_text": "When you need to reach new users that look like your best customers create Predictive Audiences powered by Lytics Lookalike Models Campaigns run with Predictive Audiences improve customer engagement drive higher conversion rates and reduce ad spend Using Predictive Audiences can benefit marketers in a number of ways Helps you define better targeting criteria based on behavioral data rather than demographics or third party data Enables you to optimize each audience for reach or accuracy based on campaign goals Deliver use cases that drive conversions across the customer lifecycle Better targeting criteria Predictive Audiences simplify your targeting strategies by eliminating the need to manually define parameters to sort your customers Lytics gives you direct insight to help answer the question how do I know what to target users on Each Lookalike Model in Lytics has a Feature Importance chart that shows the most important attributes that predict user conversions for your source and target audiences These attributes include Lytics behavioral scores content affinities and other user fields In the example above Lytics created a Lookalike Model to understand which of our documentation site users are mostly likely to move from Casual Visitors to Deeply Engaged Users As you can see in the chart our model determined that Total Pageview Count Quantity and an affinity for marketing are the top three attributes of users mostly likely to become deeply engaged Your Lookalike Models may simply confirm assumptions but in others cases they can offer a new understanding of your customers behaviors and which factors really influence desired actions Optimize based on goals Once a Lookalike Model is built you can easily create different Predictive Audiences to optimize the balance between reaching more people and targeting your best customers for each campaign When reach is a priority you can build Predictive Audiences with higher reach but lower accuracy to target more users When Return on Ad Spend ROAS is a priority you can build Predictive Audiences with higher accuracy but lower reach to target only the users mostly likely to convert For example if you re targeting single purchasers to encourage them to become repeat purchasers accuracy may be more important than reach Learn more about how to optimize the trade off between accuracy vs reach Use cases across the customer lifecycle Predictive Audiences help you engage and convert customers across their lifecycle from anonymous users visiting your website for the first time to high lifetime value LTV customers that are brand advocates Below are common examples of how to build Lookalike Models that power Predictive Audiences through different stages of your marketing funnel Earlier stages Which of my anonymous users are most likely to convert to known users Which of my users with free trials are most likely to convert to subscribers Mid stages Which of my single purchasers are most likely to become multi purchasers Which of my highly engaged users are most likely to become subscribers Later stages Which of my subscribers are most likely to churn Which of my engaged users are likely to make a purchase soon and do not require additional marketing Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/leverage-lookalike-models-and-predictive-audiences#content",
    "title": "https://docs.lytics.com/docs/leverage-lookalike-models-and-predictive-audiences#content",
    "chunk_text": "When you need to reach new users that look like your best customers create Predictive Audiences powered by Lytics Lookalike Models Campaigns run with Predictive Audiences improve customer engagement drive higher conversion rates and reduce ad spend Using Predictive Audiences can benefit marketers in a number of ways Helps you define better targeting criteria based on behavioral data rather than demographics or third party data Enables you to optimize each audience for reach or accuracy based on campaign goals Deliver use cases that drive conversions across the customer lifecycle Better targeting criteria Predictive Audiences simplify your targeting strategies by eliminating the need to manually define parameters to sort your customers Lytics gives you direct insight to help answer the question how do I know what to target users on Each Lookalike Model in Lytics has a Feature Importance chart that shows the most important attributes that predict user conversions for your source and target audiences These attributes include Lytics behavioral scores content affinities and other user fields In the example above Lytics created a Lookalike Model to understand which of our documentation site users are mostly likely to move from Casual Visitors to Deeply Engaged Users As you can see in the chart our model determined that Total Pageview Count Quantity and an affinity for marketing are the top three attributes of users mostly likely to become deeply engaged Your Lookalike Models may simply confirm assumptions but in others cases they can offer a new understanding of your customers behaviors and which factors really influence desired actions Optimize based on goals Once a Lookalike Model is built you can easily create different Predictive Audiences to optimize the balance between reaching more people and targeting your best customers for each campaign When reach is a priority you can build Predictive Audiences with higher reach but lower accuracy to target more users When Return on Ad Spend ROAS is a priority you can build Predictive Audiences with higher accuracy but lower reach to target only the users mostly likely to convert For example if you re targeting single purchasers to encourage them to become repeat purchasers accuracy may be more important than reach Learn more about how to optimize the trade off between accuracy vs reach Use cases across the customer lifecycle Predictive Audiences help you engage and convert customers across their lifecycle from anonymous users visiting your website for the first time to high lifetime value LTV customers that are brand advocates Below are common examples of how to build Lookalike Models that power Predictive Audiences through different stages of your marketing funnel Earlier stages Which of my anonymous users are most likely to convert to known users Which of my users with free trials are most likely to convert to subscribers Mid stages Which of my single purchasers are most likely to become multi purchasers Which of my highly engaged users are most likely to become subscribers Later stages Which of my subscribers are most likely to churn Which of my engaged users are likely to make a purchase soon and do not require additional marketing Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lookalike-models-conserve-marketing-spend-on-engaged-users",
    "title": "https://docs.lytics.com/docs/lookalike-models-conserve-marketing-spend-on-engaged-users",
    "chunk_text": "Determining which users to exclude from a campaign is equally as important as finding the users you want to target If a user is already engaged with your brand and likely to make a purchase soon you can reduce marketing spend by suppressing those users from your campaign audiences Define Source and Target Audiences The first step to building a Lookalike Model is selecting your source and target audiences Start by defining the desired outcome for the target audience in this case engaged users with a pending order The source audience is the group that you want to find similar users from focusing on those who ve shown signals they are likely to convert For this use case you can use the prebuilt audience lytics_deeply_engaged or build your own audience based on your criteria for engagement Build Lookalike Model In the Lytics UI navigate to the Laboratory section and click Create New Model at the top right On the configuration page you ll select the source and target audiences that you previously defined By default the Auto Tune option is turned off If you re not getting enough performance out of your models try Auto Tune which will select the default parameters for you Select Model Training Only if you re in an exploratory phase and not ready to target users based on this model s predictions Learn more about the configuration options in our Model Builder documentation Depending on the sizes of your source and target audiences your Lookalike Model may take a few minutes up to a few hours to build On your Model Dashboard you ll see a Building status until the model is complete Create Predictive Audience Once your model is built view the Model Summary to determine if it s ready for use in your targeting You must Activate a Lookalike Model before creating a Predictive Audience which will evaluate users and write the model s prediction scores to user profiles This process can take up to three days for large audiences On the summary page click Create Predictive Audience in the Model Usage section which will open the audience builder pre populated with your model s predictions The default model decision threshold of 0 5 is used but you can adjust the decision threshold as needed to reach more users or be more accurate and only target users who are most likely to make a purchaser without additional marketing Next Steps After creating an audience of users likely to make a purchase soon you may want to add these users to a suppression list Read more about suppressing users from ad campaigns Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lookalike-models-conserve-marketing-spend-on-engaged-users#content",
    "title": "https://docs.lytics.com/docs/lookalike-models-conserve-marketing-spend-on-engaged-users#content",
    "chunk_text": "Determining which users to exclude from a campaign is equally as important as finding the users you want to target If a user is already engaged with your brand and likely to make a purchase soon you can reduce marketing spend by suppressing those users from your campaign audiences Define Source and Target Audiences The first step to building a Lookalike Model is selecting your source and target audiences Start by defining the desired outcome for the target audience in this case engaged users with a pending order The source audience is the group that you want to find similar users from focusing on those who ve shown signals they are likely to convert For this use case you can use the prebuilt audience lytics_deeply_engaged or build your own audience based on your criteria for engagement Build Lookalike Model In the Lytics UI navigate to the Laboratory section and click Create New Model at the top right On the configuration page you ll select the source and target audiences that you previously defined By default the Auto Tune option is turned off If you re not getting enough performance out of your models try Auto Tune which will select the default parameters for you Select Model Training Only if you re in an exploratory phase and not ready to target users based on this model s predictions Learn more about the configuration options in our Model Builder documentation Depending on the sizes of your source and target audiences your Lookalike Model may take a few minutes up to a few hours to build On your Model Dashboard you ll see a Building status until the model is complete Create Predictive Audience Once your model is built view the Model Summary to determine if it s ready for use in your targeting You must Activate a Lookalike Model before creating a Predictive Audience which will evaluate users and write the model s prediction scores to user profiles This process can take up to three days for large audiences On the summary page click Create Predictive Audience in the Model Usage section which will open the audience builder pre populated with your model s predictions The default model decision threshold of 0 5 is used but you can adjust the decision threshold as needed to reach more users or be more accurate and only target users who are most likely to make a purchaser without additional marketing Next Steps After creating an audience of users likely to make a purchase soon you may want to add these users to a suppression list Read more about suppressing users from ad campaigns Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lookalike-models-convert-anonymous-users-to-known-users",
    "title": "https://docs.lytics.com/docs/lookalike-models-convert-anonymous-users-to-known-users",
    "chunk_text": "Converting unknown users to known users is a key starting point for many marketing campaigns Collecting data from your users enables you to personalize their experience with your brand or website Building a Predictive Audience can help you intelligently target anonymous users who are most likely to convert to customers Define Source and Target Audiences The first step to building a Lookalike Model is selecting your source and target audiences As a marketer this starts by understanding your desired outcome for the target audience in this case known users You can create this target audience in Lytics for users with identifying field s such as has_email The source audience is the group that you want to find similar users from focusing on those who ve shown signals they are likely to convert For this example the source audience is anonymous users which you can define as users who are missing an identifying field such as email contact_id customer_id uids etc Build Lookalike Model In the Lytics UI head to the Laboratory section and click Create New Model at the top right On the configuration page you ll select the source and target audiences that you previously defined By default the Auto Tune option is turned off If you re not getting enough performance out of your models try Auto Tune which will select the default parameters for you Select Model Training Only if you re in an exploratory phase and not ready to target users based on this model s predictions Learn more about the configuration options in our Model Builder documentation Depending on the sizes of your source and target audiences your Lookalike Model may take a few minutes up to a few hours to build On your Model Dashboard you ll see a Building status until the model is complete Create Predictive Audience Once your model is built view the Model Summary to determine if it s ready for use in your campaign You must Activate a Lookalike Model before creating a Predictive Audience which will evaluate users and write the model s prediction scores to user profiles This process can take up to three days for large audiences On the summary page click Create Predictive Audience in the Model Usage section which will open the audience builder pre populated with your model s predictions The default model decision threshold of 0 5 is used but you can adjust the decision threshold as needed to reach more users or be more accurate Next Steps After creating a Predictive Audience from anonymous users most likely to convert to known users you may want to offer personalized discounts or free trials to this audience to help convert them to customers Learn more about how to acquire new customers using Lytics Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lookalike-models-convert-anonymous-users-to-known-users#content",
    "title": "https://docs.lytics.com/docs/lookalike-models-convert-anonymous-users-to-known-users#content",
    "chunk_text": "Converting unknown users to known users is a key starting point for many marketing campaigns Collecting data from your users enables you to personalize their experience with your brand or website Building a Predictive Audience can help you intelligently target anonymous users who are most likely to convert to customers Define Source and Target Audiences The first step to building a Lookalike Model is selecting your source and target audiences As a marketer this starts by understanding your desired outcome for the target audience in this case known users You can create this target audience in Lytics for users with identifying field s such as has_email The source audience is the group that you want to find similar users from focusing on those who ve shown signals they are likely to convert For this example the source audience is anonymous users which you can define as users who are missing an identifying field such as email contact_id customer_id uids etc Build Lookalike Model In the Lytics UI head to the Laboratory section and click Create New Model at the top right On the configuration page you ll select the source and target audiences that you previously defined By default the Auto Tune option is turned off If you re not getting enough performance out of your models try Auto Tune which will select the default parameters for you Select Model Training Only if you re in an exploratory phase and not ready to target users based on this model s predictions Learn more about the configuration options in our Model Builder documentation Depending on the sizes of your source and target audiences your Lookalike Model may take a few minutes up to a few hours to build On your Model Dashboard you ll see a Building status until the model is complete Create Predictive Audience Once your model is built view the Model Summary to determine if it s ready for use in your campaign You must Activate a Lookalike Model before creating a Predictive Audience which will evaluate users and write the model s prediction scores to user profiles This process can take up to three days for large audiences On the summary page click Create Predictive Audience in the Model Usage section which will open the audience builder pre populated with your model s predictions The default model decision threshold of 0 5 is used but you can adjust the decision threshold as needed to reach more users or be more accurate Next Steps After creating a Predictive Audience from anonymous users most likely to convert to known users you may want to offer personalized discounts or free trials to this audience to help convert them to customers Learn more about how to acquire new customers using Lytics Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lookalike-models-convert-single-purchasers-to-multi-purchasers",
    "title": "https://docs.lytics.com/docs/lookalike-models-convert-single-purchasers-to-multi-purchasers",
    "chunk_text": "Once you ve acquired customers a good way to increase sales and revenue without increasing advertising cost significantly is to target customers that are most likely to return for a second or third purchase Reaching out to these customers with the appropriate messaging can be the first step in creating loyalty and improving retention Define Source and Target Audiences Begin building a Lookalike Model by selecting your source and target audiences The desired outcome for the target audience in this case is multi purchasers The source audience will be single purchasers who have shown that they are likely to convert and become repeat purchasers Build Lookalike Model In the Lytics UI go to the Laboratory section and click Create New Model at the top right On the configuration page you ll select the source and target audiences that you previously defined By default the Auto Tune option is turned off If you re not getting enough performance out of your models try Auto Tune which will select the default parameters for you Select Model Training Only if you re in an exploratory phase and not ready to target users based on this model s predictions Learn more about the configuration options in our Model Builder documentation Depending on the sizes of your source and target audiences your Lookalike Model may take a few minutes up to a few hours to build On your Model Dashboard you ll see a Building status until the model is complete Create Predictive Audience Once your model is built view the Model Summary to determine if it s ready for use in your campaign You must Activate a Lookalike Model before creating a Predictive Audience which will evaluate users and write the model s prediction scores to user profiles This process can take up to three days for large audiences On the summary page click Create Predictive Audience in the Model Usage section which will open the audience builder pre populated with your model s predictions The default model decision threshold of 0 5 is used but you can adjust the decision threshold as needed to reach more users or be more accurate to only target users who are most likely to make additional purchases Next Steps After creating a Predictive Audience of single purchasers most likely to become multi purchasers you may want to target these users with discounts loyalty programs referral programs or emails to drive sales Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lookalike-models-convert-single-purchasers-to-multi-purchasers#content",
    "title": "https://docs.lytics.com/docs/lookalike-models-convert-single-purchasers-to-multi-purchasers#content",
    "chunk_text": "Once you ve acquired customers a good way to increase sales and revenue without increasing advertising cost significantly is to target customers that are most likely to return for a second or third purchase Reaching out to these customers with the appropriate messaging can be the first step in creating loyalty and improving retention Define Source and Target Audiences Begin building a Lookalike Model by selecting your source and target audiences The desired outcome for the target audience in this case is multi purchasers The source audience will be single purchasers who have shown that they are likely to convert and become repeat purchasers Build Lookalike Model In the Lytics UI go to the Laboratory section and click Create New Model at the top right On the configuration page you ll select the source and target audiences that you previously defined By default the Auto Tune option is turned off If you re not getting enough performance out of your models try Auto Tune which will select the default parameters for you Select Model Training Only if you re in an exploratory phase and not ready to target users based on this model s predictions Learn more about the configuration options in our Model Builder documentation Depending on the sizes of your source and target audiences your Lookalike Model may take a few minutes up to a few hours to build On your Model Dashboard you ll see a Building status until the model is complete Create Predictive Audience Once your model is built view the Model Summary to determine if it s ready for use in your campaign You must Activate a Lookalike Model before creating a Predictive Audience which will evaluate users and write the model s prediction scores to user profiles This process can take up to three days for large audiences On the summary page click Create Predictive Audience in the Model Usage section which will open the audience builder pre populated with your model s predictions The default model decision threshold of 0 5 is used but you can adjust the decision threshold as needed to reach more users or be more accurate to only target users who are most likely to make additional purchases Next Steps After creating a Predictive Audience of single purchasers most likely to become multi purchasers you may want to target these users with discounts loyalty programs referral programs or emails to drive sales Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lookalike-models-determine-which-subscribers-are-likely-to-churn",
    "title": "https://docs.lytics.com/docs/lookalike-models-determine-which-subscribers-are-likely-to-churn",
    "chunk_text": "Retaining customers is more important now than ever and for businesses that have a subscription model reaching out to users who are risk of churning is an effective way to improve retention and customer engagement Define Source and Target Audiences The first step to building a Lookalike Model is selecting your source and target audiences The target audience in this case includes subscribers who are at risk of churning You can define this based on the users last engagement time or some some other measure of engagement The source audience will include current subscribers which you can define using subscription field s from your imported data Build Lookalike Model In the Lytics UI head to the Laboratory section and click Create New Model at the top right On the configuration page you ll select the source and target audiences that you previously defined By default the Auto Tune option is turned off If you re not getting enough performance out of your models try Auto Tune which will select the default parameters for you Select Model Training Only if you re in an exploratory phase and not ready to target users based on this model s predictions Learn more about the configuration options in our Model Builder documentation Depending on the sizes of your source and target audiences your Lookalike Model may take a few minutes up to a few hours to build On your Model Dashboard you ll see a Building status until the model is complete Create Predictive Audience Once your model is built view the Model Summary to determine if it s ready for use in your targeting You must Activate a Lookalike Model before creating a Predictive Audience which will evaluate users and write the model s prediction scores to user profiles This process can take up to three days for large audiences On the summary page click Create Predictive Audience in the Model Usage section which will open the audience builder pre populated with your model s predictions The default model decision threshold of 0 5 is used but you can adjust the decision threshold as needed to reach more users or be more accurate to only target users who are most likely to churn Next Steps After creating a Predictive Audience you may want to target this audience with emails to help them re engage with your brand For more information check out our playbook on retaining customers Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lookalike-models-determine-which-subscribers-are-likely-to-churn#content",
    "title": "https://docs.lytics.com/docs/lookalike-models-determine-which-subscribers-are-likely-to-churn#content",
    "chunk_text": "Retaining customers is more important now than ever and for businesses that have a subscription model reaching out to users who are risk of churning is an effective way to improve retention and customer engagement Define Source and Target Audiences The first step to building a Lookalike Model is selecting your source and target audiences The target audience in this case includes subscribers who are at risk of churning You can define this based on the users last engagement time or some some other measure of engagement The source audience will include current subscribers which you can define using subscription field s from your imported data Build Lookalike Model In the Lytics UI head to the Laboratory section and click Create New Model at the top right On the configuration page you ll select the source and target audiences that you previously defined By default the Auto Tune option is turned off If you re not getting enough performance out of your models try Auto Tune which will select the default parameters for you Select Model Training Only if you re in an exploratory phase and not ready to target users based on this model s predictions Learn more about the configuration options in our Model Builder documentation Depending on the sizes of your source and target audiences your Lookalike Model may take a few minutes up to a few hours to build On your Model Dashboard you ll see a Building status until the model is complete Create Predictive Audience Once your model is built view the Model Summary to determine if it s ready for use in your targeting You must Activate a Lookalike Model before creating a Predictive Audience which will evaluate users and write the model s prediction scores to user profiles This process can take up to three days for large audiences On the summary page click Create Predictive Audience in the Model Usage section which will open the audience builder pre populated with your model s predictions The default model decision threshold of 0 5 is used but you can adjust the decision threshold as needed to reach more users or be more accurate to only target users who are most likely to churn Next Steps After creating a Predictive Audience you may want to target this audience with emails to help them re engage with your brand For more information check out our playbook on retaining customers Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/mobile-messaging-with-lytics-webhooks-and-serverless-functions-1",
    "title": "https://docs.lytics.com/docs/mobile-messaging-with-lytics-webhooks-and-serverless-functions-1",
    "chunk_text": "Lytics webhooks paired with serverless functions are a great way to build custom workflows to power your marketing campaigns This workflow is very flexible and can be configured as a trigger for a variety of platforms to send emails push notifications and alerts This example uses a serverless cloud function to send a text message to a non subscribed user when they become highly engaged via Twilio Setup the audience In this example you re going to send a personalized text message to a user when they become highly engaged determined by Lytics behavioral scores Additionally you only want to send messages to non subscribed users who have a phone number Therefore you are going to need to create an audience with three criteria First only users who are or become deeply engaged based on Lytics data science scores Second their profile has a phone number And third they are not yet a subscriber as the text message will include a sign up link In the audience builder you re going to use an existing audience for highly engaged users and two custom rules for subscribers and phone numbers For additional instructions on building audiences check out the audience builder docs NOTE Twilio s API requires phone numbers with a country code e g 11234567890 If phone numbers are not stored in this format in the user s Lytics profile the cloud function can be used to correctly format the number Create the cloud function This example uses Google Cloud Functions to power this custom workflow however this will work just as well with other serverless tools like AWS Lambda or Azure Functions For a quickstart on Google Cloud Functions see Quickstart Using the gcloud Command Line Tool The Lytics webhook sends the full profile of a user when they enter or exit the audience The code below receives the profile in the body of the request then uses the Twilio API to send a custom text message to the user Note You ll also need a Twilio account When using a Twilio free trial you can only send text messages to the numbers in your Verified Phone Number list Twilio Client const accountSid process env ACCOUNT_SID const authToken process env AUTH_TOKEN const client require twilio accountSid authToken exports sms req res const r req body Do not send a text message when the user exits the audience if r data segment_events 0 event exit res status 200 end return const from your twilio number const to r data phone_number const body Hey r data first_name there we thought you might be interested in subscribing As an added bonus here is a link to get your first month free your_link com uid r data _uid Send the message client messages create from to body then message console log message sid then res status 200 end success catch err res status 500 end error err Next deploy the function You can get your account_sid and auth_token from the Twilio dashboard gcloud functions deploy sms set env vars ACCOUNT_SID your_account_sid AUTH_TOKEN your_auth_token runtime nodejs8 trigger http After deploying the cloud function you will be provided with an endpoint that triggers the function You can also find this in the Cloud Functions console Create the Webhook Next you need to export the audience previously created Return to Lytics and navigate to Data Integrations and select Webhooks Next click New Workflow then Segment Triggers Webhook select the audience created previously moving it to the right column enter the url trigger for your cloud function into the Webhook URL field and click Start Export You should received a message that your webhook was successfully created When a user enters or exits the selected audience the Lytics webhook will send a POST request to the provided URL triggering the cloud function That s it You ve successfully created a webhook trigger that will automatically send a text message to unsubscribed users when they enter the highly engaged audience Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/mobile-messaging-with-lytics-webhooks-and-serverless-functions-1#content",
    "title": "https://docs.lytics.com/docs/mobile-messaging-with-lytics-webhooks-and-serverless-functions-1#content",
    "chunk_text": "Lytics webhooks paired with serverless functions are a great way to build custom workflows to power your marketing campaigns This workflow is very flexible and can be configured as a trigger for a variety of platforms to send emails push notifications and alerts This example uses a serverless cloud function to send a text message to a non subscribed user when they become highly engaged via Twilio Setup the audience In this example you re going to send a personalized text message to a user when they become highly engaged determined by Lytics behavioral scores Additionally you only want to send messages to non subscribed users who have a phone number Therefore you are going to need to create an audience with three criteria First only users who are or become deeply engaged based on Lytics data science scores Second their profile has a phone number And third they are not yet a subscriber as the text message will include a sign up link In the audience builder you re going to use an existing audience for highly engaged users and two custom rules for subscribers and phone numbers For additional instructions on building audiences check out the audience builder docs NOTE Twilio s API requires phone numbers with a country code e g 11234567890 If phone numbers are not stored in this format in the user s Lytics profile the cloud function can be used to correctly format the number Create the cloud function This example uses Google Cloud Functions to power this custom workflow however this will work just as well with other serverless tools like AWS Lambda or Azure Functions For a quickstart on Google Cloud Functions see Quickstart Using the gcloud Command Line Tool The Lytics webhook sends the full profile of a user when they enter or exit the audience The code below receives the profile in the body of the request then uses the Twilio API to send a custom text message to the user Note You ll also need a Twilio account When using a Twilio free trial you can only send text messages to the numbers in your Verified Phone Number list Twilio Client const accountSid process env ACCOUNT_SID const authToken process env AUTH_TOKEN const client require twilio accountSid authToken exports sms req res const r req body Do not send a text message when the user exits the audience if r data segment_events 0 event exit res status 200 end return const from your twilio number const to r data phone_number const body Hey r data first_name there we thought you might be interested in subscribing As an added bonus here is a link to get your first month free your_link com uid r data _uid Send the message client messages create from to body then message console log message sid then res status 200 end success catch err res status 500 end error err Next deploy the function You can get your account_sid and auth_token from the Twilio dashboard gcloud functions deploy sms set env vars ACCOUNT_SID your_account_sid AUTH_TOKEN your_auth_token runtime nodejs8 trigger http After deploying the cloud function you will be provided with an endpoint that triggers the function You can also find this in the Cloud Functions console Create the Webhook Next you need to export the audience previously created Return to Lytics and navigate to Data Integrations and select Webhooks Next click New Workflow then Segment Triggers Webhook select the audience created previously moving it to the right column enter the url trigger for your cloud function into the Webhook URL field and click Start Export You should received a message that your webhook was successfully created When a user enters or exits the selected audience the Lytics webhook will send a POST request to the provided URL triggering the cloud function That s it You ve successfully created a webhook trigger that will automatically send a text message to unsubscribed users when they enter the highly engaged audience Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/optimize-remarketing-spend",
    "title": "https://docs.lytics.com/docs/optimize-remarketing-spend",
    "chunk_text": "Remarketing is considered to be one of the most efficient channels available for return on ad spend If done correctly this is a great channel for customer acquisition However most advertisers remarket wastefully If your remarketing partners were more efficient you d have more dollars to pursue new customers or more dollars to return to the bottom line Lytics can quantify recency depth of visit likelihood to return likelihood to transact and other metrics based on predictive data science and combine those scores with discrete factors such as categories browsed content affinities and whether or not someone is a subscriber or customer Using this data alone can enable most of our clients to pay back their investment in Lytics within days or weeks Build an Effective Remarketing Audience Remarketing to users most likely to transact starts by building an audience that includes the users who show the greatest depth of engagement and have the most recent activity Advertisers have had success measuring engagement with a semi arbitrary metrics such as 3 or more pageviews but Lytics has found greater success up to 60 more efficient by using Lytics data science scores in this case quantity Similarly using Lytics recency score has been more effective than a fixed date range in targeting the most recent users Using the Lytics audience builder you can build an audience based on two custom rules The goal is to produce an audience that represents the top 10 of your total audience First add a custom rule based on score_quantity setting the value that includes the top 15 of your total audience Second add a custom rule based on score_recency setting a value that leaves 10 of your total audience You should play with these numbers to find the audience that makes the most sense for your campaign A higher quantity score will produce an audience of users who are more deeply engaged while a higher recency score will target users who have been active more recently Finally if you re really looking to get the extra mile you can avoid spending on remarketing to users that you can already reach through other channels such as email Consider removing users for whom you have an email address To filter users with known email addresses add a existing audience rule based on the Email Capture Status Known Email characteristic and toggle Excluded Export Remarketing Audience to Ad Networks Your remarketing audience can be exported to Facebook Google Ads or other ad networks for use in your advertising campaign Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/optimize-remarketing-spend#content",
    "title": "https://docs.lytics.com/docs/optimize-remarketing-spend#content",
    "chunk_text": "Remarketing is considered to be one of the most efficient channels available for return on ad spend If done correctly this is a great channel for customer acquisition However most advertisers remarket wastefully If your remarketing partners were more efficient you d have more dollars to pursue new customers or more dollars to return to the bottom line Lytics can quantify recency depth of visit likelihood to return likelihood to transact and other metrics based on predictive data science and combine those scores with discrete factors such as categories browsed content affinities and whether or not someone is a subscriber or customer Using this data alone can enable most of our clients to pay back their investment in Lytics within days or weeks Build an Effective Remarketing Audience Remarketing to users most likely to transact starts by building an audience that includes the users who show the greatest depth of engagement and have the most recent activity Advertisers have had success measuring engagement with a semi arbitrary metrics such as 3 or more pageviews but Lytics has found greater success up to 60 more efficient by using Lytics data science scores in this case quantity Similarly using Lytics recency score has been more effective than a fixed date range in targeting the most recent users Using the Lytics audience builder you can build an audience based on two custom rules The goal is to produce an audience that represents the top 10 of your total audience First add a custom rule based on score_quantity setting the value that includes the top 15 of your total audience Second add a custom rule based on score_recency setting a value that leaves 10 of your total audience You should play with these numbers to find the audience that makes the most sense for your campaign A higher quantity score will produce an audience of users who are more deeply engaged while a higher recency score will target users who have been active more recently Finally if you re really looking to get the extra mile you can avoid spending on remarketing to users that you can already reach through other channels such as email Consider removing users for whom you have an email address To filter users with known email addresses add a existing audience rule based on the Email Capture Status Known Email characteristic and toggle Excluded Export Remarketing Audience to Ad Networks Your remarketing audience can be exported to Facebook Google Ads or other ad networks for use in your advertising campaign Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/personalize-the-messaging-of-your-website-based-on-audience",
    "title": "https://docs.lytics.com/docs/personalize-the-messaging-of-your-website-based-on-audience",
    "chunk_text": "Lytics web Experiences are a great way to quickly spin up a modal or slideout on your website with personalized messaging For a deeper personalized experience you can take it a step further by tailoring inline elements on your web page towards different Lytics audiences using the Pathfora SDK In this guide you will learn how to implement inline content modularization which will show and hide different pieces of content on your website based on a user s audience membership This example will provide content for following audiences high momentum users first time visitors and users who have recently abandoned their cart during checkout You can download the complete HTML code for this example from the Github examples repository This example could also be implemented using Pathfora widgets with the inline layout An example JavaScript configuration is included should you wish to try the alternate implementation However this guide will focus on the HTML solution as it is often the preferred method given that the development process is very similar to adding a new section to your website and there is no pre defined structure of the content that may be displayed Defining your Audiences and Content In this example you will use three audiences to determine what content should be shown in a section to the right of the main hero for the website This is a small scale example but as you can imagine this technique could be applied to multiple major parts of your website to completely customize the site for your users Before your team does any design or copy writing it may help to determine which key Lytics audiences you would like to target If your organization has the concept of personas you may want to think about how your website should communicate and look to each of these personas and then build or use existing audiences that represent these user archetypes Regardless of the scale of your project the audiences should inform the messaging Audiences used for inline content modularization must be API Enabled and have an API ID You will need to know the IDs of your audiences for the next step Once you have finalized the audience definitions designs and copy for your inline personalized modules simply start by building out the content as you normally would with HTML and CSS on your website Start with the content to be displayed to a single audience This is the HTML example of content displayed to first time visitors of the website HTML div class feature block div class block head Thanks span for visiting span div div class block inner img class feature image src assets iphone png alt iPhone p Check out our new products We provide the highest quality in everything from the newest smart phones to your favorite brand of shoes p a class btn href shop html Shop Now a div div Go ahead and build out all the code for each of your audiences It may help to comment out the options that will be shown to different audiences as you go so that you can simulate what an end user in each audience will see instead of viewing all personalized content options at once Implementing Content Modularization When all of your content is good to go it s time to apply the audiences Consider the following definitions A block is a unit of content to be displayed to a single audience within a group A group may be made up of one or many content blocks each with unique audiences The end user will only be able to see one block on the webpage per group Thus blocks within a group might need to be formatted similarly as they will take up the same space on the page In the example code there is a single group which will control the content displayed to the right of the hero and four blocks within that group one for each audience and a fourth block to be displayed to users who are not a member of any of the audiences associated with the other blocks in the group These concepts map to code with the following data attributes data pftrigger The ID of the audience you wish to display the block to Each unique value for this attribute defines the element as different block within the group data pfgroup A string name unique to the group which differentiates it from other personalization groups defined on the page This name should be descriptive regarding a commonality between its content blocks such as placement on the page Remember to check out the Pathfora documentation for more information on these attributes and additional code examples Putting it all together here s what the full content modularization example code looks like HTML High Momentum block div class feature block data pfgroup right_hero_feature data pftrigger high_momentum div class block head Get new coupons span every month span div div class block inner img class feature image src assets money png alt Save Money p Want to get monthly coupons for up to 30 off your order every month Sign up below to subscribe to our coupon mailing list p a class btn href signup html Sign Up a div div First Time Visitors block div class feature block data pfgroup right_hero_feature data pftrigger first_time_visitor div class block head Thanks span for visiting span div div class block inner img class feature image src assets iphone png alt iPhone p Check out our new products We provide the highest quality in everything from the newest smart phones to your favorite brand of shoes p a class btn href shop html Shop Now a div div Cart Abandoners block div class feature block data pfgroup right_hero_feature data pftrigger cart_abandoners div class block head Get your order with span free shipping span div div class block inner img class feature image src assets basket png alt Shopping Basket p Looks like you were interested in purchasing a product on our site recently We d like to offer you free shipping on your current order You re welcome p a class btn href checkout html Apply Discount a div div Default block div data pfgroup right_hero_feature data pftrigger default Default content here div Ordering of blocks does matter For example you may be wondering what would a user who has a high momentum score and has recently abandoned their cart would see using the example above Pathfora will select the first item in the group that is applicable to the current user based on audience membership thus the user would see the block targeted at high momentum users If you wanted it to be possible for the user to see both content blocks at once you would need to define them in separate groups Additional Notes You may notice some flickering of elements when the page loads This can happen if Pathfora library and is loaded after the DOM itself has loaded To get around this you can add the following line of CSS to your website CSS data pftrigger data pfrecommend display none This ensures that all blocks are hidden upon page load and once Pathfora has loaded it will set the proper display settings to show only the appropriate block for each group Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/personalize-the-messaging-of-your-website-based-on-audience#content",
    "title": "https://docs.lytics.com/docs/personalize-the-messaging-of-your-website-based-on-audience#content",
    "chunk_text": "Lytics web Experiences are a great way to quickly spin up a modal or slideout on your website with personalized messaging For a deeper personalized experience you can take it a step further by tailoring inline elements on your web page towards different Lytics audiences using the Pathfora SDK In this guide you will learn how to implement inline content modularization which will show and hide different pieces of content on your website based on a user s audience membership This example will provide content for following audiences high momentum users first time visitors and users who have recently abandoned their cart during checkout You can download the complete HTML code for this example from the Github examples repository This example could also be implemented using Pathfora widgets with the inline layout An example JavaScript configuration is included should you wish to try the alternate implementation However this guide will focus on the HTML solution as it is often the preferred method given that the development process is very similar to adding a new section to your website and there is no pre defined structure of the content that may be displayed Defining your Audiences and Content In this example you will use three audiences to determine what content should be shown in a section to the right of the main hero for the website This is a small scale example but as you can imagine this technique could be applied to multiple major parts of your website to completely customize the site for your users Before your team does any design or copy writing it may help to determine which key Lytics audiences you would like to target If your organization has the concept of personas you may want to think about how your website should communicate and look to each of these personas and then build or use existing audiences that represent these user archetypes Regardless of the scale of your project the audiences should inform the messaging Audiences used for inline content modularization must be API Enabled and have an API ID You will need to know the IDs of your audiences for the next step Once you have finalized the audience definitions designs and copy for your inline personalized modules simply start by building out the content as you normally would with HTML and CSS on your website Start with the content to be displayed to a single audience This is the HTML example of content displayed to first time visitors of the website HTML div class feature block div class block head Thanks span for visiting span div div class block inner img class feature image src assets iphone png alt iPhone p Check out our new products We provide the highest quality in everything from the newest smart phones to your favorite brand of shoes p a class btn href shop html Shop Now a div div Go ahead and build out all the code for each of your audiences It may help to comment out the options that will be shown to different audiences as you go so that you can simulate what an end user in each audience will see instead of viewing all personalized content options at once Implementing Content Modularization When all of your content is good to go it s time to apply the audiences Consider the following definitions A block is a unit of content to be displayed to a single audience within a group A group may be made up of one or many content blocks each with unique audiences The end user will only be able to see one block on the webpage per group Thus blocks within a group might need to be formatted similarly as they will take up the same space on the page In the example code there is a single group which will control the content displayed to the right of the hero and four blocks within that group one for each audience and a fourth block to be displayed to users who are not a member of any of the audiences associated with the other blocks in the group These concepts map to code with the following data attributes data pftrigger The ID of the audience you wish to display the block to Each unique value for this attribute defines the element as different block within the group data pfgroup A string name unique to the group which differentiates it from other personalization groups defined on the page This name should be descriptive regarding a commonality between its content blocks such as placement on the page Remember to check out the Pathfora documentation for more information on these attributes and additional code examples Putting it all together here s what the full content modularization example code looks like HTML High Momentum block div class feature block data pfgroup right_hero_feature data pftrigger high_momentum div class block head Get new coupons span every month span div div class block inner img class feature image src assets money png alt Save Money p Want to get monthly coupons for up to 30 off your order every month Sign up below to subscribe to our coupon mailing list p a class btn href signup html Sign Up a div div First Time Visitors block div class feature block data pfgroup right_hero_feature data pftrigger first_time_visitor div class block head Thanks span for visiting span div div class block inner img class feature image src assets iphone png alt iPhone p Check out our new products We provide the highest quality in everything from the newest smart phones to your favorite brand of shoes p a class btn href shop html Shop Now a div div Cart Abandoners block div class feature block data pfgroup right_hero_feature data pftrigger cart_abandoners div class block head Get your order with span free shipping span div div class block inner img class feature image src assets basket png alt Shopping Basket p Looks like you were interested in purchasing a product on our site recently We d like to offer you free shipping on your current order You re welcome p a class btn href checkout html Apply Discount a div div Default block div data pfgroup right_hero_feature data pftrigger default Default content here div Ordering of blocks does matter For example you may be wondering what would a user who has a high momentum score and has recently abandoned their cart would see using the example above Pathfora will select the first item in the group that is applicable to the current user based on audience membership thus the user would see the block targeted at high momentum users If you wanted it to be possible for the user to see both content blocks at once you would need to define them in separate groups Additional Notes You may notice some flickering of elements when the page loads This can happen if Pathfora library and is loaded after the DOM itself has loaded To get around this you can add the following line of CSS to your website CSS data pftrigger data pfrecommend display none This ensures that all blocks are hidden upon page load and once Pathfora has loaded it will set the proper display settings to show only the appropriate block for each group Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/populate-your-website-with-one-to-one-content-recommendations",
    "title": "https://docs.lytics.com/docs/populate-your-website-with-one-to-one-content-recommendations",
    "chunk_text": "Content recommendations are a powerful tool to keep visitors engaged on your website You can build an even deeper integration with Lytics content recommendations by embedding them directly onto your site In this guide you will learn to implement inline content recommendations using the Pathfora SDK You can download the complete HTML code for this example from the Github examples repository Build a Content Collection Before you proceed you will need to create a content collection See the documentation on content collections to learn how to build a collection And the documentation on using content collections for recommendations for instructions on how to get the ID of the collection which you will need in the next step The collection in this example contains product pages so that the recommendation algorithm can recommend products to users based on their interests Constructing The Recommendations Start by thinking about how you want your content recommendations to look on the page Check the Pathfora documentation for the list of available fields that you may include in the presentation of your content This example will include an image title description and a link to the product page Next determine how many recommendations you want to show on the page Similar to content modularization Pathfora uses the concept of groups and blocks but this time in a slightly different context A block is a single unit of content a single article product etc A group defines one or multiple blocks of content recommendations that pull recommendations from the same Lytics content collection That is the same content will not be repeated more than once in a group This example has four blocks in the group These concepts map to the follow data HTML attributes data pfblock A unique string name for a single recommendation block data pfrecommend The ID of the content collection Blocks with the same data pfrecommend value are considered part of the same group as they use the same content collection There is an additional attribute data pftype which is applied to multiple elements within the block This identifies what field Pathfora should use fill in the value of the element See the documentation for in in depth breakdown of what fields are available and how they should be named Now consider this HTML example for a single recommendation block HTML li class product data pfblock product_rec_1 data pfrecommend collection_id img data pftype image alt product recommendation h4 data pftype title h4 p data pftype description p a class button data pftype url Buy span class icon span a li These appear to be empty elements however once Pathfora makes the call to the Lytics content recommendation API it will fill in the elements accordingly Setting the src attribute for the img the href value for the a element and the inner text of the title and description elements That s really all there is to it You can repeat this code to include multiple blocks for multiple recommendations and then style your recommendations accordingly HTML Recommendations div class recommendation block div class block head img src assets offers icon png alt store icon Recommended span just for you span div ul class block inner Product 1 li class product data pfblock product_rec_1 data pfrecommend collection_id img data pftype image alt product recommendation h4 data pftype title h4 p data pftype description p a class button data pftype url Buy span class icon span a li Product 2 li class product data pfblock product_rec_2 data pfrecommend collection_id img data pftype image alt product recommendation h4 data pftype title h4 p data pftype description p a class button data pftype url Buy span class icon span a li Product 3 li class product data pfblock product_rec_3 data pfrecommend collection_id img data pftype image alt product recommendation h4 data pftype title h4 p data pftype description p a class button data pftype url Buy span class icon span a li Product 4 li class product data pfblock product_rec_4 data pfrecommend collection_id img data pftype image alt product recommendation h4 data pftype title h4 p data pftype description p a class button data pftype url Buy span class icon span a li ul div Remember that the recommendation API will return different content for different users based on their affinities in Lytics Be sure to test the style of your recommendation block with different pieces of content in your collection to ensure that it will work for content with or without an image descriptions of varying size etc Or you may choose to adjust your content collection accordingly Additional Notes As mentioned in the content modularlization guide you may notice some flickering of elements when the page loads This can happen if Pathfora library and subsequent requests it makes to the Lytics recommendation API is loaded after the DOM itself has loaded To get around this you can add the following line of CSS to your website CSS data pftrigger data pfrecommend display none This ensures that all recommendation blocks are hidden upon page load and once Pathfora has loaded it will populate the block with the content before showing it to the user Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/populate-your-website-with-one-to-one-content-recommendations#content",
    "title": "https://docs.lytics.com/docs/populate-your-website-with-one-to-one-content-recommendations#content",
    "chunk_text": "Content recommendations are a powerful tool to keep visitors engaged on your website You can build an even deeper integration with Lytics content recommendations by embedding them directly onto your site In this guide you will learn to implement inline content recommendations using the Pathfora SDK You can download the complete HTML code for this example from the Github examples repository Build a Content Collection Before you proceed you will need to create a content collection See the documentation on content collections to learn how to build a collection And the documentation on using content collections for recommendations for instructions on how to get the ID of the collection which you will need in the next step The collection in this example contains product pages so that the recommendation algorithm can recommend products to users based on their interests Constructing The Recommendations Start by thinking about how you want your content recommendations to look on the page Check the Pathfora documentation for the list of available fields that you may include in the presentation of your content This example will include an image title description and a link to the product page Next determine how many recommendations you want to show on the page Similar to content modularization Pathfora uses the concept of groups and blocks but this time in a slightly different context A block is a single unit of content a single article product etc A group defines one or multiple blocks of content recommendations that pull recommendations from the same Lytics content collection That is the same content will not be repeated more than once in a group This example has four blocks in the group These concepts map to the follow data HTML attributes data pfblock A unique string name for a single recommendation block data pfrecommend The ID of the content collection Blocks with the same data pfrecommend value are considered part of the same group as they use the same content collection There is an additional attribute data pftype which is applied to multiple elements within the block This identifies what field Pathfora should use fill in the value of the element See the documentation for in in depth breakdown of what fields are available and how they should be named Now consider this HTML example for a single recommendation block HTML li class product data pfblock product_rec_1 data pfrecommend collection_id img data pftype image alt product recommendation h4 data pftype title h4 p data pftype description p a class button data pftype url Buy span class icon span a li These appear to be empty elements however once Pathfora makes the call to the Lytics content recommendation API it will fill in the elements accordingly Setting the src attribute for the img the href value for the a element and the inner text of the title and description elements That s really all there is to it You can repeat this code to include multiple blocks for multiple recommendations and then style your recommendations accordingly HTML Recommendations div class recommendation block div class block head img src assets offers icon png alt store icon Recommended span just for you span div ul class block inner Product 1 li class product data pfblock product_rec_1 data pfrecommend collection_id img data pftype image alt product recommendation h4 data pftype title h4 p data pftype description p a class button data pftype url Buy span class icon span a li Product 2 li class product data pfblock product_rec_2 data pfrecommend collection_id img data pftype image alt product recommendation h4 data pftype title h4 p data pftype description p a class button data pftype url Buy span class icon span a li Product 3 li class product data pfblock product_rec_3 data pfrecommend collection_id img data pftype image alt product recommendation h4 data pftype title h4 p data pftype description p a class button data pftype url Buy span class icon span a li Product 4 li class product data pfblock product_rec_4 data pfrecommend collection_id img data pftype image alt product recommendation h4 data pftype title h4 p data pftype description p a class button data pftype url Buy span class icon span a li ul div Remember that the recommendation API will return different content for different users based on their affinities in Lytics Be sure to test the style of your recommendation block with different pieces of content in your collection to ensure that it will work for content with or without an image descriptions of varying size etc Or you may choose to adjust your content collection accordingly Additional Notes As mentioned in the content modularlization guide you may notice some flickering of elements when the page loads This can happen if Pathfora library and subsequent requests it makes to the Lytics recommendation API is loaded after the DOM itself has loaded To get around this you can add the following line of CSS to your website CSS data pftrigger data pfrecommend display none This ensures that all recommendation blocks are hidden upon page load and once Pathfora has loaded it will populate the block with the content before showing it to the user Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/promote-relevant-content-to-users-based-on-their-interests",
    "title": "https://docs.lytics.com/docs/promote-relevant-content-to-users-based-on-their-interests",
    "chunk_text": "Lytics audiences using Affinities in combination with Facebook custom audiences allows you to target known users with content based on topics they are interested in You can use this to promote an upcoming event product launch or a new piece of content for your brand You can also use the same Lytics content affinity audience with lookalike audiences to serve relevant content to new users Identify Key Topics The Lytics content affinity engine builds a topic taxonomy from content on your website Lytics will use this taxonomy and user activity data to determine a user s affinity for a topic These content affinity scores are available in the audience builder and will be core to building your target audience Select the piece of content you wish to promote Then take some time to familiarize yourself with the topics in your Lytics account and try to identify the Lytics topics that are relevant to your content You can sort by the average level of affinity on the topic list view to ensure you are using a popular topic for targeting criteria You may choose one or more of these topics to include in an Affinity which you can then use to create audiences Clicking on a topic displays a summary page which shows a full distribution of user interest Build an Audience Using Content Affinity For most marketing use cases it s useful to target users based on their interests in a group of related topics For this reason Lytics enables you to create your own brand specific Affinities You can also target users based on their interest in an individual topic See our Audience Builder documentation for more information Once you have your Affinity rules included verify that the user count of your audience looks correct If you plan to use this as a source audience for a lookalike Facebook expects anywhere from 1 000 to 50 000 users For a simple retargeting audience you ll want to reach a broad number of users You may adjust the sliders on your affinity rules accordingly Using your Lytics Audience in an Ad Campaign To use your Lytics content affinity audience in Facebook lookalike ads campaign Follow through with the steps below Export to Facebook Create a Facebook Lookalike Audience Assign your Lookalike Audience to an Ad To run a retargeting ad to the users in this audience Export to Facebook as a custom audience Create your ad following your normal process If you are building an ad for the first time follow the Facebook Ad creation guidelines Select the custom audience created by the export during the audience set up process of ad creation Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/promote-relevant-content-to-users-based-on-their-interests#content",
    "title": "https://docs.lytics.com/docs/promote-relevant-content-to-users-based-on-their-interests#content",
    "chunk_text": "Lytics audiences using Affinities in combination with Facebook custom audiences allows you to target known users with content based on topics they are interested in You can use this to promote an upcoming event product launch or a new piece of content for your brand You can also use the same Lytics content affinity audience with lookalike audiences to serve relevant content to new users Identify Key Topics The Lytics content affinity engine builds a topic taxonomy from content on your website Lytics will use this taxonomy and user activity data to determine a user s affinity for a topic These content affinity scores are available in the audience builder and will be core to building your target audience Select the piece of content you wish to promote Then take some time to familiarize yourself with the topics in your Lytics account and try to identify the Lytics topics that are relevant to your content You can sort by the average level of affinity on the topic list view to ensure you are using a popular topic for targeting criteria You may choose one or more of these topics to include in an Affinity which you can then use to create audiences Clicking on a topic displays a summary page which shows a full distribution of user interest Build an Audience Using Content Affinity For most marketing use cases it s useful to target users based on their interests in a group of related topics For this reason Lytics enables you to create your own brand specific Affinities You can also target users based on their interest in an individual topic See our Audience Builder documentation for more information Once you have your Affinity rules included verify that the user count of your audience looks correct If you plan to use this as a source audience for a lookalike Facebook expects anywhere from 1 000 to 50 000 users For a simple retargeting audience you ll want to reach a broad number of users You may adjust the sliders on your affinity rules accordingly Using your Lytics Audience in an Ad Campaign To use your Lytics content affinity audience in Facebook lookalike ads campaign Follow through with the steps below Export to Facebook Create a Facebook Lookalike Audience Assign your Lookalike Audience to an Ad To run a retargeting ad to the users in this audience Export to Facebook as a custom audience Create your ad following your normal process If you are building an ad for the first time follow the Facebook Ad creation guidelines Select the custom audience created by the export during the audience set up process of ad creation Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/reach-the-right-people-using-lytics",
    "title": "https://docs.lytics.com/docs/reach-the-right-people-using-lytics",
    "chunk_text": "Isolated channel centric events like website clicks or email opens don t provide a comprehensive view of your customers or their intentions Using this kind of event data to drive the audience lists for your marketing ad campaigns can lead to your ad dollars being spent inefficiently by either targeting too many people with a generic message or targeting individuals who are unlikely to convert Lytics helps you improve your ROI by advertising to the right people based on the content they are interested in and how they behave across your communication channels Let Lytics Build Your Audiences Using the Lytics JavaScript Tag Lytics will catalog your website content in real time and group individuals based on their interest levels for particular topics or products Additionally using behavioral algorithms the platform will analyze and score your customers by their overall engagement level across your communication channels for example highly engaged As your audiences change over time use Lytics as a centralized hub for automatically syncing them with your connected advertising tools such as Facebook Ads AdRoll Google Ads or DoubleClick for Publishers for an up to date view of your target customers Refine Your Target Audience The Lytics Query Language LQL allows you to refine your target audience and remove customers with certain profile attributes or behaviors enabling further efficiencies in your ad spend Targeted Ad Campaigns Examples of how Lytics audiences can help with your most common targeted advertising Smarter lookalike prospecting with Facebook Lookalike audiences based on your most valued customers behaviors engagement scores and lifetime value Target your users with content they are interested in using Lytics topics and content affinity scores for building your audiences Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/reach-the-right-people-using-lytics#content",
    "title": "https://docs.lytics.com/docs/reach-the-right-people-using-lytics#content",
    "chunk_text": "Isolated channel centric events like website clicks or email opens don t provide a comprehensive view of your customers or their intentions Using this kind of event data to drive the audience lists for your marketing ad campaigns can lead to your ad dollars being spent inefficiently by either targeting too many people with a generic message or targeting individuals who are unlikely to convert Lytics helps you improve your ROI by advertising to the right people based on the content they are interested in and how they behave across your communication channels Let Lytics Build Your Audiences Using the Lytics JavaScript Tag Lytics will catalog your website content in real time and group individuals based on their interest levels for particular topics or products Additionally using behavioral algorithms the platform will analyze and score your customers by their overall engagement level across your communication channels for example highly engaged As your audiences change over time use Lytics as a centralized hub for automatically syncing them with your connected advertising tools such as Facebook Ads AdRoll Google Ads or DoubleClick for Publishers for an up to date view of your target customers Refine Your Target Audience The Lytics Query Language LQL allows you to refine your target audience and remove customers with certain profile attributes or behaviors enabling further efficiencies in your ad spend Targeted Ad Campaigns Examples of how Lytics audiences can help with your most common targeted advertising Smarter lookalike prospecting with Facebook Lookalike audiences based on your most valued customers behaviors engagement scores and lifetime value Target your users with content they are interested in using Lytics topics and content affinity scores for building your audiences Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/retain-existing-customers-with-lytics",
    "title": "https://docs.lytics.com/docs/retain-existing-customers-with-lytics",
    "chunk_text": "Now more than ever companies must focus on retaining and growing their existing customers Acquiring customers is expensive and most companies are seeing diminishing returns on acquisition tactics For this reason lower to mid funnel tactics are gaining attention from CMOs Companies can no longer rely upon gimmicky brand advertising on mass channels The following is the Lytics Playbook for retaining existing subscribers The framework There are two important concepts within retention marketing as it pertains to Lytics While these concepts apply across industries we will focus on the subscription vertical for this playbook For our purposes we will define these concepts as follows Renewals customers who have an upcoming renewal date Winbacks recovery efforts for subscribers whose renewal date has lapsed How Lytics helps Lytics helps you renew and winback customers in multiple ways Identifying individual users who have upcoming renewals Scoring the likelihood of renewal or churn Triggering cross channel messaging to encourage renewal Executing targeted promotions and discounts Recognizing a user whose renewal date has past or subscription has expired Driving personalized winback communications across channels The big breakthrough for marketers is that retention teams now have the opportunity to automate consistent messaging across multiple channels In their research The Aberdeen Group found Companies with extremely strong omnichannel customer engagement see a 9 5 year over year increase in annual revenue compared to 3 4 for weak omnichannel companies Similarly strong omnichannel companies see a 7 5 year over year decrease in cost per contact compared to a 0 2 year over year decrease for weak companies The playbook Step 1 Create a renewals audience Consider the fields available for renewal in your audiences Some common ones might include the time of last purchase subscription start date and subscription end date You might add additional criteria such as filters excluding complementary subscriptions Effort Impact Developer Required Low Low building block for cross channel use cases No Consider that you will likely have several renewals audiences one per subscription Step 2 Export audience to all key integrations The focus of renewals and winbacks will be cross channel which can include Google Facebook Verizon Media Yahoo Gemini your email service provider ESP available as Integrations and the Lytics Journey Canvas not an export Step 3 Create on site modals targeting renewals The most common renewal tactic is to deliver on site modals to users with an upcoming renewal Take the renewal audience you created in step one and then add custom personalized Experiences to target them See the slide out modal on the left side below as an example Further instructions are available for business users and for developers Effort Impact Developer Required Low High No but helpful for detailed customization Step 4 Add targeted email to your renewal journeys The email inbox is one of the most impactful places to reach your renewal users First build an email in your ESP that can be triggered based on a Lytics audience You ll need to follow the instructions in your ESP to do so and this varies considerably by tool Effort Impact Developer Required Medium High No but helpful for detailed customization of the email template Once you have a triggered email built in your ESP make use of the triggered email feature your ESP likely has Whatever ESP you have you probably do not want to include Existing Users in the audience so we recommend leaving that box unchecked Once this export is configured new customers who enter your renewal audience will be sent the automated message For examples of how you can go a step further and embed custom content in your email templates check out this Iterable use case Step 5 Involve telesales optional Imagine incorporating your message across channels to even include telesales Your telesales team likely has a stronger closing rate on renewals than your site or your email programs ever could There are two ways to incorporate telesales Encourage visitors to call inbound Deliver a list of leads for targeted outbound Effort Impact Developer Required Low Medium No Encourage Visitors To Call Inbound Leveraging very simple HTML you can create click to call campaigns in Orchestrate Then users on a mobile phone will be able to immediately talk to a rep on the phone Deliver a List of Leads for Targeted Outbound Build a list of all the upcoming renewals you care about Here s an example using several audiences of subscriptions expiring within the next 30 days as building blocks for a master telesales list Step 6 Incorporate direct mail optional Using the same example as above consider adding address information to the export and sending it to a fulfillment provider who can send direct mail to your renewals As a final note keep in mind there are many other areas to cover including copy choices step by step optimization and common pitfalls to avoid These are beyond the scope of this playbook but should be taken into consideration while developing your marketing strategy to retain customers Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/retain-existing-customers-with-lytics#content",
    "title": "https://docs.lytics.com/docs/retain-existing-customers-with-lytics#content",
    "chunk_text": "Now more than ever companies must focus on retaining and growing their existing customers Acquiring customers is expensive and most companies are seeing diminishing returns on acquisition tactics For this reason lower to mid funnel tactics are gaining attention from CMOs Companies can no longer rely upon gimmicky brand advertising on mass channels The following is the Lytics Playbook for retaining existing subscribers The framework There are two important concepts within retention marketing as it pertains to Lytics While these concepts apply across industries we will focus on the subscription vertical for this playbook For our purposes we will define these concepts as follows Renewals customers who have an upcoming renewal date Winbacks recovery efforts for subscribers whose renewal date has lapsed How Lytics helps Lytics helps you renew and winback customers in multiple ways Identifying individual users who have upcoming renewals Scoring the likelihood of renewal or churn Triggering cross channel messaging to encourage renewal Executing targeted promotions and discounts Recognizing a user whose renewal date has past or subscription has expired Driving personalized winback communications across channels The big breakthrough for marketers is that retention teams now have the opportunity to automate consistent messaging across multiple channels In their research The Aberdeen Group found Companies with extremely strong omnichannel customer engagement see a 9 5 year over year increase in annual revenue compared to 3 4 for weak omnichannel companies Similarly strong omnichannel companies see a 7 5 year over year decrease in cost per contact compared to a 0 2 year over year decrease for weak companies The playbook Step 1 Create a renewals audience Consider the fields available for renewal in your audiences Some common ones might include the time of last purchase subscription start date and subscription end date You might add additional criteria such as filters excluding complementary subscriptions Effort Impact Developer Required Low Low building block for cross channel use cases No Consider that you will likely have several renewals audiences one per subscription Step 2 Export audience to all key integrations The focus of renewals and winbacks will be cross channel which can include Google Facebook Verizon Media Yahoo Gemini your email service provider ESP available as Integrations and the Lytics Journey Canvas not an export Step 3 Create on site modals targeting renewals The most common renewal tactic is to deliver on site modals to users with an upcoming renewal Take the renewal audience you created in step one and then add custom personalized Experiences to target them See the slide out modal on the left side below as an example Further instructions are available for business users and for developers Effort Impact Developer Required Low High No but helpful for detailed customization Step 4 Add targeted email to your renewal journeys The email inbox is one of the most impactful places to reach your renewal users First build an email in your ESP that can be triggered based on a Lytics audience You ll need to follow the instructions in your ESP to do so and this varies considerably by tool Effort Impact Developer Required Medium High No but helpful for detailed customization of the email template Once you have a triggered email built in your ESP make use of the triggered email feature your ESP likely has Whatever ESP you have you probably do not want to include Existing Users in the audience so we recommend leaving that box unchecked Once this export is configured new customers who enter your renewal audience will be sent the automated message For examples of how you can go a step further and embed custom content in your email templates check out this Iterable use case Step 5 Involve telesales optional Imagine incorporating your message across channels to even include telesales Your telesales team likely has a stronger closing rate on renewals than your site or your email programs ever could There are two ways to incorporate telesales Encourage visitors to call inbound Deliver a list of leads for targeted outbound Effort Impact Developer Required Low Medium No Encourage Visitors To Call Inbound Leveraging very simple HTML you can create click to call campaigns in Orchestrate Then users on a mobile phone will be able to immediately talk to a rep on the phone Deliver a List of Leads for Targeted Outbound Build a list of all the upcoming renewals you care about Here s an example using several audiences of subscriptions expiring within the next 30 days as building blocks for a master telesales list Step 6 Incorporate direct mail optional Using the same example as above consider adding address information to the export and sending it to a fulfillment provider who can send direct mail to your renewals As a final note keep in mind there are many other areas to cover including copy choices step by step optimization and common pitfalls to avoid These are beyond the scope of this playbook but should be taken into consideration while developing your marketing strategy to retain customers Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/personalize-your-iterable-emails-with-lytics-content-recommendations",
    "title": "https://docs.lytics.com/docs/personalize-your-iterable-emails-with-lytics-content-recommendations",
    "chunk_text": "Lytics content recommendations provide powerful personalized one to one recommendations Sending content recommendations to your users via email is a great way to reengage them with your brand This guide will cover how to implement content recommendations in email with Iterable as the email service provider ESP It will use the Lytics content recommendation API and Iterable s data feed to render them inline in your email template This technique can be combined with other email use cases such as content modularization or triggered sends for a truly rich personalized experience Although you will be using the Lytics API no code is necessary to implement this solution beyond configuring some HTML and custom variables in your email template Before you begin You should have an Iterable account with an audience export running and an HTML email template with a section prepared for one or more content recommendations within it The recommendations can include any all of the following Title Description Image URL or link to the document Author Date of publication You can start by setting up your template with some static content For context here s how the content recommendations look in the example template that is used in this guide it includes all of the fields listed above In addition make sure you have a Lytics account with the content affinity engine activated You will also need to generate an API token with read access to content and user search Build a content collection To make recommendations you will need a content collection You can see our documentation on building content collections for more information Once saved you will also need the id of the content collection as you will use it in the next step Add content recommendation API as a data feed To populate recommendations in the email you will use the Iterable feature called a Data Feed to hook into the Lytics API before sending Login to your Iterable account Navigate to Integrations Data Feeds in the side bar Click Create New Feed Enter Lytics Content Recommendations or some other descriptive title in the Name text input Make sure the JSON option is selected from the Format dropdown Copy and paste the following URL into the URL text input https api lytics io api content recommend user email urlEncode email urlEncode contentsegment At the end of that URL paste the ID of the content collection you created in the previous step This ID is the hash in the URL not the name or slug of the content collection In the Authorization Token field paste a Lytics API token with read permission for content and user search Verify that your settings look correct and then click Save Feed Enabling this data feed in a template allows Iterable to call the Lytics content recommendation API before each email send Iterable will replace urlEncode email urlEncode with the URL encoded version of the recipient s email address The next step will cover how to access the content returned and format it to be surfaced in the email template You can add additional query parameters to the URL in the data feed to control things like the ranking of the recommendations or the number of documents returned See our Content Recommendation API documentation for a list of possible query parameters for this end point Modify your email template Now that the data feed has been configured it s time to apply it to your email template In Iterable open the template in edit mode Click the Advanced options tab and configure the following settings Check the Enable template generation using a data feed checkbox From the dropdown select the data feed you created in the previous step Check the Cache data feed response cached for up to 1 hour Optional Check the Merge the data feed and user contexts checkbox If you do not select Merge the data feed and user contexts you will need to use square brackets value instead of curly brackets value when accessing values from the data feed The examples in this guide assume that this option is checked Under the HTML version of the template click Source to view the HTML source of your template Locate the HTML of the recommendation section You will need to implement templates for each of the fields you wish to use returned from the content API Feel free to reference the response example in our API documentation but in general each field should match the following format data i fieldname Where i is the current index of the recommendation starting at 0 and fieldname is one of the following title Title of the document description Description of the document primary_image URL of the document s image url URL of the document excluding the protocol author Name of the author of the document this field may not be available for all content types created Date that the article was published Here is some example HTML laying out all of these fields for 3 separate recommendations HTML Recommendation 1 div img alt rec image src data 0 primary_image h5 data 0 title h5 span By data 0 author dateFormat data 0 created format full span p data 0 description p a href https data 0 url Read More a div Recommendation 2 div img alt rec image src data 1 primary_image h5 data 1 title h5 span By data 1 author dateFormat data 1 created format full span p data 1 description p a href https data 1 url Read More a div Recommendation 3 div img alt rec image src data 2 primary_image h5 data 2 title h5 span By data 2 author dateFormat data 2 created format full span p data 2 description p a href https data 2 url Read More a div As seen above you must add the http or https protocol in the href protocol before the URL field Also the example above includes date formatting for the published date field you can read more about this in Iterable s handlebars documentation Once you have finished editing the template click Save Template In the next step we ll verify that the data feed is working and recommendations are rendering correctly Previewing and verifying the recommendations Iterable allows you to preview a rendered version of your email in the browser with live data from your data feed Follow the instructions in this tutorial to preview your email with content recommendations Once you re happy with the preview you are ready to send your campaign You can implement your template into a workflow or send it as a blast campaign Rate Limiting For best results please talk to your Iterable representative about setting up a Message Send Rate Limit The Lytics Content Recommendation API can handle up to 250 requests per second or 15 000 requests per minute If the rate limit is not enabled with Iterable Lytics may return a 429 HTTP Status Code preventing emails from being delivered Troubleshooting For more information on troubleshooting your templates see Iterable s documentation on templating If you re not receiving a valid response from the Lytics content recommendation API please make sure that the email you are testing with exists as a valid profile in Lytics You can verify this by navigating to Audiences Find a User from the Lytics dashboard and searching for the user you are trying to preview as The API documentation for content recommendations may also help you verify that you re calling the endpoint correctly If issues persist feel free to contact email protected for further assistance in troubleshooting the Lytics API Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/personalize-your-iterable-emails-with-lytics-content-recommendations#content",
    "title": "https://docs.lytics.com/docs/personalize-your-iterable-emails-with-lytics-content-recommendations#content",
    "chunk_text": "Lytics content recommendations provide powerful personalized one to one recommendations Sending content recommendations to your users via email is a great way to reengage them with your brand This guide will cover how to implement content recommendations in email with Iterable as the email service provider ESP It will use the Lytics content recommendation API and Iterable s data feed to render them inline in your email template This technique can be combined with other email use cases such as content modularization or triggered sends for a truly rich personalized experience Although you will be using the Lytics API no code is necessary to implement this solution beyond configuring some HTML and custom variables in your email template Before you begin You should have an Iterable account with an audience export running and an HTML email template with a section prepared for one or more content recommendations within it The recommendations can include any all of the following Title Description Image URL or link to the document Author Date of publication You can start by setting up your template with some static content For context here s how the content recommendations look in the example template that is used in this guide it includes all of the fields listed above In addition make sure you have a Lytics account with the content affinity engine activated You will also need to generate an API token with read access to content and user search Build a content collection To make recommendations you will need a content collection You can see our documentation on building content collections for more information Once saved you will also need the id of the content collection as you will use it in the next step Add content recommendation API as a data feed To populate recommendations in the email you will use the Iterable feature called a Data Feed to hook into the Lytics API before sending Login to your Iterable account Navigate to Integrations Data Feeds in the side bar Click Create New Feed Enter Lytics Content Recommendations or some other descriptive title in the Name text input Make sure the JSON option is selected from the Format dropdown Copy and paste the following URL into the URL text input https api lytics io api content recommend user email urlEncode email urlEncode contentsegment At the end of that URL paste the ID of the content collection you created in the previous step This ID is the hash in the URL not the name or slug of the content collection In the Authorization Token field paste a Lytics API token with read permission for content and user search Verify that your settings look correct and then click Save Feed Enabling this data feed in a template allows Iterable to call the Lytics content recommendation API before each email send Iterable will replace urlEncode email urlEncode with the URL encoded version of the recipient s email address The next step will cover how to access the content returned and format it to be surfaced in the email template You can add additional query parameters to the URL in the data feed to control things like the ranking of the recommendations or the number of documents returned See our Content Recommendation API documentation for a list of possible query parameters for this end point Modify your email template Now that the data feed has been configured it s time to apply it to your email template In Iterable open the template in edit mode Click the Advanced options tab and configure the following settings Check the Enable template generation using a data feed checkbox From the dropdown select the data feed you created in the previous step Check the Cache data feed response cached for up to 1 hour Optional Check the Merge the data feed and user contexts checkbox If you do not select Merge the data feed and user contexts you will need to use square brackets value instead of curly brackets value when accessing values from the data feed The examples in this guide assume that this option is checked Under the HTML version of the template click Source to view the HTML source of your template Locate the HTML of the recommendation section You will need to implement templates for each of the fields you wish to use returned from the content API Feel free to reference the response example in our API documentation but in general each field should match the following format data i fieldname Where i is the current index of the recommendation starting at 0 and fieldname is one of the following title Title of the document description Description of the document primary_image URL of the document s image url URL of the document excluding the protocol author Name of the author of the document this field may not be available for all content types created Date that the article was published Here is some example HTML laying out all of these fields for 3 separate recommendations HTML Recommendation 1 div img alt rec image src data 0 primary_image h5 data 0 title h5 span By data 0 author dateFormat data 0 created format full span p data 0 description p a href https data 0 url Read More a div Recommendation 2 div img alt rec image src data 1 primary_image h5 data 1 title h5 span By data 1 author dateFormat data 1 created format full span p data 1 description p a href https data 1 url Read More a div Recommendation 3 div img alt rec image src data 2 primary_image h5 data 2 title h5 span By data 2 author dateFormat data 2 created format full span p data 2 description p a href https data 2 url Read More a div As seen above you must add the http or https protocol in the href protocol before the URL field Also the example above includes date formatting for the published date field you can read more about this in Iterable s handlebars documentation Once you have finished editing the template click Save Template In the next step we ll verify that the data feed is working and recommendations are rendering correctly Previewing and verifying the recommendations Iterable allows you to preview a rendered version of your email in the browser with live data from your data feed Follow the instructions in this tutorial to preview your email with content recommendations Once you re happy with the preview you are ready to send your campaign You can implement your template into a workflow or send it as a blast campaign Rate Limiting For best results please talk to your Iterable representative about setting up a Message Send Rate Limit The Lytics Content Recommendation API can handle up to 250 requests per second or 15 000 requests per minute If the rate limit is not enabled with Iterable Lytics may return a 429 HTTP Status Code preventing emails from being delivered Troubleshooting For more information on troubleshooting your templates see Iterable s documentation on templating If you re not receiving a valid response from the Lytics content recommendation API please make sure that the email you are testing with exists as a valid profile in Lytics You can verify this by navigating to Audiences Find a User from the Lytics dashboard and searching for the user you are trying to preview as The API documentation for content recommendations may also help you verify that you re calling the endpoint correctly If issues persist feel free to contact email protected for further assistance in troubleshooting the Lytics API Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/build-a-custom-personalized-experience-with-video-content",
    "title": "https://docs.lytics.com/docs/build-a-custom-personalized-experience-with-video-content",
    "chunk_text": "Video content is a great way to capture your users attention Serving your videos to a Lytics audience of users at who are likely to be interested in the content is sure to boost engagement In this guide you will learn how to create a widget with a video component While videos are not natively supported by the Pathfora SDK or Lytics Experiences you can utilize a callback function to load a video with JavaScript This callback can be applied to an Experience built through the UI with an API override Follow along with the video guide below or this written guide You can download the complete JavaScript configuration CSS and API override command for this example from the GitHub examples repository Javascript Configuration Begin with a generic widget configuration JavaScript var videoWidget window pathfora Message id video widget layout modal className video widget headline iPhone XR available now msg Get yours or a discount on all previous models today from strong MEGASTORE strong okShow true okMessage Shop iPhones cancelShow false window pathfora initializeWidgets videoWidget This config will generate a simple modal with a headline message and call to action To add a video to the modal you can define an onLoad callback function This function is called just before the modal appears on the user s screen and the variables passed to the function as arguments include the widget s DOM element which you will append the video element to JavaScript var videoWidget window pathfora Message config settings onLoad function event module add the video element Start by creating a div element which will later contain your video element You may want to add a class name such as pf widget video to style this div later Next set the innerHTML of the div with the code for your video Note that you ll need to escape quotes within the HTML when transforming it to a JavaScript string JavaScript onLoad function event module create a div for the video var videoDiv document createElement div videoDiv className pf widget video place the video in the div videoDiv innerHTML iframe src https www youtube com embed tG7vx7 3sl0 frameborder 0 allowfullscreen iframe Now that you have the video element within a div simply insert the div into the widget You can access the DOM node for the widget using the widget field on the second argument in this case module widget From there you will want to select two elements with the class names pf widget content the main div that contains content of the widget pf widget text a child div of pf widget content which contains the text content of a widget Using the insertBefore function you can insert the div containing your video into the main content div before the text of the widget JavaScript onLoad function event module create a div for the video var videoDiv document createElement div videoDiv className pf widget video place the video in the div videoDiv innerHTML iframe src https www youtube com embed tG7vx7 3sl0 frameborder 0 allowfullscreen iframe append the div to the widget node var content module widget querySelector pf widget content var text module widget querySelector pf widget text content insertBefore videoDiv text With this new config you should now have a modal with a video But it could probably use CSS to make it look cohesive Styling the Video Modal With some additional CSS work you can style the video to fit your modal Download the code for this example to see how you can style the video to be side by side with the text of your modal Once you ve tested and are happy with the look and feel of your video modal it s time for the most important step defining the Lytics audience that should receive this modal Define the Lytics Audience The example widget in this guide will be targeted at audience of users with a high content affinity score for iPhones the product that the modal is promoting Remember to update your config with the audience slug you wish to serve the widget to Alternatively you may build your widget as a web personalize Experience in the Lytics UI and apply the onLoad callback with an API override Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/build-a-custom-personalized-experience-with-video-content#content",
    "title": "https://docs.lytics.com/docs/build-a-custom-personalized-experience-with-video-content#content",
    "chunk_text": "Video content is a great way to capture your users attention Serving your videos to a Lytics audience of users at who are likely to be interested in the content is sure to boost engagement In this guide you will learn how to create a widget with a video component While videos are not natively supported by the Pathfora SDK or Lytics Experiences you can utilize a callback function to load a video with JavaScript This callback can be applied to an Experience built through the UI with an API override Follow along with the video guide below or this written guide You can download the complete JavaScript configuration CSS and API override command for this example from the GitHub examples repository Javascript Configuration Begin with a generic widget configuration JavaScript var videoWidget window pathfora Message id video widget layout modal className video widget headline iPhone XR available now msg Get yours or a discount on all previous models today from strong MEGASTORE strong okShow true okMessage Shop iPhones cancelShow false window pathfora initializeWidgets videoWidget This config will generate a simple modal with a headline message and call to action To add a video to the modal you can define an onLoad callback function This function is called just before the modal appears on the user s screen and the variables passed to the function as arguments include the widget s DOM element which you will append the video element to JavaScript var videoWidget window pathfora Message config settings onLoad function event module add the video element Start by creating a div element which will later contain your video element You may want to add a class name such as pf widget video to style this div later Next set the innerHTML of the div with the code for your video Note that you ll need to escape quotes within the HTML when transforming it to a JavaScript string JavaScript onLoad function event module create a div for the video var videoDiv document createElement div videoDiv className pf widget video place the video in the div videoDiv innerHTML iframe src https www youtube com embed tG7vx7 3sl0 frameborder 0 allowfullscreen iframe Now that you have the video element within a div simply insert the div into the widget You can access the DOM node for the widget using the widget field on the second argument in this case module widget From there you will want to select two elements with the class names pf widget content the main div that contains content of the widget pf widget text a child div of pf widget content which contains the text content of a widget Using the insertBefore function you can insert the div containing your video into the main content div before the text of the widget JavaScript onLoad function event module create a div for the video var videoDiv document createElement div videoDiv className pf widget video place the video in the div videoDiv innerHTML iframe src https www youtube com embed tG7vx7 3sl0 frameborder 0 allowfullscreen iframe append the div to the widget node var content module widget querySelector pf widget content var text module widget querySelector pf widget text content insertBefore videoDiv text With this new config you should now have a modal with a video But it could probably use CSS to make it look cohesive Styling the Video Modal With some additional CSS work you can style the video to fit your modal Download the code for this example to see how you can style the video to be side by side with the text of your modal Once you ve tested and are happy with the look and feel of your video modal it s time for the most important step defining the Lytics audience that should receive this modal Define the Lytics Audience The example widget in this guide will be targeted at audience of users with a high content affinity score for iPhones the product that the modal is promoting Remember to update your config with the audience slug you wish to serve the widget to Alternatively you may build your widget as a web personalize Experience in the Lytics UI and apply the onLoad callback with an API override Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/unlock-additional-web-personalization-features-with-lytics-api-overrides",
    "title": "https://docs.lytics.com/docs/unlock-additional-web-personalization-features-with-lytics-api-overrides",
    "chunk_text": "Lytics web personalize Experiences built through the Lytics UI are powered behind the scenes by the Pathfora JavaScript SDK Not all features of the SDK are supported by the Lytics UI however such as custom forms or JavaScript callbacks Luckily you can apply these features to Experiences built through the UI using a technique called API overrides In this guide you will learn how to make an API requests to override the configuration of an Experience built in the Lytics UI You will create a slideout via the Lytics Experience editor and API overrides The overrides will include the custom form configuration form error and success states and the custom callback which sends the form data to a third party You can download the complete API request command for this example from the Github examples repository The primary benefit of using the Lytics UI in combination with API overrides instead of the Pathfora SDK is that your experiences are easily integrated into Goals and you will have access to the native Experience Stage and Journey reporting features in the Lytics UI without having to build custom audiences to track users who interact with your widgets Building the Experience in Lytics If you haven t already you will need to build the base Experience through the Lytics Experience Editor The goal is to create in the experience in the UI as close as possible the desired end state of the widget and rely on the API overrides to fill in the gaps that are not available for configuration in the UI Selecting a Tactic Selecting the correct tactic is key as it determines what type of Pathfora widget the Experience outputs The tactics map to types as follows Drive Traffic produces a message widget with CTA okShow set to true Capture Leads produces a form widget Present a Message produces a message widget with no buttons okShow set to false Recommend Content produces a message widget with content recommendations and variant set to 3 The example in this guide uses a form widget thus you will select the Capture Leads tactic Experience Editor Steps You will be dropped into the customize form step of the editor Since the example form has custom checkboxes set to select which feeds to subscribe to you can t configure this in the UI Simply click the Next Step button In the design step enter the headline body and call to action text Select the Slideout layout and under theme you can check the I have my own CSS box and enter the custom class name custom tracking widget In the target step select the audience you wish to show this slideout to This example uses an audience of high intensity anonymous users In the display step configure when and where you want the form slideout to display on your website This step controls to the displayConditions settings in the Pathfora SDK Once you ve completed all the steps you may want to preview your Experience Though it may not look or function in the way you would like this starting experience will generate a foundation configuration which you will augment in the next step You will also need to save the Experience to make API override requests Be sure to click Save as Draft Creating the Override Request To make the request for the override you will need the ID of the Experience you just created You can get this from the URL of the summary or review page of the experience after saving it In the URL example below the ID of the Experience is 2d3e345b2ac24acd9d6d3d33f93516fd You will also need a Lytics API token with the Admin role It may help to save the token as an environment variable for future use Shell export LIOKEY api_token_here You will make a PATCH request to the Experience endpoint with the id of the Experience This command example uses curl and jq Shell curl s H Authorization LIOKEY H Content Type text json XPATCH https api lytics io api experience experience_id d JSON PAYLOAD WILL GO HERE jq Your config changes will need to be nested in a field called detail_override this field itself is nested in the experience vehicle model JSON experience vehicle detail_override configuration overrides Next you will need to convert the JavaScript configuration into a JSON payload containing the settings which you were unable to apply through the UI In this example that is formElements which customizes the form formStates which sets the success and error states on form submission confirmAction which handles the callback to send the data to a third party For the most part you can translate a config to a JSON override in the same way that the JSON stringify function would convert a JS object to JSON In this example that works perfectly for formElements and formStates JSON experience vehicle detail_override formElements type text required true label Email Address name email type checkbox group required true label Which feeds would you like to subscribe to name subscription_feeds values label Beauty Perfumes value beauty label Electronics value electronics label Fashion value fashion formStates success headline Success msg Thanks for signing up you can expect to receive updates in your inbox soon error headline Error msg There was an issue submitting your subscription Please try again or a href contact contact us a if the issue persists But for confirmAction it gets tricky because it contains a JavaScript function JSON experience vehicle detail_override formElements formState confirmAction waitForAsyncResponse true callback callback function here somehow However the API can accept a JavaScript function as a string It may help to minify your function first There are a number of online tools or command line tools which will minify JavaScript for you This helps for the API override because it creates a shorter single line version of the function This is the example callback function run through a minifier JavaScript function e a t if a data var n a data reduce function e a if e hasOwnProperty a name var t e a name n Array isArray t t t n push a value e a name n else e a name a value return e r new XMLHttpRequest r onload function 200 this status t 0 t 1 r open POST http yourwebsite com custom endpoint 0 r setRequestHeader Content Type application json charset UTF 8 r send JSON stringify n To include this function as a string you will need to escape any double quotes within this before pasting it into your config JSON experience vehicle detail_override formElements formState confirmAction waitForAsyncResponse true callback function e a t if a data var n a data reduce function e a if e hasOwnProperty a name var t e a name n Array isArray t t t n push a value e a name n else e a name a value return e r new XMLHttpRequest r onload function 200 this status t 0 t 1 r open POST https bf484baa ngrok io post 0 r setRequestHeader Content Type application json charset UTF 8 r send JSON stringify n Putting the whole thing together your curl command will look like this Shell curl s H Authorization LIOKEY H Content Type text json XPATCH https api lytics io api experience experience_id d experience vehicle detail_override formElements type text required true label Email Address name email type checkbox group required true label Which feeds would you like to subscribe to name subscription_feeds values label Beauty Perfumes value beauty label Electronics value electronics label Fashion value fashion formStates success headline Success msg Thanks for signing up you can expect to receive updates in your inbox soon error headline Error msg There was an issue submitting your subscription Please try again or a href contact contact us a if the issue persists confirmAction waitForAsyncResponse true callback function e a t if a data var n a data reduce function e a if e hasOwnProperty a name var t e a name n Array isArray t t t n push a value e a name n else e a name a value return e r new XMLHttpRequest r onload function 200 this status t 0 t 1 r open POST http yourwebsite com custom endpoint 0 r setRequestHeader Content Type application json charset UTF 8 r send JSON stringify n jq Once you run the command check that the response from the API includes your changes You may make subsequent GET requests to the same endpoint to view the entire payload of the experience Testing and Validating the Override Once you ve made the API request you should be able to view the changes as part of the regular preview process for your Experience In the Lytics UI go the the summary or editor for your Experience Click Preview and enter the URL you wish to preview the Experience on Note If you are using the same browser session to preview the Experience that you did to create it you may need to hard refresh the Lytics UI before clicking preview This will ensure that Lytics is serving the most up to date version of the configuration You should be able to see the updated Experience in the preview If this is not the case there are two scenarios to troubleshoot If your widget is not displaying at all check the JavaScript console for errors If you find a formatting error in the translated JavaScript config you may investigate and adjust your override command accordingly This scenario can happen if you failed to escape quotes properly for example If your widget is not displaying the changes double check the response from the API and cross reference your settings with the appropriate settings in the Pathfora SDK Documentation to ensure everything is named and formatted correctly If the issue persists you can always contact Lytics Support for additional assistance with debugging Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/unlock-additional-web-personalization-features-with-lytics-api-overrides#content",
    "title": "https://docs.lytics.com/docs/unlock-additional-web-personalization-features-with-lytics-api-overrides#content",
    "chunk_text": "Lytics web personalize Experiences built through the Lytics UI are powered behind the scenes by the Pathfora JavaScript SDK Not all features of the SDK are supported by the Lytics UI however such as custom forms or JavaScript callbacks Luckily you can apply these features to Experiences built through the UI using a technique called API overrides In this guide you will learn how to make an API requests to override the configuration of an Experience built in the Lytics UI You will create a slideout via the Lytics Experience editor and API overrides The overrides will include the custom form configuration form error and success states and the custom callback which sends the form data to a third party You can download the complete API request command for this example from the Github examples repository The primary benefit of using the Lytics UI in combination with API overrides instead of the Pathfora SDK is that your experiences are easily integrated into Goals and you will have access to the native Experience Stage and Journey reporting features in the Lytics UI without having to build custom audiences to track users who interact with your widgets Building the Experience in Lytics If you haven t already you will need to build the base Experience through the Lytics Experience Editor The goal is to create in the experience in the UI as close as possible the desired end state of the widget and rely on the API overrides to fill in the gaps that are not available for configuration in the UI Selecting a Tactic Selecting the correct tactic is key as it determines what type of Pathfora widget the Experience outputs The tactics map to types as follows Drive Traffic produces a message widget with CTA okShow set to true Capture Leads produces a form widget Present a Message produces a message widget with no buttons okShow set to false Recommend Content produces a message widget with content recommendations and variant set to 3 The example in this guide uses a form widget thus you will select the Capture Leads tactic Experience Editor Steps You will be dropped into the customize form step of the editor Since the example form has custom checkboxes set to select which feeds to subscribe to you can t configure this in the UI Simply click the Next Step button In the design step enter the headline body and call to action text Select the Slideout layout and under theme you can check the I have my own CSS box and enter the custom class name custom tracking widget In the target step select the audience you wish to show this slideout to This example uses an audience of high intensity anonymous users In the display step configure when and where you want the form slideout to display on your website This step controls to the displayConditions settings in the Pathfora SDK Once you ve completed all the steps you may want to preview your Experience Though it may not look or function in the way you would like this starting experience will generate a foundation configuration which you will augment in the next step You will also need to save the Experience to make API override requests Be sure to click Save as Draft Creating the Override Request To make the request for the override you will need the ID of the Experience you just created You can get this from the URL of the summary or review page of the experience after saving it In the URL example below the ID of the Experience is 2d3e345b2ac24acd9d6d3d33f93516fd You will also need a Lytics API token with the Admin role It may help to save the token as an environment variable for future use Shell export LIOKEY api_token_here You will make a PATCH request to the Experience endpoint with the id of the Experience This command example uses curl and jq Shell curl s H Authorization LIOKEY H Content Type text json XPATCH https api lytics io api experience experience_id d JSON PAYLOAD WILL GO HERE jq Your config changes will need to be nested in a field called detail_override this field itself is nested in the experience vehicle model JSON experience vehicle detail_override configuration overrides Next you will need to convert the JavaScript configuration into a JSON payload containing the settings which you were unable to apply through the UI In this example that is formElements which customizes the form formStates which sets the success and error states on form submission confirmAction which handles the callback to send the data to a third party For the most part you can translate a config to a JSON override in the same way that the JSON stringify function would convert a JS object to JSON In this example that works perfectly for formElements and formStates JSON experience vehicle detail_override formElements type text required true label Email Address name email type checkbox group required true label Which feeds would you like to subscribe to name subscription_feeds values label Beauty Perfumes value beauty label Electronics value electronics label Fashion value fashion formStates success headline Success msg Thanks for signing up you can expect to receive updates in your inbox soon error headline Error msg There was an issue submitting your subscription Please try again or a href contact contact us a if the issue persists But for confirmAction it gets tricky because it contains a JavaScript function JSON experience vehicle detail_override formElements formState confirmAction waitForAsyncResponse true callback callback function here somehow However the API can accept a JavaScript function as a string It may help to minify your function first There are a number of online tools or command line tools which will minify JavaScript for you This helps for the API override because it creates a shorter single line version of the function This is the example callback function run through a minifier JavaScript function e a t if a data var n a data reduce function e a if e hasOwnProperty a name var t e a name n Array isArray t t t n push a value e a name n else e a name a value return e r new XMLHttpRequest r onload function 200 this status t 0 t 1 r open POST http yourwebsite com custom endpoint 0 r setRequestHeader Content Type application json charset UTF 8 r send JSON stringify n To include this function as a string you will need to escape any double quotes within this before pasting it into your config JSON experience vehicle detail_override formElements formState confirmAction waitForAsyncResponse true callback function e a t if a data var n a data reduce function e a if e hasOwnProperty a name var t e a name n Array isArray t t t n push a value e a name n else e a name a value return e r new XMLHttpRequest r onload function 200 this status t 0 t 1 r open POST https bf484baa ngrok io post 0 r setRequestHeader Content Type application json charset UTF 8 r send JSON stringify n Putting the whole thing together your curl command will look like this Shell curl s H Authorization LIOKEY H Content Type text json XPATCH https api lytics io api experience experience_id d experience vehicle detail_override formElements type text required true label Email Address name email type checkbox group required true label Which feeds would you like to subscribe to name subscription_feeds values label Beauty Perfumes value beauty label Electronics value electronics label Fashion value fashion formStates success headline Success msg Thanks for signing up you can expect to receive updates in your inbox soon error headline Error msg There was an issue submitting your subscription Please try again or a href contact contact us a if the issue persists confirmAction waitForAsyncResponse true callback function e a t if a data var n a data reduce function e a if e hasOwnProperty a name var t e a name n Array isArray t t t n push a value e a name n else e a name a value return e r new XMLHttpRequest r onload function 200 this status t 0 t 1 r open POST http yourwebsite com custom endpoint 0 r setRequestHeader Content Type application json charset UTF 8 r send JSON stringify n jq Once you run the command check that the response from the API includes your changes You may make subsequent GET requests to the same endpoint to view the entire payload of the experience Testing and Validating the Override Once you ve made the API request you should be able to view the changes as part of the regular preview process for your Experience In the Lytics UI go the the summary or editor for your Experience Click Preview and enter the URL you wish to preview the Experience on Note If you are using the same browser session to preview the Experience that you did to create it you may need to hard refresh the Lytics UI before clicking preview This will ensure that Lytics is serving the most up to date version of the configuration You should be able to see the updated Experience in the preview If this is not the case there are two scenarios to troubleshoot If your widget is not displaying at all check the JavaScript console for errors If you find a formatting error in the translated JavaScript config you may investigate and adjust your override command accordingly This scenario can happen if you failed to escape quotes properly for example If your widget is not displaying the changes double check the response from the API and cross reference your settings with the appropriate settings in the Pathfora SDK Documentation to ensure everything is named and formatted correctly If the issue persists you can always contact Lytics Support for additional assistance with debugging Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/how-to-use-gtm-tags-to-modify-lytics-pathfora-widget-behavior",
    "title": "Introduction",
    "chunk_text": "Introduction Google Tag Manager GTM is a powerful tool for managing tags triggers and scripts on your website Lytics offers a variety of widgets through its Pathfora framework allowing businesses to personalize and target content to their users This article will show you how to use GTM to modify the behavior of Lytics Pathfora widgets by utilizing custom JavaScript and CSS Prerequisites A working knowledge of Google Tag Manager Basic understanding of JavaScript and CSS Access to your website s GTM and Lytics accounts Step 1 Create a JavaScript Tag in GTM for Lytics Embedder Go to your Google Tag Manager Dashboard and click on New Tag Name the tag Lytics Embedder Choose the tag type as Custom HTML Paste your Lytics Embedder JavaScript code into the HTML field For example JavaScript Your Lytics Embedder code here Choose the triggering event for your tag For instance you can set it to trigger when a custom event embedder variable true occurs Save and publish the changes Step 2 Create a CSS Tag in GTM for Lytics CSS Master Go back to the GTM Dashboard and create another new tag Name the tag Lytics CSS Master Choose the tag type as Custom HTML Insert the CSS code wrapped in style tags into the HTML field For example HTML style Your Lytics CSS Master code here style Set the trigger to All Pages Page View so the CSS will be applied universally Save and publish the changes Step 3 Testing and Validation Open your website and inspect the Lytics Pathfora widgets to make sure they are behaving and appearing as intended Use browser developer tools to troubleshoot any issues such as incorrect application of styles or non functioning JavaScript Step 4 Customization and Advanced Uses You can further customize the Lytics Embedder JavaScript to manipulate widgets based on user behavior or other events Similarly modify the Lytics CSS Default to change the look and feel of the widgets to better align with your brand Conclusion Utilizing Google Tag Manager along with Lytics Pathfora framework can greatly enhance your ability to deliver personalized and targeted content to your website visitors By following these steps you can modify widget behavior and appearance directly from GTM making your marketing efforts more efficient and effective Example code A javascript to dynamically alter pathfora behaviour Use this code in gtm and associate to a custom variable script Get the h2 and p elements with their respective class names var headlineElement document querySelector pf widget headline var messageElement document querySelector pf widget message Get the img tag with class name pf widget img var imgElement document querySelector pf widget img Create a new a tag var linkElement document createElement a linkElement href messageElement textContent linkElement classList add pf widget custom href Append the img tag inside the new a tag linkElement appendChild imgElement cloneNode true Replace the img tag with the new a tag in the DOM imgElement parentNode replaceChild linkElement imgElement script Lytics CSS Default a js to update css dynamically in pathfora style type text css lytics small modal start lytics small modal pf widget content display none lytics small modal pf widget img width 100 important height 100 important float none important position absolute important top 0 important left 0 important margin left 0 important border radius 0 important lytics small modal cursor pointer lytics small modal pf widget body width 100 height 100 lytics small modal pf widget close z index 1 lytics small modal width 250px height 250px lytics small modal end lytics capture leads styles start lytics capture leads pf widget lytics capture leads pf widget pf widget body lytics capture leads pf widget message lytics capture leads pf form label lytics capture leads pf widget checkbox color rgb 46 46 46 important lytics capture leads background color rgb 235 177 17 important lytics capture leads pf widget headline color white lytics capture leads styles end lytics preheader modal styles start lytics preheader modal background color ffb32a min height 0 padding 0 box shadow none lytics preheader modal pf widget message color black lytics preheader modal pf widget close color black media max width 600px lytics preheader modal display none lytics preheader modal styles start lytics personalization coupon styles start lytics personalization coupon pf widget modal pf widget variant 2 pf widget img float none important position absolute important important top 20px important left 5 important margin 0 important width 90 important height auto important border radius 0px important lytics personalization coupon pf widget modal pf widget variant 2 pf widget content background color EEB111 important lytics personalization coupon pf widget modal pf widget message font size 14px important margin 0 0 0px important lytics personalization coupon pf widget pf widget pf widget body lytics personalization coupon pf widget modal pf widget variant 2 pf widget headline color black important lytics personalization coupon styles end lytics personalization coupon black back styles start lytics personalization coupon black back pf widget modal pf widget variant 2 pf widget content background color black important lytics personalization coupon black back pf widget pf widget pf widget body lytics personalization coupon black back pf widget modal pf widget variant 2 pf widget headline color white important lytics personalization coupon black back styles end lytics big modal styles start lytics big modal pf widget img position relative important margin 0 important top 0 important left 0 important border radius 0 important width 100 important height 100 important cursor pointer important lytics big modal pf widget text display none important lytics big modal pf widget content padding 0px important lytics big modal pf widget close z index 1 important color black important lytics big modal styles end style Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/how-to-use-gtm-tags-to-modify-lytics-pathfora-widget-behavior#content",
    "title": "Introduction",
    "chunk_text": "Introduction Google Tag Manager GTM is a powerful tool for managing tags triggers and scripts on your website Lytics offers a variety of widgets through its Pathfora framework allowing businesses to personalize and target content to their users This article will show you how to use GTM to modify the behavior of Lytics Pathfora widgets by utilizing custom JavaScript and CSS Prerequisites A working knowledge of Google Tag Manager Basic understanding of JavaScript and CSS Access to your website s GTM and Lytics accounts Step 1 Create a JavaScript Tag in GTM for Lytics Embedder Go to your Google Tag Manager Dashboard and click on New Tag Name the tag Lytics Embedder Choose the tag type as Custom HTML Paste your Lytics Embedder JavaScript code into the HTML field For example JavaScript Your Lytics Embedder code here Choose the triggering event for your tag For instance you can set it to trigger when a custom event embedder variable true occurs Save and publish the changes Step 2 Create a CSS Tag in GTM for Lytics CSS Master Go back to the GTM Dashboard and create another new tag Name the tag Lytics CSS Master Choose the tag type as Custom HTML Insert the CSS code wrapped in style tags into the HTML field For example HTML style Your Lytics CSS Master code here style Set the trigger to All Pages Page View so the CSS will be applied universally Save and publish the changes Step 3 Testing and Validation Open your website and inspect the Lytics Pathfora widgets to make sure they are behaving and appearing as intended Use browser developer tools to troubleshoot any issues such as incorrect application of styles or non functioning JavaScript Step 4 Customization and Advanced Uses You can further customize the Lytics Embedder JavaScript to manipulate widgets based on user behavior or other events Similarly modify the Lytics CSS Default to change the look and feel of the widgets to better align with your brand Conclusion Utilizing Google Tag Manager along with Lytics Pathfora framework can greatly enhance your ability to deliver personalized and targeted content to your website visitors By following these steps you can modify widget behavior and appearance directly from GTM making your marketing efforts more efficient and effective Example code A javascript to dynamically alter pathfora behaviour Use this code in gtm and associate to a custom variable script Get the h2 and p elements with their respective class names var headlineElement document querySelector pf widget headline var messageElement document querySelector pf widget message Get the img tag with class name pf widget img var imgElement document querySelector pf widget img Create a new a tag var linkElement document createElement a linkElement href messageElement textContent linkElement classList add pf widget custom href Append the img tag inside the new a tag linkElement appendChild imgElement cloneNode true Replace the img tag with the new a tag in the DOM imgElement parentNode replaceChild linkElement imgElement script Lytics CSS Default a js to update css dynamically in pathfora style type text css lytics small modal start lytics small modal pf widget content display none lytics small modal pf widget img width 100 important height 100 important float none important position absolute important top 0 important left 0 important margin left 0 important border radius 0 important lytics small modal cursor pointer lytics small modal pf widget body width 100 height 100 lytics small modal pf widget close z index 1 lytics small modal width 250px height 250px lytics small modal end lytics capture leads styles start lytics capture leads pf widget lytics capture leads pf widget pf widget body lytics capture leads pf widget message lytics capture leads pf form label lytics capture leads pf widget checkbox color rgb 46 46 46 important lytics capture leads background color rgb 235 177 17 important lytics capture leads pf widget headline color white lytics capture leads styles end lytics preheader modal styles start lytics preheader modal background color ffb32a min height 0 padding 0 box shadow none lytics preheader modal pf widget message color black lytics preheader modal pf widget close color black media max width 600px lytics preheader modal display none lytics preheader modal styles start lytics personalization coupon styles start lytics personalization coupon pf widget modal pf widget variant 2 pf widget img float none important position absolute important important top 20px important left 5 important margin 0 important width 90 important height auto important border radius 0px important lytics personalization coupon pf widget modal pf widget variant 2 pf widget content background color EEB111 important lytics personalization coupon pf widget modal pf widget message font size 14px important margin 0 0 0px important lytics personalization coupon pf widget pf widget pf widget body lytics personalization coupon pf widget modal pf widget variant 2 pf widget headline color black important lytics personalization coupon styles end lytics personalization coupon black back styles start lytics personalization coupon black back pf widget modal pf widget variant 2 pf widget content background color black important lytics personalization coupon black back pf widget pf widget pf widget body lytics personalization coupon black back pf widget modal pf widget variant 2 pf widget headline color white important lytics personalization coupon black back styles end lytics big modal styles start lytics big modal pf widget img position relative important margin 0 important top 0 important left 0 important border radius 0 important width 100 important height 100 important cursor pointer important lytics big modal pf widget text display none important lytics big modal pf widget content padding 0px important lytics big modal pf widget close z index 1 important color black important lytics big modal styles end style Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/style-your-lytics-web-experiences-to-fit-your-brand-guidelines",
    "title": "https://docs.lytics.com/docs/style-your-lytics-web-experiences-to-fit-your-brand-guidelines",
    "chunk_text": "Lytics web Experiences are meant to provide a very simple way for marketers to spin up personalized content on their website The Experience editor includes some very simple options for customizing the look and feel of your Experience But if your website has specific style guides you may prefer to make some CSS adjustments to the Experience In this guide you will learn how to construct a global stylesheet to establish a base set of styles for any Lytics Web Experience that you add to your website In addition this guide will cover how to write more specific styles for a single unique widget and how to troubleshoot common issues when writing CSS for a Lytics web Experience You can download the completed CSS and a JavaScript configuration for testing this example from the GitHub examples repository Defining a Global Stylesheet If you are planning to implement many web Experiences on your site you will want to establish a stylesheet that will lay out the foundation for common CSS rules among them It may help to generate an Experience or Pathfora config of each layout and think about what you want to augment for each The example JavaScript configuration in this guide includes a slideout bar gate and modal widget to test against The stylesheet in this guide will be kept light by simply adding a background image to all widgets and tweaking some colors and font styles and sizes of common widget elements However as you can imagine you can go even further to change any aspect of the widget including the size or positioning For reference the Pathfora SDK documentation provides a robust list of all of the class names of elements used in Pathfora widgets Start by adding some general styles you would like to apply to all widgets pf widget is the class name applied to the highest level div element of all Pathfora widgets pf widget content is the first child element For slideouts the pf widget content is essentially wraps the same area as pf widget However for modal and gate style widgets pf widget wraps the entire page with a background overlay while pf widget content contains the modal content itself CSS pf widget pf widget content background url assets subtle background jpg no repeat background size cover font family Helvetica Neue Arial sans serif color 666 border radius 0px box shadow 0 0px 7px 0px rgba 0 0 0 0 3 There s a problem though widgets with the bar layout don t have a pf widget content div So you can adjust the selector for the above styles as follows CSS pf widget bar pf widget pf widget pf widget content Next apply some additional styles to the call to action buttons pf widget btn is the class name used on all Pathfora buttons however pf widget ok selects the first primary CTA button CSS pf widget pf widget btn pf widget ok box shadow 0px 1px 1px rgba 0 0 0 0 font weight normal background color 5a88ca border 0 color white font size 16px pf widget pf widget btn pf widget ok hover background color 666 Lastly add some styles to match the color of the headline with the widget text and minimize the size of the the widget footer text when it is not being used CSS pf widget pf widget headline color 666 pf widget pf widget footer height 0 margin 0 These styles will cover future widgets you wish to build on the website As you are building your own stylesheet if you run into issues while testing your CSS please refer to the troubleshooting section Widget Specific Styles Using the Experience Editor or the Pathfora SDK you can define a custom class name for your widget With this class name you can style specific elements that are unique to that widget Always preface your selector with the pf widget class name to ensure that you don t accidentally effect other elements on your website CSS pf widget your custom class For a full in depth example of specific widget styles see the image customization guide Troubleshooting and Selector Specificity A common problem when writing CSS for Pathfora widgets is providing the correct level of specificity when selecting the element to style If you ve ever written a line of CSS and expected to see the change applied but didn t this section is for you The default CSS that the Pathfora library ships with is deliberately specific so that it is careful to not effect any other part of your website The main side effect of this is that developers wishing to override the default styles must pay special attention to their selectors or employ the use of important to override the default styles of the library Consider the following example using important CSS custom class pf content unit h4 font weight normal important font style italic The selector here is short and simple However because the the bold font weight is embedded in a deeper selector in the Pathfora base styles you have to override it with important For reference these is the relevant snippet of styles in the Pathfora CSS CSS pf widget variant 3 pf content unit pf content unit meta h4 font weight 500 margin 0 0 5px line height 1 4 color 444 Now consider how you would need to write this CSS without using important CSS pf widget custom class pf widget variant 3 pf content unit pf content unit meta h4 font weight normal font style italic This is a ridiculously long selector However the advantage is you no longer need to know which styles need to be overwritten with important Both techniques are valid and will result in the same changes to your widget Feel free to use whatever method is easiest for you Keep in mind if you are using SASS LESS or some other CSS pre processor that allows for nested selectors what would longer selectors may be easier to interpret If you re not a fan of important continue reading for an in depth look at how to easily derive the required level of specificity for your selector Utilizing Chrome Developer Tools The best way to determine how to override a default style is to look the conflicting style from the CSS of the library You can access the style sheet in the Pathfora GitHub repository which is open source but it may be easier to debug your CSS using the Inspect Element feature in Google Chrome developer tools Locate the relevant element in your widget by clicking on it while in the element selection mode in developer tools You may also find it by navigating through the HTML source under the Elements tab Examine the Styles tab for that element to see where the conflicting style is Once you ve located it copy the selector and paste it in to your style sheet for modification CSS pf widget variant 3 pf content unit pf content unit meta h4 Then simply add the custom class of your widget accordingly to the selector CSS pf widget custom class pf widget variant 3 pf content unit pf content unit meta h4 Add your rules save your stylesheet and test that the changes in the browser Remember you can always consult the Lytics Support team for assistance when debugging CSS for your Web Personalize Experiences Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/style-your-lytics-web-experiences-to-fit-your-brand-guidelines#content",
    "title": "https://docs.lytics.com/docs/style-your-lytics-web-experiences-to-fit-your-brand-guidelines#content",
    "chunk_text": "Lytics web Experiences are meant to provide a very simple way for marketers to spin up personalized content on their website The Experience editor includes some very simple options for customizing the look and feel of your Experience But if your website has specific style guides you may prefer to make some CSS adjustments to the Experience In this guide you will learn how to construct a global stylesheet to establish a base set of styles for any Lytics Web Experience that you add to your website In addition this guide will cover how to write more specific styles for a single unique widget and how to troubleshoot common issues when writing CSS for a Lytics web Experience You can download the completed CSS and a JavaScript configuration for testing this example from the GitHub examples repository Defining a Global Stylesheet If you are planning to implement many web Experiences on your site you will want to establish a stylesheet that will lay out the foundation for common CSS rules among them It may help to generate an Experience or Pathfora config of each layout and think about what you want to augment for each The example JavaScript configuration in this guide includes a slideout bar gate and modal widget to test against The stylesheet in this guide will be kept light by simply adding a background image to all widgets and tweaking some colors and font styles and sizes of common widget elements However as you can imagine you can go even further to change any aspect of the widget including the size or positioning For reference the Pathfora SDK documentation provides a robust list of all of the class names of elements used in Pathfora widgets Start by adding some general styles you would like to apply to all widgets pf widget is the class name applied to the highest level div element of all Pathfora widgets pf widget content is the first child element For slideouts the pf widget content is essentially wraps the same area as pf widget However for modal and gate style widgets pf widget wraps the entire page with a background overlay while pf widget content contains the modal content itself CSS pf widget pf widget content background url assets subtle background jpg no repeat background size cover font family Helvetica Neue Arial sans serif color 666 border radius 0px box shadow 0 0px 7px 0px rgba 0 0 0 0 3 There s a problem though widgets with the bar layout don t have a pf widget content div So you can adjust the selector for the above styles as follows CSS pf widget bar pf widget pf widget pf widget content Next apply some additional styles to the call to action buttons pf widget btn is the class name used on all Pathfora buttons however pf widget ok selects the first primary CTA button CSS pf widget pf widget btn pf widget ok box shadow 0px 1px 1px rgba 0 0 0 0 font weight normal background color 5a88ca border 0 color white font size 16px pf widget pf widget btn pf widget ok hover background color 666 Lastly add some styles to match the color of the headline with the widget text and minimize the size of the the widget footer text when it is not being used CSS pf widget pf widget headline color 666 pf widget pf widget footer height 0 margin 0 These styles will cover future widgets you wish to build on the website As you are building your own stylesheet if you run into issues while testing your CSS please refer to the troubleshooting section Widget Specific Styles Using the Experience Editor or the Pathfora SDK you can define a custom class name for your widget With this class name you can style specific elements that are unique to that widget Always preface your selector with the pf widget class name to ensure that you don t accidentally effect other elements on your website CSS pf widget your custom class For a full in depth example of specific widget styles see the image customization guide Troubleshooting and Selector Specificity A common problem when writing CSS for Pathfora widgets is providing the correct level of specificity when selecting the element to style If you ve ever written a line of CSS and expected to see the change applied but didn t this section is for you The default CSS that the Pathfora library ships with is deliberately specific so that it is careful to not effect any other part of your website The main side effect of this is that developers wishing to override the default styles must pay special attention to their selectors or employ the use of important to override the default styles of the library Consider the following example using important CSS custom class pf content unit h4 font weight normal important font style italic The selector here is short and simple However because the the bold font weight is embedded in a deeper selector in the Pathfora base styles you have to override it with important For reference these is the relevant snippet of styles in the Pathfora CSS CSS pf widget variant 3 pf content unit pf content unit meta h4 font weight 500 margin 0 0 5px line height 1 4 color 444 Now consider how you would need to write this CSS without using important CSS pf widget custom class pf widget variant 3 pf content unit pf content unit meta h4 font weight normal font style italic This is a ridiculously long selector However the advantage is you no longer need to know which styles need to be overwritten with important Both techniques are valid and will result in the same changes to your widget Feel free to use whatever method is easiest for you Keep in mind if you are using SASS LESS or some other CSS pre processor that allows for nested selectors what would longer selectors may be easier to interpret If you re not a fan of important continue reading for an in depth look at how to easily derive the required level of specificity for your selector Utilizing Chrome Developer Tools The best way to determine how to override a default style is to look the conflicting style from the CSS of the library You can access the style sheet in the Pathfora GitHub repository which is open source but it may be easier to debug your CSS using the Inspect Element feature in Google Chrome developer tools Locate the relevant element in your widget by clicking on it while in the element selection mode in developer tools You may also find it by navigating through the HTML source under the Elements tab Examine the Styles tab for that element to see where the conflicting style is Once you ve located it copy the selector and paste it in to your style sheet for modification CSS pf widget variant 3 pf content unit pf content unit meta h4 Then simply add the custom class of your widget accordingly to the selector CSS pf widget custom class pf widget variant 3 pf content unit pf content unit meta h4 Add your rules save your stylesheet and test that the changes in the browser Remember you can always consult the Lytics Support team for assistance when debugging CSS for your Web Personalize Experiences Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/sdks-web",
    "title": "https://docs.lytics.com/docs/sdks-web",
    "chunk_text": "Welcome to the Lytics JavaScript SDK documentation where we will explore the capabilities and features of the Lytics JavaScript SDK This SDK enables website owners and developers to integrate Lytics powerful customer data platform directly into their websites and web applications With Lytics JavaScript SDK you can easily collect data from website visitors and enrich their profiles with valuable insights including behavior preferences and interests By leveraging the Lytics JavaScript SDK you can better understand your customers and deliver personalized experiences that drive engagement retention and revenue In this documentation we will cover how to install and configure the Lytics JavaScript SDK and how to use it to identify users manage consent track events and personalize experiences We will also examine integrating Lytics JavaScript SDK with other third party analytics and marketing platforms to create a complete web data strategy Whether you are a website owner developer or marketer this documentation will provide you with the essential knowledge needed to leverage the Lytics JavaScript SDK to build better web experiences and gain deeper insights into your customers behaviors and preferences Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/sdks-web#content",
    "title": "https://docs.lytics.com/docs/sdks-web#content",
    "chunk_text": "Welcome to the Lytics JavaScript SDK documentation where we will explore the capabilities and features of the Lytics JavaScript SDK This SDK enables website owners and developers to integrate Lytics powerful customer data platform directly into their websites and web applications With Lytics JavaScript SDK you can easily collect data from website visitors and enrich their profiles with valuable insights including behavior preferences and interests By leveraging the Lytics JavaScript SDK you can better understand your customers and deliver personalized experiences that drive engagement retention and revenue In this documentation we will cover how to install and configure the Lytics JavaScript SDK and how to use it to identify users manage consent track events and personalize experiences We will also examine integrating Lytics JavaScript SDK with other third party analytics and marketing platforms to create a complete web data strategy Whether you are a website owner developer or marketer this documentation will provide you with the essential knowledge needed to leverage the Lytics JavaScript SDK to build better web experiences and gain deeper insights into your customers behaviors and preferences Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lytics-javascript-tag",
    "title": "Introduction",
    "chunk_text": "Introduction The Lytics JavaScript Tag commonly referred to as JS Tag is responsible for tracking user behavior during their site visit This anonymous tracking is an essential input for constructing user profiles and enriching them with behavioral scores and content affinities In addition to tracking behavior the Lytics JavaScript Tag is responsible for associating the current visitor with their full user profile in Lytics known or anonymous The subset of surfaced fields from that profile such as Lytics Audience membership are then available in the browser At this point the Lytics JavaScript Tag manages the handoff of this profile data to various web based integrations such as Facebook Ads or Google Analytics The following documentation will guide you to get the most out of the Lytics platform involving your web properties Installation Step 1 Install the Lytics JavaScript Tag In most cases installing the Lytics JavaScript Tag version 3 is as easy as copying and pasting a few lines of code to your source code or Tag Manager Full instructions and the tag itself are available from the web app Verifying Your Installation Option 1 Automated Validation The simplest method is using the Lytics web app verification checker Visit your tag installation instructions and you will find an installation checker in the top right Be sure to visit your site after installing the tag as this checker requires data to be fully collected and may take a few minutes to verify Option 2 Manual Validation A basic check can be done using your preferred browser s JavaScript developer console Consult your browser s documentation for access Once you have enabled the JavaScript console use the following command to return the installed tag version If a version number is successfully returned the Lytics tag has been installed correctly and has begun collecting visitor data JavaScript jstag config version Step 2 Tracking Activity With an instance of jstag initialized you can easily begin collecting data about your users by firing a jstag send call to the SDK as demonstrated below JavaScript jstag send event rescued sansa Technical Documentation The following outlines the full definition of capabilities supported by the Lytics SDK for JavaScript Configuration Version 3 comes configured out of the box with coverage ready for most use cases Various configuration options are available to support custom or in depth use cases Please find all available configuration options below with additional details listed after the table Key Type Example Description url string c lytics io URL endpoint to send the collection request cid string YOUR_LYTICS_CID Account ID which can be found in your dashboard Account Settings loadid boolean true Used when identifying users across domains stream string getlytics Name of the stream your data will be sent to sessecs integer 1800 Length of time between requests necessary before starting a new session 1800 by default qsargs string name status An array of query parameters that should always be pulled in when collecting data serializer string default Determines which serializer the JavaScript tag should use when sending data to Lytics Additional details url The generated URL should never be changed as it will prevent your data from being sent to Lytics cid When using the tag generated from your Lytics account your ID will be included and should not be altered loadid By default Lytics will store a first and third party cookie representing a user The loadid flag allows Lytics to use the third party cookie if available thus pulling cross domain behavior into a single unified user profile stream When collecting data across various domains it is common to use a custom stream for each domain which will require proper LQL in place to surface the collected data as user fields Consult customer support for more details serializer This is set to default by default During migration from v2 to v3 you may opt to use the legacy serializer which serializes data passed to Lytics in the same way as version 2 of the tag It will ignore the grandparent namespace on deeply nested variable names You should only opt to use the legacy serializer if the data you re passing is deeply nested and you previously used v2 of the Lytics JavaScript tag Example When calling jstag init you will pass in the tag configuration You can take advantage of the above configuration options by adding them to your configuration For example if you want to leverage third party cookies to enhance your brand s ability to resolve identities between owned properties add loadid to the configuration jstag init src loadid true Data Collection The Lytics JavaScript Tag makes collecting behavioral data about your website visitors easy By installing our tag you will automatically begin to collect page level information such as URL referrals and browser data This ultimately unlocks the power of a user s content affinity In addition to page level data custom data can be collected to expand user profiles further and support use cases What data is collected The following raw fields are included along with any collect event managed by the Lytics JavaScript Tag Key Sample Value Description _e pv The type of event responsible for the event emission pv for example represents a page view _ref www lytics com The referral domain _tz 7 An integer representation of the user s time zone Integer represents the difference between current time and standard UTC time PST for example would be 7 _ul en US The user s language as derived from the browser _sz 2560x1440 The size of the user s display _ts 1504306728695 The current time represented by milliseconds since Unix Epoch _nmob t If the page is being consumed on a mobile device or not _nmob true represents not mobile _device desktop The users current device type url www getlytics com The URL where the data was sent from _uid 74481 3222228897 The users Lytics _uid or cookie ID _v 3 0 2 Version number of the JavaScript tag that sent the data Page Views By default an initial page view will be captured each time the browser fully loads a new URL This ensures that you are collecting the base behavior out of the box Alternatively you can capture a page view manually at any point during a session by calling the pageView method JavaScript jstag pageView Events In addition to page views the Lytics Tag makes collecting arbitrary custom events easy This is useful regarding user actions such as clicks form submissions purchases etc Regardless of the reason for collecting the send method can be leveraged to pass any valid JavaScript object to Lytics jstag send name Jon email email protected In the above example we are simply passing the key of name to Lytics with a value of Jon to the default data stream Of course this is a basic example and something more realistic might be represented by the following examples Example User Data JavaScript jstag send userid 1234 facebook_id abc123 twitter_id def123 linkedin_id hij123 email email protected name Jon Snow first_name Jon last_name Snow title King in the North company House Stark phone 555 555 5555 cell 555 555 5555 age 21 gender m city Winterfell state Westeros country IE zip 55555 origin organic status known Example Conversion Data JavaScript jstag send event conversion campaign_id someconversionid variation_id somevariationid currency USD value 25 99 Example Event Data JavaScript jstag send event rescued sansa Advanced Options In addition to a JavaScript object payload all Lytics JavaScript Tag collection methods accept three optional parameters These should only be implemented by advanced users who fully understand the implications of using custom streams within Lytics or require feedback on asynchronous actions Option Type Description Example STREAM string The name of the stream collected data should be sent to jstag send mystream PAYLOAD object The JavaScript object you want to send to Lytics jstag send name Jon state Westeros CALLBACK function The JavaScript function to be called once collect completes jstag send mystream name Jon function r console log r JavaScript jstag send STREAM PAYLOAD CALLBACK jstag pageView STREAM PAYLOAD CALLBACK Accessing Visitor Profiles In addition to collecting behavioral data related to a user s visit the Lytics JavaScript Tag can also be configured to deliver real time profile information back to the browser By default Lytics only returns the current audiences the visitor is a member of However by surfacing user fields additional data from the visitor s profile can be returned Listed below are the core methods available for understanding your website visitors Please ensure you have access to an experienced JavaScript developer Though most installations are straightforward Lytics support may not be able to make recommendations or provide troubleshooting assistance as we do not have domain knowledge or access to your web property s unique source code Lytics Anonymous ID Each time the Lytics JavaScript Tag is loaded it will attempt to identify the visitor This is done through a variety of means the first of which is the first party _uid cookie A unique identifier is generated and stored in the browser This _uid is then included as part of the outbound payload in all collect methods from the JavaScript Tag aiding in identity resolution In some cases a developer must access or manipulate this ID In those cases there are two methods available Manipulating the _uid is an advanced feature and can significantly impact how your profiles are compiled Use at your own risk Get current ID Because getting the unique identifier can be an asynchronous process you must pass a callback function with the request Upon completing the lookup this callback function will be called and passed an attribute that represents the visitor s unique identifier JavaScript jstag getid function id do something with the id here console log id Set ID to a custom value JavaScript jstag setid mynewvalue User Attributes Audience Membership Because loading of the current user s profile is done in real time a request to our profile API is required This request is handled asynchronously as to never negatively impact your web properties As such it is recommended that access to this profile is always handled through our callback This ensures you receive the expected result and do not run the risk of race conditions or other browser issues related to asynchronous requests For use cases that can t support an asynchronous call please see audiences cached in local storage below for an alternative option Initializing callbacks To initialize a callback simply add a listener on the entityReady function HTML script type text javascript var myCallbackFunction function profile do something here with the profile console log profile data log full data object console log profile data user segments log array of audiences the visitor is a member of jstag call entityReady myCallbackFunction register the listener script Response handling Once the profile has been loaded your callback function will be called and passed a data object By default this data object will only contain the audiences the visitor is a member of and have also been enabled for API access In addition to audience membership any surfaced user fields will also be available on the object JSON email email protected segments all employees known_users data user email email protected segments all employees known_users experiences experience_id f53e136b35c498ac944b56a0658ab672 experience_slug sample_2 priority campaign 1 stage 1 experience 1 aggression 0 provider_id 93058311a5dc432323114466d0f5ac3c provider_slug custom attributes universal_experience stage_conversion_id ancestors recommendation_collection_id conversion_rate 0 tags decision_segment_id a03333377b6e563363f97dcddb77306d target_segment_id 5207e1bb073323117953cfae6fc98298 experience_id 6bca1598ffebf92fcf4e1a44b33a1444 experience_slug welcome_email_with_content_recommendations priority campaign 1 stage 1 experience 1 aggression 1 provider_id 4dd4a2b6e5ebb85688d4b561afe830a2 provider_slug sendgrid attributes transactional stage_conversion_id ancestors recommendation_collection_id conversion_rate 0 tags decision_segment_id abc6397b1e2688d772b1fdaf1518b5cf target_segment_id 1545437f6a57174ade05dde8fd3abfbd errors null In the example above the three audiences in the segments array have been enabled for API access and the email user field has been explicitly surfaced for the account Audiences cached in local storage By default Version 3 of the Lytics JS Tag caches the visitor s audience membership in local storage instead of a cookie A forthcoming integration has been planned to support writing a cookie as well to facilitate some edge use cases but in the case of zero latency needs local storage represents a better more scalable storage solution for this type of data In order to access the cached values on page load before the Lytics JavaScript tag has loaded the profile you might implement something like JavaScript try var audiences JSON parse localStorage lytics_segments catch error do something here other than log to handle the parse error console error error console log audiences Custom User Identifier In some cases it is desired to use an identifier different than the Lytics cookie for example userid for a logged in user This configuration option is available by defining byFieldKey and byFieldValue on the entity key of the core Lytics JavaScript Tag configuration JavaScript entity byFieldKey FIELDNAME byFieldValue FIELDVALUE Single Page Apps Some web properties will be built as Single Page Apps SPA SPAs should always be configured and managed by an experienced developer They represent a series of unique behaviors many unique to particular frameworks that can impact how the Lytics JavaScript Tag needs to be configured to support the desired use cases Version 3 of the Lytics JavaScript Tag has been built with SPAs in mind along with other significant improvements For most SPAs there are two important things to consider as routes change What represents the view of a new page When should the visitor s profile be reloaded or web based integrations such as Facebook be updated Each of these actions are handled independently with two simple commands HTML script type text javascript optional custom function for receiving the full entity each time it is loaded var doSomethingWithProfile function p console log p data log full data object the following function represents a fake router for a SPA framework var onRouteChange function track a pageview jstag pageView if you are running lytics web campaigns you ll need to clear the current state jstag config pathfora publish candidates experiences variations legacyABTests window _pfacfg window pathfora clearAll re fetch the profile and trigger configured campaigns jstag loadEntity doSomethingWithProfile refreshes the user profile and all configured integrations script Hosting the Lytics JavaScript Tag While it s possible to download and examine the core Lytics JavaScript Tag JS Tag source files latest js latest min js or lio js storing or serving these file s locally or from another domain is not recommended Referencing the Lytics JS Tag files from Lytics servers i e https c lytics io api tag someid latest js ensures that you get access to new features and product updates as they become available giving you the most reliable collection and delivery of your data That said in some extreme cases it may be a requirement to serve all JavaScript files from your own secure environment In these cases we ve created this document to outline the benefits drawbacks and a suggested approach What are the benefits Compliance with rigid security requirements What are the drawbacks Voids previously agreed upon Service level agreements SLAs and support agreements due to the introduction of new and non Lytics controlled infrastructure Feature enhancements and bug fixes are made frequently to the Lytics JS Tag Those that host their tag outside of Lytics will need to manually update the source to benefit from said improvements Leveraging client side integrations will require manual configuration while having limited support from the Lytics team Additional Services hours or agreement to assist with initial installation and setup issues Many account settings will no longer function as designed since configurations are not able to be updated dynamically The core Lytics JS Tag endpoint has various levels of caching and protections to ensure it is always served no matter load or conditions By hosting outside of the Lytics architecture all caching and scalability concerns must be managed by the customer Given these benefits and drawbacks if your organization still wants to proceed with hosting the Lytics JS Tag see the following steps to get started Where should I start Before you begin ensure you are installing version 3 of the Lytics JS Tag Version 2 can t be hosted outside of Lytics which means you will be restricted to version 3 of the tag Getting up and running with a hosted version of the Lytics JS Tag comes down to three main steps Accessing the source code and default configuration Navigating to the source code is relatively simple The URL can be found by visiting the Tag Installation section of the Lytics app The tag sample on that page will include a jstag init function One line below that you will see a src definition and a URL that looks something like c lytics io api tag Copying and pasting that URL into a new browser window will result in the core JavaScript tag to be loaded Most browsers will allow you to File Save the source from this point to your local machine Hosting the source code and default configuration The output file that was created above will need to be hosted on a public server within your infrastructure Unfortunately there is little to no guidance Lytics can offer here other than to be sure the hosting solution can handle the necessary load generated by your web asset s Initializing the tag Return to the Tag Installation section and copy and paste the entire script tag as you normally would The src URL in the init config will need to be updated with the URL of your now hosted JavaScript tag You ll likely end up with something like this jstag init src mycompany com assets tag lytics latest min js Once your tag has been hosted and initialized properly we recommend you complete the verification steps to ensure everything has been installed and is working properly Subresource Integrity This document has moved Working with Tag Managers Tag Managers make it easier to work with vendor JavaScript JS tags like Lytics for large dynamic web assets Lytics can be integrated through virtually every Tag Manager on the market today Because each Tag Manager is different the level of integration and development lift can vary so please consult the documentation for your preferred Tag Manager for specific details That being said installation of the Lytics JS Tag is generally as simple as copying and pasting the snippet of code from the installation instructions in the Lytics app to a container within your Tag Manager and then publishing to your live instance from there Installing using Google Tag Manager Google Tag Manager GTM is recommended as a flexible and transparent Tag Manager Follow the steps below to install the Lytics JS Tag using GTM Log into your GTM account Click New Tag and then Tag Configuration Under the Custom header select Custom HTML Copy the Lytics JS Tag snippet and paste it here Name it Lytics JavaScript Tag In the Triggering section select All Pages Click Save Publish the container by clicking Submit Navigate to your website and click on several pages to trigger sample event Wait a few minutes for the traffic to be received Check the Tag Installation Status at the top right of the installation page If you are not seeing traffic received try repeating steps 9 10 before trying the basic troubleshooting steps API Reference The Lytics JavaScript library uses two primary APIs The data upload handles the collection for all jstag send calls The personalization API retrieves the user s profile and powers onsite personalization and client side integrations such as Facebook Troubleshooting There are a few steps to ensure the Lytics JavaScript JS Tag is properly installed and receives data from your website Is the tag loaded The core JavaScript tag has a helper method that will return true if all Lytics resources have been loaded properly Open the console in Chrome Developer tools then copy and paste the following to verify that the tag has finished loaded JavaScript jstag isLoaded Is data being sent to Lytics What data Why The Lytics Jstag sends data to Lytics after every page view or on a custom trigger configured by the client Those sends are captured in the network tab in developer tools When the data is sent how it is sent and if it was sent successfully are all stored within the network call metadata To start select the network tab and filter on lytics io Once the list is populated select a line that us structured like the one highlighted below The request URL can be found at the top of the Header section This url indicates that data is being sent to Lytics via the c endpoint The actual attributes that were sent to Lytics can be seen in the Payload section as seen below Testing To test the sending method there is also the jstag send function from the console and that will send a single payload to the account configured as the cid in the initialization of the tag Please see the example below for syntax The network call should then show an event sending to Lytics _Finally validate the event made it to Lytics by verifying the event has come in the UI via the stream pipeline Is my visitor s profile being retrieved correctly The Lytics Jstag will use the personalize endpoint to retrieve the entity on every pageview This ensures that the most relevant information is considered when deciding what the consumer experience should be while they are navigating the webpage To start select the network tab and filter on lytics io Once the list is populated select a line that us structured like the one highlighted below The request URL can be found at the top of the Header section This url indicates that data is being retrieved from Lytics via the personalize endpoint Additionally the preview tab as seen below can be very useful in understanding what information has been pulled in to update the consumers profile client side What sort of data is being stored client side How is this controlled Several types of consumer data are stored client side Consumer Attributes Consumer behavior Consumer attributes will be actual data from the profile like first_name last_name etc This information is stored on the entity itself and can be accessed for personalization The Lytics user has full control over what attributes appear client side _In this example _uids has been allow listed in the account settings to surface client side _ Account Setting Console in Dev Tools Consumer behaviors expose the different audiences a consumer is currently in and current experiences campaigns they qualify for Both of these behaviors can be found in the payload returned when calling jstag getEntity in the console as seen below Experiences Audiences How can I verify that the correct audiences are being returned You can see the audiences the current user is a member of using the following in your Chrome developer console JavaScript jstag getSegments This callback will return a list of audiences the user is a member of and should only be called after the user profile has loaded Best Practices If you re trying to test a use case that requires a certain audience membership in the browser follow these general tips in order to create a proper testing environment and not run into merge conflicts and false positives Always use incognito mode An incognito window removes all cookies caches etc ensuring you have no history with the site and that no email addresses share a cookie The entirety of a test session must take place in the same incognito window so that all actions tie to the same profiles All incognito windows must be closed between testing sessions to clear all cookies Google provides instructions for opening an incognito window Document your testing path Keep a testing doc that reflects the date and time of when you tested the link of the Lytics audience you are testing along with results and screenshots This will assist Lytics support in tracking and debugging any issues Known User Audiences If you are testing audiences that tie email and cookie actions together you will need to perform a merge event which ties the web cookie and email together keep the following in mind Use a test email only once and then expire it after that As mentioned above document and log everything including which email address was used for each test Google allows you to use punctuation in email addresses while still sending to the same account For example email protected and email protected will both be delivered to the same inbox however Lytics will create separate profiles for each This will cut down on how many emails you have to create Ensure that a merge event occurs This will tie the incognito session cookie with your test email Here are a few examples of how you may achieve this Fill out a form that sends an email address over to Lytics via jstag send Open a link from an email with the email pixel embedded in an incognito window by right clicking the link and selecting Open link in incognito window Make an API call that will force append an email to your cookie Anonymous User Audiences Anonymous user audiences consist of audiences containing anonymous users When testing audiences that rely on the Lytics web cookie ID Find the cookie ID for your anonymous web session You can use Google Chrome developer tools to get the cookie for your current user On the tagged website right click and select Inspect Select the Console tab Enter jstag getid id console log id to get your cookie seerid This will allow you to search for it in the Find a User feature of the Lytics dashboard Why aren t my numbers lining up If you re troubleshooting numbers such as user counts within Lytics check out this FAQ on why your numbers may differ and our acceptable margin of error described below Acceptable Margins of Error It is common to perform quality checks against audiences in Lytics vs your other sources of truth In a successful implementation Lytics can reconcile users across channels and merge profiles which makes one to one comparisons tough However below are quality checks that can be performed to ensure that the numbers you are seeing in Lytics match up as expected with other common data sources Web Active Counts against Web Analytics for defined periods for the difference in filters Be sure you are comparing the same Time period date range Web Property Taking into account employee traffic bots Comparing only audiences with a web cookie Number of Subscribers by List for profile merging e g a user may have more than one email Build various audiences in Lytics based on file sources and compare numbers to original data Google Audience Web Analytics often reports higher numbers than Lytics One main reason is Google Analytics reports how much unique traffic made it to a page Lytics reports how many user profiles visited a page across browsers and devices For any additional validation you can export raw events or audience membership to Google Big Query Amazon S3 or another data warehouse to query against Please contact Lytics support for assistance understanding or troubleshooting these numbers Updated 3 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lytics-javascript-tag#content",
    "title": "Introduction",
    "chunk_text": "Introduction The Lytics JavaScript Tag commonly referred to as JS Tag is responsible for tracking user behavior during their site visit This anonymous tracking is an essential input for constructing user profiles and enriching them with behavioral scores and content affinities In addition to tracking behavior the Lytics JavaScript Tag is responsible for associating the current visitor with their full user profile in Lytics known or anonymous The subset of surfaced fields from that profile such as Lytics Audience membership are then available in the browser At this point the Lytics JavaScript Tag manages the handoff of this profile data to various web based integrations such as Facebook Ads or Google Analytics The following documentation will guide you to get the most out of the Lytics platform involving your web properties Installation Step 1 Install the Lytics JavaScript Tag In most cases installing the Lytics JavaScript Tag version 3 is as easy as copying and pasting a few lines of code to your source code or Tag Manager Full instructions and the tag itself are available from the web app Verifying Your Installation Option 1 Automated Validation The simplest method is using the Lytics web app verification checker Visit your tag installation instructions and you will find an installation checker in the top right Be sure to visit your site after installing the tag as this checker requires data to be fully collected and may take a few minutes to verify Option 2 Manual Validation A basic check can be done using your preferred browser s JavaScript developer console Consult your browser s documentation for access Once you have enabled the JavaScript console use the following command to return the installed tag version If a version number is successfully returned the Lytics tag has been installed correctly and has begun collecting visitor data JavaScript jstag config version Step 2 Tracking Activity With an instance of jstag initialized you can easily begin collecting data about your users by firing a jstag send call to the SDK as demonstrated below JavaScript jstag send event rescued sansa Technical Documentation The following outlines the full definition of capabilities supported by the Lytics SDK for JavaScript Configuration Version 3 comes configured out of the box with coverage ready for most use cases Various configuration options are available to support custom or in depth use cases Please find all available configuration options below with additional details listed after the table Key Type Example Description url string c lytics io URL endpoint to send the collection request cid string YOUR_LYTICS_CID Account ID which can be found in your dashboard Account Settings loadid boolean true Used when identifying users across domains stream string getlytics Name of the stream your data will be sent to sessecs integer 1800 Length of time between requests necessary before starting a new session 1800 by default qsargs string name status An array of query parameters that should always be pulled in when collecting data serializer string default Determines which serializer the JavaScript tag should use when sending data to Lytics Additional details url The generated URL should never be changed as it will prevent your data from being sent to Lytics cid When using the tag generated from your Lytics account your ID will be included and should not be altered loadid By default Lytics will store a first and third party cookie representing a user The loadid flag allows Lytics to use the third party cookie if available thus pulling cross domain behavior into a single unified user profile stream When collecting data across various domains it is common to use a custom stream for each domain which will require proper LQL in place to surface the collected data as user fields Consult customer support for more details serializer This is set to default by default During migration from v2 to v3 you may opt to use the legacy serializer which serializes data passed to Lytics in the same way as version 2 of the tag It will ignore the grandparent namespace on deeply nested variable names You should only opt to use the legacy serializer if the data you re passing is deeply nested and you previously used v2 of the Lytics JavaScript tag Example When calling jstag init you will pass in the tag configuration You can take advantage of the above configuration options by adding them to your configuration For example if you want to leverage third party cookies to enhance your brand s ability to resolve identities between owned properties add loadid to the configuration jstag init src loadid true Data Collection The Lytics JavaScript Tag makes collecting behavioral data about your website visitors easy By installing our tag you will automatically begin to collect page level information such as URL referrals and browser data This ultimately unlocks the power of a user s content affinity In addition to page level data custom data can be collected to expand user profiles further and support use cases What data is collected The following raw fields are included along with any collect event managed by the Lytics JavaScript Tag Key Sample Value Description _e pv The type of event responsible for the event emission pv for example represents a page view _ref www lytics com The referral domain _tz 7 An integer representation of the user s time zone Integer represents the difference between current time and standard UTC time PST for example would be 7 _ul en US The user s language as derived from the browser _sz 2560x1440 The size of the user s display _ts 1504306728695 The current time represented by milliseconds since Unix Epoch _nmob t If the page is being consumed on a mobile device or not _nmob true represents not mobile _device desktop The users current device type url www getlytics com The URL where the data was sent from _uid 74481 3222228897 The users Lytics _uid or cookie ID _v 3 0 2 Version number of the JavaScript tag that sent the data Page Views By default an initial page view will be captured each time the browser fully loads a new URL This ensures that you are collecting the base behavior out of the box Alternatively you can capture a page view manually at any point during a session by calling the pageView method JavaScript jstag pageView Events In addition to page views the Lytics Tag makes collecting arbitrary custom events easy This is useful regarding user actions such as clicks form submissions purchases etc Regardless of the reason for collecting the send method can be leveraged to pass any valid JavaScript object to Lytics jstag send name Jon email email protected In the above example we are simply passing the key of name to Lytics with a value of Jon to the default data stream Of course this is a basic example and something more realistic might be represented by the following examples Example User Data JavaScript jstag send userid 1234 facebook_id abc123 twitter_id def123 linkedin_id hij123 email email protected name Jon Snow first_name Jon last_name Snow title King in the North company House Stark phone 555 555 5555 cell 555 555 5555 age 21 gender m city Winterfell state Westeros country IE zip 55555 origin organic status known Example Conversion Data JavaScript jstag send event conversion campaign_id someconversionid variation_id somevariationid currency USD value 25 99 Example Event Data JavaScript jstag send event rescued sansa Advanced Options In addition to a JavaScript object payload all Lytics JavaScript Tag collection methods accept three optional parameters These should only be implemented by advanced users who fully understand the implications of using custom streams within Lytics or require feedback on asynchronous actions Option Type Description Example STREAM string The name of the stream collected data should be sent to jstag send mystream PAYLOAD object The JavaScript object you want to send to Lytics jstag send name Jon state Westeros CALLBACK function The JavaScript function to be called once collect completes jstag send mystream name Jon function r console log r JavaScript jstag send STREAM PAYLOAD CALLBACK jstag pageView STREAM PAYLOAD CALLBACK Accessing Visitor Profiles In addition to collecting behavioral data related to a user s visit the Lytics JavaScript Tag can also be configured to deliver real time profile information back to the browser By default Lytics only returns the current audiences the visitor is a member of However by surfacing user fields additional data from the visitor s profile can be returned Listed below are the core methods available for understanding your website visitors Please ensure you have access to an experienced JavaScript developer Though most installations are straightforward Lytics support may not be able to make recommendations or provide troubleshooting assistance as we do not have domain knowledge or access to your web property s unique source code Lytics Anonymous ID Each time the Lytics JavaScript Tag is loaded it will attempt to identify the visitor This is done through a variety of means the first of which is the first party _uid cookie A unique identifier is generated and stored in the browser This _uid is then included as part of the outbound payload in all collect methods from the JavaScript Tag aiding in identity resolution In some cases a developer must access or manipulate this ID In those cases there are two methods available Manipulating the _uid is an advanced feature and can significantly impact how your profiles are compiled Use at your own risk Get current ID Because getting the unique identifier can be an asynchronous process you must pass a callback function with the request Upon completing the lookup this callback function will be called and passed an attribute that represents the visitor s unique identifier JavaScript jstag getid function id do something with the id here console log id Set ID to a custom value JavaScript jstag setid mynewvalue User Attributes Audience Membership Because loading of the current user s profile is done in real time a request to our profile API is required This request is handled asynchronously as to never negatively impact your web properties As such it is recommended that access to this profile is always handled through our callback This ensures you receive the expected result and do not run the risk of race conditions or other browser issues related to asynchronous requests For use cases that can t support an asynchronous call please see audiences cached in local storage below for an alternative option Initializing callbacks To initialize a callback simply add a listener on the entityReady function HTML script type text javascript var myCallbackFunction function profile do something here with the profile console log profile data log full data object console log profile data user segments log array of audiences the visitor is a member of jstag call entityReady myCallbackFunction register the listener script Response handling Once the profile has been loaded your callback function will be called and passed a data object By default this data object will only contain the audiences the visitor is a member of and have also been enabled for API access In addition to audience membership any surfaced user fields will also be available on the object JSON email email protected segments all employees known_users data user email email protected segments all employees known_users experiences experience_id f53e136b35c498ac944b56a0658ab672 experience_slug sample_2 priority campaign 1 stage 1 experience 1 aggression 0 provider_id 93058311a5dc432323114466d0f5ac3c provider_slug custom attributes universal_experience stage_conversion_id ancestors recommendation_collection_id conversion_rate 0 tags decision_segment_id a03333377b6e563363f97dcddb77306d target_segment_id 5207e1bb073323117953cfae6fc98298 experience_id 6bca1598ffebf92fcf4e1a44b33a1444 experience_slug welcome_email_with_content_recommendations priority campaign 1 stage 1 experience 1 aggression 1 provider_id 4dd4a2b6e5ebb85688d4b561afe830a2 provider_slug sendgrid attributes transactional stage_conversion_id ancestors recommendation_collection_id conversion_rate 0 tags decision_segment_id abc6397b1e2688d772b1fdaf1518b5cf target_segment_id 1545437f6a57174ade05dde8fd3abfbd errors null In the example above the three audiences in the segments array have been enabled for API access and the email user field has been explicitly surfaced for the account Audiences cached in local storage By default Version 3 of the Lytics JS Tag caches the visitor s audience membership in local storage instead of a cookie A forthcoming integration has been planned to support writing a cookie as well to facilitate some edge use cases but in the case of zero latency needs local storage represents a better more scalable storage solution for this type of data In order to access the cached values on page load before the Lytics JavaScript tag has loaded the profile you might implement something like JavaScript try var audiences JSON parse localStorage lytics_segments catch error do something here other than log to handle the parse error console error error console log audiences Custom User Identifier In some cases it is desired to use an identifier different than the Lytics cookie for example userid for a logged in user This configuration option is available by defining byFieldKey and byFieldValue on the entity key of the core Lytics JavaScript Tag configuration JavaScript entity byFieldKey FIELDNAME byFieldValue FIELDVALUE Single Page Apps Some web properties will be built as Single Page Apps SPA SPAs should always be configured and managed by an experienced developer They represent a series of unique behaviors many unique to particular frameworks that can impact how the Lytics JavaScript Tag needs to be configured to support the desired use cases Version 3 of the Lytics JavaScript Tag has been built with SPAs in mind along with other significant improvements For most SPAs there are two important things to consider as routes change What represents the view of a new page When should the visitor s profile be reloaded or web based integrations such as Facebook be updated Each of these actions are handled independently with two simple commands HTML script type text javascript optional custom function for receiving the full entity each time it is loaded var doSomethingWithProfile function p console log p data log full data object the following function represents a fake router for a SPA framework var onRouteChange function track a pageview jstag pageView if you are running lytics web campaigns you ll need to clear the current state jstag config pathfora publish candidates experiences variations legacyABTests window _pfacfg window pathfora clearAll re fetch the profile and trigger configured campaigns jstag loadEntity doSomethingWithProfile refreshes the user profile and all configured integrations script Hosting the Lytics JavaScript Tag While it s possible to download and examine the core Lytics JavaScript Tag JS Tag source files latest js latest min js or lio js storing or serving these file s locally or from another domain is not recommended Referencing the Lytics JS Tag files from Lytics servers i e https c lytics io api tag someid latest js ensures that you get access to new features and product updates as they become available giving you the most reliable collection and delivery of your data That said in some extreme cases it may be a requirement to serve all JavaScript files from your own secure environment In these cases we ve created this document to outline the benefits drawbacks and a suggested approach What are the benefits Compliance with rigid security requirements What are the drawbacks Voids previously agreed upon Service level agreements SLAs and support agreements due to the introduction of new and non Lytics controlled infrastructure Feature enhancements and bug fixes are made frequently to the Lytics JS Tag Those that host their tag outside of Lytics will need to manually update the source to benefit from said improvements Leveraging client side integrations will require manual configuration while having limited support from the Lytics team Additional Services hours or agreement to assist with initial installation and setup issues Many account settings will no longer function as designed since configurations are not able to be updated dynamically The core Lytics JS Tag endpoint has various levels of caching and protections to ensure it is always served no matter load or conditions By hosting outside of the Lytics architecture all caching and scalability concerns must be managed by the customer Given these benefits and drawbacks if your organization still wants to proceed with hosting the Lytics JS Tag see the following steps to get started Where should I start Before you begin ensure you are installing version 3 of the Lytics JS Tag Version 2 can t be hosted outside of Lytics which means you will be restricted to version 3 of the tag Getting up and running with a hosted version of the Lytics JS Tag comes down to three main steps Accessing the source code and default configuration Navigating to the source code is relatively simple The URL can be found by visiting the Tag Installation section of the Lytics app The tag sample on that page will include a jstag init function One line below that you will see a src definition and a URL that looks something like c lytics io api tag Copying and pasting that URL into a new browser window will result in the core JavaScript tag to be loaded Most browsers will allow you to File Save the source from this point to your local machine Hosting the source code and default configuration The output file that was created above will need to be hosted on a public server within your infrastructure Unfortunately there is little to no guidance Lytics can offer here other than to be sure the hosting solution can handle the necessary load generated by your web asset s Initializing the tag Return to the Tag Installation section and copy and paste the entire script tag as you normally would The src URL in the init config will need to be updated with the URL of your now hosted JavaScript tag You ll likely end up with something like this jstag init src mycompany com assets tag lytics latest min js Once your tag has been hosted and initialized properly we recommend you complete the verification steps to ensure everything has been installed and is working properly Subresource Integrity This document has moved Working with Tag Managers Tag Managers make it easier to work with vendor JavaScript JS tags like Lytics for large dynamic web assets Lytics can be integrated through virtually every Tag Manager on the market today Because each Tag Manager is different the level of integration and development lift can vary so please consult the documentation for your preferred Tag Manager for specific details That being said installation of the Lytics JS Tag is generally as simple as copying and pasting the snippet of code from the installation instructions in the Lytics app to a container within your Tag Manager and then publishing to your live instance from there Installing using Google Tag Manager Google Tag Manager GTM is recommended as a flexible and transparent Tag Manager Follow the steps below to install the Lytics JS Tag using GTM Log into your GTM account Click New Tag and then Tag Configuration Under the Custom header select Custom HTML Copy the Lytics JS Tag snippet and paste it here Name it Lytics JavaScript Tag In the Triggering section select All Pages Click Save Publish the container by clicking Submit Navigate to your website and click on several pages to trigger sample event Wait a few minutes for the traffic to be received Check the Tag Installation Status at the top right of the installation page If you are not seeing traffic received try repeating steps 9 10 before trying the basic troubleshooting steps API Reference The Lytics JavaScript library uses two primary APIs The data upload handles the collection for all jstag send calls The personalization API retrieves the user s profile and powers onsite personalization and client side integrations such as Facebook Troubleshooting There are a few steps to ensure the Lytics JavaScript JS Tag is properly installed and receives data from your website Is the tag loaded The core JavaScript tag has a helper method that will return true if all Lytics resources have been loaded properly Open the console in Chrome Developer tools then copy and paste the following to verify that the tag has finished loaded JavaScript jstag isLoaded Is data being sent to Lytics What data Why The Lytics Jstag sends data to Lytics after every page view or on a custom trigger configured by the client Those sends are captured in the network tab in developer tools When the data is sent how it is sent and if it was sent successfully are all stored within the network call metadata To start select the network tab and filter on lytics io Once the list is populated select a line that us structured like the one highlighted below The request URL can be found at the top of the Header section This url indicates that data is being sent to Lytics via the c endpoint The actual attributes that were sent to Lytics can be seen in the Payload section as seen below Testing To test the sending method there is also the jstag send function from the console and that will send a single payload to the account configured as the cid in the initialization of the tag Please see the example below for syntax The network call should then show an event sending to Lytics _Finally validate the event made it to Lytics by verifying the event has come in the UI via the stream pipeline Is my visitor s profile being retrieved correctly The Lytics Jstag will use the personalize endpoint to retrieve the entity on every pageview This ensures that the most relevant information is considered when deciding what the consumer experience should be while they are navigating the webpage To start select the network tab and filter on lytics io Once the list is populated select a line that us structured like the one highlighted below The request URL can be found at the top of the Header section This url indicates that data is being retrieved from Lytics via the personalize endpoint Additionally the preview tab as seen below can be very useful in understanding what information has been pulled in to update the consumers profile client side What sort of data is being stored client side How is this controlled Several types of consumer data are stored client side Consumer Attributes Consumer behavior Consumer attributes will be actual data from the profile like first_name last_name etc This information is stored on the entity itself and can be accessed for personalization The Lytics user has full control over what attributes appear client side _In this example _uids has been allow listed in the account settings to surface client side _ Account Setting Console in Dev Tools Consumer behaviors expose the different audiences a consumer is currently in and current experiences campaigns they qualify for Both of these behaviors can be found in the payload returned when calling jstag getEntity in the console as seen below Experiences Audiences How can I verify that the correct audiences are being returned You can see the audiences the current user is a member of using the following in your Chrome developer console JavaScript jstag getSegments This callback will return a list of audiences the user is a member of and should only be called after the user profile has loaded Best Practices If you re trying to test a use case that requires a certain audience membership in the browser follow these general tips in order to create a proper testing environment and not run into merge conflicts and false positives Always use incognito mode An incognito window removes all cookies caches etc ensuring you have no history with the site and that no email addresses share a cookie The entirety of a test session must take place in the same incognito window so that all actions tie to the same profiles All incognito windows must be closed between testing sessions to clear all cookies Google provides instructions for opening an incognito window Document your testing path Keep a testing doc that reflects the date and time of when you tested the link of the Lytics audience you are testing along with results and screenshots This will assist Lytics support in tracking and debugging any issues Known User Audiences If you are testing audiences that tie email and cookie actions together you will need to perform a merge event which ties the web cookie and email together keep the following in mind Use a test email only once and then expire it after that As mentioned above document and log everything including which email address was used for each test Google allows you to use punctuation in email addresses while still sending to the same account For example email protected and email protected will both be delivered to the same inbox however Lytics will create separate profiles for each This will cut down on how many emails you have to create Ensure that a merge event occurs This will tie the incognito session cookie with your test email Here are a few examples of how you may achieve this Fill out a form that sends an email address over to Lytics via jstag send Open a link from an email with the email pixel embedded in an incognito window by right clicking the link and selecting Open link in incognito window Make an API call that will force append an email to your cookie Anonymous User Audiences Anonymous user audiences consist of audiences containing anonymous users When testing audiences that rely on the Lytics web cookie ID Find the cookie ID for your anonymous web session You can use Google Chrome developer tools to get the cookie for your current user On the tagged website right click and select Inspect Select the Console tab Enter jstag getid id console log id to get your cookie seerid This will allow you to search for it in the Find a User feature of the Lytics dashboard Why aren t my numbers lining up If you re troubleshooting numbers such as user counts within Lytics check out this FAQ on why your numbers may differ and our acceptable margin of error described below Acceptable Margins of Error It is common to perform quality checks against audiences in Lytics vs your other sources of truth In a successful implementation Lytics can reconcile users across channels and merge profiles which makes one to one comparisons tough However below are quality checks that can be performed to ensure that the numbers you are seeing in Lytics match up as expected with other common data sources Web Active Counts against Web Analytics for defined periods for the difference in filters Be sure you are comparing the same Time period date range Web Property Taking into account employee traffic bots Comparing only audiences with a web cookie Number of Subscribers by List for profile merging e g a user may have more than one email Build various audiences in Lytics based on file sources and compare numbers to original data Google Audience Web Analytics often reports higher numbers than Lytics One main reason is Google Analytics reports how much unique traffic made it to a page Lytics reports how many user profiles visited a page across browsers and devices For any additional validation you can export raw events or audience membership to Google Big Query Amazon S3 or another data warehouse to query against Please contact Lytics support for assistance understanding or troubleshooting these numbers Updated 3 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/personalization-pathfora",
    "title": "The Pathfora JS SDK",
    "chunk_text": "The Pathfora JS SDK Pathfora JS is a lightweight SDK for displaying personalized modules on your website Lytics web campaign tools serve as an interface for the Pathfora API but advanced users may wish to interact directly with Pathfora to achieve deeper customization You will be able to track any campaign created with Pathfora within Lytics Read Pathfora JS documentation Updated 10 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/personalization-pathfora#content",
    "title": "The Pathfora JS SDK",
    "chunk_text": "The Pathfora JS SDK Pathfora JS is a lightweight SDK for displaying personalized modules on your website Lytics web campaign tools serve as an interface for the Pathfora API but advanced users may wish to interact directly with Pathfora to achieve deeper customization You will be able to track any campaign created with Pathfora within Lytics Read Pathfora JS documentation Updated 10 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/subresource-integrity-sri",
    "title": "What is it?",
    "chunk_text": "What is it Subresource Integrity SRI is a security feature that enables browsers to verify that the resources they fetch for example from a CDN are delivered without unexpected manipulation It allows you to provide a cryptographic hash that a fetched resource must match This definition is sourced from MDN Web Docs where full documentation on SRI is found The following demonstrates a simple non lytics specific example as provided by MDM of how the cryptographic hash can be added to a standard script element to validate that what is loaded is in fact what is expected JavaScript script src https example com example framework js integrity sha384 oqVuAfXRKap7fdgcCY5uykM6 R9GqQ8K uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC crossorigin anonymous script Is SRI for me It is essential to remember that SRI is very technical and will require development resources on your end to facilitate Lytics can support SRI technically but offers no services or off the shelf solutions An SRI requirement often stems from strict security compliance for enterprise level policies Though it adds a layer of certainty that the file you expect matches precisely what is delivered the overhead for managing SRI is often not worth the investment What will it impact drawbacks Please read the following section carefully as leveraging SRI will have significant impacts on several of the out of the box functions of the Lytics product All will still be possible but will likely require additional manual steps With this approach comes a few significant implications Account settings altered in the Lytics UI will only be reflected after the tag has been synced and the SRI hash updated Most settings updates result in alterations to variables in the core tag file If leveraged Lytics Personalization Campaigns Experiences will not be automatically started ended or deployed Personalization campaigns depend on a dynamic configuration file that changes each time a configuration update is made As such it is impossible to prevent SRI from blocking the script as it should This means that the config must be cached and served from a customer managed resource as outlined below Each time a Campaign Experience is altered in any way this configuration file will need to be altered In addition the Preview functionality also relies on a dynamic configuration file to be loaded which means there will be no ability to Preview an experience before it is deployed if SRI is in place Lytics Support can offer limited assistance on implementing and managing SRI other than tag configuration guidance In the case of bugs and technical issues our support team cannot utilize existing methods to assist you Since the file is custom and hosted outside of Lytics you must do so at your own risk Bug fixes or feature availability will depend on your team s ability to update the external files and associated SRI hashes as none of the updates pushed directly by the Lytics team will be automatically deployed to your assets Recommended Implementation The following outlines a recommended but not exclusive approach to implementing SRI The following also outlines several options that may or may not be relevant based on your account s features in use and configuration specifics What JS files does Lytic use load c lytics io api tag ACCOUNT_ID latest min js This is the core JavaScript web SDK It is used for identification data collection and personalization via the standard profile callbacks or our out of the box web personalization campaigns experiences c lytics io static pathfora min js This is the core web personalization SDK managed by Lytics This is used and only used to test and deploy the various Lytics web personalization Experiences and or Campaigns Anyone who is leveraging our modals or inline personalization recommendations will need to ensure Pathfora is included in the SRI strategy For those that aren t leveraging this directly they may opt to alternatively turn Pathfora SDK off which will prevent both this JS file and the following CSS file from being loaded c lytics io static pathfora min css This default CSS file informs the look and feel of our web personalization Experiences This file though required can also be hosted and customized to your liking as outlined below in the tag configuration section c lytics io api experience candidate ACCOUNT_ID config js Finally this file loads the configuration for web personalization Experiences and Campaigns If you leverage any Lytics managed web Experience this file must be included in the SRI strategy and updated each time an Experience changes NO EXPERIENCE WILL BE UPDATED DEPLOYED OR SHUT OFF automatically with SRI in place File hosting caching Due to SRI requiring the static asset which is also loaded to match the fixed hash all assets outlined above must be copied and hosted at an alternative location outside of Lytics purview This means that no bug fixes updates configuration changes etc will be managed directly by Lytics As part of this asset management an independent update process is recommended to be in place For instance if a web Experience is configured and set to go live on the first of January a manual update would need to be made to pull in the proper latest min js and config js file contains the Experience information before it will show live on your site In addition in this example Pathfore must also be enabled and available on the site Outside of the technical lift required to provide a web accessible hosting solution which will not be covered here accessing downloading and surfacing the necessary files outlined above is relatively easy You should be able to download the above files via your preferred method and surface that same file on a managed domain As an example c lytics io api tag ACCOUNT_ID latest min js becomes acme co lyticsjstag latest min js or whatever naming convention you d prefer to leverage From there you will need to configure the asynchronous tag wrapper responsible for initializing Lytics to point to this new asset as outlined below ht Start Lytics Tracking Tag Version 3 script type text javascript function use strict var o window jstag window jstag r function n e o e function for var n arguments length t new Array n i 0 i n i t i arguments i r push e t n send n mock n identify n pageView n unblock n getid n setid n loadEntity n getEntity n on n once n call o loadScript function n t i var e document createElement script e async 0 e src n e onload t e onerror i var o document getElementsByTagName script 0 r o o parentNode document head document body c o r lastChild return null c r insertBefore e c r appendChild e this o init function n t return this config t this loadScript t src function if o init n throw new Error Load error o init o config function for var n 0 n r length n var t r n 0 i r n 1 o t apply o i r void 0 this Define config and initialize Lytics tracking tag The setup below will disable the automatic sending of Page Analysis Information to prevent duplicative sends as this same information will be included in the jstag pageView call below by default jstag init src ENTER YOUR NEW TAG URL HERE pageAnalysis dataLayerPull disabled true You may need to send a page view depending on your use case jstag pageView script Additional Configuration Options Additionally if you are using Pathfora as outlined above the following configuration should be included to point at all of the proper static assets HTML Start Lytics Tracking Tag Version 3 script type text javascript function use strict var o window jstag window jstag r function n e o e function for var n arguments length t new Array n i 0 i n i t i arguments i r push e t n send n mock n identify n pageView n unblock n getid n setid n loadEntity n getEntity n on n once n call o loadScript function n t i var e document createElement script e async 0 e src n e onload t e onerror i var o document getElementsByTagName script 0 r o o parentNode document head document body c o r lastChild return null c r insertBefore e c r appendChild e this o init function n t return this config t this loadScript t src function if o init n throw new Error Load error o init o config function for var n 0 n r length n var t r n 0 i r n 1 o t apply o i r void 0 this Define config and initialize Lytics tracking tag The setup below will disable the automatic sending of Page Analysis Information to prevent duplicative sends as this same information will be included in the jstag pageView call below by default jstag init pathfora install disabled false set to true if you want to fully disable Lytics Pathfora sdk disabled false set to true if you want to fully disable Lytics Pathfora src URL TO YOUR HOSTED PATHFORA JS FILE pathfora min js css disabled false set to true if you want to fully disable Lytics Pathfora or independently disable the default Lytics Pathfora CSS preview disabled false set to true if you want to fully disable Lytics Pathfora publish disabled false set to true if you want to fully disable Lytics Pathfora legacy disabled true legacy personalization is deprecated and not supported by SRI it should be disabled urlFragmentWhitelist a list of url fragments that will be allowed to load the Experiences domain1 com domain2 com src URL TO YOUR HOSTED EXPERIENCE CANDIDATE CONFIG FILE config js You may need to send a page view depending on your use case jstag pageView script Settings Management Finally since JavaScript tag related settings will not take effect immediately it is possible to manually configure many of those directly in the tag as well if preferred over an SRI update For any other settings within the JavaScript tag section of Vault settings management consult with support for the best path forward Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/subresource-integrity-sri#content",
    "title": "What is it?",
    "chunk_text": "What is it Subresource Integrity SRI is a security feature that enables browsers to verify that the resources they fetch for example from a CDN are delivered without unexpected manipulation It allows you to provide a cryptographic hash that a fetched resource must match This definition is sourced from MDN Web Docs where full documentation on SRI is found The following demonstrates a simple non lytics specific example as provided by MDM of how the cryptographic hash can be added to a standard script element to validate that what is loaded is in fact what is expected JavaScript script src https example com example framework js integrity sha384 oqVuAfXRKap7fdgcCY5uykM6 R9GqQ8K uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC crossorigin anonymous script Is SRI for me It is essential to remember that SRI is very technical and will require development resources on your end to facilitate Lytics can support SRI technically but offers no services or off the shelf solutions An SRI requirement often stems from strict security compliance for enterprise level policies Though it adds a layer of certainty that the file you expect matches precisely what is delivered the overhead for managing SRI is often not worth the investment What will it impact drawbacks Please read the following section carefully as leveraging SRI will have significant impacts on several of the out of the box functions of the Lytics product All will still be possible but will likely require additional manual steps With this approach comes a few significant implications Account settings altered in the Lytics UI will only be reflected after the tag has been synced and the SRI hash updated Most settings updates result in alterations to variables in the core tag file If leveraged Lytics Personalization Campaigns Experiences will not be automatically started ended or deployed Personalization campaigns depend on a dynamic configuration file that changes each time a configuration update is made As such it is impossible to prevent SRI from blocking the script as it should This means that the config must be cached and served from a customer managed resource as outlined below Each time a Campaign Experience is altered in any way this configuration file will need to be altered In addition the Preview functionality also relies on a dynamic configuration file to be loaded which means there will be no ability to Preview an experience before it is deployed if SRI is in place Lytics Support can offer limited assistance on implementing and managing SRI other than tag configuration guidance In the case of bugs and technical issues our support team cannot utilize existing methods to assist you Since the file is custom and hosted outside of Lytics you must do so at your own risk Bug fixes or feature availability will depend on your team s ability to update the external files and associated SRI hashes as none of the updates pushed directly by the Lytics team will be automatically deployed to your assets Recommended Implementation The following outlines a recommended but not exclusive approach to implementing SRI The following also outlines several options that may or may not be relevant based on your account s features in use and configuration specifics What JS files does Lytic use load c lytics io api tag ACCOUNT_ID latest min js This is the core JavaScript web SDK It is used for identification data collection and personalization via the standard profile callbacks or our out of the box web personalization campaigns experiences c lytics io static pathfora min js This is the core web personalization SDK managed by Lytics This is used and only used to test and deploy the various Lytics web personalization Experiences and or Campaigns Anyone who is leveraging our modals or inline personalization recommendations will need to ensure Pathfora is included in the SRI strategy For those that aren t leveraging this directly they may opt to alternatively turn Pathfora SDK off which will prevent both this JS file and the following CSS file from being loaded c lytics io static pathfora min css This default CSS file informs the look and feel of our web personalization Experiences This file though required can also be hosted and customized to your liking as outlined below in the tag configuration section c lytics io api experience candidate ACCOUNT_ID config js Finally this file loads the configuration for web personalization Experiences and Campaigns If you leverage any Lytics managed web Experience this file must be included in the SRI strategy and updated each time an Experience changes NO EXPERIENCE WILL BE UPDATED DEPLOYED OR SHUT OFF automatically with SRI in place File hosting caching Due to SRI requiring the static asset which is also loaded to match the fixed hash all assets outlined above must be copied and hosted at an alternative location outside of Lytics purview This means that no bug fixes updates configuration changes etc will be managed directly by Lytics As part of this asset management an independent update process is recommended to be in place For instance if a web Experience is configured and set to go live on the first of January a manual update would need to be made to pull in the proper latest min js and config js file contains the Experience information before it will show live on your site In addition in this example Pathfore must also be enabled and available on the site Outside of the technical lift required to provide a web accessible hosting solution which will not be covered here accessing downloading and surfacing the necessary files outlined above is relatively easy You should be able to download the above files via your preferred method and surface that same file on a managed domain As an example c lytics io api tag ACCOUNT_ID latest min js becomes acme co lyticsjstag latest min js or whatever naming convention you d prefer to leverage From there you will need to configure the asynchronous tag wrapper responsible for initializing Lytics to point to this new asset as outlined below ht Start Lytics Tracking Tag Version 3 script type text javascript function use strict var o window jstag window jstag r function n e o e function for var n arguments length t new Array n i 0 i n i t i arguments i r push e t n send n mock n identify n pageView n unblock n getid n setid n loadEntity n getEntity n on n once n call o loadScript function n t i var e document createElement script e async 0 e src n e onload t e onerror i var o document getElementsByTagName script 0 r o o parentNode document head document body c o r lastChild return null c r insertBefore e c r appendChild e this o init function n t return this config t this loadScript t src function if o init n throw new Error Load error o init o config function for var n 0 n r length n var t r n 0 i r n 1 o t apply o i r void 0 this Define config and initialize Lytics tracking tag The setup below will disable the automatic sending of Page Analysis Information to prevent duplicative sends as this same information will be included in the jstag pageView call below by default jstag init src ENTER YOUR NEW TAG URL HERE pageAnalysis dataLayerPull disabled true You may need to send a page view depending on your use case jstag pageView script Additional Configuration Options Additionally if you are using Pathfora as outlined above the following configuration should be included to point at all of the proper static assets HTML Start Lytics Tracking Tag Version 3 script type text javascript function use strict var o window jstag window jstag r function n e o e function for var n arguments length t new Array n i 0 i n i t i arguments i r push e t n send n mock n identify n pageView n unblock n getid n setid n loadEntity n getEntity n on n once n call o loadScript function n t i var e document createElement script e async 0 e src n e onload t e onerror i var o document getElementsByTagName script 0 r o o parentNode document head document body c o r lastChild return null c r insertBefore e c r appendChild e this o init function n t return this config t this loadScript t src function if o init n throw new Error Load error o init o config function for var n 0 n r length n var t r n 0 i r n 1 o t apply o i r void 0 this Define config and initialize Lytics tracking tag The setup below will disable the automatic sending of Page Analysis Information to prevent duplicative sends as this same information will be included in the jstag pageView call below by default jstag init pathfora install disabled false set to true if you want to fully disable Lytics Pathfora sdk disabled false set to true if you want to fully disable Lytics Pathfora src URL TO YOUR HOSTED PATHFORA JS FILE pathfora min js css disabled false set to true if you want to fully disable Lytics Pathfora or independently disable the default Lytics Pathfora CSS preview disabled false set to true if you want to fully disable Lytics Pathfora publish disabled false set to true if you want to fully disable Lytics Pathfora legacy disabled true legacy personalization is deprecated and not supported by SRI it should be disabled urlFragmentWhitelist a list of url fragments that will be allowed to load the Experiences domain1 com domain2 com src URL TO YOUR HOSTED EXPERIENCE CANDIDATE CONFIG FILE config js You may need to send a page view depending on your use case jstag pageView script Settings Management Finally since JavaScript tag related settings will not take effect immediately it is possible to manually configure many of those directly in the tag as well if preferred over an SRI update For any other settings within the JavaScript tag section of Vault settings management consult with support for the best path forward Updated over 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/sdks-mobile",
    "title": "https://docs.lytics.com/docs/sdks-mobile",
    "chunk_text": "Welcome to the Lytics Mobile SDK documentation where we will explore the native mobile SDKs for both Android and iOS platforms In this section we will delve into the capabilities and features of these SDKs which enable app developers to integrate Lytics powerful customer data platform directly into their mobile applications Lytics Mobile SDKs provide a simple way to collect data from mobile apps and enrich user profiles with valuable insights including user behavior preferences and interests By integrating Lytics Mobile SDKs into your mobile app you can better understand your customers and deliver personalized experiences that drive engagement retention and revenue In this documentation we will cover how to install and configure Lytics Mobile SDKs and use them to identify users manage consent track events and personalize experiences Whether you are a mobile app developer or a marketer this documentation will provide you with the essential knowledge needed to leverage Lytics Mobile SDKs to build better mobile experiences and gain deeper insights into your customers behaviors and preferences Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/sdks-mobile#content",
    "title": "https://docs.lytics.com/docs/sdks-mobile#content",
    "chunk_text": "Welcome to the Lytics Mobile SDK documentation where we will explore the native mobile SDKs for both Android and iOS platforms In this section we will delve into the capabilities and features of these SDKs which enable app developers to integrate Lytics powerful customer data platform directly into their mobile applications Lytics Mobile SDKs provide a simple way to collect data from mobile apps and enrich user profiles with valuable insights including user behavior preferences and interests By integrating Lytics Mobile SDKs into your mobile app you can better understand your customers and deliver personalized experiences that drive engagement retention and revenue In this documentation we will cover how to install and configure Lytics Mobile SDKs and use them to identify users manage consent track events and personalize experiences Whether you are a mobile app developer or a marketer this documentation will provide you with the essential knowledge needed to leverage Lytics Mobile SDKs to build better mobile experiences and gain deeper insights into your customers behaviors and preferences Updated almost 2 years ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/sdk-for-ios",
    "title": "iOS Quick Start",
    "chunk_text": "iOS Quick Start Overview The Lytics SDK for iOS makes it easy for developers to identify manage consent and collect user activity data from their native mobile apps This ensures all critical channels can be associated with fully resolved user profiles This section explains how to integrate Lytics into your iOS apps If you are looking for information on Android apps see the Lytics SDK for Android Here we will cover how the Lytics SDK for iOS enables the following Create a persistent identifier for a user across multiple app engagements Collect user attributes identifiers Manage user consent Collect user activity events as they engage with your app Tailor collection destination and settings based on your particular needs About the Lytics SDK for iOS Approximate Installation Size 3 2 MB includes Swift Concurrency iOS Version Support 14 0 Xcode Version Required v14 2 or Higher Installation Before You Begin Before you begin implementing the Lytics SDK for iOS please make sure you have the following Access to a Lytics account capable of collecting streaming data The latest version of Xcode v14 0 or higher An iOS app that you can use to implement the Lytics SDK for iOS Step 1 Add the Lytics SDK Dependencies You can add the Lytics SDK to an Xcode project as a package dependency From the File menu select Add Packages Enter https github com lytics ios sdk into the package repository URL text field and click Add Package Add the Lytics package product to your application target Step 2 Configure the SDK A variety of top level configuration options are available to ensure the SDK can be tailored to the needs of your particular application To get started however we need only add your valid Lytics API token to the Lytics shared start initialization call as outlined below Swift Lytics shared start apiToken YOUR VALID LYTICS API TOKEN Step 3 Identifying a User Once we have initialized the SDK it is a best practice to identify the user anywhere formally they provide additional strong identifiers such as a username or email upon login for example This ensures your profiles have the highest potential for properly unifying across your various data sources Do note this step is optional By default the Lytics SDK will create an anonymous identifier for all users and leverage that to merge with disparate sources as we do with our traditional web based JavaScript SDK Swift Lytics shared identify identifiers AnyCodable email email protected Step 4 Tracking Activity Once the user has been identified optional we can begin tracking various activities throughout their visit Typical activities include screen views clicks purchases etc A full scope of event tracking flexibility can be found in the technical documentation section below Swift Lytics shared track name purchase properties AnyCodable total 19 99 item Slingshot Technical Documentation The following outlines the full definition of capabilities supported by the Lytics SDK for iOS Configuration When initializing the Lytics SDK with Lytics shared start a variety of top level configuration options are available to ensure the SDK can be tailored to the needs of your particular application Parameter Description Type Default Value apiKey Your Lytics account API token String defaultStream The default stream name event data will be sent Note This can be overridden globally or at the event level String ios_sdk primaryIdentityKey The key that represents the strongest identifier for users Note Used primarily to retrieve a full profile for personalization String _uid anonymousIdentityKey The key that should be used to create and store the anonymous identifier String _uid trackApplicationLifecycleEvents A value that indicates whether application lifecycle events should be tracked automatically Bool false uploadInterval The max interval in seconds at which the event queue is flushed and uploaded to the Lytics API Double 10 maxQueueSize The max event queue size that can be stored before all queued events are flushed and sent to the Lytics API _Note To disable a max queue size set the value to 0 Int 10 maxLoadRetryAttempts The maximum number of times to retry failed load requests before throwing an error Int 1 maxUploadRetryAttempts The maximum number of times to try and resend an event on failure Int 3 maxRetryCount The max number of times to try and resend an event on failure Int 3 sessionDuration The number of seconds a session should persist Sessions expire if the app has been either closed or in the background for the number of seconds defined here Double 1200 requireConsent A Boolean value indicating whether a user must explicitly opt in to event tracking Bool false defaultTable The table used when fetching user profiles String user collectionEndpoint The data upload endpoint URL https api lytics io collect json entityEndpoint The entity personalization or profile endpoint URL https api lytics io api entity enableSandbox A Boolean value indicating if events should be sent in sandbox mode When in sandbox mode any emitted events will not be processed by Lytics but all logs will be available as are with live events Bool false logLevel Set the logging level of the SDK LogLevel error debug info error Each of the above configuration options can be added to the initial Lytics shared start instantiation of the Lytics SDK as outlined here Swift Lytics shared start apiToken YOUR VALID LYTICS API TOKEN configuration in configuration logLevel debug configuration defaultStream my_custom_ios_stream configuration maxQueueSize 15 Identifying Users Lytics shared identify is used to emit strong identifiers and attributes associated with your app user This method provides a means to store the primary identifiers on the device itself so that all future event tracking from that device automatically is appended with information necessary to maximize the effectiveness of your identity resolution strategy For each Lytics shared identify call you have the option to only store that data to the device or emit it to a Lytics event stream for mapping to profiles Emitting all event types to a Lytics event stream is always our recommendation Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers A required set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user Map attributes An optional set of key value pairs that represent user attributes that are not to be used for data merging These generally are things such as first name last name address status etc Map shouldSend An optional boolean value to determine if the identify event should only be stored on the device or also emitted to a Lytics event stream recommended Bool Example identify call where we set pass a custom stream set of identifiers and attributes Swift Lytics shared identify stream sample custom stream optional identifiers AnyCodable email email protected attributes AnyCodable first_name Kevin last_name McCalister Tracking Events Lytics shared track emits activity data for a particular app user to a Lytics even stream Each track call will automatically be appended with the strong identifiers stored on the device to ensure the highest potential resolution against Lytics user profiles Lytics shared track calls can include a variety of optional parameters and data associated with the interaction as defined below Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event Map properties An optional set of key value pairs that represent event properties that are not to be used for data merging These generally are things such as total cost content consumed item clicked etc Map Example track call where we track a purchase event and its associated properties Swift Lytics shared track name purchase properties AnyCodable total 19 99 item Slingshot Screen Tracking Lytics shared screen is an additional method for appending device information to the traditional track call This is an extension of the above definition and results in including the following information with all events Operating System Version UIDevice current systemVersion Device Model Name UIDevice current name identifierForVendor UIDevice current identifierForVendor orientation UIDevice current orientation userInterfaceIdiom UIDevice current userInterfaceIdiom Data Privacy Controls Depending on your application s particular needs various data privacy controls are available by default Below you ll find the optional methods and examples of scenarios where some or all may be most applicable Consent Lytics shared consent is a specific event type for collecting critical information related to consent such as location document etc As a best practice a Lytics shared consent event should always be leveraged alongside the Lytics shared optIn event to ensure proper documentation of consent Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event Map identifiers A required set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user Map consent An required set of key value pairs that represent specific consent event properties that are not to be used for data merging These generally are things such as type of consent document reference location etc Map Swift Lytics shared consent name consent 1 identifiers AnyCodable userid my fake userid 1234 attributes AnyCodable firstName Kevin lastName McCalister consent AnyCodable documents terms_jan_2023 sharing_policy_jan_2023 location Chicago IL consented true Opt In Lytics shared optIn sets the state of a user s activity tracking preference By default all users are opted in This default setting is fully configurable at the top level SDK configuration In either case an explicit call to Lytics shared optIn will result in activities being tracked and sent to a Lytics stream Swift Lytics shared optIn Opt Out Lytics shared optOut is the opposite of the above Lytics shared optIn method and will prevent activity data from being emitted to Lytics after it has been called until an additional Lytics shared optIn call has been made Swift Lytics shared optOut IDFA Identifier for Advertisers IDFA or advertisingIdentifier is an alphanumeric string that is unique to each device Collection of this identifier requires explicit confirmation from the app user which the Lytics SDK for iOS can trigger In addition upon confirmation the IDFA will be treated as a strong identifier and included with all outbound events emitted to Lytics streams for improved resolution The Lytics SDK for iOS offers two methods to collect IDFA and handle the opt out of IDFA To present a required modal asking for tracking access and storage inclusion of the device specific IDFA upon confirmation call the following method Swift Lytics shared requestTrackingAuthorization To disable the storing and emitting of the user s device specific IDFA call the following method Swift Lytics shared disableTracking Utility Several utility type methods are available for flushing queues resetting stored data and performing general maintenance or debugging Event Queue Flushing Occasionally it may be desired to force a flush of the event queue This is common after a series of events before sign out etc This method will bypass any queue caps or timers and result in all queued events being emitted Swift Lytics shared dispatch Stored Property Flushing Strong identifiers and attributes are stored locally on the device In general there are not likely to be many use cases where it is necessary to delete all stored data and reset the SDK By doing so the resolution will become much more complex and all identifiers even anonymous will no longer be accessible That said in the case of a shared device where a user is logging in and out or in the more common case of a test device the following method is available to delete all data stored by the Lytics SDK for iOS Swift Lytics shared reset Access Stored Identifiers Attributes Be it for testing or presenting a profile to the end user the complete stored device level profile is available with the following method Do note this is only the stored data as a result of Lytics shared identify calls and does not represent the complete user profile from the Lytics system and cross channel sources Swift let userModel await Lytics shared user API Reference The Lytics SDK for iOS is optimized to leverage the fewest number of APIs possible As such all event collection is managed by leveraging the core Lytics event collection API Troubleshooting When enabled the debug log level will result in additional logs to aid troubleshooting and issue resolution Don t hesitate to contact customer support if you have trouble implementing the Lytics SDK for iOS FAQ Please visit our community section for FAQs and SDK related discussions Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/sdk-for-ios#content",
    "title": "iOS Quick Start",
    "chunk_text": "iOS Quick Start Overview The Lytics SDK for iOS makes it easy for developers to identify manage consent and collect user activity data from their native mobile apps This ensures all critical channels can be associated with fully resolved user profiles This section explains how to integrate Lytics into your iOS apps If you are looking for information on Android apps see the Lytics SDK for Android Here we will cover how the Lytics SDK for iOS enables the following Create a persistent identifier for a user across multiple app engagements Collect user attributes identifiers Manage user consent Collect user activity events as they engage with your app Tailor collection destination and settings based on your particular needs About the Lytics SDK for iOS Approximate Installation Size 3 2 MB includes Swift Concurrency iOS Version Support 14 0 Xcode Version Required v14 2 or Higher Installation Before You Begin Before you begin implementing the Lytics SDK for iOS please make sure you have the following Access to a Lytics account capable of collecting streaming data The latest version of Xcode v14 0 or higher An iOS app that you can use to implement the Lytics SDK for iOS Step 1 Add the Lytics SDK Dependencies You can add the Lytics SDK to an Xcode project as a package dependency From the File menu select Add Packages Enter https github com lytics ios sdk into the package repository URL text field and click Add Package Add the Lytics package product to your application target Step 2 Configure the SDK A variety of top level configuration options are available to ensure the SDK can be tailored to the needs of your particular application To get started however we need only add your valid Lytics API token to the Lytics shared start initialization call as outlined below Swift Lytics shared start apiToken YOUR VALID LYTICS API TOKEN Step 3 Identifying a User Once we have initialized the SDK it is a best practice to identify the user anywhere formally they provide additional strong identifiers such as a username or email upon login for example This ensures your profiles have the highest potential for properly unifying across your various data sources Do note this step is optional By default the Lytics SDK will create an anonymous identifier for all users and leverage that to merge with disparate sources as we do with our traditional web based JavaScript SDK Swift Lytics shared identify identifiers AnyCodable email email protected Step 4 Tracking Activity Once the user has been identified optional we can begin tracking various activities throughout their visit Typical activities include screen views clicks purchases etc A full scope of event tracking flexibility can be found in the technical documentation section below Swift Lytics shared track name purchase properties AnyCodable total 19 99 item Slingshot Technical Documentation The following outlines the full definition of capabilities supported by the Lytics SDK for iOS Configuration When initializing the Lytics SDK with Lytics shared start a variety of top level configuration options are available to ensure the SDK can be tailored to the needs of your particular application Parameter Description Type Default Value apiKey Your Lytics account API token String defaultStream The default stream name event data will be sent Note This can be overridden globally or at the event level String ios_sdk primaryIdentityKey The key that represents the strongest identifier for users Note Used primarily to retrieve a full profile for personalization String _uid anonymousIdentityKey The key that should be used to create and store the anonymous identifier String _uid trackApplicationLifecycleEvents A value that indicates whether application lifecycle events should be tracked automatically Bool false uploadInterval The max interval in seconds at which the event queue is flushed and uploaded to the Lytics API Double 10 maxQueueSize The max event queue size that can be stored before all queued events are flushed and sent to the Lytics API _Note To disable a max queue size set the value to 0 Int 10 maxLoadRetryAttempts The maximum number of times to retry failed load requests before throwing an error Int 1 maxUploadRetryAttempts The maximum number of times to try and resend an event on failure Int 3 maxRetryCount The max number of times to try and resend an event on failure Int 3 sessionDuration The number of seconds a session should persist Sessions expire if the app has been either closed or in the background for the number of seconds defined here Double 1200 requireConsent A Boolean value indicating whether a user must explicitly opt in to event tracking Bool false defaultTable The table used when fetching user profiles String user collectionEndpoint The data upload endpoint URL https api lytics io collect json entityEndpoint The entity personalization or profile endpoint URL https api lytics io api entity enableSandbox A Boolean value indicating if events should be sent in sandbox mode When in sandbox mode any emitted events will not be processed by Lytics but all logs will be available as are with live events Bool false logLevel Set the logging level of the SDK LogLevel error debug info error Each of the above configuration options can be added to the initial Lytics shared start instantiation of the Lytics SDK as outlined here Swift Lytics shared start apiToken YOUR VALID LYTICS API TOKEN configuration in configuration logLevel debug configuration defaultStream my_custom_ios_stream configuration maxQueueSize 15 Identifying Users Lytics shared identify is used to emit strong identifiers and attributes associated with your app user This method provides a means to store the primary identifiers on the device itself so that all future event tracking from that device automatically is appended with information necessary to maximize the effectiveness of your identity resolution strategy For each Lytics shared identify call you have the option to only store that data to the device or emit it to a Lytics event stream for mapping to profiles Emitting all event types to a Lytics event stream is always our recommendation Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers A required set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user Map attributes An optional set of key value pairs that represent user attributes that are not to be used for data merging These generally are things such as first name last name address status etc Map shouldSend An optional boolean value to determine if the identify event should only be stored on the device or also emitted to a Lytics event stream recommended Bool Example identify call where we set pass a custom stream set of identifiers and attributes Swift Lytics shared identify stream sample custom stream optional identifiers AnyCodable email email protected attributes AnyCodable first_name Kevin last_name McCalister Tracking Events Lytics shared track emits activity data for a particular app user to a Lytics even stream Each track call will automatically be appended with the strong identifiers stored on the device to ensure the highest potential resolution against Lytics user profiles Lytics shared track calls can include a variety of optional parameters and data associated with the interaction as defined below Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event Map properties An optional set of key value pairs that represent event properties that are not to be used for data merging These generally are things such as total cost content consumed item clicked etc Map Example track call where we track a purchase event and its associated properties Swift Lytics shared track name purchase properties AnyCodable total 19 99 item Slingshot Screen Tracking Lytics shared screen is an additional method for appending device information to the traditional track call This is an extension of the above definition and results in including the following information with all events Operating System Version UIDevice current systemVersion Device Model Name UIDevice current name identifierForVendor UIDevice current identifierForVendor orientation UIDevice current orientation userInterfaceIdiom UIDevice current userInterfaceIdiom Data Privacy Controls Depending on your application s particular needs various data privacy controls are available by default Below you ll find the optional methods and examples of scenarios where some or all may be most applicable Consent Lytics shared consent is a specific event type for collecting critical information related to consent such as location document etc As a best practice a Lytics shared consent event should always be leveraged alongside the Lytics shared optIn event to ensure proper documentation of consent Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event Map identifiers A required set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user Map consent An required set of key value pairs that represent specific consent event properties that are not to be used for data merging These generally are things such as type of consent document reference location etc Map Swift Lytics shared consent name consent 1 identifiers AnyCodable userid my fake userid 1234 attributes AnyCodable firstName Kevin lastName McCalister consent AnyCodable documents terms_jan_2023 sharing_policy_jan_2023 location Chicago IL consented true Opt In Lytics shared optIn sets the state of a user s activity tracking preference By default all users are opted in This default setting is fully configurable at the top level SDK configuration In either case an explicit call to Lytics shared optIn will result in activities being tracked and sent to a Lytics stream Swift Lytics shared optIn Opt Out Lytics shared optOut is the opposite of the above Lytics shared optIn method and will prevent activity data from being emitted to Lytics after it has been called until an additional Lytics shared optIn call has been made Swift Lytics shared optOut IDFA Identifier for Advertisers IDFA or advertisingIdentifier is an alphanumeric string that is unique to each device Collection of this identifier requires explicit confirmation from the app user which the Lytics SDK for iOS can trigger In addition upon confirmation the IDFA will be treated as a strong identifier and included with all outbound events emitted to Lytics streams for improved resolution The Lytics SDK for iOS offers two methods to collect IDFA and handle the opt out of IDFA To present a required modal asking for tracking access and storage inclusion of the device specific IDFA upon confirmation call the following method Swift Lytics shared requestTrackingAuthorization To disable the storing and emitting of the user s device specific IDFA call the following method Swift Lytics shared disableTracking Utility Several utility type methods are available for flushing queues resetting stored data and performing general maintenance or debugging Event Queue Flushing Occasionally it may be desired to force a flush of the event queue This is common after a series of events before sign out etc This method will bypass any queue caps or timers and result in all queued events being emitted Swift Lytics shared dispatch Stored Property Flushing Strong identifiers and attributes are stored locally on the device In general there are not likely to be many use cases where it is necessary to delete all stored data and reset the SDK By doing so the resolution will become much more complex and all identifiers even anonymous will no longer be accessible That said in the case of a shared device where a user is logging in and out or in the more common case of a test device the following method is available to delete all data stored by the Lytics SDK for iOS Swift Lytics shared reset Access Stored Identifiers Attributes Be it for testing or presenting a profile to the end user the complete stored device level profile is available with the following method Do note this is only the stored data as a result of Lytics shared identify calls and does not represent the complete user profile from the Lytics system and cross channel sources Swift let userModel await Lytics shared user API Reference The Lytics SDK for iOS is optimized to leverage the fewest number of APIs possible As such all event collection is managed by leveraging the core Lytics event collection API Troubleshooting When enabled the debug log level will result in additional logs to aid troubleshooting and issue resolution Don t hesitate to contact customer support if you have trouble implementing the Lytics SDK for iOS FAQ Please visit our community section for FAQs and SDK related discussions Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/react-native-sdk",
    "title": "React Native Quick Start",
    "chunk_text": "React Native Quick Start Overview The Lytics SDK for React Native makes it easy for developers to identify manage consent and collect user activity data from their native mobile apps This ensures all critical channel data can be associated with fully resolved user profiles This section explains how to integrate Lytics into your React Native apps Here we will cover how the Lytics React Native SDK enables the following Create a persistent identifier for a user across multiple app engagements Collect user attributes identifiers Manage user consent Collect user activity events as they engage with your app Tailor collection destination and settings based on your particular needs About the Lytics SDK for React Native iOS Version Support 14 0 deployment target 14 0 Xcode Version Required 15 0 Android Version Required 8 Installation Before You Begin Before you begin implementing the Lytics SDK for React Native please make sure you have the following Access to a Lytics account capable of collecting streaming data The latest version of Xcode and or Android Studio A React Native app that you can use to implement the Lytics SDK for React Native Step 1 Install the Lytics SDK OS Specific Dependencies Install the core React Native Library Shell yarn add react native lytics Step 2a Install for Android only if targeting Android devices Add the following permissions to your AndroidManifest xml file JavaScript uses permission android name android permission INTERNET This permission is required to send events to the Lytics API JavaScript uses permission android name android permission ACCESS_NETWORK_STATE This permission is technically optional but highly recommended to allow the library to determine the best time to send events to the API Step 2b Install for iOS only if targeting iOS devices Install native iOS modules Shell npx pod install Step 3 Initialize the SDK There are several configuration options outlined below At a minimum however you must initialize the SDK with a valid API token with data access to your Lytics account JavaScript import start from react native lytics start apiToken xxxxxx Step 4 Identifying a User Once we have initialized the SDK it is a best practice to identify the user anywhere they provide additional strong identifiers such as a username or email upon login This ensures your profiles have the highest potential for properly unifying across your various data sources as soon as they identify themselves Do note that this step is optional By default the Lytics SDK will create an anonymous identifier for all users and leverage that to merge disparate sources as we do with our traditional web based JavaScript SDK JavaScript import identify from react native lytics identify identifiers email email protected Step 5 Tracking Activity Once the user has been identified optional we can begin tracking various activities throughout their visit Typical activities include screen views clicks purchases etc A full scope of event tracking flexibility can be found in the technical documentation section below JavaScript import track from react native lytics track name purchase properties total 19 99 item Slingshot Technical Documentation The following outlines the full definition of capabilities supported by the Lytics SDK for React Native Configuration When initializing the Lytics SDK with start a variety of top level configuration options are available to ensure the SDK can be tailored to the needs of your particular application Parameter Description Type Default Value apiToken Your Lytics account API token String defaultStream The default stream name event data will be sent Note This can be overridden globally or at the event level String react_native_sdk primaryIdentityKey The key that represents the strongest identifier for users Note Used primarily to retrieve a full profile for personalization String _uid anonymousIdentityKey The key that should be used to create and store the anonymous identifier String _uid trackApplicationLifecycleEvents iOS Only A value that indicates whether application lifecycle events should be tracked automatically Bool false uploadInterval The max interval in seconds at which the event queue is flushed and uploaded to the Lytics API Number 10 maxQueueSize The max event queue size that can be stored before all queued events are flushed and sent to the Lytics API Note To disable a max queue size set the value to 0 Number 10 maxLoadRetryAttempts The maximum number of times to retry failed load requests before throwing an error Number 1 maxUploadRetryAttempts The maximum number of times to try and resend an event on failure Number 3 sessionDuration The number of seconds a session should persist Sessions expire if the app has been either closed or in the background for the number of seconds defined here Number 1200 requireConsent A Boolean value indicating whether a user must explicitly opt in to event tracking Bool false defaultTable The table used when fetching user profiles String user collectionEndpoint The data upload endpoint URL https api lytics io collect json entityEndpoint The entity personalization or profile endpoint URL https api lytics io api entity enableSandbox A Boolean value indicating if events should be sent in sandbox mode When in sandbox mode any emitted events will not be processed by Lytics but all logs will be available as are with live events Bool false logLevel Set the logging level of the SDK LogLevel error debug info error autoTrackActivityScreens Android Only Automatically track basic activity class details when an activity is resumed Bool false autoTrackAppOpens Android Only Automatically track basic details when the app is opened Bool false autoTrackFragmentScreens Android Only Automatically track basic fragment class details when a fragment is resumed Bool false Each of the above configuration options can be added to the initial start instantiation of the Lytics SDK as outlined here JavaScript import start from react native lytics start apiToken xxxxxx defaultStream custom stream logLevel LogLevel debug maxQueueSize 10 Identifying Users identify is used to emit strong identifiers and attributes associated with your app user This method provides a means to store the primary identifiers on the device itself so that all future event tracking from that device automatically is appended with information necessary to maximize the effectiveness of your identity resolution strategy For each identify call you have the option to only store that data to the device or emit it to a Lytics event stream for mapping to profiles Emitting all event types to a Lytics event stream is always our recommendation Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String identifiers A required set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user JSONMap attributes An optional set of key value pairs that represent user attributes that are not to be used for data merging These generally are things such as first name last name address status etc JSONMap shouldSend An optional boolean value to determine if the identify event should only be stored on the device or also emitted to a Lytics event stream recommended Bool Example identify call where we set pass a custom stream set of identifiers and attributes JavaScript import identify from react native lytics identify stream sample custom stream identifiers email email protected attributes first_name Kevin last_name McCalister Tracking Events track emits activity data for a particular app user to a Lytics even stream Each track call will automatically be appended with the strong identifiers stored on the device to ensure the highest potential resolution against Lytics user profiles track calls can include a variety of optional parameters and data associated with the interaction as defined below Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event JSONMap properties An optional set of key value pairs that represent event properties that are not to be used for data merging These generally are things such as total cost content consumed item clicked etc JSONMap Example track call where we track a purchase event and its associated properties JavaScript import track from react native lytics track name purchase properties total 19 99 item Slingshot Screen Tracking screen is an additional method for appending device information to the traditional track call This is an extension of the above definition and results in including the following information with all events iOS Operating System Version UIDevice current systemVersion Device Model Name UIDevice current name identifierForVendor UIDevice current identifierForVendor orientation UIDevice current orientation userInterfaceIdiom UIDevice current userInterfaceIdiom Android An attribute of _e is set to the value of sc but no other device parameters are automatically captured JavaScript import screen from react native lytics screen name navigation properties path test page Data Privacy Controls Depending on your application s needs various data privacy controls are available by default Below are the optional methods and examples of scenarios where some or all may be most applicable Consent consent is a specific event type for collecting critical information related to consent such as location document etc As a best practice a consent event should always be leveraged alongside the optIn event to ensure proper documentation of consent Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event Map consent An required set of key value pairs that represent specific consent event properties that are not to be used for data merging These generally are things such as type of consent document reference location etc Map JavaScript import consent from react native lytics consent name consent 1 identifiers userid my fake userid 1234 attributes firstName Kevin lastName McCalister consent documents terms_jan_2023 sharing_policy_jan_2023 location Chicago IL consented true Opt In optIn sets the state of a user s activity tracking preference By default all users are opted in This default setting is fully configurable at the top level SDK configuration In either case an explicit call to optIn will result in activities being tracked and sent to a Lytics stream JavaScript import optIn from react native lytics optIn Opt Out optOut is the opposite of the above optIn method and will prevent activity data from being emitted to Lytics after it has been called until an additional optIn call has been made JavaScript import optOut from react native lytics optOut General The Lytics SDK for React Native streamlines tracking authorization with unified calls for both iOS and Android platforms However it s important to note that each platform may still necessitate specific configurations to prompt for and gather device identifiers effectively Requesting authorization be it for IDFA or GAID is invoked through a requestTrackingAuthorization call JavaScript import requestTrackingAuthorization from react native lytics requestTrackingAuthorization In addition if at any point the user chooses to revoke access that can be initiated via the disableTracking call JavaScript import disableTracking from react native lytics disableTracking IDFA Identifier for Advertisers iOS IDFA or advertisingIdentifier is an alphanumeric string that is unique to each device Collection of this identifier requires explicit confirmation from the app user which the Lytics SDK for iOS can trigger In addition upon confirmation the IDFA will be treated as a strong identifier and included with all outbound events emitted to Lytics streams for improved resolution To access the IDFA from iOS devices you must add the the NSUserTrackingUsageDescription dependency to your apps Info plist file Open your Info plist file in Xcode Right click on a blank line and select Add Row from the context menu In the newly added row start typing NSUserTrackingUsageDescription to select it from the auto complete list This will be the key In the Value column of the same row enter a string that describes why your app needs to track the user The description should be clear and user friendly as it will be displayed in the system prompt to the user XML key NSUserTrackingUsageDescription key string Our app uses your data to deliver personalized ads improving your app experience We ensure your data is handled securely string GAID Identifier for Advertisers Android GAID the Google Advertising ID GAID is a unique identifier assigned to each user s device by Google for Android devices It s used for tracking and targeting purposes in advertising and analytics applications GAID allows advertisers and developers to collect data on user behavior and preferences in a way that respects their privacy preferences Users have control over their GAID with the ability to reset it or opt out of personalized advertising ensuring user privacy This system is analogous to Apple s IDFA Identifier for Advertisers on iOS devices To access the GAID from Android devices you must add the Google Play Services dependency as follows to your build gradle file Kotlin dependencies implementation com google android gms play services ads identifier 17 0 0 Utility Several utility type methods are available for flushing queues resetting stored data and performing general maintenance or debugging Event Queue Flushing Occasionally it may be desired to force a flush of the event queue This is common after a series of events before sign out etc This method will bypass any queue caps or timers and result in all queued events being emitted JavaScript import dispatch from react native lytics dispatch Stored Property Flushing Strong identifiers and attributes are stored locally on the device In general there are not likely to be many use cases where it is necessary to delete all stored data and reset the SDK By doing so the resolution will become much more complex and all identifiers even anonymous will no longer be accessible That said in the case of a shared device where a user is logging in and out or in the more common case of a test device the following method is available to delete all data stored by the Lytics SDK for React Native JavaScript import reset from react native lytics reset Access Stored Identifiers Attributes Accessing the current user s profile for personalization is a key aspect of the Lytics SDK for React Native To access the user profile we ve provided the getProfile as outlined below JavaScript import getProfile from react native lytics export function Example const loadProfile async try const profile await getProfile console log Profile profile catch error console error error Note If for any reason the getProfile call fails on iOS no profile will be returned whereas in the Android version any known information that is stored on the device will be returned API Reference The Lytics SDK for React Native is optimized to leverage the fewest number of APIs possible As such all event collection is managed by leveraging the core Lytics event collection API Troubleshooting When enabled the debug log level will result in additional logs to aid troubleshooting and issue resolution Don t hesitate to contact customer support if you have trouble implementing the Lytics SDK for React Native FAQ Please visit our community section for FAQs and SDK related discussions Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/react-native-sdk#content",
    "title": "React Native Quick Start",
    "chunk_text": "React Native Quick Start Overview The Lytics SDK for React Native makes it easy for developers to identify manage consent and collect user activity data from their native mobile apps This ensures all critical channel data can be associated with fully resolved user profiles This section explains how to integrate Lytics into your React Native apps Here we will cover how the Lytics React Native SDK enables the following Create a persistent identifier for a user across multiple app engagements Collect user attributes identifiers Manage user consent Collect user activity events as they engage with your app Tailor collection destination and settings based on your particular needs About the Lytics SDK for React Native iOS Version Support 14 0 deployment target 14 0 Xcode Version Required 15 0 Android Version Required 8 Installation Before You Begin Before you begin implementing the Lytics SDK for React Native please make sure you have the following Access to a Lytics account capable of collecting streaming data The latest version of Xcode and or Android Studio A React Native app that you can use to implement the Lytics SDK for React Native Step 1 Install the Lytics SDK OS Specific Dependencies Install the core React Native Library Shell yarn add react native lytics Step 2a Install for Android only if targeting Android devices Add the following permissions to your AndroidManifest xml file JavaScript uses permission android name android permission INTERNET This permission is required to send events to the Lytics API JavaScript uses permission android name android permission ACCESS_NETWORK_STATE This permission is technically optional but highly recommended to allow the library to determine the best time to send events to the API Step 2b Install for iOS only if targeting iOS devices Install native iOS modules Shell npx pod install Step 3 Initialize the SDK There are several configuration options outlined below At a minimum however you must initialize the SDK with a valid API token with data access to your Lytics account JavaScript import start from react native lytics start apiToken xxxxxx Step 4 Identifying a User Once we have initialized the SDK it is a best practice to identify the user anywhere they provide additional strong identifiers such as a username or email upon login This ensures your profiles have the highest potential for properly unifying across your various data sources as soon as they identify themselves Do note that this step is optional By default the Lytics SDK will create an anonymous identifier for all users and leverage that to merge disparate sources as we do with our traditional web based JavaScript SDK JavaScript import identify from react native lytics identify identifiers email email protected Step 5 Tracking Activity Once the user has been identified optional we can begin tracking various activities throughout their visit Typical activities include screen views clicks purchases etc A full scope of event tracking flexibility can be found in the technical documentation section below JavaScript import track from react native lytics track name purchase properties total 19 99 item Slingshot Technical Documentation The following outlines the full definition of capabilities supported by the Lytics SDK for React Native Configuration When initializing the Lytics SDK with start a variety of top level configuration options are available to ensure the SDK can be tailored to the needs of your particular application Parameter Description Type Default Value apiToken Your Lytics account API token String defaultStream The default stream name event data will be sent Note This can be overridden globally or at the event level String react_native_sdk primaryIdentityKey The key that represents the strongest identifier for users Note Used primarily to retrieve a full profile for personalization String _uid anonymousIdentityKey The key that should be used to create and store the anonymous identifier String _uid trackApplicationLifecycleEvents iOS Only A value that indicates whether application lifecycle events should be tracked automatically Bool false uploadInterval The max interval in seconds at which the event queue is flushed and uploaded to the Lytics API Number 10 maxQueueSize The max event queue size that can be stored before all queued events are flushed and sent to the Lytics API Note To disable a max queue size set the value to 0 Number 10 maxLoadRetryAttempts The maximum number of times to retry failed load requests before throwing an error Number 1 maxUploadRetryAttempts The maximum number of times to try and resend an event on failure Number 3 sessionDuration The number of seconds a session should persist Sessions expire if the app has been either closed or in the background for the number of seconds defined here Number 1200 requireConsent A Boolean value indicating whether a user must explicitly opt in to event tracking Bool false defaultTable The table used when fetching user profiles String user collectionEndpoint The data upload endpoint URL https api lytics io collect json entityEndpoint The entity personalization or profile endpoint URL https api lytics io api entity enableSandbox A Boolean value indicating if events should be sent in sandbox mode When in sandbox mode any emitted events will not be processed by Lytics but all logs will be available as are with live events Bool false logLevel Set the logging level of the SDK LogLevel error debug info error autoTrackActivityScreens Android Only Automatically track basic activity class details when an activity is resumed Bool false autoTrackAppOpens Android Only Automatically track basic details when the app is opened Bool false autoTrackFragmentScreens Android Only Automatically track basic fragment class details when a fragment is resumed Bool false Each of the above configuration options can be added to the initial start instantiation of the Lytics SDK as outlined here JavaScript import start from react native lytics start apiToken xxxxxx defaultStream custom stream logLevel LogLevel debug maxQueueSize 10 Identifying Users identify is used to emit strong identifiers and attributes associated with your app user This method provides a means to store the primary identifiers on the device itself so that all future event tracking from that device automatically is appended with information necessary to maximize the effectiveness of your identity resolution strategy For each identify call you have the option to only store that data to the device or emit it to a Lytics event stream for mapping to profiles Emitting all event types to a Lytics event stream is always our recommendation Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String identifiers A required set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user JSONMap attributes An optional set of key value pairs that represent user attributes that are not to be used for data merging These generally are things such as first name last name address status etc JSONMap shouldSend An optional boolean value to determine if the identify event should only be stored on the device or also emitted to a Lytics event stream recommended Bool Example identify call where we set pass a custom stream set of identifiers and attributes JavaScript import identify from react native lytics identify stream sample custom stream identifiers email email protected attributes first_name Kevin last_name McCalister Tracking Events track emits activity data for a particular app user to a Lytics even stream Each track call will automatically be appended with the strong identifiers stored on the device to ensure the highest potential resolution against Lytics user profiles track calls can include a variety of optional parameters and data associated with the interaction as defined below Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event JSONMap properties An optional set of key value pairs that represent event properties that are not to be used for data merging These generally are things such as total cost content consumed item clicked etc JSONMap Example track call where we track a purchase event and its associated properties JavaScript import track from react native lytics track name purchase properties total 19 99 item Slingshot Screen Tracking screen is an additional method for appending device information to the traditional track call This is an extension of the above definition and results in including the following information with all events iOS Operating System Version UIDevice current systemVersion Device Model Name UIDevice current name identifierForVendor UIDevice current identifierForVendor orientation UIDevice current orientation userInterfaceIdiom UIDevice current userInterfaceIdiom Android An attribute of _e is set to the value of sc but no other device parameters are automatically captured JavaScript import screen from react native lytics screen name navigation properties path test page Data Privacy Controls Depending on your application s needs various data privacy controls are available by default Below are the optional methods and examples of scenarios where some or all may be most applicable Consent consent is a specific event type for collecting critical information related to consent such as location document etc As a best practice a consent event should always be leveraged alongside the optIn event to ensure proper documentation of consent Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event Map consent An required set of key value pairs that represent specific consent event properties that are not to be used for data merging These generally are things such as type of consent document reference location etc Map JavaScript import consent from react native lytics consent name consent 1 identifiers userid my fake userid 1234 attributes firstName Kevin lastName McCalister consent documents terms_jan_2023 sharing_policy_jan_2023 location Chicago IL consented true Opt In optIn sets the state of a user s activity tracking preference By default all users are opted in This default setting is fully configurable at the top level SDK configuration In either case an explicit call to optIn will result in activities being tracked and sent to a Lytics stream JavaScript import optIn from react native lytics optIn Opt Out optOut is the opposite of the above optIn method and will prevent activity data from being emitted to Lytics after it has been called until an additional optIn call has been made JavaScript import optOut from react native lytics optOut General The Lytics SDK for React Native streamlines tracking authorization with unified calls for both iOS and Android platforms However it s important to note that each platform may still necessitate specific configurations to prompt for and gather device identifiers effectively Requesting authorization be it for IDFA or GAID is invoked through a requestTrackingAuthorization call JavaScript import requestTrackingAuthorization from react native lytics requestTrackingAuthorization In addition if at any point the user chooses to revoke access that can be initiated via the disableTracking call JavaScript import disableTracking from react native lytics disableTracking IDFA Identifier for Advertisers iOS IDFA or advertisingIdentifier is an alphanumeric string that is unique to each device Collection of this identifier requires explicit confirmation from the app user which the Lytics SDK for iOS can trigger In addition upon confirmation the IDFA will be treated as a strong identifier and included with all outbound events emitted to Lytics streams for improved resolution To access the IDFA from iOS devices you must add the the NSUserTrackingUsageDescription dependency to your apps Info plist file Open your Info plist file in Xcode Right click on a blank line and select Add Row from the context menu In the newly added row start typing NSUserTrackingUsageDescription to select it from the auto complete list This will be the key In the Value column of the same row enter a string that describes why your app needs to track the user The description should be clear and user friendly as it will be displayed in the system prompt to the user XML key NSUserTrackingUsageDescription key string Our app uses your data to deliver personalized ads improving your app experience We ensure your data is handled securely string GAID Identifier for Advertisers Android GAID the Google Advertising ID GAID is a unique identifier assigned to each user s device by Google for Android devices It s used for tracking and targeting purposes in advertising and analytics applications GAID allows advertisers and developers to collect data on user behavior and preferences in a way that respects their privacy preferences Users have control over their GAID with the ability to reset it or opt out of personalized advertising ensuring user privacy This system is analogous to Apple s IDFA Identifier for Advertisers on iOS devices To access the GAID from Android devices you must add the Google Play Services dependency as follows to your build gradle file Kotlin dependencies implementation com google android gms play services ads identifier 17 0 0 Utility Several utility type methods are available for flushing queues resetting stored data and performing general maintenance or debugging Event Queue Flushing Occasionally it may be desired to force a flush of the event queue This is common after a series of events before sign out etc This method will bypass any queue caps or timers and result in all queued events being emitted JavaScript import dispatch from react native lytics dispatch Stored Property Flushing Strong identifiers and attributes are stored locally on the device In general there are not likely to be many use cases where it is necessary to delete all stored data and reset the SDK By doing so the resolution will become much more complex and all identifiers even anonymous will no longer be accessible That said in the case of a shared device where a user is logging in and out or in the more common case of a test device the following method is available to delete all data stored by the Lytics SDK for React Native JavaScript import reset from react native lytics reset Access Stored Identifiers Attributes Accessing the current user s profile for personalization is a key aspect of the Lytics SDK for React Native To access the user profile we ve provided the getProfile as outlined below JavaScript import getProfile from react native lytics export function Example const loadProfile async try const profile await getProfile console log Profile profile catch error console error error Note If for any reason the getProfile call fails on iOS no profile will be returned whereas in the Android version any known information that is stored on the device will be returned API Reference The Lytics SDK for React Native is optimized to leverage the fewest number of APIs possible As such all event collection is managed by leveraging the core Lytics event collection API Troubleshooting When enabled the debug log level will result in additional logs to aid troubleshooting and issue resolution Don t hesitate to contact customer support if you have trouble implementing the Lytics SDK for React Native FAQ Please visit our community section for FAQs and SDK related discussions Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/sdk-for-android",
    "title": "Android Quick Start",
    "chunk_text": "Android Quick Start Overview The Lytics SDK for Android makes it easy for developers to identify manage consent and collect user activity data from their native mobile apps This ensures all critical channels can be associated with fully resolved user profiles This section explains how to integrate Lytics into your Android apps If you are looking for information on iOS apps see the Lytics SDK for iOS Here we will cover how the Lytics Android SDK enables the following Create a persistent identifier for a user across multiple app engagements Collect user attributes identifiers Manage user consent Collect user activity events as they engage with your app Tailor collection destination and settings based on your particular needs About the Lytics SDK for Android Approximate Installation Size 35 KB 315 Methods Android Version Support 8 Android Studio Version Required v2021 3 1 or Higher Installation Before You Begin Before you begin implementing the Lytics SDK for Android please make sure you have the following Access to a Lytics account capable of collecting streaming data The latest version of Android Studio v2021 3 1 or higher An Android app that you can use to implement the Lytics SDK for Android The binary distribution files of the SDK have been built for Android 8 Step 1 Add the Lytics SDK Dependencies Add the JitPack repository to your build file Add to your root build gradle file Kotlin allprojects repositories maven url https jitpack io Or for newer Android projects repositories are defined in the project s settings gradle file Kotlin dependencyResolutionManagement repositories maven url https jitpack io View the latest release on JitPack Release Add the Lytics Android SDK library as a gradle dependency Kotlin dependencies implementation com github lytics android sdk VERSION Add permissions to your AndroidManifest xml Add the following permissions to your AndroidManifest xml file uses permission android name android permission INTERNET This permission is required to send events to the Lytics API uses permission android name android permission ACCESS_NETWORK_STATE This permission is technically optional but highly recommended to allow the library to determine the best time to send events to the API Step 2 Configure the SDK A variety of top level configuration options are available to ensure the SDK can be tailored to the needs of your particular application To get started however we need only add your valid Lytics API token to the Lytics shared start initialization call as outlined below Kotlin Lytics init applicationContext LyticsConfiguration apiKey YOUR VALID LYTICS API TOKEN Kotlin import android app Application import com lytics android Lytics import com lytics android LyticsConfiguration import com lytics android logging LogLevel class DemoApplication Application override fun onCreate super onCreate val config LyticsConfiguration apiKey YOUR VALID LYTICS API TOKEN Lytics init applicationContext config Step 3 Identifying a User Once we have initialized the SDK it is a best practice to identify the user anywhere formally they provide additional strong identifiers such as a username or email upon login for example This ensures your profiles have the highest potential for properly unifying across your various data sources Do note this step is optional By default the Lytics SDK will create an anonymous identifier for all users and leverage that to merge with disparate sources as we do with our traditional web based JavaScript SDK Kotlin Lytics identify LyticsIdentityEvent identifiers mapOf email to email protected Step 4 Tracking Activity Once the user has been identified optional we can begin tracking various activities throughout their visit Typical activities include screen views clicks purchases etc A full scope of event tracking flexibility can be found in the technical documentation section below Kotlin Lytics track LyticsEvent name purchase properties mapOf total 19 99 item Slingshot Technical Documentation The following outlines the full definition of capabilities supported by the Lytics SDK for Android Configuration When initializing the Lytics SDK with Lytics shared start a variety of top level configuration options are available to ensure the SDK can be tailored to the needs of your particular application Parameter Description Type Default Value apiKey Your Lytics account API token String defaultStream The default stream name event data will be sent Note This can be overridden globally or at the event level String android_sdk primaryIdentityKey The key that represents the strongest identifier for users Note Used primarily to retrieve a full profile for personalization String _uid anonymousIdentityKey The key that should be used to create and store the anonymous identifier String _uid trackApplicationLifecycleEvents A value that indicates whether application lifecycle events should be tracked automatically Bool false trackScreenViews A value that indicates whether screen views should be tracked automatically Bool false trackPushNotifications A value that indicates whether push notifications should be tracked Bool false trackDeepLinks A value that indicates whether deep links should be tracked Bool false uploadInterval The max interval in seconds at which the event queue is flushed and uploaded to the Lytics API Double 10 maxQueueSize The max event queue size that can be stored before all queued events are flushed and sent to the Lytics API _Note To disable a max queue size set the value to 0 Int 10 maxRetryCount The max number of times to try and resend an event on failure Int 3 sessionDuration The number of seconds a session should persist Sessions expire if the app has been either closed or in the background for the number of seconds defined here Double 1200 enableSandbox A boolean value indicating if events should be sent in sandbox mode When in sandbox mode any emitted events will not be processed by Lytics but all logs will be available as are with live events Bool false logLevel Set the logging level of the SDK LogLevel error debug info error Each of the above configuration options can be added to the initial Lytics shared start instantiation of the Lytics SDK as outlined here Kotlin Lytics init applicationContext LyticsConfiguration apiKey YOUR VALID LYTICS API TOKEN logLevel LogLevel DEBUG defaultStream my_custom_anroid_stream maxQueueSize 10 Identifying Users Lytics identify is used to emit strong identifiers and attributes associated with your app user This method provides a means to store the primary identifiers on the device itself so that all future event tracking from that device automatically is appended with information necessary to maximize the effectiveness of your identity resolution strategy For each Lytics identify call you have the option to only store that data to the device or emit it to a Lytics event stream for mapping to profiles Emitting all event types to a Lytics event stream is always our recommendation Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers A required set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user Map attributes An optional set of key value pairs that represent user attributes that are not to be used for data merging These generally are things such as first name last name address status etc Map shouldSend An optional boolean value to determine if the identify event should only be stored on the device or also emitted to a Lytics event stream recommended Bool Example identify call where we set pass a custom stream set of identifiers and attributes Kotlin Lytics identify LyticsIdentityEvent stream sample custom stream optional identifiers mapOf email email protected attributes mapOf first_name Kevin last_name McCalister Tracking Events Lytics track emits activity data for a particular app user to a Lytics even stream Each track call will automatically be appended with the strong identifiers stored on the device to ensure the highest potential resolution against Lytics user profiles Lytics track calls can include a variety of optional parameters and data associated with the interaction as defined below Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event Map properties An optional set of key value pairs that represent event properties that are not to be used for data merging These generally are things such as total cost content consumed item clicked etc Map Example track call where we track a purchase event and its associated properties Kotlin Lytics track LyticsEvent name purchase properties mapOf total 19 99 item Slingshot Screen Tracking Lytics screen is an additional method for appending device information to the traditional track call This is an extension of the above definition and results in including the following information with all events Operating System Version Device Model Name Data Privacy Controls Depending on your application s particular needs various data privacy controls are available by default Below you ll find the optional methods and examples of scenarios where some or all may be most applicable Consent Lytics consent is a specific event type for collecting critical information related to consent such as location document etc As a best practice a Lytics consent event should always be leveraged alongside the Lytics optIn event to ensure proper documentation of consent Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event Map identifiers A required set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user Map consent An required set of key value pairs that represent specific consent event properties that are not to be used for data merging These generally are things such as type of consent document reference location etc Map Kotlin Lytics consent LyticsConsentEvent name android consent identifiers mapOf userid my fake userid 1234 attributes mapOf firstName Kevin lastName McCalister consent mapOf documents terms_jan_2023 sharing_policy_jan_2023 location Chicago IL consented true Opt In Lytics optIn sets the state of a user s activity tracking preference By default all users are opted in This default setting is fully configurable at the top level SDK configuration In either case an explicit call to Lytics optIn will result in activities being tracked and sent to a Lytics stream Kotlin Lytics optIn Opt Out Lytics optOut is the opposite of the above Lytics optIn method and will prevent activity data from being emitted to Lytics after it has been called until an additional Lytics optIn call has been made Kotlin Lytics optOut GAID Identifier for Advertisers GAID or advertisingIdentifier is an alphanumeric string that is unique to each device Collection of this identifier requires explicit confirmation from the app user which the Lytics SDK for Android can trigger In addition upon confirmation the GAID will be treated as a strong identifier and included with all outbound events emitted to Lytics streams for improved resolution The Lytics SDK for Android offers two methods to collect GAID and handle the opt out of GAID To present a required modal asking for tracking access and storage inclusion of the device specific GAID upon confirmation call the following method Kotlin Lytics enableGAID To disable the storing and emitting of the user s device specific GAID call the following method Kotlin Lytics disableGAID To support collecting the Android Advertising ID add the following to the application s gradle dependencies implementation com google android gms play services ads identifier 18 0 1 Additionally declare a Google Play services normal permission in the manifest file as follows uses permission android name com google android gms permission AD_ID After confirming with the user and getting their consent enable Advertiser ID collection via Lytics enableGAID The user s Android Advertising ID will be sent with each event s identifiers Note the user can disable or change the Advertising ID via the Android system privacy settings Utility Several utility type methods are available for flushing queues resetting stored data and performing general maintenance or debugging Event Queue Flushing Occasionally it may be desired to force a flush of the event queue This is common after a series of events before sign out etc This method will bypass any queue caps or timers and result in all queued events being emitted Kotlin Lytics dispatch Stored Property Flushing Strong identifiers and attributes are stored locally on the device In general there are not likely to be many use cases where it is necessary to delete all stored data and reset the SDK By doing so the resolution will become much more complex and all identifiers even anonymous will no longer be accessible That said in the case of a shared device where a user is logging in and out or in the more common case of a test device the following method is available to delete all data stored by the Lytics SDK for Android Kotlin Lytics reset Access Stored Identifiers Attributes Be it for testing or presenting a profile to the end user the complete stored device level profile is available with the following method Do note this is only the stored data as a result of Lytics shared identify calls and does not represent the complete user profile from the Lytics system and cross channel sources Kotlin let userModel await Lytics shared user API Reference The Lytics SDK for Android is optimized to leverage the fewest number of APIs possible As such all event collection is managed by leveraging the core Lytics event collection API Troubleshooting When enabled the debug log level will result in additional logs to aid troubleshooting and issue resolution Don t hesitate to contact customer support if you have trouble implementing the Lytics SDK for Android FAQ Please visit our community section for FAQs and SDK related discussions Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/sdk-for-android#content",
    "title": "Android Quick Start",
    "chunk_text": "Android Quick Start Overview The Lytics SDK for Android makes it easy for developers to identify manage consent and collect user activity data from their native mobile apps This ensures all critical channels can be associated with fully resolved user profiles This section explains how to integrate Lytics into your Android apps If you are looking for information on iOS apps see the Lytics SDK for iOS Here we will cover how the Lytics Android SDK enables the following Create a persistent identifier for a user across multiple app engagements Collect user attributes identifiers Manage user consent Collect user activity events as they engage with your app Tailor collection destination and settings based on your particular needs About the Lytics SDK for Android Approximate Installation Size 35 KB 315 Methods Android Version Support 8 Android Studio Version Required v2021 3 1 or Higher Installation Before You Begin Before you begin implementing the Lytics SDK for Android please make sure you have the following Access to a Lytics account capable of collecting streaming data The latest version of Android Studio v2021 3 1 or higher An Android app that you can use to implement the Lytics SDK for Android The binary distribution files of the SDK have been built for Android 8 Step 1 Add the Lytics SDK Dependencies Add the JitPack repository to your build file Add to your root build gradle file Kotlin allprojects repositories maven url https jitpack io Or for newer Android projects repositories are defined in the project s settings gradle file Kotlin dependencyResolutionManagement repositories maven url https jitpack io View the latest release on JitPack Release Add the Lytics Android SDK library as a gradle dependency Kotlin dependencies implementation com github lytics android sdk VERSION Add permissions to your AndroidManifest xml Add the following permissions to your AndroidManifest xml file uses permission android name android permission INTERNET This permission is required to send events to the Lytics API uses permission android name android permission ACCESS_NETWORK_STATE This permission is technically optional but highly recommended to allow the library to determine the best time to send events to the API Step 2 Configure the SDK A variety of top level configuration options are available to ensure the SDK can be tailored to the needs of your particular application To get started however we need only add your valid Lytics API token to the Lytics shared start initialization call as outlined below Kotlin Lytics init applicationContext LyticsConfiguration apiKey YOUR VALID LYTICS API TOKEN Kotlin import android app Application import com lytics android Lytics import com lytics android LyticsConfiguration import com lytics android logging LogLevel class DemoApplication Application override fun onCreate super onCreate val config LyticsConfiguration apiKey YOUR VALID LYTICS API TOKEN Lytics init applicationContext config Step 3 Identifying a User Once we have initialized the SDK it is a best practice to identify the user anywhere formally they provide additional strong identifiers such as a username or email upon login for example This ensures your profiles have the highest potential for properly unifying across your various data sources Do note this step is optional By default the Lytics SDK will create an anonymous identifier for all users and leverage that to merge with disparate sources as we do with our traditional web based JavaScript SDK Kotlin Lytics identify LyticsIdentityEvent identifiers mapOf email to email protected Step 4 Tracking Activity Once the user has been identified optional we can begin tracking various activities throughout their visit Typical activities include screen views clicks purchases etc A full scope of event tracking flexibility can be found in the technical documentation section below Kotlin Lytics track LyticsEvent name purchase properties mapOf total 19 99 item Slingshot Technical Documentation The following outlines the full definition of capabilities supported by the Lytics SDK for Android Configuration When initializing the Lytics SDK with Lytics shared start a variety of top level configuration options are available to ensure the SDK can be tailored to the needs of your particular application Parameter Description Type Default Value apiKey Your Lytics account API token String defaultStream The default stream name event data will be sent Note This can be overridden globally or at the event level String android_sdk primaryIdentityKey The key that represents the strongest identifier for users Note Used primarily to retrieve a full profile for personalization String _uid anonymousIdentityKey The key that should be used to create and store the anonymous identifier String _uid trackApplicationLifecycleEvents A value that indicates whether application lifecycle events should be tracked automatically Bool false trackScreenViews A value that indicates whether screen views should be tracked automatically Bool false trackPushNotifications A value that indicates whether push notifications should be tracked Bool false trackDeepLinks A value that indicates whether deep links should be tracked Bool false uploadInterval The max interval in seconds at which the event queue is flushed and uploaded to the Lytics API Double 10 maxQueueSize The max event queue size that can be stored before all queued events are flushed and sent to the Lytics API _Note To disable a max queue size set the value to 0 Int 10 maxRetryCount The max number of times to try and resend an event on failure Int 3 sessionDuration The number of seconds a session should persist Sessions expire if the app has been either closed or in the background for the number of seconds defined here Double 1200 enableSandbox A boolean value indicating if events should be sent in sandbox mode When in sandbox mode any emitted events will not be processed by Lytics but all logs will be available as are with live events Bool false logLevel Set the logging level of the SDK LogLevel error debug info error Each of the above configuration options can be added to the initial Lytics shared start instantiation of the Lytics SDK as outlined here Kotlin Lytics init applicationContext LyticsConfiguration apiKey YOUR VALID LYTICS API TOKEN logLevel LogLevel DEBUG defaultStream my_custom_anroid_stream maxQueueSize 10 Identifying Users Lytics identify is used to emit strong identifiers and attributes associated with your app user This method provides a means to store the primary identifiers on the device itself so that all future event tracking from that device automatically is appended with information necessary to maximize the effectiveness of your identity resolution strategy For each Lytics identify call you have the option to only store that data to the device or emit it to a Lytics event stream for mapping to profiles Emitting all event types to a Lytics event stream is always our recommendation Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers A required set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user Map attributes An optional set of key value pairs that represent user attributes that are not to be used for data merging These generally are things such as first name last name address status etc Map shouldSend An optional boolean value to determine if the identify event should only be stored on the device or also emitted to a Lytics event stream recommended Bool Example identify call where we set pass a custom stream set of identifiers and attributes Kotlin Lytics identify LyticsIdentityEvent stream sample custom stream optional identifiers mapOf email email protected attributes mapOf first_name Kevin last_name McCalister Tracking Events Lytics track emits activity data for a particular app user to a Lytics even stream Each track call will automatically be appended with the strong identifiers stored on the device to ensure the highest potential resolution against Lytics user profiles Lytics track calls can include a variety of optional parameters and data associated with the interaction as defined below Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event Map properties An optional set of key value pairs that represent event properties that are not to be used for data merging These generally are things such as total cost content consumed item clicked etc Map Example track call where we track a purchase event and its associated properties Kotlin Lytics track LyticsEvent name purchase properties mapOf total 19 99 item Slingshot Screen Tracking Lytics screen is an additional method for appending device information to the traditional track call This is an extension of the above definition and results in including the following information with all events Operating System Version Device Model Name Data Privacy Controls Depending on your application s particular needs various data privacy controls are available by default Below you ll find the optional methods and examples of scenarios where some or all may be most applicable Consent Lytics consent is a specific event type for collecting critical information related to consent such as location document etc As a best practice a Lytics consent event should always be leveraged alongside the Lytics optIn event to ensure proper documentation of consent Parameter Description Type stream An optional definition of the Lytics event stream to send this particular event to If left undefined recommended it will use the global default stream as assigned in the top level config String name An optional name for the event This may aid in validation resolution and mapping based on particular event types such as login String timestamp An optional timestamp to associate with the submitted identified event This will default to the time the event is recorded It is left undefined Timestamp identifiers An optional set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user By default all known identifiers will be automatically associated with the event The best practice would be first to make an identify call unless the data would only be associated with a single event Map identifiers A required set of key value pairs representing strong identifiers and their values For instance an email address user id or any other information can be resolved to a single user Map consent An required set of key value pairs that represent specific consent event properties that are not to be used for data merging These generally are things such as type of consent document reference location etc Map Kotlin Lytics consent LyticsConsentEvent name android consent identifiers mapOf userid my fake userid 1234 attributes mapOf firstName Kevin lastName McCalister consent mapOf documents terms_jan_2023 sharing_policy_jan_2023 location Chicago IL consented true Opt In Lytics optIn sets the state of a user s activity tracking preference By default all users are opted in This default setting is fully configurable at the top level SDK configuration In either case an explicit call to Lytics optIn will result in activities being tracked and sent to a Lytics stream Kotlin Lytics optIn Opt Out Lytics optOut is the opposite of the above Lytics optIn method and will prevent activity data from being emitted to Lytics after it has been called until an additional Lytics optIn call has been made Kotlin Lytics optOut GAID Identifier for Advertisers GAID or advertisingIdentifier is an alphanumeric string that is unique to each device Collection of this identifier requires explicit confirmation from the app user which the Lytics SDK for Android can trigger In addition upon confirmation the GAID will be treated as a strong identifier and included with all outbound events emitted to Lytics streams for improved resolution The Lytics SDK for Android offers two methods to collect GAID and handle the opt out of GAID To present a required modal asking for tracking access and storage inclusion of the device specific GAID upon confirmation call the following method Kotlin Lytics enableGAID To disable the storing and emitting of the user s device specific GAID call the following method Kotlin Lytics disableGAID To support collecting the Android Advertising ID add the following to the application s gradle dependencies implementation com google android gms play services ads identifier 18 0 1 Additionally declare a Google Play services normal permission in the manifest file as follows uses permission android name com google android gms permission AD_ID After confirming with the user and getting their consent enable Advertiser ID collection via Lytics enableGAID The user s Android Advertising ID will be sent with each event s identifiers Note the user can disable or change the Advertising ID via the Android system privacy settings Utility Several utility type methods are available for flushing queues resetting stored data and performing general maintenance or debugging Event Queue Flushing Occasionally it may be desired to force a flush of the event queue This is common after a series of events before sign out etc This method will bypass any queue caps or timers and result in all queued events being emitted Kotlin Lytics dispatch Stored Property Flushing Strong identifiers and attributes are stored locally on the device In general there are not likely to be many use cases where it is necessary to delete all stored data and reset the SDK By doing so the resolution will become much more complex and all identifiers even anonymous will no longer be accessible That said in the case of a shared device where a user is logging in and out or in the more common case of a test device the following method is available to delete all data stored by the Lytics SDK for Android Kotlin Lytics reset Access Stored Identifiers Attributes Be it for testing or presenting a profile to the end user the complete stored device level profile is available with the following method Do note this is only the stored data as a result of Lytics shared identify calls and does not represent the complete user profile from the Lytics system and cross channel sources Kotlin let userModel await Lytics shared user API Reference The Lytics SDK for Android is optimized to leverage the fewest number of APIs possible As such all event collection is managed by leveraging the core Lytics event collection API Troubleshooting When enabled the debug log level will result in additional logs to aid troubleshooting and issue resolution Don t hesitate to contact customer support if you have trouble implementing the Lytics SDK for Android FAQ Please visit our community section for FAQs and SDK related discussions Updated 4 months ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/chrome-extension",
    "title": "Lytics Dev Tools Chrome Extension",
    "chunk_text": "Lytics Dev Tools Chrome Extension Overview The Lytics Dev Tools Chrome extension is a comprehensive tool designed to simplify validation debugging and exploration of Lytics client side capabilities as facilitated by our core and personalization SDKs With this extension users can easily Validate that Lytics is connected to your site Debug and validate that the data collected by Lytics be it automatic or custom is behaving as expected Explore the current visitor s full profile to validate If the profile is available for personalization The events collected are having the expected impact on attributes and segment membership Explore Experiences currently active on your site and could be surfaced to visitors Installation Install Now Install Extension This extension is installed directly into your Chrome browser To install visit the primary extension page and follow the instructions Pin Extension to Nav Bar Once installed we recommend pining the extension to your top bar for easy access Getting Started Once the extension is installed you can visit any website where Lytics is or should be installed and begin debugging Enable the extension To activate the Lytics Dev Tools extension open the extension and toggle the slider at the top right of the extension to either Enable or Disable Verify Installation The extension will verify that the Lytics tag has been installed successfully before further debugging This is confirmed by the Lytics JavaScript SDK Installed alert displayed on the dashboard of the extension Navigation Once enabled you ll access three key sections Debugger Profile and Personalization each offering specific functionalities tailored to streamline your debugging and exploration process Debugger The debugger section of the extension serves multiple purposes Firstly as we did previously it allows you to validate installation ensuring that the Lytics tag is successfully implemented Additionally it provides access to the full active configuration of the JavaScript SDK through the configuration tab Moreover it includes a live event debugger that monitors and displays comprehensive details of any calls made to the Lytics APIs in real time This feature is particularly valuable for reviewing data sent via jstag send calls offering insights into the interaction between your website and Lytics APIs Profile In the Profile section of the extension users gain a live look at the current visitor s profile providing valuable insights into their browsing behavior and demographic information This section offers a snapshot of key details such as the visitor s unique identifier and behavioral scores allowing for a quick assessment of their engagement level Additionally users can access a detailed view of all information available to the browser including demographic data past interactions and any custom attributes stored in the visitor s profile This comprehensive overview enables users to tailor their strategies and personalize experiences based on individual visitors specific characteristics and preferences Personalization In the Personalization section of the extension users gain access to a log of all active Lytics experiences and campaigns along with their associated details This feature proves invaluable when debugging the configuration of experiences or ensuring that overrides have produced the expected results Users can easily track the performance and behavior of each personalized element on their website by providing a comprehensive overview of active campaigns and experiences including their parameters and settings This functionality streamlines debugging and empowers users to fine tune their personalization strategies for optimal effectiveness Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/chrome-extension#content",
    "title": "Lytics Dev Tools Chrome Extension",
    "chunk_text": "Lytics Dev Tools Chrome Extension Overview The Lytics Dev Tools Chrome extension is a comprehensive tool designed to simplify validation debugging and exploration of Lytics client side capabilities as facilitated by our core and personalization SDKs With this extension users can easily Validate that Lytics is connected to your site Debug and validate that the data collected by Lytics be it automatic or custom is behaving as expected Explore the current visitor s full profile to validate If the profile is available for personalization The events collected are having the expected impact on attributes and segment membership Explore Experiences currently active on your site and could be surfaced to visitors Installation Install Now Install Extension This extension is installed directly into your Chrome browser To install visit the primary extension page and follow the instructions Pin Extension to Nav Bar Once installed we recommend pining the extension to your top bar for easy access Getting Started Once the extension is installed you can visit any website where Lytics is or should be installed and begin debugging Enable the extension To activate the Lytics Dev Tools extension open the extension and toggle the slider at the top right of the extension to either Enable or Disable Verify Installation The extension will verify that the Lytics tag has been installed successfully before further debugging This is confirmed by the Lytics JavaScript SDK Installed alert displayed on the dashboard of the extension Navigation Once enabled you ll access three key sections Debugger Profile and Personalization each offering specific functionalities tailored to streamline your debugging and exploration process Debugger The debugger section of the extension serves multiple purposes Firstly as we did previously it allows you to validate installation ensuring that the Lytics tag is successfully implemented Additionally it provides access to the full active configuration of the JavaScript SDK through the configuration tab Moreover it includes a live event debugger that monitors and displays comprehensive details of any calls made to the Lytics APIs in real time This feature is particularly valuable for reviewing data sent via jstag send calls offering insights into the interaction between your website and Lytics APIs Profile In the Profile section of the extension users gain a live look at the current visitor s profile providing valuable insights into their browsing behavior and demographic information This section offers a snapshot of key details such as the visitor s unique identifier and behavioral scores allowing for a quick assessment of their engagement level Additionally users can access a detailed view of all information available to the browser including demographic data past interactions and any custom attributes stored in the visitor s profile This comprehensive overview enables users to tailor their strategies and personalize experiences based on individual visitors specific characteristics and preferences Personalization In the Personalization section of the extension users gain access to a log of all active Lytics experiences and campaigns along with their associated details This feature proves invaluable when debugging the configuration of experiences or ensuring that overrides have produced the expected results Users can easily track the performance and behavior of each personalized element on their website by providing a comprehensive overview of active campaigns and experiences including their parameters and settings This functionality streamlines debugging and empowers users to fine tune their personalization strategies for optimal effectiveness Updated about 1 year ago",
    "chunk_id": 0
  },
  {
    "source": "lytics",
    "url": "https://docs.lytics.com/docs/lytics-integration-options",
    "title": "Lytics Integration Options",
    "chunk_text": "Lytics Integration Options If you don t see your ads or marketing tool in our integrations list we offer the following options to connect with other platforms With our Integration Options we enable flexibility across the various channels where your data exists and tools to build customized integrations Lytics Integration Options include Webhooks Lytics File Service integrations for server to server file transfer Javascript Tag Mobile SDK Data Warehouse Integrations Read on for details on each option If you have questions about any of these options or would like to further explore an integration with a specific platform reach out to your Lytics contact Webhooks Webhooks offer one of the simplest and most flexible options for enabling applications to share data They re broadly used in the cloud computing world for integrations that can be stood up quickly with a minimal amount of code The Lytics Webhook integration supports triggered delivery of audience membership enters and exits to a destination url where another application can pick it up See our Webhook documentation for full details Interested to understand how a Webhook integration might be applied Look at this Mobile Messaging use case for a simple Lytics Webhook integration to support one to one personalized messaging with Twilio Server to Server File Transfer Server to server file transfer is a very common mechanism for data sharing Lytics File Service options enable Lytics to pull or push user data from an SFTP secure file transfer protocol using a CSV comma separated values or JSON file If you have another platform that also enables integrations via SFTP this integration path helps to automate the process of passing data between your system and Lytics Check out the Lytics File Service documentation to learn about setting up the file transfer job In addition to SFTP Amazon S3 is a very commonly used medium for server to server file transfer Refer to our Amazon S3 documentation for data import and export options Javascript Layer JS Tag The Lytics JS Tag is the default option for client side website data sharing with Lytics The JS Tag supports the delivery of user behavior attributes from your website into Lytics and can also return back to the website user profile data such as audience members or content recommendations from Lytics for real time personalization Refer to our JS Tag Documentation for full details Mobile SDK The Lytics Mobile SDK facilitates in app data sharing with iOS and Android Similar to the JS Tag the Mobile SDK supports user behavior based data delivery to Lytics and profile data to the app for real time personalization See our Mobile SDK Documentation for more details Using Your Data Warehouse If you already use a data warehouse to manage your data this is a great option for data import and export with Lytics Lytics integrates with Google Big Query Amazon Redshift Microsoft Azure Snowflake Databricks Each of these providers offers options for importing data into databases which can then be imported into Lytics using Cloud Connect or our Data Import integrations Lytics can also export data into each of these data warehouses Updated 10 months ago",
    "chunk_id": 0
  },
  {
    "source": "mparticle",
    "url": "https://docs.mparticle.com/",
    "title": "https://docs.mparticle.com/",
    "chunk_text": "mParticle is a customer data platform CDP that simplifies how you collect and connect your user data to hundreds of vendors without needing to manage multiple integrations We simplify the entire process for you so you can do more with your data without the hassle of complex integrations New to mParticle Explore our UI with our interactive demo Explore Demo Get Started 1 Collect Send your first event to mParticle Go to Create an input 2 Validate Ensure data quality Go to Verify 3 Connect Forward data to a downstream services Go to Connect an event output Do more with mParticle Identity Manage user identities with IDSync Data Master View and enforce your data quality Audiences Engage customer cohorts Custom Rules Transform data as it enters and leaves mParticle User Activity View Get a complete view of your users User Privacy Ensure compliance with GDPR CCPA and your privacy policies Events API Send events directly to mParticle Profile API Real time API to drive user personalization Firehose API Build your own custom integrations Inputs Client SDKs Android iOS Web View all Events API HTTP Node Python Ruby JSON Reference View all Partner Feeds Branch AppsFlyer Braze View all Custom CSV Feed Custom CSV Feed View all Outputs Events Mixpanel Amplitude Facebook Braze AppsFlyer View all Audience Facebook Snapchat Twitter Braze Pinterest View all",
    "chunk_id": 0
  },
  {
    "source": "zeotap",
    "url": "https://docs.zeotap.com/home/en-us/",
    "title": "https://docs.zeotap.com/home/en-us/",
    "chunk_text": "Loading Loading Learn how to use Zeotap CDP to collect unify and activate your customer data across multiple platforms Get Started with Zeotap CDP Learn how to use the different modules within Zeotap CDP and get started Browse by product Integrate Discover how to use Sources and Destinations to integrate your disparate data sources and activate your data across platforms Unify Discover how to use Catalogue Calculated Attributes and ID Strategy to unify your customer data Segment Discover how to use Audiences to create cohorts and activate your customer data Orchestrate Discover how to use Journeys to orchestrate personalised workflows with actionable recommendations Dashboard Discover how to use Dashboard to analyse your platform usage exploring consumption metrics and more Protect Discover how to use Consent Customer 360 and Data Lifecycle to protect your customer data by being compliant with regulatory frameworks Do more with Zeotap Target Discover how to use Target to create and activate deterministic third party Audience ID Discover how to use ID to create custom journeys and provide optimal actions Admin Discover how to use Admin to create organisations and add users with specific roles and access Esc Search Results Filter by Search entire portal Loading",
    "chunk_id": 0
  }
]